<Type Name="ContentElement" FullName="System.Windows.ContentElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4fd14b049f15b07371013fc1b9c445699de2780c" /><Meta Name="ms.sourcegitcommit" Value="9058026d5788c19bed0a767fc52b40a1eac8ebfe" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/24/2019" /><Meta Name="ms.locfileid" Value="72849267" /></Metadata><TypeSignature Language="C#" Value="public class ContentElement : System.Windows.DependencyObject, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentElement extends System.Windows.DependencyObject implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentElement&#xA;Inherits DependencyObject&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentElement : System::Windows::DependencyObject, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type ContentElement = class&#xA;    inherit DependencyObject&#xA;    interface IInputElement&#xA;    interface IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="52934-101">Предоставляет базовый класс уровня ядра WPF для элементов содержимого.</span><span class="sxs-lookup"><span data-stu-id="52934-101">Provides a WPF core-level base class for content elements.</span></span> <span data-ttu-id="52934-102">Элементы содержимого разработаны для представления в стиле потока с использованием интуитивно понятной модели макета разметки и намеренно простой объектной модели.</span><span class="sxs-lookup"><span data-stu-id="52934-102">Content elements are designed for flow-style presentation, using an intuitive markup-oriented layout model and a deliberately simple object model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-103"><xref:System.Windows.ContentElement> определяет следующие общие характеристики содержимого:</span><span class="sxs-lookup"><span data-stu-id="52934-103"><xref:System.Windows.ContentElement> defines the following common content characteristics:</span></span>  
  
-   <span data-ttu-id="52934-104">Вход: Все производные классы <xref:System.Windows.ContentElement> обеспечивают поддержку базовой записи ввода с клавиатуры, мыши, операций перетаскивания, элементов управления пером и ускорителей.</span><span class="sxs-lookup"><span data-stu-id="52934-104">Input: All <xref:System.Windows.ContentElement> derived classes provide support for basic input capture from keyboard, mouse, drag-and-drop operations, stylus controls, and accelerators.</span></span>  
  
-   <span data-ttu-id="52934-105">Смен Все производные классы <xref:System.Windows.ContentElement> потенциально могут получать фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-105">Focus: All <xref:System.Windows.ContentElement> derived classes are potentially focusable.</span></span> <span data-ttu-id="52934-106">(Тем не менее, для базового класса <xref:System.Windows.ContentElement> по умолчанию используется Фокусное состояние `false`.</span><span class="sxs-lookup"><span data-stu-id="52934-106">(However, the default focusable state for the <xref:System.Windows.ContentElement> base class is `false`.</span></span> <span data-ttu-id="52934-107">Дополнительные сведения о том, как сделать <xref:System.Windows.ContentElement> фокусом, см. в разделе <xref:System.Windows.ContentElement.Focusable%2A>.) Кроме того, этот класс содержит интерфейсы API, которые можно использовать для обхода фокуса по связанным элементам.</span><span class="sxs-lookup"><span data-stu-id="52934-107">For details on how to make a <xref:System.Windows.ContentElement> focusable, see <xref:System.Windows.ContentElement.Focusable%2A>.) In addition, this class contains APIs that you can use for traversing the focus across related elements.</span></span>  
  
-   <span data-ttu-id="52934-108">События: <xref:System.Windows.ContentElement> включают события, связанные с вводом и фокусом; Он также включает события для изменения состояния.</span><span class="sxs-lookup"><span data-stu-id="52934-108">Events: <xref:System.Windows.ContentElement> includes events that are related to input and focus; it also includes events for changes in state.</span></span> <span data-ttu-id="52934-109">Во многих случаях <xref:System.Windows.ContentElement> события являются перенаправленными событиями.</span><span class="sxs-lookup"><span data-stu-id="52934-109">In many cases, the <xref:System.Windows.ContentElement> events are routed events.</span></span> <span data-ttu-id="52934-110">В некоторых случаях перенаправленные события имеют стратегии туннелирования и восходящей маршрутизации, которые вызываются как отдельные события в ответ на одно и то же состояние или условие.</span><span class="sxs-lookup"><span data-stu-id="52934-110">In some cases, routed events have both tunneling and bubbling routing strategies, raised as separate events in response to the same state or condition.</span></span> <span data-ttu-id="52934-111">Кроме того, <xref:System.Windows.ContentElement> определяет интерфейсы API, которые могут вызывать перенаправленные события и которые могут добавлять обработчики в события или удалять их.</span><span class="sxs-lookup"><span data-stu-id="52934-111">Also, <xref:System.Windows.ContentElement> defines APIs that can raise routed events and that can add or remove handlers to events.</span></span>  
  
 <span data-ttu-id="52934-112"><xref:System.Windows.ContentElement> использует многие общие API с <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-112"><xref:System.Windows.ContentElement> shares many common APIs with <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="52934-113">Эти общие API не поступают из наследования общего класса.</span><span class="sxs-lookup"><span data-stu-id="52934-113">These common APIs do not come from a shared class inheritance.</span></span> <span data-ttu-id="52934-114">Но они совместно используют общее именование, аналогичное поведение и аналогичную внутреннюю реализацию интерфейсов API в каждом классе.</span><span class="sxs-lookup"><span data-stu-id="52934-114">But they do share common naming, similar behavior, and similar internal implementation of APIs in each class.</span></span> <span data-ttu-id="52934-115">Подобие обусловлено тем, что <xref:System.Windows.ContentElement> и <xref:System.Windows.UIElement> являются классами, которые являются базовыми элементами, хотя каждый из них имеет разные намерения к поведению объектной модели разметки.</span><span class="sxs-lookup"><span data-stu-id="52934-115">The similarity is because <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are each classes that are an element base, although each has different intentions for its markup object model behavior.</span></span>  
  
 <span data-ttu-id="52934-116">В частности, <xref:System.Windows.UIElement> в порядке убывания от <xref:System.Windows.Media.Visual>, который обеспечивает поддержку графики нижнего уровня для отрисовки <xref:System.Windows.ContentElement> в прямоугольную область в составном окне, тогда как <xref:System.Windows.ContentElement> откладывает визуализацию таким образом, чтобы в документе были распространены основные понятия. сценарии, такие как поток и перенос, более легко поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="52934-116">In particular, <xref:System.Windows.UIElement> descends from <xref:System.Windows.Media.Visual>, which provides the lower-level graphics support for rendering a <xref:System.Windows.ContentElement> to a rectangular region within a composited window, whereas <xref:System.Windows.ContentElement> defers rendering so that concepts more common to document scenarios, such as flow and wrapping, are more easily supported.</span></span> <span data-ttu-id="52934-117">Эти два связанных класса также реализуют общие интерфейсы <xref:System.Windows.IInputElement> и <xref:System.Windows.Media.Animation.IAnimatable>.</span><span class="sxs-lookup"><span data-stu-id="52934-117">These two related classes also implement the common interfaces <xref:System.Windows.IInputElement> and <xref:System.Windows.Media.Animation.IAnimatable>.</span></span>  

 ## <a name="notes-to-inheritors"></a><span data-ttu-id="52934-118">Примечания к наследникам</span><span class="sxs-lookup"><span data-stu-id="52934-118">Notes to inheritors</span></span>

 <span data-ttu-id="52934-119">Класс <xref:System.Windows.ContentElement> еще не определяет все аспекты полного элемента содержимого для представления в стиле потока.</span><span class="sxs-lookup"><span data-stu-id="52934-119">The <xref:System.Windows.ContentElement> class does not yet define all aspects of a complete content element for flow-style presentation.</span></span> <span data-ttu-id="52934-120"><xref:System.Windows.FrameworkContentElement> является немедленно производным классом <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-120"><xref:System.Windows.FrameworkContentElement> is an immediately derived class of <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="52934-121"><xref:System.Windows.FrameworkContentElement> содержит более полный набор дополнительных элементов, которые поддерживают визуализацию <xref:System.Windows.FrameworkContentElement> в узле содержимого и использование системы макета уровня платформы WPF.</span><span class="sxs-lookup"><span data-stu-id="52934-121"><xref:System.Windows.FrameworkContentElement> includes a more complete set of additional members that support rendering a <xref:System.Windows.FrameworkContentElement> within a content host and using the WPF framework-level layout system.</span></span>

 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-122">Инициализирует новый экземпляр класса <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="52934-122">Initializes a new instance of the <see cref="T:System.Windows.ContentElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52934-123">Добавляет обработчик перенаправленного события для указанного перенаправленного события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-123">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="52934-124">Идентификатор маршрутизируемого события для обработки.</span><span class="sxs-lookup"><span data-stu-id="52934-124">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="52934-125">Ссылка на реализацию обработчика.</span><span class="sxs-lookup"><span data-stu-id="52934-125">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="52934-126">Добавляет обработчик перенаправленного события для указанного перенаправленного события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-126">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-127">Один и тот же обработчик можно добавить для одного и того же события несколько раз, не создавая исключение.</span><span class="sxs-lookup"><span data-stu-id="52934-127">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="52934-128">Однако обработчик в действительности вызывается несколько раз при обработке события.</span><span class="sxs-lookup"><span data-stu-id="52934-128">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="52934-129">Поэтому рассмотрите, как это поведение может иметь побочные эффекты, которые следует учитывать в реализации обработчика.</span><span class="sxs-lookup"><span data-stu-id="52934-129">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="52934-130">Обычно этот метод используется для предоставления реализации метода доступа Add для [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] шаблона доступа к событию пользовательского перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="52934-130">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="52934-131">Идентификатор для обрабатываемого перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="52934-131">An identifier for the.routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="52934-132">Ссылка на реализацию обработчика.</span><span class="sxs-lookup"><span data-stu-id="52934-132">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="52934-133"><see langword="true" /> для регистрации обработчика, чтобы он вызывался даже в том случае, если перенаправленное событие помечено как обработанное в его данных события. <see langword="false" /> для регистрации обработчика с условием по умолчанию, что он не будет вызываться, если перенаправленное событие уже помечено как обработанное.</span><span class="sxs-lookup"><span data-stu-id="52934-133"><see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="52934-134">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-134">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="52934-135">Не следует постоянно прибегать к повторной обработке перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="52934-135">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="52934-136">Добавляет обработчик перенаправленного события для указанного перенаправленного события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="52934-137">Укажите <paramref name="handledEventsToo" /> как <see langword="true" />, чтобы предоставленный обработчик вызывался для перенаправленного события, которое уже было отмечено как обработанное другим элементом на маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-137">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-138">Обработка событий ввода низкого уровня практическим образом является сложной задачей.</span><span class="sxs-lookup"><span data-stu-id="52934-138">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="52934-139">Многие элементы управления реализуют поведение, при котором определенное событие помечается как обработанное и заменяется другим интуитивно понятным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-139">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="52934-140">Как правило, элемент управления помечает событие ввода платформы как обработанное только при наличии некоторой намеренности по проектированию.</span><span class="sxs-lookup"><span data-stu-id="52934-140">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="52934-141">В некоторых сценариях эти действия по проектированию могут быть не теми, которые необходимы для конкретной обработки события ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-141">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="52934-142">Это относится к таким сценариям, которые регистрируют обработчики с `handledEventsToo`, так как `true` подходит.</span><span class="sxs-lookup"><span data-stu-id="52934-142">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="52934-143">Но делать это не следует.</span><span class="sxs-lookup"><span data-stu-id="52934-143">But you should not do this routinely.</span></span> <span data-ttu-id="52934-144">Вызов обработчиков в ответ на все события, даже если они были обработаны, усложняет логику обработки событий приложения.</span><span class="sxs-lookup"><span data-stu-id="52934-144">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="52934-145">Если логика обработчика очень значительна, производительность может снизиться.</span><span class="sxs-lookup"><span data-stu-id="52934-145">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="52934-146">Следует зарезервировать использование присоединяемых обработчиков для уже обработанных событий в тех ситуациях, когда вы уже обнаружили в процессе разработки, что определенные элементы управления обрабатывают события, которые все же нужно обработать с помощью логики приложения.</span><span class="sxs-lookup"><span data-stu-id="52934-146">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="52934-147">Другой способ избежать поведения обработки класса определенных сочетаний управления событиями — использовать альтернативу предварительного просмотра этого события.</span><span class="sxs-lookup"><span data-stu-id="52934-147">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="52934-148">Например, если <xref:System.Windows.ContentElement.MouseLeftButtonDown> помечена как обработанная обработкой класса, можно добавить обработчики для <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-148">For example, if <xref:System.Windows.ContentElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="52934-149">Один и тот же обработчик можно добавить для одного и того же события несколько раз, не создавая исключение.</span><span class="sxs-lookup"><span data-stu-id="52934-149">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="52934-150">Однако обработчик в действительности вызывается несколько раз при обработке события.</span><span class="sxs-lookup"><span data-stu-id="52934-150">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="52934-151">Поэтому рассмотрите, как это поведение может иметь побочные эффекты, которые следует учитывать в реализации обработчика.</span><span class="sxs-lookup"><span data-stu-id="52934-151">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="52934-152">Обычно этот метод используется для предоставления реализации метода доступа Add для [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] шаблона доступа к событию пользовательского перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="52934-152">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52934-153">В следующем примере реализуется обработчик, вызванный для события <xref:System.Windows.FrameworkElement.Initialized> на странице, который прикрепляет определенный обработчик к одному из именованных элементов на странице с помощью `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-153">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="52934-154">Этот обработчик будет вызываться, даже если другой элемент в маршруте пометил данные общих событий как обработанные перед достижением обрабатывающего элемента в маршруте.</span><span class="sxs-lookup"><span data-stu-id="52934-154">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="52934-155">Маршрут события, к которому добавляются обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-155">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="52934-156">Информация о событии, используемая для добавления обработчиков.</span><span class="sxs-lookup"><span data-stu-id="52934-156">The event data that is used to add the handlers.</span></span> <span data-ttu-id="52934-157">Данный метод использует свойство <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> аргументов для создания обработчиков.</span><span class="sxs-lookup"><span data-stu-id="52934-157">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the arguments to create the handlers.</span></span></param>
        <summary><span data-ttu-id="52934-158">Добавляет обработчики в указанный <see cref="T:System.Windows.EventRoute" /> для настоящего коллекции обработчиков событий <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="52934-158">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.ContentElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-159">Используйте этот метод для элементов узла содержимого (независимо от того, реализуют ли они <xref:System.Windows.IContentHost>), чтобы добавить обработчики для дочерних элементов узла содержимого в <xref:System.Windows.EventRoute>узла.</span><span class="sxs-lookup"><span data-stu-id="52934-159">Use this method for content host elements (regardless whether they implement <xref:System.Windows.IContentHost>) in order to add handlers for the content host child elements to the host <xref:System.Windows.EventRoute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.ContentElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-160">Возвращает или задает значение, указывающее, можно ли использовать этот элемент как целевой объект операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-160">Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="52934-161">Значение<see langword="true" /> , если этот элемент можно использовать в качестве целевого объекта для операции перетаскивания; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-161"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-162">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-162">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-163">Операции перетаскивания не включены по умолчанию, и их необходимо включить намеренно, установив для параметра <xref:System.Windows.ContentElement.AllowDrop%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-163">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.ContentElement.AllowDrop%2A> to  `true`.</span></span> <span data-ttu-id="52934-164">Помимо этого базового параметра, поведение перетаскивания полностью зависит от реализации и не определяется <xref:System.Windows.ContentElement> или любым другим классом базового элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-164">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.ContentElement> or any other base element class.</span></span> <span data-ttu-id="52934-165">Некоторые элементы управления, например <xref:System.Windows.Controls.RichTextBox>, имеют поведение по умолчанию, но ни один из <xref:System.Windows.ContentElement> производных классов не имеет такого поведения.</span><span class="sxs-lookup"><span data-stu-id="52934-165">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior, but no <xref:System.Windows.ContentElement> derived classes have such a behavior.</span></span> <span data-ttu-id="52934-166">Дополнительные сведения о перетаскивании см. в разделе [Общие сведения о](~/docs/framework/wpf/advanced/drag-and-drop-overview.md)перетаскивании.</span><span class="sxs-lookup"><span data-stu-id="52934-166">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="52934-167"><xref:System.Windows.FrameworkContentElement> переопределяет метаданные для этого свойства зависимостей в его реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-167"><xref:System.Windows.FrameworkContentElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="52934-168">В частности, <xref:System.Windows.FrameworkContentElement> указывает, что это свойство допускает наследование значения свойства (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> `true` в метаданных).</span><span class="sxs-lookup"><span data-stu-id="52934-168">Specifically, <xref:System.Windows.FrameworkContentElement> designates that this property allows property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="52934-169">Наследование значения свойства в этом контексте означает, что если имеются дочерние элементы, не имеющие другого значения для <xref:System.Windows.ContentElement.AllowDrop%2A>, назначенных с помощью локальных значений или стилей, значение ближайшего родительского элемента с этим значением (в стилях по умолчанию или локальное значение), значение из этого родительского элемента назначается всем неназначенным дочерним элементам системой свойств.</span><span class="sxs-lookup"><span data-stu-id="52934-169">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.ContentElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from that parent element is assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="52934-170">Это означает, что можно разрешить операции DROP в корневом элементе, а затем распространить значение на все <xref:System.Windows.FrameworkContentElement> дочерние элементы, которым не было назначено значение `false`.</span><span class="sxs-lookup"><span data-stu-id="52934-170">This means that you can specify whether to allow drop operations at the root element and then propagate the value to all <xref:System.Windows.FrameworkContentElement> child elements that have not specifically assigned it a value of `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-171">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-171">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-172">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-172">Identifier field</span></span>|<xref:System.Windows.ContentElement.AllowDropProperty>|  
|<span data-ttu-id="52934-173">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-173">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-174">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-174">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="52934-175">В следующем примере задается <xref:System.Windows.ContentElement.AllowDrop%2A> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="52934-175">The following example sets <xref:System.Windows.ContentElement.AllowDrop%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#AllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#allowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-176">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.AllowDrop" />.</span><span class="sxs-lookup"><span data-stu-id="52934-176">Identifies the <see cref="P:System.Windows.ContentElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52934-177">Применяет анимацию к указанному свойству зависимостей в этом элементе.</span><span class="sxs-lookup"><span data-stu-id="52934-177">Applies an animation to a specified dependency property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="52934-178">Идентификатор анимируемого свойства.</span><span class="sxs-lookup"><span data-stu-id="52934-178">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="52934-179">Таймер анимации, контролирующий и объявляющий анимацию.</span><span class="sxs-lookup"><span data-stu-id="52934-179">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="52934-180">Применяет анимацию к указанному свойству зависимостей в этом элементе.</span><span class="sxs-lookup"><span data-stu-id="52934-180">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="52934-181">Все существующие анимации останавливаются и заменяются новой анимацией.</span><span class="sxs-lookup"><span data-stu-id="52934-181">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-182">Чтобы удалить анимацию из свойства, укажите идентификатор этого свойства в виде `dp` и укажите `clock` как `null`.</span><span class="sxs-lookup"><span data-stu-id="52934-182">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="52934-183">Это приведет к удалению анимации, а анимированному свойству будет присвоено базовое значение.</span><span class="sxs-lookup"><span data-stu-id="52934-183">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="52934-184">Однако изначально связанные часы анимации не останавливаются.</span><span class="sxs-lookup"><span data-stu-id="52934-184">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="52934-185">Все другие анимации, назначенные этому часам, будут продолжать работать.</span><span class="sxs-lookup"><span data-stu-id="52934-185">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="52934-186">Анимируемое свойство.</span><span class="sxs-lookup"><span data-stu-id="52934-186">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="52934-187">Таймер анимации, контролирующий и объявляющий анимацию.</span><span class="sxs-lookup"><span data-stu-id="52934-187">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="52934-188">Значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="52934-188">A value of the enumeration.</span></span> <span data-ttu-id="52934-189">Значение по умолчанию — <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />; это значение будет останавливать все существующие анимации и заменять их новой анимацией.</span><span class="sxs-lookup"><span data-stu-id="52934-189">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="52934-190">Применяет анимацию к заданному свойству зависимостей этого элемента с возможностью указать, что должно происходить, если у свойства уже имеется запущенная анимация.</span><span class="sxs-lookup"><span data-stu-id="52934-190">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-191">Чтобы удалить анимацию из свойства, укажите идентификатор этого свойства в виде `dp` и укажите `clock` как `null`.</span><span class="sxs-lookup"><span data-stu-id="52934-191">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="52934-192">Это приведет к удалению анимации, а анимированному свойству будет присвоено базовое значение.</span><span class="sxs-lookup"><span data-stu-id="52934-192">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="52934-193">Однако изначально связанные часы анимации не останавливаются.</span><span class="sxs-lookup"><span data-stu-id="52934-193">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="52934-194">Все другие анимации, назначенные этому часам, будут продолжать работать.</span><span class="sxs-lookup"><span data-stu-id="52934-194">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-195">Получает значение, которое указывает, была ли хотя бы одна операция сенсорного ввода передана в данный элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-195">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="52934-196">Значение <see langword="true" />, если хотя бы одна операция сенсорного ввода получена данным элементом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-196"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-197">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="52934-197">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-198">Получает значение, указывающее, была ли хотя бы одна операция сенсорного ввода передана в данный элемент или в какой-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="52934-198">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="52934-199">Значение <see langword="true" />, если хотя бы одна операция сенсорного ввода получена данным элементом или каким-либо из его дочерних элементов в визуальном дереве; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-199"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-200">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />.</span><span class="sxs-lookup"><span data-stu-id="52934-200">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-201">Получает значение, которое указывает, произошло ли хотя бы одно сенсорное нажатие данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-201">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="52934-202">Значение <see langword="true" />, если произошло хотя бы одно сенсорное нажатие данного элемента; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-202"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-203">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="52934-203">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-204">Получает значение, указывающее, произошло ли хотя бы одно сенсорное нажатие данного элемента или какого-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="52934-204">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="52934-205">Значение <see langword="true" />, если произошло хотя бы одно сенсорное нажатие данного элемента или какого-либо из его дочерних элементов в визуальном дереве; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-205"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-206">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" />.</span><span class="sxs-lookup"><span data-stu-id="52934-206">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52934-207">Запускает анимацию для указанного свойства данного элемента, имеющего анимацию.</span><span class="sxs-lookup"><span data-stu-id="52934-207">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="52934-208">Свойство для анимации, указанное как идентификатор свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="52934-208">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="52934-209">График для анимации.</span><span class="sxs-lookup"><span data-stu-id="52934-209">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="52934-210">Запускает анимацию для указанного свойства данного элемента, имеющего анимацию.</span><span class="sxs-lookup"><span data-stu-id="52934-210">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-211">При проверке того, анимировано ли свойство, обратите внимание, что анимация начнется и будет считаться анимированной при отрисовке первого кадра после неанимированной начальной точки.</span><span class="sxs-lookup"><span data-stu-id="52934-211">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="52934-212">Если <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> для `animation` `null`, то все текущие анимации удаляются, а текущее значение свойства удерживается.</span><span class="sxs-lookup"><span data-stu-id="52934-212">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="52934-213">Если все `animation` значение равно `null`, все анимации удаляются из свойства, а значение свойства возвращается к базовому значению.</span><span class="sxs-lookup"><span data-stu-id="52934-213">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="52934-214">Однако изначально связанная временная шкала анимации не останавливается.</span><span class="sxs-lookup"><span data-stu-id="52934-214">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="52934-215">Все остальные анимации, назначенные этой временной шкале, будут продолжать выполняться.</span><span class="sxs-lookup"><span data-stu-id="52934-215">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="52934-216">Свойство для анимации, указанное как идентификатор свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="52934-216">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="52934-217">График для анимации, которую следует применить.</span><span class="sxs-lookup"><span data-stu-id="52934-217">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="52934-218">Значение перечисления, которое указывает, как новая анимация должна взаимодействовать с любыми текущими анимациями, уже влияющими на значение свойства.</span><span class="sxs-lookup"><span data-stu-id="52934-218">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="52934-219">Запускает указанную анимацию для указанного анимированного свойства зависимостей этого элемента, с возможностью указания действий, которые следует предпринять при уже существующей анимации для данного свойства.</span><span class="sxs-lookup"><span data-stu-id="52934-219">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-220">При проверке того, анимировано ли свойство, обратите внимание, что анимация начнется и будет считаться анимированной при отрисовке первого кадра после неанимированной начальной точки.</span><span class="sxs-lookup"><span data-stu-id="52934-220">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="52934-221">Если <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> для `animation` `null`, то все текущие анимации удаляются, а текущее значение свойства удерживается.</span><span class="sxs-lookup"><span data-stu-id="52934-221">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="52934-222">Если все `animation` значение равно `null`, все анимации удаляются из свойства, а значение свойства возвращается к базовому значению.</span><span class="sxs-lookup"><span data-stu-id="52934-222">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="52934-223">Однако изначально связанная временная шкала анимации не останавливается.</span><span class="sxs-lookup"><span data-stu-id="52934-223">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="52934-224">Все остальные анимации, назначенные этой временной шкале, будут продолжать выполняться.</span><span class="sxs-lookup"><span data-stu-id="52934-224">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="contentElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-225">Пытается принудительно захватить мышь данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-225">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="52934-226">Значение <see langword="true" />, если мышь успешно захвачена, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-226"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-227">Для записи необходимо включить элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-227">To be captured, an element must be enabled.</span></span> <span data-ttu-id="52934-228">Перед вызовом <xref:System.Windows.ContentElement.CaptureMouse%2A>проверьте, `true` ли <xref:System.Windows.ContentElement.IsEnabled%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-228">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="52934-229">Если вызов <xref:System.Windows.ContentElement.CaptureMouse%2A> возвращает `true`, то <xref:System.Windows.ContentElement.IsMouseCaptured%2A> также `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-229">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.ContentElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="52934-230">Если вызов <xref:System.Windows.ContentElement.CaptureMouse%2A> возвращает `true`, то возникают события <xref:System.Windows.ContentElement.GotMouseCapture> и <xref:System.Windows.ContentElement.IsMouseCapturedChanged>, <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> в данных события, сообщаемых как элемент, где вызывается метод <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-230">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotMouseCapture> and <xref:System.Windows.ContentElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.ContentElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="52934-231">При принудительном захвате может возникнуть конфликт с существующими захватами, особенно с захватами, которые связаны с перетаскиванием мышью.</span><span class="sxs-lookup"><span data-stu-id="52934-231">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="52934-232">Чтобы снять захват с мыши из всех элементов, вызовите <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> с параметром `element`, предоставленным как `null`.</span><span class="sxs-lookup"><span data-stu-id="52934-232">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52934-233">В следующем примере захват мыши или выпуски выводится в зависимости от того, захвачена ли эта мышь элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-233">The following example captures the mouse or releases capture, based on whether the mouse is already captured by the element.</span></span> <span data-ttu-id="52934-234">Обратите внимание, что в этом примере элемент цели потенциальной записи приводится к интерфейсу <xref:System.Windows.IInputElement> и, таким образом, изначально вызывается метод <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-234">Note that this example casts the prospective capture target element to the <xref:System.Windows.IInputElement> interface, and is thus initially calling the <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="52934-235">Приведение к <xref:System.Windows.IInputElement> — это методика, которая полезна, если вы не уверены, является ли элемент, который нужно захватить мышью, <xref:System.Windows.UIElement> или <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-235">Casting to <xref:System.Windows.IInputElement> is a technique that is useful if you are unsure whether the element you want to have capture the mouse is a <xref:System.Windows.UIElement> or a <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="52934-236">Метод приведения интерфейса и вызов метода интерфейса затем вызывают соответствующую реализацию Каптуремаусе для конкретного типа, не требуя от пробного приведения к <xref:System.Windows.UIElement> или <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-236">The interface cast and the interface method call then calls the appropriate type-specific CaptureMouse implementation internally without requiring a trial cast to either <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="52934-237">Этот же метод приведения работает для других членов, которые <xref:System.Windows.IInputElement> определяет, для экземпляра многих событий, связанных с входом, и других методов, связанных с вводом.</span><span class="sxs-lookup"><span data-stu-id="52934-237">This same casting technique works for other members that <xref:System.Windows.IInputElement> defines, for instance many of the input-related events, and other input-related methods.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="contentElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-238">Пытается принудительно захватить перо данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-238">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="52934-239">Значение <see langword="true" />, если перо успешно захвачена, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-239"><see langword="true" /> if the stylus is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-240">Реализация по умолчанию, основанная на базовом устройстве пера по умолчанию, всегда возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-240">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="52934-241">Однако при расширении устройств ввода, предоставляющих реализацию устройства для входной системы, можно создать систему с альтернативной реализацией устройства пера, которая может возвращать различные результаты.</span><span class="sxs-lookup"><span data-stu-id="52934-241">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="52934-242">Когда элемент захватывает перо, он получает входные данные пера, даже если оно находится за пределами границ.</span><span class="sxs-lookup"><span data-stu-id="52934-242">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="52934-243">Перо обычно захватывается только во время операций перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-243">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="52934-244">При вызове этого метода вызывается базовый статический метод <xref:System.Windows.Input.Stylus> <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-244">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="52934-245">Фактическое поведение отслеживания реализуется реализацией активного устройства пера.</span><span class="sxs-lookup"><span data-stu-id="52934-245">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="52934-246">Для записи необходимо включить элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-246">To be captured, an element must be enabled.</span></span> <span data-ttu-id="52934-247">Перед вызовом <xref:System.Windows.ContentElement.CaptureStylus%2A>проверьте, `true` ли <xref:System.Windows.ContentElement.IsEnabled%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-247">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="52934-248">Если вызов <xref:System.Windows.ContentElement.CaptureStylus%2A> возвращает `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> также `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-248">If calling <xref:System.Windows.ContentElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="52934-249">Захватываемое устройство.</span><span class="sxs-lookup"><span data-stu-id="52934-249">The device to capture.</span></span></param>
        <summary><span data-ttu-id="52934-250">Предпринимает попытку принудительного получения операции сенсорного ввода данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-250">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="52934-251">Значение <see langword="true" />, если указанная операция сенсорного ввода была получена данным элементом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-251"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-252"><xref:System.Windows.ContentElement.CaptureTouch%2A> будет возвращать `false`, если <xref:System.Windows.Input.TouchDevice> в данный момент захватывается другим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-252"><xref:System.Windows.ContentElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="52934-253">Если <xref:System.Windows.ContentElement.CaptureTouch%2A> возвращает `true`, возникает событие <xref:System.Windows.ContentElement.GotTouchCapture>.</span><span class="sxs-lookup"><span data-stu-id="52934-253">If <xref:System.Windows.ContentElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="52934-254">Чтобы освободить запись одного касания от этого элемента, используйте метод <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> и укажите устройство сенсорного ввода для выпуска.</span><span class="sxs-lookup"><span data-stu-id="52934-254">To release capture of a single touch from this element, use the <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="52934-255">Чтобы освободить все касания от этого элемента, используйте метод <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-255">To release all touches from this element, use the <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="52934-256">Свойство <paramref name="touchDevice" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="52934-256"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.ContentElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-257">Возвращает коллекцию объектов <see cref="T:System.Windows.Input.CommandBinding" />, сопоставленных этому элементу.</span><span class="sxs-lookup"><span data-stu-id="52934-257">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="52934-258">Коллекция всех объектов <see cref="T:System.Windows.Input.CommandBinding" />.</span><span class="sxs-lookup"><span data-stu-id="52934-258">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-259"><xref:System.Windows.Input.CommandBinding> обеспечивает обработку команд определенной команды для данного элемента и объявляет связь между командой, ее событиями и обработчиками, присоединенными этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-259">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element and declares the linkage between a command, its events, and the handlers that are attached by this element.</span></span>  
  
 <span data-ttu-id="52934-260">Другой типичный способ заполнения <xref:System.Windows.ContentElement.CommandBindings%2A> коллекции — использование <xref:System.Windows.Input.CommandManager> методов программным способом.</span><span class="sxs-lookup"><span data-stu-id="52934-260">Another typical way to populate the <xref:System.Windows.ContentElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="52934-261">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="52934-261">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="52934-262">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="52934-262">XAML Values</span></span>  
 <span data-ttu-id="52934-263">*онеорморекоммандбиндингс*</span><span class="sxs-lookup"><span data-stu-id="52934-263">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="52934-264">Один или несколько элементов <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="52934-264">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="52934-265">Каждый из них должен иметь атрибут <xref:System.Windows.Input.CommandBinding.Command%2A>, для которого задана известная команда, и атрибуты, заданные для реализаций обработчика <xref:System.Windows.Input.CommandBinding.CanExecute> и <xref:System.Windows.Input.CommandBinding.Executed>.</span><span class="sxs-lookup"><span data-stu-id="52934-265">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="52934-266">Дополнительные сведения см. в разделе <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="52934-266">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-267">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-267">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-268">Это событие создает псевдоним для <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-268">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-269">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.DragEnter>, присоединяются к базовому <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-269">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-270">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-270">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-271">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-271">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragEnterEvent>|  
|<span data-ttu-id="52934-272">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-272">Routing strategy</span></span>|<span data-ttu-id="52934-273">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-273">Bubbling</span></span>|  
|<span data-ttu-id="52934-274">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-274">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="52934-275">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="52934-275">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="52934-276">Переопределите <xref:System.Windows.ContentElement.OnDragEnter%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-276">Override <xref:System.Windows.ContentElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-277">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.DragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="52934-277">Identifies the <see cref="E:System.Windows.ContentElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-278">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-278">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-279">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-279">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-280">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-280">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-281">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-281">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-282">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-282">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-283">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-283">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-284">Это событие создает псевдоним для <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> быть частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-284">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-285">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.DragLeave>, присоединяются к базовому <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-285">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-286">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-286">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-287">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-287">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragLeaveEvent>|  
|<span data-ttu-id="52934-288">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-288">Routing strategy</span></span>|<span data-ttu-id="52934-289">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-289">Bubbling</span></span>|  
|<span data-ttu-id="52934-290">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-290">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="52934-291">Соответствующее событие туннелирования — <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="52934-291">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="52934-292">Переопределите <xref:System.Windows.ContentElement.OnDragLeave%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-292">Override <xref:System.Windows.ContentElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-293">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.DragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="52934-293">Identifies the <see cref="E:System.Windows.ContentElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-294">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-294">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-295">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-295">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-296">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-296">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-297">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-297">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-298">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-298">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-299">Происходит, когда подсистема ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве потенциальной цели данный элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-299">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-300">Это событие происходит, даже если перетаскивание происходит в границах элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-300">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="52934-301">Если перетаскивание начинается за пределы границ и затем перемещается внутрь, это событие также вызывается, а также <xref:System.Windows.ContentElement.DragEnter> и связанных событий предварительного просмотра.</span><span class="sxs-lookup"><span data-stu-id="52934-301">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.ContentElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="52934-302">Это событие создает псевдоним для <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> быть частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-302">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-303">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.DragOver>, присоединяются к базовому <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-303">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-304">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-304">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-305">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-305">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragOverEvent>|  
|<span data-ttu-id="52934-306">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-306">Routing strategy</span></span>|<span data-ttu-id="52934-307">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-307">Bubbling</span></span>|  
|<span data-ttu-id="52934-308">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-308">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="52934-309">Соответствующее событие туннелирования — <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="52934-309">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="52934-310">Переопределите <xref:System.Windows.ContentElement.OnDragOver%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-310">Override <xref:System.Windows.ContentElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-311">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.DragOver" />.</span><span class="sxs-lookup"><span data-stu-id="52934-311">Identifies the <see cref="E:System.Windows.ContentElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-312">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-312">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-313">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-313">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-314">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-314">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-315">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-315">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-316">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-316">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-317">Происходит, когда система ввода сообщает о базовом событии удаления с этим элементом в качестве цели удаления.</span><span class="sxs-lookup"><span data-stu-id="52934-317">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-318">Это событие создает псевдоним для <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> быть частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-318">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-319">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.Drop>, присоединяются к базовому <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-319">Event handlers that are attached to the <xref:System.Windows.ContentElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-320">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-320">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-321">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-321">Identifier field</span></span>|<xref:System.Windows.ContentElement.DropEvent>|  
|<span data-ttu-id="52934-322">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-322">Routing strategy</span></span>|<span data-ttu-id="52934-323">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-323">Bubbling</span></span>|  
|<span data-ttu-id="52934-324">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-324">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="52934-325">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="52934-325">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="52934-326">Переопределите <xref:System.Windows.ContentElement.OnDrop%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-326">Override <xref:System.Windows.ContentElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-327">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.Drop" />.</span><span class="sxs-lookup"><span data-stu-id="52934-327">Identifies the <see cref="E:System.Windows.ContentElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-328">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-328">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-329">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-329">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-330">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-330">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-331">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-331">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-332">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-332">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="contentElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-333">Попытка задать фокус для данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-333">Attempts to set focus to this element.</span></span></summary>
        <returns><span data-ttu-id="52934-334"><see langword="true" /> если элемент может получить клавиатурный фокус; <see langword="false" /> если в результате вызова данного метода элемент фокус не получил.</span><span class="sxs-lookup"><span data-stu-id="52934-334"><see langword="true" /> if keyboard focus could be set to this element; <see langword="false" /> if this method call did not force focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-335">Чтобы быть в фокусе, <xref:System.Windows.ContentElement.Focusable%2A> и <xref:System.Windows.ContentElement.IsEnabled%2A> должны быть `true`ы.</span><span class="sxs-lookup"><span data-stu-id="52934-335">To be focusable, <xref:System.Windows.ContentElement.Focusable%2A> and <xref:System.Windows.ContentElement.IsEnabled%2A> must both be `true`.</span></span> <span data-ttu-id="52934-336">Обратите внимание, что почти все <xref:System.Windows.ContentElement> производные классы не <xref:System.Windows.ContentElement.Focusable%2A> по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-336">Note that nearly all <xref:System.Windows.ContentElement> derived classes are not <xref:System.Windows.ContentElement.Focusable%2A> by default.</span></span>  
  
 <span data-ttu-id="52934-337">Даже если элемент поддается фокусу и включен, обработка событий в определенном дереве (например, для составного элемента управления) может реагировать на события фокуса предварительного просмотра, не разрешая в ней фокус, поэтому этот метод возвратит `false`.</span><span class="sxs-lookup"><span data-stu-id="52934-337">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="52934-338">Фокус в целом регулируется двумя отдельными концепциями: фокус клавиатуры и логический фокус, которые не всегда идентичны.</span><span class="sxs-lookup"><span data-stu-id="52934-338">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="52934-339">Этот метод задает логический фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-339">This method sets the logical focus.</span></span> <span data-ttu-id="52934-340">Программных средств для установки фокуса клавиатуры нет. фокус клавиатуры определяется вводом пользователя.</span><span class="sxs-lookup"><span data-stu-id="52934-340">There is no programmatic means to set keyboard focus specifically; keyboard focus is determined by user input.</span></span> <span data-ttu-id="52934-341">Дополнительные сведения см. в разделе [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md) и [Общие сведения о вводе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-341">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="52934-342">Если вызов <xref:System.Windows.ContentElement.Focus%2A> возвращает `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> и <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> также `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-342">If calling <xref:System.Windows.ContentElement.Focus%2A> returns `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> and <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="52934-343">Если связанные свойства еще не `true`, то при вызове <xref:System.Windows.ContentElement.Focus%2A>одно или несколько из следующих событий вызываются в следующем порядке: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (источник — это новый целевой объект фокуса), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (источник — это новый целевой объект фокуса).</span><span class="sxs-lookup"><span data-stu-id="52934-343">If the related properties are not already `true`, when you call <xref:System.Windows.ContentElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52934-344">В следующем примере показан обработчик событий, загруженный страницей, который находит в документе указанный именованный абзац и устанавливает фокус на него.</span><span class="sxs-lookup"><span data-stu-id="52934-344">The following example is a page-loaded event handler that finds a specified named paragraph in the document and sets focus to it.</span></span> <span data-ttu-id="52934-345">По умолчанию абзацы не могут сосредоточиться. к этому конкретному абзацу применен стиль (не показан), который использовал стиль <xref:System.Windows.Setter>, чтобы сделать его активным.</span><span class="sxs-lookup"><span data-stu-id="52934-345">Paragraphs are not focusable by default; this particular paragraph had a style applied (not shown) that used a style <xref:System.Windows.Setter> to make it focusable.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#Focus](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#focus)]
 [!code-vb[ContentElementsSmorgasbord#Focus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#focus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.ContentElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-346">Получение или установка значения, определяющего возможность получения фокуса элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-346">Gets or sets a value that indicates whether the element can receive focus.</span></span></summary>
        <value><span data-ttu-id="52934-347">Значение<see langword="true" /> , если данный элемент может иметь фокус; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-347"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="52934-348">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-348">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-349">Ввод с клавиатуры получает только элемент с фокусом ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-349">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="52934-350">Некоторые производные классы могут переопределять метаданные для этого свойства зависимостей таким же, что производный класс по умолчанию может сосредоточиться.</span><span class="sxs-lookup"><span data-stu-id="52934-350">Certain derived classes might override metadata for this dependency property such that the derived class is focusable by default.</span></span>  
  
 <span data-ttu-id="52934-351">Если наследуется <xref:System.Windows.Documents.Hyperlink> или его производными классами, <xref:System.Windows.Documents.Hyperlink> переопределяет метаданные для этого свойства зависимостей и повторно определяет значение этого свойства по умолчанию на `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-351">When inherited by <xref:System.Windows.Documents.Hyperlink> or its derived classes, <xref:System.Windows.Documents.Hyperlink> overrides the metadata for this dependency property and redefines the default value of this property to be `true`.</span></span>  
  
### <a name="dependency-property-information"></a><span data-ttu-id="52934-352">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-352">Dependency property information</span></span>
  
|||  
|-|-|  
|<span data-ttu-id="52934-353">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-353">Identifier field</span></span>|<xref:System.Windows.ContentElement.FocusableProperty>|  
|<span data-ttu-id="52934-354">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-354">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-355">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-355">None</span></span>|  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="52934-356">Примечания к наследникам</span><span class="sxs-lookup"><span data-stu-id="52934-356">Notes to inheritors</span></span>

<span data-ttu-id="52934-357">Если вы наследуете от <xref:System.Windows.ContentElement>, определите, должен ли элемент быть в фокусе, так как по умолчанию он не будет получать фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-357">When you derive from <xref:System.Windows.ContentElement>, consider whether you want your element to be focusable, because by default it will not be focusable.</span></span> <span data-ttu-id="52934-358">Если вы хотите, чтобы элемент был в фокусе, переопределите метаданные для этого свойства в статическом конструкторе производного класса следующим образом:</span><span class="sxs-lookup"><span data-stu-id="52934-358">If you want your element to be focusable, override the metadata for this property in your derived class static constructor as follows:</span></span>  

[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)]
[!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]  
  
<span data-ttu-id="52934-359">где `myElement` — имя класса типа, для которого переопределяется значение метаданных.</span><span class="sxs-lookup"><span data-stu-id="52934-359">where `myElement` is the class name of the type that you are overriding the metadata value on.</span></span>
  
## Examples  
 <span data-ttu-id="52934-360">В следующем примере создается стиль, который делает <xref:System.Windows.Documents.Paragraph> фокусом по умолчанию и дает ему визуальное поведение при получении фокуса.</span><span class="sxs-lookup"><span data-stu-id="52934-360">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-361">Происходит при изменении значения свойства <see cref="P:System.Windows.ContentElement.Focusable" />.</span><span class="sxs-lookup"><span data-stu-id="52934-361">Occurs when the value of the <see cref="P:System.Windows.ContentElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-362">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-362">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-363">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.Focusable" />.</span><span class="sxs-lookup"><span data-stu-id="52934-363">Identifies the <see cref="P:System.Windows.ContentElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="contentElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="52934-364">Проверяемое свойство зависимости.</span><span class="sxs-lookup"><span data-stu-id="52934-364">The.dependency property to check.</span></span></param>
        <summary><span data-ttu-id="52934-365">Возвращает значение базового свойства для указанного свойства данного элемента без учета возможного анимированного значения из запущенной или остановленной анимации.</span><span class="sxs-lookup"><span data-stu-id="52934-365">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="52934-366">Значение свойства, как если бы анимации не присоединялись к указанному свойству зависимостей.</span><span class="sxs-lookup"><span data-stu-id="52934-366">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-367">Если к свойству не присоединены анимации, то возвращаемое значение <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> всегда идентично возвращаемому значению <xref:System.Windows.DependencyObject.GetValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-367">If no animations are attached to the property, then the <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="52934-368">Если присоединенные анимации, то все возможные производные от анимации значения, включая начальные и останавливаемые, не учитываются, а значение свойства определяется на основе всех других возможных входных данных.</span><span class="sxs-lookup"><span data-stu-id="52934-368">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="52934-369">Дополнительные сведения см. в разделе [Приоритет значений свойств зависимостей](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="52934-369">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="contentElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-370">При переопределении в производном классе возвращает альтернативный родительский элемент [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] при условии отсутствия видимого родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-370">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="52934-371">Объект, если реализация производного класса сообщает об альтернативном родительском подключении.</span><span class="sxs-lookup"><span data-stu-id="52934-371">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-372">Виртуальная реализация по умолчанию этого метода возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="52934-372">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="52934-373"><xref:System.Windows.FrameworkContentElement> предоставляет практическую реализацию.</span><span class="sxs-lookup"><span data-stu-id="52934-373"><xref:System.Windows.FrameworkContentElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="52934-374">Альтернативные родительские элементы используются для маршрутизации событий, в случаях, когда элемент создает альтернативную родительскую структуру, чтобы ее события направлялись таким образом, что рассылается из стандартного шаблона маршрутизации визуального дерева к стандартному родителю или вниз в Предварительная версия стратегии маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="52934-374">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-375">Происходит, когда подсистема ввода сообщает о соответствующем событии перетаскивания, в котором участвует данный элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-375">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-376">Событие <xref:System.Windows.ContentElement.GiveFeedback> позволяет источнику события перетаскивания изменять внешний вид указателя мыши, чтобы дать пользователю визуальную обратную связь во время операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-376">The <xref:System.Windows.ContentElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="52934-377">Визуальная обратная связь помещает в действие процесс перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-377">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="52934-378">Это событие создает псевдоним для <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.ContentElement.GiveFeedback> быть частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-378">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-379">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.GiveFeedback>, присоединяются к базовому <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-379">Event handlers that are attached to the <xref:System.Windows.ContentElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-380">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-380">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-381">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-381">Identifier field</span></span>|<xref:System.Windows.ContentElement.GiveFeedbackEvent>|  
|<span data-ttu-id="52934-382">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-382">Routing strategy</span></span>|<span data-ttu-id="52934-383">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-383">Bubbling</span></span>|  
|<span data-ttu-id="52934-384">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-384">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="52934-385">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="52934-385">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="52934-386">Переопределите <xref:System.Windows.ContentElement.OnGiveFeedback%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-386">Override <xref:System.Windows.ContentElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-387">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.GiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="52934-387">Identifies the <see cref="E:System.Windows.ContentElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-388">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-388">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-389">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-389">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-390">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-390">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-391">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-391">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-392">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-392">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-393">Происходит при получении данным элементом логического фокуса.</span><span class="sxs-lookup"><span data-stu-id="52934-393">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-394">Логический фокус отличается от фокуса клавиатуры, если фокус намеренно принудительно задается с помощью вызова метода, но предыдущий фокус клавиатуры существует в другой области.</span><span class="sxs-lookup"><span data-stu-id="52934-394">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="52934-395">В этом сценарии фокус клавиатуры остается там, где он находится, и элемент, где вызывается метод <xref:System.Windows.ContentElement.Focus%2A>, по-прежнему получает логический фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-395">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="52934-396">Более точная интерпретация этого события заключается в том, что это событие возникает при изменении значения свойства <xref:System.Windows.ContentElement.IsFocused%2A> элемента в маршруте с `false` на `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-396">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="52934-397">Так как в этом событии используется восходящая маршрутизация, элемент, получивший фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="52934-397">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="52934-398">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, получивший фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-398">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-399">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-399">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-400">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-400">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotFocusEvent>|  
|<span data-ttu-id="52934-401">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-401">Routing strategy</span></span>|<span data-ttu-id="52934-402">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-402">Bubbling</span></span>|  
|<span data-ttu-id="52934-403">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-403">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="52934-404">Нет соответствующего события туннелирования.</span><span class="sxs-lookup"><span data-stu-id="52934-404">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="52934-405">Переопределите <xref:System.Windows.ContentElement.OnGotFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-405">Override <xref:System.Windows.ContentElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-406">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="52934-406">Identifies the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-407">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-407">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-408">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-408">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-409">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-409">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-410">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-410">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-411">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-411">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-412">Происходит при получении данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="52934-412">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-413"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> — это аналогичное событие, которое отслеживает изменения состояния в свойстве, которое поддерживает состояние фокуса для элемента; событие <xref:System.Windows.ContentElement.GotKeyboardFocus> возникает во многих из тех же случаев.</span><span class="sxs-lookup"><span data-stu-id="52934-413"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.ContentElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="52934-414">Так как в этом событии используется восходящая маршрутизация, элемент, имеющий фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="52934-414">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="52934-415">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, имеющий фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-415">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="52934-416">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.ContentElement.GotKeyboardFocus> быть частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-416">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-417">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.GotKeyboardFocus>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-417">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-418">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-418">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-419">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-419">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="52934-420">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-420">Routing strategy</span></span>|<span data-ttu-id="52934-421">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-421">Bubbling</span></span>|  
|<span data-ttu-id="52934-422">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-422">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="52934-423">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="52934-423">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="52934-424">Переопределите <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-424">Override <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-425">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="52934-425">Identifies the <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-426">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-426">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-427">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-427">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-428">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-428">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-429">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-429">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-430">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-430">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-431">Происходит при захвате мыши данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-431">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-432">Когда элемент захватывает мышь, он получает ввод с клавиатуры, даже если указатель мыши находится за пределами границ.</span><span class="sxs-lookup"><span data-stu-id="52934-432">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="52934-433">Мышь обычно захватывается только во время операций перетаскивания и остается захваченной до тех пор, пока не произойдет действие перетаскивания операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-433">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="52934-434">Так как в этом событии используется восходящая маршрутизация, элемент, имеющий захват, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="52934-434">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="52934-435">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент с захватом мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-435">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="52934-436">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.ContentElement.GotMouseCapture> быть частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-436">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.ContentElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-437">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.GotMouseCapture>, присоединяются к базовому <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-437">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-438">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-438">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-439">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-439">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="52934-440">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-440">Routing strategy</span></span>|<span data-ttu-id="52934-441">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-441">Bubbling</span></span>|  
|<span data-ttu-id="52934-442">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-442">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="52934-443">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="52934-443">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="52934-444">Переопределите <xref:System.Windows.ContentElement.OnGotMouseCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-444">Override <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-445">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.GotMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="52934-445">Identifies the <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-446">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-446">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-447">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-447">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-448">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-448">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-449">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-449">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-450">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-450">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-451">Происходит при захвате пера данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-451">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-452">Когда элемент захватывает перо, он получает входные данные пера, даже если указатель находится за пределами его границ.</span><span class="sxs-lookup"><span data-stu-id="52934-452">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="52934-453">Перо обычно захватывается только во время операций перетаскивания и сохраняет захват до тех пор, пока не произойдет действие Drop операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-453">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="52934-454">Так как в этом событии используется восходящая маршрутизация, элемент, имеющий захват, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="52934-454">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="52934-455">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, который содержит запись.</span><span class="sxs-lookup"><span data-stu-id="52934-455">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="52934-456">Это событие создает псевдоним для присоединенного события для этого класса, чтобы <xref:System.Windows.ContentElement.GotStylusCapture> быть частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-456">This event creates an alias for the  attached event for this class so that <xref:System.Windows.ContentElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-457">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.GotStylusCapture>, присоединяются к базовому <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-457">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-458">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-458">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-459">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-459">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="52934-460">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-460">Routing strategy</span></span>|<span data-ttu-id="52934-461">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-461">Bubbling</span></span>|  
|<span data-ttu-id="52934-462">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-462">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-463">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="52934-463">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="52934-464">Переопределите <xref:System.Windows.ContentElement.OnGotStylusCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-464">Override <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-465">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.GotStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="52934-465">Identifies the <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-466">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-466">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-467">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-467">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-468">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-468">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-469">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-469">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-470">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-470">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-471">Происходит при получении данным элементом операции сенсорного ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-471">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-472">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-472">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-473">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-473">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="52934-474">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-474">Routing strategy</span></span>|<span data-ttu-id="52934-475">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-475">Bubbling</span></span>|  
|<span data-ttu-id="52934-476">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-476">Delegate</span></span>|<span data-ttu-id="52934-477"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="52934-477"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="52934-478">Переопределите <xref:System.Windows.ContentElement.OnGotTouchCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-478">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-479">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.GotTouchCapture" />.</span><span class="sxs-lookup"><span data-stu-id="52934-479">Identifies the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-480">Возвращает значение, указывающее, имеет ли экземпляр анимированные свойства.</span><span class="sxs-lookup"><span data-stu-id="52934-480">Gets a value that indicates whether this element has any animated properties.</span></span></summary>
        <value><span data-ttu-id="52934-481"><see langword="true" />, если элемент имеет анимированные свойства; иначе, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-481"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-482">Это свойство возвращает `true` либо для постоянных (нечасовых, всегда выполняющихся) анимаций, либо для анимаций, имеющих определенную временную шкалу.</span><span class="sxs-lookup"><span data-stu-id="52934-482">This property returns `true` either for persistent (unclocked, always-running) animations or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.ContentElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-483">Возвращает коллекцию привязок ввода, используемых этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-483">Gets the collection of input bindings that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="52934-484">Коллекция привязок ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-484">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-485">Входные привязки поддерживают привязку команд к входным устройствам.</span><span class="sxs-lookup"><span data-stu-id="52934-485">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="52934-486">Например, <xref:System.Windows.Input.MouseBinding> реализует входные привязки, включающие свойства, характерные для устройств мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-486">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are specific to mouse devices.</span></span>  
  
 <span data-ttu-id="52934-487">Коллекция входных привязок включает в себя входные привязки, относящиеся к типу, а также входные привязки, объявленные в экземпляре.</span><span class="sxs-lookup"><span data-stu-id="52934-487">The collection of input bindings includes both input bindings that pertain to the type and also input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="52934-488">Связанное свойство, <xref:System.Windows.ContentElement.CommandBindings%2A>, поддерживает коллекцию привязок команд.</span><span class="sxs-lookup"><span data-stu-id="52934-488">A related property, <xref:System.Windows.ContentElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="52934-489">Эти привязки отличаются от входных привязок тем, что они представляют следующий уровень обработки команд — действия, которые привязаны к известным командам и обработчикам для этих классов.</span><span class="sxs-lookup"><span data-stu-id="52934-489">These bindings differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands and class-specific handlers for them.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="52934-490">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="52934-490">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="52934-491">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="52934-491">XAML Values</span></span>  
 <span data-ttu-id="52934-492">*онеормореинпутбиндингс*</span><span class="sxs-lookup"><span data-stu-id="52934-492">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="52934-493">Один или несколько элементов <xref:System.Windows.Input.InputBinding> (как правило, <xref:System.Windows.Input.KeyBinding> или <xref:System.Windows.Input.MouseBinding> производных классах).</span><span class="sxs-lookup"><span data-stu-id="52934-493">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="52934-494">Предполагается, что для каждого из них установлен атрибут <xref:System.Windows.Input.InputBinding.Command%2A> и <xref:System.Windows.Input.InputBinding.Gesture%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-494">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.ContentElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-495">Получает или задает значение, определяющее, активен ли этот элемент в [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="52934-495">Gets or sets a value that indicates whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="52934-496">Значение <see langword="true" />, если элемент включен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-496"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-497">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="52934-497">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-498">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-498">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-499">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-499">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsEnabledProperty>|  
|<span data-ttu-id="52934-500">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-500">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-501">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-501">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="52934-502">В следующем примере создается стиль, включающий метод задания свойства, который предоставляет альтернативное визуальное поведение, когда <xref:System.Windows.Documents.Hyperlink> имеет значение <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span><span class="sxs-lookup"><span data-stu-id="52934-502">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> is set to <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-503">Происходит при изменении значения свойства <see cref="P:System.Windows.ContentElement.IsEnabled" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-503">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-504">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-504">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.ContentElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-505">Возвращает значение, которое становится возвращаемым значением свойства <see cref="P:System.Windows.ContentElement.IsEnabled" /> в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-505">Gets a value that becomes the return value of <see cref="P:System.Windows.ContentElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="52934-506">Значение <see langword="true" />, если элемент включен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-506"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## <a name="notes-to-inheritors"></a><span data-ttu-id="52934-507">Примечания к наследникам</span><span class="sxs-lookup"><span data-stu-id="52934-507">Notes to inheritors</span></span>

<span data-ttu-id="52934-508">Реализация этого свойства по умолчанию кэширует значение, а также вычисляет, включен ли родительский элемент этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-508">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="52934-509">Если родитель не включен, дочерний элемент нельзя эффективно включить в практическом пользовательском интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="52934-509">If the parent is not enabled, the child element cannot be effectively enabled in practical user interface.</span></span> <span data-ttu-id="52934-510">Если вы решили переопределить эту реализацию, убедитесь, что вы вызываете базовую реализацию, чтобы сохранить это поведение.</span><span class="sxs-lookup"><span data-stu-id="52934-510">If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-511">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="52934-511">Identifies the <see cref="P:System.Windows.ContentElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.ContentElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-512">Получает значение, определяющее, имеет ли элемент логический фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-512">Gets a value that determines whether this element has logical focus.</span></span></summary>
        <value><span data-ttu-id="52934-513">Значение <see langword="true" />, если элемент имеет логический фокус; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-513"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-514">Логический фокус может отличаться от фокуса клавиатуры, если приложение имеет несколько разделений фокуса, например, между содержимым меню и оставшейся частью приложения.</span><span class="sxs-lookup"><span data-stu-id="52934-514">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="52934-515">В этом сценарии фокус клавиатуры может находиться только на одном элементе пользовательского интерфейса приложения, однако определенные элементы в других фокусах могут по-прежнему сохранить логический фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-515">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="52934-516">Дополнительные сведения о логическом фокусе см. в статье [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md) и [Обзор фокусировки](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-516">For more information on logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-517">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-517">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-518">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-518">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsFocusedProperty>|  
|<span data-ttu-id="52934-519">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-519">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-520">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-520">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="52934-521">В следующем примере создается стиль, который делает <xref:System.Windows.Documents.Paragraph> фокусом по умолчанию и дает ему визуальное поведение при получении фокуса.</span><span class="sxs-lookup"><span data-stu-id="52934-521">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-522">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsFocused" />.</span><span class="sxs-lookup"><span data-stu-id="52934-522">Identifies the <see cref="P:System.Windows.ContentElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-523">Получает значение, указывающее, включена ли обработка входящих данных в этот элемент в системе метода ввода, такой как [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)].</span><span class="sxs-lookup"><span data-stu-id="52934-523">Gets a value that indicates whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="52934-524">Значение <see langword="true" />, если метод ввода активен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-524"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-525">Значение по умолчанию базового присоединенного свойства — <see langword="true" />; однако на это значение влияет состояние методов ввода во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="52934-525">The default value of the underlying attached property is <see langword="true" />; however, this value is influenced by the state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-526">Это свойство возвращает значение, возвращаемое присоединенным свойством <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> для текущих включенных методов ввода (клавиатура, речь и другие устройства ввода).</span><span class="sxs-lookup"><span data-stu-id="52934-526">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-527">Получает значение, указывающее, имеет ли данный элемент фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="52934-527">Gets a value that indicates whether this element has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="52934-528">Значение <see langword="true" />, если элемент имеет фокус клавиатуры; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-528"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-529">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-529">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-530">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-530">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-531">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-531">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="52934-532">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-532">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-533">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-533">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-534">Происходит при изменении значения свойства <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-534">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-535">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-535">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-536">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" />.</span><span class="sxs-lookup"><span data-stu-id="52934-536">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-537">Возвращает значение, определяющее, находится ли клавиатурный фокус на элементе, или его дочерних элементах.</span><span class="sxs-lookup"><span data-stu-id="52934-537">Gets a value that indicates whether keyboard focus is anywhere within the element or child elements.</span></span></summary>
        <value><span data-ttu-id="52934-538">Значение <see langword="true" />, если фокус клавиатуры находится в элементе или в его дочерних элементах; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-538"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-539">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-539">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-540">Изменения значения этого свойства обычно вызывают событие <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, если производный класс не был переопределен <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> для подавления события.</span><span class="sxs-lookup"><span data-stu-id="52934-540">Changes to the value of this property typically raise the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="52934-541">Это свойство не задается напрямую, но можно установить фокус на элемент, вызвав <xref:System.Windows.ContentElement.Focus%2A>или выполнив запрос <xref:System.Windows.ContentElement.MoveFocus%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-541">You do not set this property directly, but you can set the focus to the element by calling <xref:System.Windows.ContentElement.Focus%2A>, or by making a <xref:System.Windows.ContentElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="52934-542">Любой из этих вызовов метода может изменить это значение свойства.</span><span class="sxs-lookup"><span data-stu-id="52934-542">Either of these method calls might change this property value.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-543">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-543">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-544">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-544">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="52934-545">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-545">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-546">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-546">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-547">Происходит при изменении значения свойства <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-547">Occurs when the value of the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-548">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-548">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-549">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />.</span><span class="sxs-lookup"><span data-stu-id="52934-549">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.ContentElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-550">Возвращает значение, определяющее, захвачена ли мышь данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-550">Gets a value that indicates whether the mouse is captured by this element.</span></span></summary>
        <value><span data-ttu-id="52934-551">Значение <see langword="true" />, если элемент имеет захват мыши; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-551"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-552">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-552">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-553">Состояние захвата мыши связано с выполняемыми в процессе операциями перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-553">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-554">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-554">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-555">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-555">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="52934-556">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-556">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-557">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-557">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="52934-558">В следующем примере состояние захвата мыши включается или отключается в зависимости от того, захвачена ли эта мышь элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-558">The following example turns the mouse capture state on or off based on whether the mouse is already captured by the element.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-559">Происходит при изменении значения свойства <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-559">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-560">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-560">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-561">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsMouseCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="52934-561">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-562">Получает значение, определяющее, удерживается ли захват мыши данным элементом или дочерними элементами в его дереве элементов.</span><span class="sxs-lookup"><span data-stu-id="52934-562">Gets a value that determines whether mouse capture is held by this element or by child elements in its element tree.</span></span></summary>
        <value><span data-ttu-id="52934-563">Значение<see langword="true" /> , если элемент или содержащийся в нем элемент получил захват мыши; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-563"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-564">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-564">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-565">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-565">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-566">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-566">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="52934-567">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-567">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-568">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-568">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-569">Происходит при изменении значения поля <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-569">Occurs when the value of the <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-570">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-570">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-571">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="52934-571">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-572">Получает значение, указывающее, соответствует ли позиция указателя мыши результатам проверки нажатия, при которой учитывается компоновка элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-572">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="52934-573">Значение <see langword="true" />, если указатель мыши находится над тем же элементом, что и результат проверки нажатия; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-573"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-574">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-574">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-575">В отличие от <xref:System.Windows.ContentElement.IsMouseOver%2A>это свойство `true` только в том случае, если указатель мыши находится над элементом литерала, как для проверки попадания.</span><span class="sxs-lookup"><span data-stu-id="52934-575">Unlike <xref:System.Windows.ContentElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="52934-576">Если указатель мыши находится вместо дочернего элемента, в частности над элементами, которые являются частью более глубокого шаблона элемента и компоновки, это свойство будет `false`.</span><span class="sxs-lookup"><span data-stu-id="52934-576">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="52934-577">Если вы не знакомы с составным элементом управления (например, это свойство можно использовать в пользовательском шаблоне элемента управления для определяемого элемента управления), это свойство может возвращать непредвиденные результаты.</span><span class="sxs-lookup"><span data-stu-id="52934-577">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="52934-578">В большинстве случаев, когда вы не создаете элементы управления, используйте вместо этого <xref:System.Windows.ContentElement.IsMouseOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-578">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="52934-579">Если мышь захватывается данным элементом и это свойство `true` на момент записи, это свойство будет продолжать возвращать `true` до тех пор, пока захват мыши не будет потерян и указатель не поверх его границ.</span><span class="sxs-lookup"><span data-stu-id="52934-579">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-580">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-580">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-581">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-581">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="52934-582">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-582">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-583">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-583">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-584">Происходит при изменении значения свойства <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-584">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-585">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-585">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-586">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="52934-586">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.ContentElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-587">Возвращает значение, определяющее, находится ли указатель мыши на элементе (включая видимые дочерние элементы и композицию элемента управления).</span><span class="sxs-lookup"><span data-stu-id="52934-587">Gets a value that indicates whether the mouse pointer is located over this element (including visual child elements, or its control compositing).</span></span></summary>
        <value><span data-ttu-id="52934-588">Значение <see langword="true" />, если указатель мыши находится над элементом или его дочерними элементами; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-588"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-589">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-589">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-590">Хотя аналогичное событие «Исмаусеоверчанжед» не существует, выполняется несколько аналогичных событий.</span><span class="sxs-lookup"><span data-stu-id="52934-590">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="52934-591">Например, можно использовать <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>и <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="52934-591">For example, you can use <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, and <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="52934-592">Если этот элемент захватывает мышь, это свойство остается `true` до тех пор, пока захват мыши не будет потерян и указатель мыши покидает границы элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-592">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-593">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-593">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-594">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-594">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseOverProperty>|  
|<span data-ttu-id="52934-595">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-595">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-596">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-596">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="52934-597">В следующем примере создается стиль, включающий метод задания свойств, который предоставляет альтернативное визуальное поведение, когда <xref:System.Windows.Documents.Hyperlink> отчетов <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-597">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> reports <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-598">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsMouseOver" />.</span><span class="sxs-lookup"><span data-stu-id="52934-598">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.ContentElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-599">Получает значение, указывающее, захвачено ли перо в этом элементе управления.</span><span class="sxs-lookup"><span data-stu-id="52934-599">Gets a value that indicates whether the stylus is captured to this element.</span></span></summary>
        <value><span data-ttu-id="52934-600">Значение <see langword="true" />, если элемент имеет захват пера; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-600"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-601">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-601">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-602">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-602">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-603">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-603">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-604">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-604">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-605">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-605">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="52934-606">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-606">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-607">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-607">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureStylus" />
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-608">Происходит при изменении значения свойства <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-608">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-609">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-609">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-610">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsStylusCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="52934-610">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-611">Возвращает значение, определяющее, захвачено ли перо этим элементом, включая его дочерние элементы и композицию элемента управления.</span><span class="sxs-lookup"><span data-stu-id="52934-611">Gets a value that determines whether stylus capture is held by this element, including child elements and control compositing.</span></span></summary>
        <value><span data-ttu-id="52934-612"><see langword="true" /> если перо захвачено данным элементом; иначе, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-612"><see langword="true" /> if stylus capture is held within this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-613">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-613">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-614">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-614">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-615">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-615">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-616">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-616">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="52934-617">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-617">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-618">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-618">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-619">Происходит при изменении значения свойства <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-619">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-620">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-620">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-621">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="52934-621">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-622">Получает значение, указывающее, соответствует ли позиция пера результатам проверки нажатия, при которой учитывается компоновка элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-622">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="52934-623">Значение<see langword="true" /> , если перо находится над тем же элементом, что и при проверке нажатия; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-623"><see langword="true" /> if the stylus is over the same element as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-624">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-624">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-625">В отличие от <xref:System.Windows.ContentElement.IsStylusOver%2A>это свойство `true` только в том случае, если перо находится над элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-625">Unlike <xref:System.Windows.ContentElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="52934-626">Если перо вместо дочернего элемента или над элементами, которые являются частью более глубокой компоновки элемента, это свойство будет `false`.</span><span class="sxs-lookup"><span data-stu-id="52934-626">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing, this property will be `false`.</span></span>  
  
 <span data-ttu-id="52934-627">Если вы не знакомы с составным элементом управления (например, это свойство можно использовать в пользовательском шаблоне элемента управления для определяемого элемента управления), это свойство может возвращать непредвиденные результаты.</span><span class="sxs-lookup"><span data-stu-id="52934-627">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="52934-628">В большинстве случаев, когда вы не создаете элементы управления, используйте вместо этого <xref:System.Windows.ContentElement.IsStylusOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-628">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="52934-629">Если этот элемент имеет захват пера и это свойство `true` во время записи, это свойство остается `true` до тех пор, пока перо не будет потеряно и перо не поверх границ.</span><span class="sxs-lookup"><span data-stu-id="52934-629">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="52934-630">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-630">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-631">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-631">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-632">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-632">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-633">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-633">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="52934-634">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-634">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-635">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-635">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-636">Происходит при изменении значения свойства <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-636">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-637">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-637">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-638">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="52934-638">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.ContentElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-639">Возвращает значение, определяющее, находится ли перо на элементе (включая видимые дочерние элементы).</span><span class="sxs-lookup"><span data-stu-id="52934-639">Gets a value that indicates whether the stylus is located over this element (including visual child elements).</span></span></summary>
        <value><span data-ttu-id="52934-640"><see langword="true" />, если перо находится на элементе, или его дочерних элементах; иначе, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-640"><see langword="true" /> if the stylus is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52934-641">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-641">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-642">Если этот элемент имеет захват пера, это свойство остается `true` до тех пор, пока не будет снят захват пера и указатель не покинет его границы.</span><span class="sxs-lookup"><span data-stu-id="52934-642">If this element has stylus capture, this property remains `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="52934-643">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-643">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-644">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-644">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="52934-645">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="52934-645">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-646">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-646">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusOverProperty>|  
|<span data-ttu-id="52934-647">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="52934-647">Metadata properties set to `true`</span></span>|<span data-ttu-id="52934-648">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="52934-648">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-649">Идентифицирует свойство зависимостей <see cref="P:System.Windows.ContentElement.IsStylusOver" />.</span><span class="sxs-lookup"><span data-stu-id="52934-649">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-650">Возникает при нажатии клавиши, если фокус установлен на данном элементе.</span><span class="sxs-lookup"><span data-stu-id="52934-650">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-651">Обработка ключей взаимодействует с другими функциями платформы, такими как команды и компоновка текста.</span><span class="sxs-lookup"><span data-stu-id="52934-651">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="52934-652">Событие <xref:System.Windows.ContentElement.KeyDown> — это событие текстового ввода нижнего уровня, которое может работать не так, как ожидалось в некоторых элементах управления.</span><span class="sxs-lookup"><span data-stu-id="52934-652">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="52934-653">Это связано с тем, что некоторые элементы управления имеют компоновку элементов управления или обработку класса, которая предоставляет версию обработки текстового ввода и связанные события более высокого уровня.</span><span class="sxs-lookup"><span data-stu-id="52934-653">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="52934-654">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.ContentElement.KeyDown> быть частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-654">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.KeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-655">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.KeyDown>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-655">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-656">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-656">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-657">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-657">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyDownEvent>|  
|<span data-ttu-id="52934-658">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-658">Routing strategy</span></span>|<span data-ttu-id="52934-659">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-659">Bubbling</span></span>|  
|<span data-ttu-id="52934-660">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-660">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="52934-661">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-661">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="52934-662">Переопределите <xref:System.Windows.ContentElement.OnKeyDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-662">Override <xref:System.Windows.ContentElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-663">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-663">Identifies the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-664">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-664">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-665">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-665">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-666">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-666">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-667">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-667">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-668">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-668">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-669">Происходит при отпускании клавиши, если фокус находится на этом элементе.</span><span class="sxs-lookup"><span data-stu-id="52934-669">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-670">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.ContentElement.KeyUp> быть частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-670">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.ContentElement.KeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-671">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.KeyUp>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-671">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-672">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-672">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-673">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-673">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyUpEvent>|  
|<span data-ttu-id="52934-674">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-674">Routing strategy</span></span>|<span data-ttu-id="52934-675">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-675">Bubbling</span></span>|  
|<span data-ttu-id="52934-676">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-676">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="52934-677">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-677">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="52934-678">Переопределите <xref:System.Windows.ContentElement.OnKeyUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-678">Override <xref:System.Windows.ContentElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-679">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-679">Identifies the <see cref="E:System.Windows.ContentElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-680">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-680">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-681">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-681">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-682">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-682">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-683">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-683">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-684">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-684">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-685">Происходит при потере данным элементом логического фокуса.</span><span class="sxs-lookup"><span data-stu-id="52934-685">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-686">Логический фокус отличается от фокуса ввода, если фокус был намеренно вытеснен посредством вызова метода, но на другом уровне существует предыдущий фокус ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-686">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="52934-687">В этом сценарии фокус клавиатуры остается там, где он находится, а элемент, где вызывается метод <xref:System.Windows.ContentElement.Focus%2A>, по-прежнему получает логический фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-687">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="52934-688">Более точная интерпретация этого события заключается в том, что это событие возникает, когда значение свойства <xref:System.Windows.ContentElement.IsFocused%2A> элемента в маршруте изменяется с `true` на `false`.</span><span class="sxs-lookup"><span data-stu-id="52934-688">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="52934-689">Так как в этом событии используется восходящая маршрутизация, элемент, который теряет фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="52934-689">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="52934-690">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, получивший фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-690">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-691">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-691">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-692">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-692">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostFocusEvent>|  
|<span data-ttu-id="52934-693">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-693">Routing strategy</span></span>|<span data-ttu-id="52934-694">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-694">Bubbling</span></span>|  
|<span data-ttu-id="52934-695">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-695">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="52934-696">Нет соответствующего события туннелирования.</span><span class="sxs-lookup"><span data-stu-id="52934-696">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="52934-697">Переопределите <xref:System.Windows.ContentElement.OnLostFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-697">Override <xref:System.Windows.ContentElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-698">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="52934-698">Identifies the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-699">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-699">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-700">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-700">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-701">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-701">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-702">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-702">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-703">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-703">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-704">Происходит при потере данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="52934-704">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-705">Так как в этом событии используется восходящая маршрутизация, элемент, который потерял фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="52934-705">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="52934-706">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, который потерял фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-706">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="52934-707">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.LostKeyboardFocus> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-707">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-708">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.LostKeyboardFocus>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-708">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-709">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-709">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-710">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-710">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="52934-711">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-711">Routing strategy</span></span>|<span data-ttu-id="52934-712">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-712">Bubbling</span></span>|  
|<span data-ttu-id="52934-713">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-713">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="52934-714">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="52934-714">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="52934-715">Переопределите <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-715">Override <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-716">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="52934-716">Identifies the <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-717">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-717">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-718">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-718">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-719">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-719">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-720">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-720">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-721">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-721">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-722">Происходит при потере элементом захвата мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-722">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-723">Когда элемент захватывает мышь, он получает ввод с клавиатуры, даже если указатель находится за пределами его границ.</span><span class="sxs-lookup"><span data-stu-id="52934-723">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="52934-724">Мышь обычно захватывается только во время операций перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-724">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="52934-725">Так как в этом событии используется восходящая маршрутизация, элемент, который теряет захват, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="52934-725">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="52934-726">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, который потерял захват.</span><span class="sxs-lookup"><span data-stu-id="52934-726">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="52934-727">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.LostMouseCapture> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-727">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-728">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.LostMouseCapture>, присоединяются к базовому <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-728">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-729">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-729">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-730">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-730">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="52934-731">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-731">Routing strategy</span></span>|<span data-ttu-id="52934-732">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-732">Bubbling</span></span>|  
|<span data-ttu-id="52934-733">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-733">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="52934-734">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="52934-734">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="52934-735">Переопределите <xref:System.Windows.ContentElement.OnLostMouseCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-735">Override <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-736">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.LostMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="52934-736">Identifies the <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-737">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-737">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-738">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-738">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-739">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-739">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-740">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-740">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-741">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-741">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-742">Происходит при потере элементом захвата пера.</span><span class="sxs-lookup"><span data-stu-id="52934-742">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-743">Когда элемент захватывает перо, он получает входные данные пера, даже если указатель находится за пределами его границ.</span><span class="sxs-lookup"><span data-stu-id="52934-743">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="52934-744">Перо обычно захватывается только во время операций перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-744">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="52934-745">Так как в этом событии используется восходящая маршрутизация, элемент, который теряет фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="52934-745">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="52934-746">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, который потерял фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-746">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="52934-747">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.LostStylusCapture> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-747">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-748">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.LostStylusCapture>, присоединяются к базовому <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-748">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-749">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-749">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-750">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-750">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="52934-751">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-751">Routing strategy</span></span>|<span data-ttu-id="52934-752">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-752">Bubbling</span></span>|  
|<span data-ttu-id="52934-753">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-753">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-754">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="52934-754">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="52934-755">Переопределите <xref:System.Windows.ContentElement.OnLostStylusCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-755">Override <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-756">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.LostStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="52934-756">Identifies the <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-757">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-757">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-758">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-758">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-759">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-759">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-760">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-760">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-761">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-761">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-762">Происходит, когда элемент теряет касание.</span><span class="sxs-lookup"><span data-stu-id="52934-762">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-763">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-763">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-764">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-764">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="52934-765">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-765">Routing strategy</span></span>|<span data-ttu-id="52934-766">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-766">Bubbling</span></span>|  
|<span data-ttu-id="52934-767">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-767">Delegate</span></span>|<span data-ttu-id="52934-768"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="52934-768"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="52934-769">Переопределите <xref:System.Windows.ContentElement.OnLostTouchCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-769">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-770">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.LostTouchCapture" />.</span><span class="sxs-lookup"><span data-stu-id="52934-770">Identifies the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-771">Происходит при нажатии любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-771">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-772">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.MouseDown> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-772">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-773">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.MouseDown>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-773">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-774">Событие <xref:System.Windows.ContentElement.MouseDown> часто возникает вместе с <xref:System.Windows.ContentElement.MouseLeftButtonDown> или <xref:System.Windows.ContentElement.MouseRightButtonDown>, которое соответствует нажатию одной из двух стандартных кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-774">The <xref:System.Windows.ContentElement.MouseDown> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="52934-775"><xref:System.Windows.ContentElement.MouseLeftButtonDown> и <xref:System.Windows.ContentElement.MouseRightButtonDown> также являются перенаправленными событиями, но они являются прямыми перенаправленными событиями, а соответствующее событие, зависящее от кнопки, возникает, когда событие <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> достигает этого элемента в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-775"><xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="52934-776">См. раздел Примечания для <xref:System.Windows.ContentElement.MouseLeftButtonDown> или <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-776">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="52934-777">Несколько <xref:System.Windows.ContentElement> производных классах, имеющих поведение, схожее с контролем, например <xref:System.Windows.Documents.Hyperlink>, может иметь внутреннюю обработку класса для событий кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-777">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="52934-778">Событие нажатия левой кнопки мыши является наиболее вероятным событием для обработки класса в элементе управления.</span><span class="sxs-lookup"><span data-stu-id="52934-778">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="52934-779">Обработка класса часто помечает базовое событие <xref:System.Windows.Input.Mouse> класса как обработанное.</span><span class="sxs-lookup"><span data-stu-id="52934-779">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="52934-780">После того как событие помечено как обработанное, другие обработчики экземпляров, присоединенные к этому элементу, обычно не вызываются.</span><span class="sxs-lookup"><span data-stu-id="52934-780">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="52934-781">Другие обработчики классов или экземпляров, присоединенные к элементам в направлении восходящей маршрутизации к корню в дереве пользовательского интерфейса, также не вызываются.</span><span class="sxs-lookup"><span data-stu-id="52934-781">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="52934-782">Проблему, описанную выше, можно устранить, выполнив события <xref:System.Windows.ContentElement.MouseDown> для событий левой кнопки мыши в производном классе, который обрабатывает классы с помощью любого из следующих решений:</span><span class="sxs-lookup"><span data-stu-id="52934-782">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="52934-783">Присоединение обработчиков для события <xref:System.Windows.ContentElement.PreviewMouseDown>, которое не помечено как обработанное элементами управления.</span><span class="sxs-lookup"><span data-stu-id="52934-783">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="52934-784">Обратите внимание, что поскольку это событие предварительного просмотра, маршрут начинается с корневого каталога и подключается к элементу управления.</span><span class="sxs-lookup"><span data-stu-id="52934-784">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="52934-785">Зарегистрируйте обработчик в элементе управления процедурно, вызвав <xref:System.Windows.ContentElement.AddHandler%2A> и выбрав параметр Signature, который позволяет обработчикам прослушивать события, даже если они уже помечены как обработанные в данных перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="52934-785">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-786">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-786">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-787">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-787">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseDownEvent>|  
|<span data-ttu-id="52934-788">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-788">Routing strategy</span></span>|<span data-ttu-id="52934-789">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-789">Bubbling</span></span>|  
|<span data-ttu-id="52934-790">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-790">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-791">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-791">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="52934-792">Переопределите <xref:System.Windows.ContentElement.OnMouseDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-792">Override <xref:System.Windows.ContentElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-793">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.MouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-793">Identifies the <see cref="E:System.Windows.ContentElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-794">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-794">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-795">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-795">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-796">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-796">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-797">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-797">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-798">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-798">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-799">Происходит, когда указатель мыши попадает внутрь границ данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-799">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-800"><xref:System.Windows.ContentElement.MouseEnter> является [обзором перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) , который использует стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="52934-800"><xref:System.Windows.ContentElement.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="52934-801">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="52934-801">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="52934-802">Однако они включают другие аспекты поведения перенаправленных событий, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="52934-802">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="52934-803">Хотя <xref:System.Windows.ContentElement.MouseEnter> отслеживает, когда указатель мыши попадает в границы элемента, это событие более буквально сообщает, что значение свойства <xref:System.Windows.ContentElement.IsMouseOver%2A> изменилось с `false` на `true` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-803">Although <xref:System.Windows.ContentElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="52934-804">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.MouseEnter> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-804">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-805">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.MouseEnter>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-805">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-806">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-806">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-807">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-807">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseEnterEvent>|  
|<span data-ttu-id="52934-808">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-808">Routing strategy</span></span>|<span data-ttu-id="52934-809">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-809">Direct</span></span>|  
|<span data-ttu-id="52934-810">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-810">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="52934-811">Переопределите <xref:System.Windows.ContentElement.OnMouseEnter%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-811">Override <xref:System.Windows.ContentElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-812">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="52934-812">Identifies the <see cref="E:System.Windows.ContentElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-813">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-813">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-814">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-814">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-815">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-815">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-816">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-816">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-817">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-817">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-818">Происходит, когда указатель мыши покидает границы данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-818">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-819"><xref:System.Windows.ContentElement.MouseLeave> является [обзором перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) , который использует стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="52934-819"><xref:System.Windows.ContentElement.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="52934-820">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="52934-820">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="52934-821">Однако они включают другие аспекты поведения перенаправленных событий, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="52934-821">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="52934-822">Хотя <xref:System.Windows.ContentElement.MouseLeave> отслеживает, когда указатель мыши выходит за пределы элемента, это событие более буквально сообщает, что значение свойства <xref:System.Windows.ContentElement.IsMouseOver%2A> изменилось с `true` на `false` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-822">Although <xref:System.Windows.ContentElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="52934-823">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.MouseLeave> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-823">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-824">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.MouseLeave>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-824">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-825">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-825">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-826">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-826">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeaveEvent>|  
|<span data-ttu-id="52934-827">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-827">Routing strategy</span></span>|<span data-ttu-id="52934-828">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-828">Direct</span></span>|  
|<span data-ttu-id="52934-829">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-829">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="52934-830">Переопределите <xref:System.Windows.ContentElement.OnMouseLeave%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-830">Override <xref:System.Windows.ContentElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-831">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="52934-831">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-832">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-832">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-833">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-833">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-834">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-834">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-835">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-835">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-836">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-836">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-837">Происходит при нажатии левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-837">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-838">Несмотря на то, что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) обычно используется маршрут с восходящей маршрутизацией через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-838">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="52934-839">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-839">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="52934-840">Аргументы этого события предоставляют аргументы базового события <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-840">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="52934-841">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.ContentElement.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="52934-841">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="52934-842">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.ContentElement>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="52934-842">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="52934-843">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-843">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="52934-844">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-844">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="52934-845">Несколько <xref:System.Windows.ContentElement> производных классах, имеющих поведение, схожее с контролем, например <xref:System.Windows.Documents.Hyperlink>, может иметь внутреннюю обработку класса для событий кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-845">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="52934-846">Событие нажатия левой кнопки мыши является наиболее вероятным событием для обработки класса в элементе управления.</span><span class="sxs-lookup"><span data-stu-id="52934-846">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="52934-847">Обработка класса часто помечает базовое событие <xref:System.Windows.Input.Mouse> класса как обработанное.</span><span class="sxs-lookup"><span data-stu-id="52934-847">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="52934-848">После того как событие помечено как обработанное, другие обработчики экземпляров, присоединенные к этому элементу, обычно не вызываются.</span><span class="sxs-lookup"><span data-stu-id="52934-848">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="52934-849">Другие обработчики классов или экземпляров, присоединенные к элементам в направлении восходящей маршрутизации к корню в дереве пользовательского интерфейса, также не вызываются.</span><span class="sxs-lookup"><span data-stu-id="52934-849">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="52934-850">Проблему, описанную выше, можно устранить, выполнив события <xref:System.Windows.ContentElement.MouseLeftButtonDown> для событий левой кнопки мыши в производном классе, который обрабатывает классы с помощью любого из следующих решений:</span><span class="sxs-lookup"><span data-stu-id="52934-850">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="52934-851">Присоединение обработчиков для события <xref:System.Windows.ContentElement.PreviewMouseDown>, которое не помечено как обработанное элементами управления.</span><span class="sxs-lookup"><span data-stu-id="52934-851">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="52934-852">Обратите внимание, что поскольку это событие предварительного просмотра, маршрут начинается с корневого каталога и подключается к элементу управления.</span><span class="sxs-lookup"><span data-stu-id="52934-852">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="52934-853">Зарегистрируйте обработчик в элементе управления процедурно, вызвав <xref:System.Windows.ContentElement.AddHandler%2A> и выбрав параметр Signature, который позволяет обработчикам прослушивать события, даже если они уже помечены как обработанные в данных перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="52934-853">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-854">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-854">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-855">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-855">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="52934-856">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-856">Routing strategy</span></span>|<span data-ttu-id="52934-857">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-857">Direct</span></span>|  
|<span data-ttu-id="52934-858">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-858">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-859">Переопределите <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-859">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-860">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-860">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-861">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-861">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-862">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-862">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-863">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-863">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-864">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-864">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-865">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-865">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-866">Происходит при отпускании левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-866">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-867">Несмотря на то, что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) обычно используется маршрут с восходящей маршрутизацией через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-867">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="52934-868">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-868">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="52934-869">Аргументы этого события предоставляют аргументы базового события <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-869">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="52934-870">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.ContentElement.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="52934-870">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="52934-871">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.ContentElement>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="52934-871">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="52934-872">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-872">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="52934-873">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-873">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-874">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-874">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-875">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-875">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="52934-876">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-876">Routing strategy</span></span>|<span data-ttu-id="52934-877">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-877">Direct</span></span>|  
|<span data-ttu-id="52934-878">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-878">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-879">Переопределите <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-879">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-880">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-880">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-881">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-881">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-882">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-882">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-883">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-883">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-884">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-884">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-885">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-885">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-886">Происходит при перемещении указателя мыши над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-886">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-887">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.MouseMove> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-887">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-888">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.MouseMove>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-888">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-889">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-889">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-890">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-890">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseMoveEvent>|  
|<span data-ttu-id="52934-891">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-891">Routing strategy</span></span>|<span data-ttu-id="52934-892">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-892">Bubbling</span></span>|  
|<span data-ttu-id="52934-893">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-893">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="52934-894">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="52934-894">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="52934-895">Переопределите <xref:System.Windows.ContentElement.OnMouseMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-895">Override <xref:System.Windows.ContentElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-896">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="52934-896">Identifies the <see cref="E:System.Windows.ContentElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-897">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-897">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-898">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-898">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-899">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-899">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-900">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-900">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-901">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-901">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-902">Происходит при нажатии правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-902">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-903">Несмотря на то, что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) обычно используется маршрут с восходящей маршрутизацией через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-903">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="52934-904">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-904">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="52934-905">Аргументы этого события предоставляют аргументы базового события <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-905">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="52934-906">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.ContentElement.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="52934-906">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="52934-907">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.ContentElement>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="52934-907">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="52934-908">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-908">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="52934-909">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-909">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="52934-910">События мыши в правой кнопке часто имеют собственную обработку в сценариях приложений.</span><span class="sxs-lookup"><span data-stu-id="52934-910">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="52934-911">Например, щелчок правой кнопкой мыши может отобразить контекстное меню.</span><span class="sxs-lookup"><span data-stu-id="52934-911">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="52934-912">См. [Общие сведения о ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-912">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-913">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-913">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-914">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-914">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="52934-915">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-915">Routing strategy</span></span>|<span data-ttu-id="52934-916">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-916">Direct</span></span>|  
|<span data-ttu-id="52934-917">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-917">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-918">Переопределите <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-918">Override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-919">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-919">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-920">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-920">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-921">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-921">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-922">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-922">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-923">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-923">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-924">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-924">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-925">Происходит при отпускании правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-925">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-926">Несмотря на то, что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) обычно используется маршрут с восходящей маршрутизацией через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-926">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="52934-927">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-927">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="52934-928">Аргументы этого события предоставляют аргументы базового события <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-928">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="52934-929">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.ContentElement.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="52934-929">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="52934-930">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.ContentElement>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="52934-930">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="52934-931">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-931">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="52934-932">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-932">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-933">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-933">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-934">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-934">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="52934-935">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-935">Routing strategy</span></span>|<span data-ttu-id="52934-936">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-936">Direct</span></span>|  
|<span data-ttu-id="52934-937">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-937">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-938">Переопределите <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-938">Override <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-939">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-939">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-940">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-940">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-941">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-941">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-942">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-942">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-943">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-943">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-944">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-944">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-945">Происходит при отпускании любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-945">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-946">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.MouseUp> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-946">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-947">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.MouseUp>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-947">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-948">Событие <xref:System.Windows.ContentElement.MouseUp> часто возникает вместе с <xref:System.Windows.ContentElement.MouseLeftButtonUp> или <xref:System.Windows.ContentElement.MouseRightButtonUp>, которое соответствует выпуску одной из двух стандартных кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-948">The <xref:System.Windows.ContentElement.MouseUp> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="52934-949"><xref:System.Windows.ContentElement.MouseLeftButtonUp> и <xref:System.Windows.ContentElement.MouseRightButtonUp> также являются перенаправленными событиями, но они являются прямыми перенаправленными событиями, а соответствующее событие, зависящее от кнопки, возникает, когда событие <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> достигает этого элемента в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-949"><xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="52934-950">См. раздел Примечания для <xref:System.Windows.ContentElement.MouseLeftButtonUp> или <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-950">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-951">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-951">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-952">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-952">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseUpEvent>|  
|<span data-ttu-id="52934-953">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-953">Routing strategy</span></span>|<span data-ttu-id="52934-954">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-954">Bubbling</span></span>|  
|<span data-ttu-id="52934-955">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-955">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-956">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-956">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="52934-957">Переопределите <xref:System.Windows.ContentElement.OnMouseUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-957">Override <xref:System.Windows.ContentElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-958">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-958">Identifies the <see cref="E:System.Windows.ContentElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-959">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-959">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-960">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-960">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-961">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-961">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-962">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-962">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-963">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-963">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-964">Происходит при вращении колесика мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-964">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-965">Фокус или захват мыши имеют приоритет над местом, где находится указатель мыши; Таким образом, если вы получаете событие <xref:System.Windows.ContentElement.MouseWheel> из элемента с закрестным или захваченным элементом, указатель мыши на самом деле может находиться над другим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-965">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.ContentElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="52934-966">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.MouseWheel> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-966">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseWheel> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-967">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.MouseWheel>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-967">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-968">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-968">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-969">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-969">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseWheelEvent>|  
|<span data-ttu-id="52934-970">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-970">Routing strategy</span></span>|<span data-ttu-id="52934-971">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-971">Bubbling</span></span>|  
|<span data-ttu-id="52934-972">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-972">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="52934-973">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="52934-973">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="52934-974">Переопределите <xref:System.Windows.ContentElement.OnMouseWheel%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-974">Override <xref:System.Windows.ContentElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-975">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.MouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="52934-975">Identifies the <see cref="E:System.Windows.ContentElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-976">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-976">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-977">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-977">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-978">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-978">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-979">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-979">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-980">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-980">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="contentElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="52934-981">Запрос перемещения, содержащий свойство, которое определяет способ перемещения в соответствующем порядке по вкладкам, или направление для визуального перемещения.</span><span class="sxs-lookup"><span data-stu-id="52934-981">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="52934-982">Предпринимает попытки переместить фокус с данного элемента на иной.</span><span class="sxs-lookup"><span data-stu-id="52934-982">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="52934-983">Направления для перемещения фокуса задается указанием направления, которое обрабатывается внутри видимого родительского элемента данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-983">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="52934-984"><see langword="true" />, если запрос на перемещение выполнен; иначе, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-984"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-985">Убедитесь, что проверяется возвращаемое значение этого метода.</span><span class="sxs-lookup"><span data-stu-id="52934-985">Make sure you check the return value of this method.</span></span> <span data-ttu-id="52934-986">Возвращаемое значение `false` может быть возвращено, если обход выполняется в позицию табуляции, определяемую композицией элемента управления, а запрос обхода не запрашивается для переноса.</span><span class="sxs-lookup"><span data-stu-id="52934-986">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contentElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-987">Возвращает зависящие от классов реализации <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> для инфраструктуры Windows Presentation Foundation (WPF).</span><span class="sxs-lookup"><span data-stu-id="52934-987">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.</span></span></summary>
        <returns><span data-ttu-id="52934-988">Реализация <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />, зависящая от конкретного типа.</span><span class="sxs-lookup"><span data-stu-id="52934-988">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="52934-989">Примечания к наследникам</span><span class="sxs-lookup"><span data-stu-id="52934-989">Notes to inheritors</span></span>

<span data-ttu-id="52934-990">Реализация этого метода обычно вызывает конструктор определенной реализации <xref:System.Windows.Automation.Peers.AutomationPeer> и возвращает его в качестве возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="52934-990">The implementation of this method is typically to call the constructor of a specific <xref:System.Windows.Automation.Peers.AutomationPeer> implementation, and return it as the return value.</span></span>  
  
 <span data-ttu-id="52934-991">Все производные классы <xref:System.Windows.ContentElement> должны реализовывать этот метод, чтобы предоставить инфраструктуре WPF собственные конкретные реализации <xref:System.Windows.Automation.Peers.AutomationPeer>.</span><span class="sxs-lookup"><span data-stu-id="52934-991">All <xref:System.Windows.ContentElement> derived classes should implement this method in order to provide their own specific <xref:System.Windows.Automation.Peers.AutomationPeer> implementations to the WPF infrastructure.</span></span> <span data-ttu-id="52934-992">Дополнительные сведения о реализации этого шаблона см. в разделе <xref:System.Windows.Automation.Peers.AutomationPeer>.</span><span class="sxs-lookup"><span data-stu-id="52934-992">For details on implementing this pattern, see <xref:System.Windows.Automation.Peers.AutomationPeer>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-993">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-993">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-994">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.DragEnter" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-994">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-995">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-995">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-996">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-996">This method has no default implementation.</span></span> <span data-ttu-id="52934-997">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-997">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-998">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-998">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-999">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-999">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1000">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1000">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1001">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1001">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1002">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1002">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1003">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1003">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1004">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1004">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1005">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1005">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1006">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.DragLeave" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1006">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1007">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1007">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1008">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1008">This method has no default implementation.</span></span> <span data-ttu-id="52934-1009">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1009">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1010">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1010">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1011">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1011">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1012">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1012">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1013">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1013">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1014">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1014">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1015">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1015">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1016">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1016">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1017">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1017">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1018">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.DragOver" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1018">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1019">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1019">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1020">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1020">This method has no default implementation.</span></span> <span data-ttu-id="52934-1021">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1021">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1022">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1022">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1023">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1023">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1024">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1024">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1025">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1025">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1026">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1026">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1027">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1027">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1028">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1028">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1029">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1029">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1030">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.DragEnter" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1030">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1031">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1031">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1032">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1032">This method has no default implementation.</span></span> <span data-ttu-id="52934-1033">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1033">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1034">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1034">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1035">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1035">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1036">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1036">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1037">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1037">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1038">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1038">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1039">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1039">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1040">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1040">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1041">Объект класса <see cref="T:System.Windows.GiveFeedbackEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1041">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1042">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.GiveFeedback" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1042">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1043">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1043">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1044">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1044">This method has no default implementation.</span></span> <span data-ttu-id="52934-1045">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1045">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1046">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1046">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1047">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1047">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1048">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1048">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1049">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1049">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1050">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1050">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1051">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1051">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1052">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1052">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1053">Объект <see cref="T:System.Windows.RoutedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1053">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="52934-1054">Данные о событии должны содержать идентификатор для события <see cref="E:System.Windows.ContentElement.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="52934-1054">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="52934-1055">Вызывает перенаправленное событие <see cref="E:System.Windows.ContentElement.GotFocus" /> с помощью предоставленных данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1055">Raises the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1056">Этот метод, хотя Virtual, имеет реализацию по умолчанию, которая вызывает событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1056">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="52934-1057">Это в реализации метода\* предназначено для вызова события, и эта же реализация метода вызывается внутренним образом для вызова события при изменении значения свойства <xref:System.Windows.ContentElement.IsFocused%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1057">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="52934-1058">Реализация <xref:System.Windows.ContentElement.OnGotFocus%2A> отличается от других Windows Presentation Foundation (WPF) в реализациях\*, которые предоставляют удобный способ добавления обработки класса для этого события.</span><span class="sxs-lookup"><span data-stu-id="52934-1058">The <xref:System.Windows.ContentElement.OnGotFocus%2A> implementation differs from some other Windows Presentation Foundation (WPF) On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="52934-1059">Примечания к наследникам</span><span class="sxs-lookup"><span data-stu-id="52934-1059">Notes to inheritors</span></span>

<span data-ttu-id="52934-1060">Если у вас нет намеренных и необычных необходимости создавать события фокуса, убедитесь, что реализация вызывает базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="52934-1060">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="52934-1061">В противном случае событие <xref:System.Windows.ContentElement.GotFocus> не вызывается во время обычных пользовательских операций, которые обычно устанавливают фокус на этот элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-1061">Otherwise, the <xref:System.Windows.ContentElement.GotFocus> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="52934-1062">Если не требуется, чтобы элемент был доступен для фокусировки, можно запретить фокус, установив для <xref:System.Windows.ContentElement.Focusable> значение `false`.</span><span class="sxs-lookup"><span data-stu-id="52934-1062">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <xref:System.Windows.ContentElement.Focusable> to `false`.</span></span>
<span data-ttu-id="52934-1063">Обратите внимание, что по умолчанию <xref:System.Windows.ContentElement.Focusable> не имеет фокуса, поэтому установка <xref:System.Windows.ContentElement.Focusable> намеренно необязательна.</span><span class="sxs-lookup"><span data-stu-id="52934-1063">Note that by default a <xref:System.Windows.ContentElement.Focusable> is not focusable, therefore setting <xref:System.Windows.ContentElement.Focusable> deliberately might not be necessary.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1064">Объект класса <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1064">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1065">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1065">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1066">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1066">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1067">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1067">This method has no default implementation.</span></span> <span data-ttu-id="52934-1068">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1068">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1069">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1069">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1070">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1070">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1071">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1071">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1072">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1072">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1073">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1073">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1074">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1074">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1075">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1075">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1076">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1076">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1077">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1077">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1078">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1078">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1079">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1079">This method has no default implementation.</span></span> <span data-ttu-id="52934-1080">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1080">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1081">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1081">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1082">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1082">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1083">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1083">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1084">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1084">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1085">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1085">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1086">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1086">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1087">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1087">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1088">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1088">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1089">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1089">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1090">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1090">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1091">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1091">This method has no default implementation.</span></span> <span data-ttu-id="52934-1092">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1092">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1093">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1093">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1094">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1094">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1095">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1095">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1096">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1096">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1097">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1097">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1098">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1098">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1099">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1099">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1100">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1100">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1101">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.ContentElement.GotTouchCapture" />, которое происходит при захвате сенсорного ввода данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-1101">Provides class handling for the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1102">Метод <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1102">The <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="52934-1103">Переопределите <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.ContentElement.GotTouchCapture>.</span><span class="sxs-lookup"><span data-stu-id="52934-1103">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.GotTouchCapture> event.</span></span> <span data-ttu-id="52934-1104">Не забудьте вызвать метод базового класса "<xref:System.Windows.ContentElement.OnGotTouchCapture%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1104">Be sure to call the base class' <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1105">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1105">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1106">Вызывается, когда необработанное событие <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1106">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="52934-1107">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1107">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1108">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.ContentElement.IsKeyboardFocused%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1108">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="52934-1109">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="52934-1109">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="52934-1110">Затем событие <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1110">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="52934-1111">Обратите внимание, что событие <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> не является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1111">Notice that the  <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="52934-1112">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1112">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="52934-1113">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1113">This method has no default implementation.</span></span> <span data-ttu-id="52934-1114">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1114">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1115">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1115">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1116">Объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1116">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1117">Вызывается непосредственно перед вызовом события <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-1117">Invoked just before the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="52934-1118">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1118">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1119">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1119">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="52934-1120">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="52934-1120">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="52934-1121">Затем событие <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1121">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="52934-1122">Обратите внимание, что событие <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> не является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1122">Notice that the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="52934-1123">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1123">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="52934-1124">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1124">This method has no default implementation.</span></span> <span data-ttu-id="52934-1125">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1125">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1126">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1126">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1127">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1127">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1128">Вызывается, когда необработанное событие <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1128">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="52934-1129">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1129">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1130">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.ContentElement.IsMouseCaptured%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1130">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="52934-1131">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="52934-1131">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="52934-1132">Затем событие <xref:System.Windows.ContentElement.IsMouseCapturedChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1132">Then the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="52934-1133">Обратите внимание, что событие <xref:System.Windows.ContentElement.IsMouseCapturedChanged> не является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1133">Notice that the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="52934-1134">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1134">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="52934-1135">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1135">This method has no default implementation.</span></span> <span data-ttu-id="52934-1136">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1136">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1137">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1137">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1138">Объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1138">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1139">Вызывается, когда необработанное событие <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1139">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="52934-1140">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1140">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="52934-1141">Этот виртуальный метод вызывается при изменении значения свойства зависимости <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="52934-1141">This virtual method is raised when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="52934-1142">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="52934-1142">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="52934-1143">Затем событие <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1143">Then the <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="52934-1144">Обратите внимание, что это событие не является перенаправленным. Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1144">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="52934-1145">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1145">This method has no default implementation.</span></span> <span data-ttu-id="52934-1146">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1146">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1147">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1147">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1148">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1148">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1149">Вызывается, когда необработанное событие <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1149">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="52934-1150">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1150">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1151">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1151">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="52934-1152">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="52934-1152">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="52934-1153">Затем событие <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1153">Then the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="52934-1154">Обратите внимание, что событие <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> не является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1154">Notice that the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="52934-1155">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1155">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="52934-1156">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1156">This method has no default implementation.</span></span> <span data-ttu-id="52934-1157">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1157">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1158">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1158">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1159">Объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1159">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1160">Вызывается, когда необработанное событие <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1160">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="52934-1161">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1161">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1162">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.ContentElement.IsStylusCaptured%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1162">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="52934-1163">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="52934-1163">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="52934-1164">Затем событие <xref:System.Windows.ContentElement.IsStylusCapturedChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1164">Then the <xref:System.Windows.ContentElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="52934-1165">Обратите внимание, что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="52934-1165">Notice that the event is not a routed event.</span></span> <span data-ttu-id="52934-1166">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1166">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="52934-1167">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1167">This method has no default implementation.</span></span> <span data-ttu-id="52934-1168">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1168">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1169">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1169">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1170">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1170">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1171">Вызывается, когда необработанное событие <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1171">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="52934-1172">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1172">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1173">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1173">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="52934-1174">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="52934-1174">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="52934-1175">Затем событие <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1175">Then the <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="52934-1176">Обратите внимание, что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="52934-1176">Notice that the event is not a routed event.</span></span> <span data-ttu-id="52934-1177">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1177">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="52934-1178">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1178">This method has no default implementation.</span></span> <span data-ttu-id="52934-1179">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1179">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1180">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1180">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1181">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1181">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1182">Вызывается, когда необработанное событие <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1182">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="52934-1183">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1183">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1184">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1184">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="52934-1185">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="52934-1185">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="52934-1186">Затем событие <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1186">Then the <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="52934-1187">Обратите внимание, что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="52934-1187">Notice that the event is not a routed event.</span></span> <span data-ttu-id="52934-1188">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1188">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="52934-1189">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1189">This method has no default implementation.</span></span> <span data-ttu-id="52934-1190">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1190">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1191">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1191">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1192">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1192">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1193">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1193">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1194">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1194">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1195">Нажатия клавиш обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-1195">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="52934-1196">Другие функции программирования, использующие нажатия клавиш, например входные и командные привязки, могут обменяться нажатием клавиши, прежде чем она будет представлена как общее нажатие.</span><span class="sxs-lookup"><span data-stu-id="52934-1196">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="52934-1197">Если эти входные функции системы помечают событие как обработанное, то <xref:System.Windows.ContentElement.OnKeyDown%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="52934-1197">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="52934-1198">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1198">This method has no default implementation.</span></span> <span data-ttu-id="52934-1199">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1199">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1200">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1200">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1201">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1201">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1202">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1202">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1203">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1203">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1204">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1204">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1205">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1205">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1206">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1206">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1207">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1207">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1208">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1208">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1209">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1209">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1210">Нажатия клавиш обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-1210">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="52934-1211">Другие функции программирования, использующие нажатия клавиш, например входные и командные привязки, могут обменяться нажатием клавиши, прежде чем она будет представлена как общее нажатие.</span><span class="sxs-lookup"><span data-stu-id="52934-1211">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="52934-1212">Если эти входные функции системы помечают событие как обработанное, то <xref:System.Windows.ContentElement.OnKeyUp%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="52934-1212">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="52934-1213">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1213">This method has no default implementation.</span></span> <span data-ttu-id="52934-1214">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1214">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1215">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1215">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1216">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1216">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1217">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1217">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1218">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1218">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1219">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1219">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1220">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1220">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1221">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1221">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1222">Объект <see cref="T:System.Windows.RoutedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1222">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="52934-1223">Данные о событии должны содержать идентификатор для события <see cref="E:System.Windows.ContentElement.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="52934-1223">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="52934-1224">Вызывает перенаправленное событие <see cref="E:System.Windows.ContentElement.LostFocus" /> с помощью предоставленных данных о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1224">Raises the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1225">Этот метод, хотя Virtual, имеет реализацию по умолчанию, которая вызывает событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1225">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="52934-1226">Это в реализации метода\* предназначено для вызова события, и эта же реализация метода вызывается внутренним образом для вызова события при изменении значения свойства <xref:System.Windows.ContentElement.IsFocused%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1226">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="52934-1227">Эта реализация отличается от других Windows Presentation Foundation (WPF) в реализациях\*, которые предоставляют удобный способ добавления обработки класса для этого события.</span><span class="sxs-lookup"><span data-stu-id="52934-1227">This implementation differs from some other Windows Presentation Foundation (WPF) On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="52934-1228">Если у вас нет намеренных и необычных необходимости создавать события фокуса, убедитесь, что реализация вызывает базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="52934-1228">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="52934-1229">В противном случае событие <see cref="E:System.Windows.ContentElement.LostFocus" /> не вызывается во время обычных пользовательских операций, которые обычно устанавливают фокус на этот элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-1229">Otherwise, the <see cref="E:System.Windows.ContentElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="52934-1230">Если не требуется, чтобы элемент был доступен для фокусировки, можно запретить фокус, установив для <see cref="P:System.Windows.ContentElement.Focusable" /> значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-1230">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1231">Объект <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1231">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="52934-1232">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1232">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1233">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1233">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1234">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1234">This method has no default implementation.</span></span> <span data-ttu-id="52934-1235">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1235">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1236">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1236">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1237">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1237">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1238">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1238">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1239">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1239">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1240">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1240">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1241">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1241">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1242">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1242">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1243">Объект <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1243">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="52934-1244">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1244">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1245">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1245">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1246">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1246">This method has no default implementation.</span></span> <span data-ttu-id="52934-1247">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1247">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1248">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1248">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1249">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1249">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1250">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1250">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1251">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1251">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1252">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1252">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1253">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1253">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1254">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1254">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1255">Объект <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1255">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="52934-1256">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1256">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1257">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1257">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1258">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1258">This method has no default implementation.</span></span> <span data-ttu-id="52934-1259">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1259">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1260">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1260">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1261">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1261">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1262">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1262">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1263">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1263">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1264">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1264">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1265">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1265">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1266">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1266">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1267">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1267">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1268">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.ContentElement.LostTouchCapture" />, которое происходит при потере захвата сенсорного ввода данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-1268">Provides class handling for the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1269">Метод <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1269">The <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="52934-1270">Переопределите <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.ContentElement.LostTouchCapture>.</span><span class="sxs-lookup"><span data-stu-id="52934-1270">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.LostTouchCapture> event.</span></span> <span data-ttu-id="52934-1271">Не забудьте вызвать метод базового класса "<xref:System.Windows.ContentElement.OnLostTouchCapture%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1271">Be sure to call the base class' <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1272">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1272">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1273">Данные этого события содержат сведения о нажатой кнопке мыши и состоянии обработки.</span><span class="sxs-lookup"><span data-stu-id="52934-1273">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="52934-1274">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.MouseDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1274">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1275">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1275">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1276">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-1276">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="52934-1277">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1277">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="52934-1278">Если эти входные функции системы помечают событие <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> как обработанное, <xref:System.Windows.ContentElement.OnMouseDown%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="52934-1278">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="52934-1279">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события: <xref:System.Windows.ContentElement.MouseLeftButtonDown> и <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-1279">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="52934-1280">Любое из этих событий может возникнуть на принимающем элементе при получении <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1280">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="52934-1281">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1281">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="52934-1282">Если событие обрабатывается в процессе обработки класса, обработчики экземпляров для подсобытий не вызываются, если только вы явно не используете <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`, чтобы присоединить обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1282">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="52934-1283">Обработчики классов также не вызываются, если эти обработчики класса не зарегистрированы в сигнатуре <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-1283">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="52934-1284">Обрабатывая <xref:System.Windows.ContentElement.OnMouseDown%2A>, вы подразумеваете, что обработка класса учитывает все возможные действия нажатия кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1284">By handling <xref:System.Windows.ContentElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="52934-1285">Такое поведение может быть нежелательным; Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="52934-1285">This behavior might be unwanted; therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="52934-1286">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод\*; Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="52934-1286">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="52934-1287">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1287">This method has no default implementation.</span></span> <span data-ttu-id="52934-1288">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1288">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1289">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1289">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1290">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1290">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1291">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1291">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1292">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1292">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1293">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1293">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1294">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1294">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1295">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1295">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1296">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1296">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1297">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1297">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="52934-1298">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1298">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1299">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1299">This method has no default implementation.</span></span> <span data-ttu-id="52934-1300">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1300">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1301">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1301">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="52934-1302">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1302">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1303">В этом случае сопоставленное событие — это перенаправленное событие с стратегией прямой маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="52934-1303">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="52934-1304">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров (тех, которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1304">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1305">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1305">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1306">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1306">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="52934-1307">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1307">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1308">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1308">This method has no default implementation.</span></span> <span data-ttu-id="52934-1309">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1309">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1310">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1310">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="52934-1311">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1311">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1312">В этом случае сопоставленное событие — это перенаправленное событие с стратегией прямой маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="52934-1312">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="52934-1313">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров (тех, которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1313">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1314">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1314">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1315">В данных события сообщается о том, что была нажата левая кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1315">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="52934-1316">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1316">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="52934-1317">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1317">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1318">Событие <xref:System.Windows.ContentElement.MouseLeftButtonDown> перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="52934-1318">The <xref:System.Windows.ContentElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="52934-1319"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> — это базовое событие, которое пересылается пузырьковым, и каждая <xref:System.Windows.ContentElement> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.ContentElement.MouseLeftButtonDown>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="52934-1319"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="52934-1320">Хотя можно пометить событие <xref:System.Windows.ContentElement.MouseLeftButtonDown> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1320">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="52934-1321">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1321">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="52934-1322">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.ContentElement> прослушивает <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1322">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="52934-1323">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="52934-1323">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="52934-1324">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1324">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52934-1325">Вы не можете изменить поведение обработки мыши <xref:System.Windows.ContentElement>, переопределив <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1325">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="52934-1326">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1326">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="52934-1327">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="52934-1327">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="52934-1328">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также предполагают вызов <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1328">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="52934-1329">Например, можно создать производный от <xref:System.Windows.Controls.Button> и переопределить <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> в производном классе, не вызывая базовую реализацию. Однако это переопределение отключает событие <xref:System.Windows.Controls.Primitives.ButtonBase.Click>.</span><span class="sxs-lookup"><span data-stu-id="52934-1329">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1330">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1330">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1331">Данные о событии информируют об отжатии левой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1331">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="52934-1332">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1332">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1333">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1333">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1334">Событие <xref:System.Windows.ContentElement.MouseLeftButtonUp> перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="52934-1334">The <xref:System.Windows.ContentElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="52934-1335"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> — это базовое событие, которое пересылается пузырьковым, и каждая <xref:System.Windows.ContentElement> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.ContentElement.MouseLeftButtonUp>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="52934-1335"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="52934-1336">Хотя можно пометить событие <xref:System.Windows.ContentElement.MouseLeftButtonUp> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1336">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="52934-1337">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1337">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="52934-1338">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.ContentElement> прослушивает <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1338">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="52934-1339">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="52934-1339">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="52934-1340">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1340">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52934-1341">Вы не можете изменить поведение обработки мыши <xref:System.Windows.ContentElement>, переопределив <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1341">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1342">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1342">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1343">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1343">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1344">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1344">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1345">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1345">This method has no default implementation.</span></span> <span data-ttu-id="52934-1346">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1346">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1347">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1347">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1348">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1348">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1349">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1349">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1350">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1350">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1351">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1351">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1352">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1352">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1353">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1353">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1354">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1354">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1355">Данные о событии информируют о нажатии правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1355">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="52934-1356">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1356">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1357">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1357">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1358">Событие <xref:System.Windows.ContentElement.MouseRightButtonDown> перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="52934-1358">The <xref:System.Windows.ContentElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="52934-1359"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> — это базовое событие, которое пересылается пузырьковым, и каждая <xref:System.Windows.ContentElement> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.ContentElement.MouseRightButtonDown>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="52934-1359"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="52934-1360">Хотя можно пометить событие <xref:System.Windows.ContentElement.MouseRightButtonDown> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1360">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="52934-1361">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1361">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="52934-1362">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.ContentElement> прослушивает <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1362">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="52934-1363">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="52934-1363">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="52934-1364">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1364">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52934-1365">Вы не можете изменить поведение обработки мыши <xref:System.Windows.ContentElement>, переопределив <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1365">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="52934-1366">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1366">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="52934-1367">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="52934-1367">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="52934-1368">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также предполагают вызов <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1368">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="52934-1369">Например, можно создать производный от <xref:System.Windows.Controls.Control> и переопределить <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> в производном классе без вызова Base; Однако это переопределение отключает службы контекстного меню элемента управления, которые являются частью поведения по умолчанию <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="52934-1369">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1370">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1370">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1371">Данные о событии информируют об отпускании правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1371">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="52934-1372">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1372">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1373">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1373">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1374">Событие <xref:System.Windows.ContentElement.MouseRightButtonUp> перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="52934-1374">The <xref:System.Windows.ContentElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="52934-1375"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> — это базовое событие, которое пересылается пузырьковым, и каждая <xref:System.Windows.ContentElement> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.ContentElement.MouseRightButtonUp>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="52934-1375"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="52934-1376">Хотя можно пометить событие <xref:System.Windows.ContentElement.MouseRightButtonUp> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1376">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="52934-1377">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1377">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="52934-1378">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.ContentElement> прослушивает <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1378">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="52934-1379">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="52934-1379">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="52934-1380">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1380">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52934-1381">Вы не можете изменить поведение обработки мыши <xref:System.Windows.ContentElement>, переопределив <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1381">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1382">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1382">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1383">Данные о событии информируют об отжатии кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1383">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="52934-1384">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.Input.Mouse.MouseUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1384">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1385">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1385">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1386">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-1386">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="52934-1387">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1387">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="52934-1388">Если эти входные функции системы помечают событие <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> как обработанное, <xref:System.Windows.ContentElement.OnMouseUp%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="52934-1388">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="52934-1389">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события: <xref:System.Windows.ContentElement.MouseLeftButtonUp> и <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-1389">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="52934-1390">Любое из этих событий может возникнуть на принимающем элементе при получении <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1390">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="52934-1391">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1391">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="52934-1392">Если событие обрабатывается в процессе обработки класса, обработчики экземпляров для подсобытий не вызываются, если только вы явно не используете <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`, чтобы присоединить обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1392">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="52934-1393">Обработчики классов также не вызываются, если эти обработчики класса не зарегистрированы в сигнатуре <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-1393">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="52934-1394">Обрабатывая <xref:System.Windows.ContentElement.OnMouseUp%2A>, вы подразумеваете, что обработка класса учитывается для всех возможных действий кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1394">By handling <xref:System.Windows.ContentElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="52934-1395">Такое поведение может быть нежелательным; Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="52934-1395">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="52934-1396">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод\*; Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="52934-1396">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="52934-1397">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1397">This method has no default implementation.</span></span> <span data-ttu-id="52934-1398">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1398">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1399">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1399">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1400">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1400">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1401">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1401">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1402">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1402">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1403">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1403">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1404">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1404">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1405">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1405">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1406">Объект класса <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1406">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1407">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1407">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1408">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1408">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1409">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1409">This method has no default implementation.</span></span> <span data-ttu-id="52934-1410">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1410">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1411">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1411">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1412">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1412">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1413">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1413">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1414">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1414">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1415">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1415">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1416">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1416">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1417">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1417">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1418">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1418">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1419">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1419">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1420">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1420">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1421">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1421">This method has no default implementation.</span></span> <span data-ttu-id="52934-1422">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1422">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1423">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1423">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1424">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1424">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1425">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1425">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1426">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1426">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1427">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1427">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1428">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1428">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1429">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1429">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1430">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1430">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1431">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1431">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1432">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1432">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1433">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1433">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1434">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1434">This method has no default implementation.</span></span> <span data-ttu-id="52934-1435">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1435">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1436">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1436">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1437">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1437">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1438">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1438">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1439">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1439">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1440">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1440">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1441">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1441">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1442">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1442">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1443">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1443">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1444">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1444">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1445">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1445">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1446">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1446">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1447">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1447">This method has no default implementation.</span></span> <span data-ttu-id="52934-1448">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1448">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1449">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1449">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1450">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1450">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1451">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1451">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1452">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1452">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1453">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1453">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1454">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1454">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1455">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1455">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1456">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1456">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1457">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1457">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1458">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewDrop" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1458">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1459">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1459">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1460">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1460">This method has no default implementation.</span></span> <span data-ttu-id="52934-1461">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1461">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1462">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1462">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1463">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1463">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1464">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1464">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1465">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1465">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1466">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1466">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1467">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1467">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1468">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1468">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1469">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1469">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1470">Объект класса <see cref="T:System.Windows.GiveFeedbackEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1470">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1471">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1471">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1472">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1472">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1473">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1473">This method has no default implementation.</span></span> <span data-ttu-id="52934-1474">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1474">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1475">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1475">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1476">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1476">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1477">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1477">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1478">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1478">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1479">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1479">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1480">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1480">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1481">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1481">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1482">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1482">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1483">Объект класса <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1483">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1484">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1484">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1485">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1485">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1486">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1486">This method has no default implementation.</span></span> <span data-ttu-id="52934-1487">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1487">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1488">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1488">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1489">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1489">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1490">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1490">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1491">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1491">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1492">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1492">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1493">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1493">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1494">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1494">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1495">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1495">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1496">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1496">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1497">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1497">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1498">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1498">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1499">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1499">This method has no default implementation.</span></span> <span data-ttu-id="52934-1500">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1500">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1501">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1501">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1502">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1502">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1503">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1503">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1504">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1504">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1505">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1505">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1506">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1506">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1507">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1507">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1508">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1508">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1509">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1509">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1510">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1510">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1511">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1511">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1512">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1512">This method has no default implementation.</span></span> <span data-ttu-id="52934-1513">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1513">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1514">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1514">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1515">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1515">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1516">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1516">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1517">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1517">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1518">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1518">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1519">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1519">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1520">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1520">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1521">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1521">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1522">Объект класса <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1522">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1523">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1523">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1524">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1524">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1525">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1525">This method has no default implementation.</span></span> <span data-ttu-id="52934-1526">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1526">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1527">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1527">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1528">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1528">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1529">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1529">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1530">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1530">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1531">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1531">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1532">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1532">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1533">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1533">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1534">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1534">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1535">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1535">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1536">Данные о событии информируют о нажатии одной или нескольких кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1536">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="52934-1537">Вызывается, когда необработанное присоединенное перенаправленное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1537">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1538">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1538">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1539">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-1539">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="52934-1540">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1540">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="52934-1541">Если эти входные функции системы помечают событие <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> как обработанное, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="52934-1541">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="52934-1542">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> и <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-1542">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="52934-1543">Любое из этих событий может возникнуть на принимающем элементе при получении <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1543">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="52934-1544">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1544">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="52934-1545">Если событие обрабатывается в процессе обработки класса, обработчики экземпляров для подсобытий не вызываются, если только вы явно не используете <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`, чтобы присоединить обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1545">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="52934-1546">Обработчики классов также не вызываются, если эти обработчики класса не зарегистрированы в сигнатуре <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-1546">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="52934-1547">Обрабатывая <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, вы подразумеваете, что обработка класса учитывает все возможные действия нажатия кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1547">By handling <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="52934-1548">Такое поведение может быть нежелательным; Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="52934-1548">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="52934-1549">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод\*; Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="52934-1549">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="52934-1550">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1550">This method has no default implementation.</span></span> <span data-ttu-id="52934-1551">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1551">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1552">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1552">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1553">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1553">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1554">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1554">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1555">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1555">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1556">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1556">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1557">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1557">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1558">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1558">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1559">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1559">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1560">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1560">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1561">В данных события сообщается о том, что была нажата левая кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1561">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="52934-1562">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1562">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1563">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1563">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1564">Событие <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> перемещает маршрут туннелирования, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="52934-1564">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="52934-1565"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> является базовым событием, направляемым по туннелю, и каждая <xref:System.Windows.ContentElement> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="52934-1565"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="52934-1566">Хотя можно пометить событие <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1566">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="52934-1567">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1567">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="52934-1568">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.ContentElement> прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1568">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="52934-1569">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="52934-1569">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="52934-1570">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1570">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52934-1571">Вы не можете изменить поведение обработки мыши <xref:System.Windows.ContentElement>, переопределив <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1571">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="52934-1572">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1572">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="52934-1573">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="52934-1573">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="52934-1574">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также предполагают вызов <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1574">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="52934-1575">Например, можно создать производный от <xref:System.Windows.Controls.Button> и переопределить <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> в производном классе, не вызывая базовую реализацию. Однако это переопределение отключает событие <xref:System.Windows.Controls.Primitives.ButtonBase.Click>.</span><span class="sxs-lookup"><span data-stu-id="52934-1575">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1576">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1576">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1577">Данные о событии информируют об отжатии левой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1577">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="52934-1578">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1578">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1579">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1579">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1580">Событие <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> перемещает маршрут туннелирования, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="52934-1580">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="52934-1581"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> является базовым событием, направляемым по туннелю, и каждая <xref:System.Windows.ContentElement> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="52934-1581"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="52934-1582">Хотя можно пометить событие <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1582">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="52934-1583">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1583">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="52934-1584">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.ContentElement> прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1584">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="52934-1585">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="52934-1585">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="52934-1586">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1586">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52934-1587">Вы не можете изменить поведение обработки мыши <xref:System.Windows.ContentElement>, переопределив <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1587">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1588">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1588">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1589">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1589">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1590">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1590">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1591">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1591">This method has no default implementation.</span></span> <span data-ttu-id="52934-1592">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1592">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1593">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1593">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1594">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1594">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1595">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1595">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1596">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1596">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1597">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1597">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1598">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1598">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1599">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1599">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1600">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1600">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1601">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1601">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1602">Данные о событии информируют о нажатии правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1602">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="52934-1603">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1603">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1604">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1604">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1605">Событие <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> перемещает маршрут туннелирования, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="52934-1605">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="52934-1606"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> является базовым событием, направляемым по туннелю, и каждая <xref:System.Windows.ContentElement> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.ContentElement.MouseRightButtonDown>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="52934-1606"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="52934-1607">Хотя можно пометить событие <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1607">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="52934-1608">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1608">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="52934-1609">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.ContentElement> прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1609">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="52934-1610">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="52934-1610">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="52934-1611">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1611">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52934-1612">Вы не можете изменить поведение обработки мыши <xref:System.Windows.ContentElement>, переопределив <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1612">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="52934-1613">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1613">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="52934-1614">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="52934-1614">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="52934-1615">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также предполагают вызов <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1615">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="52934-1616">Например, можно создать производный от <xref:System.Windows.Controls.Control> и переопределить <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> в производном классе без вызова Base; Однако это переопределение отключает службы контекстного меню элемента управления, которые являются частью поведения по умолчанию <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="52934-1616">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1617">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1617">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1618">Данные о событии информируют об отпускании правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1618">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="52934-1619">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1619">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1620">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1620">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1621">Событие <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> перемещает маршрут туннелирования, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="52934-1621">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="52934-1622"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> является базовым событием, направляемым по туннелю, и каждая <xref:System.Windows.ContentElement> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="52934-1622"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="52934-1623">Хотя можно пометить событие <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1623">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="52934-1624">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1624">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="52934-1625">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.ContentElement> прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1625">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="52934-1626">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="52934-1626">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="52934-1627">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1627">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52934-1628">Вы не можете изменить поведение обработки мыши <xref:System.Windows.ContentElement>, переопределив <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-1628">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1629">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1629">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="52934-1630">Данные о событии информируют об отжатии одной или нескольких кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1630">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="52934-1631">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1631">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1632">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1632">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1633">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-1633">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="52934-1634">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1634">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="52934-1635">Если эти входные функции системы помечают событие <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> как обработанное, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="52934-1635">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="52934-1636">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> и <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-1636">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="52934-1637">Любое из этих событий может возникнуть на принимающем элементе при получении <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-1637">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="52934-1638">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1638">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="52934-1639">Если событие обрабатывается в процессе обработки класса, обработчики экземпляров для подсобытий не вызываются, если только вы явно не используете <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`, чтобы присоединить обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1639">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="52934-1640">Обработчики классов также не вызываются, если эти обработчики класса не зарегистрированы в сигнатуре <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="52934-1640">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="52934-1641">Обрабатывая <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, вы подразумеваете, что обработка класса учитывается для всех возможных действий кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-1641">By handling <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="52934-1642">Такое поведение может быть нежелательным; Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="52934-1642">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="52934-1643">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод\*; Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="52934-1643">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="52934-1644">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1644">This method has no default implementation.</span></span> <span data-ttu-id="52934-1645">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1645">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1646">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1646">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1647">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1647">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1648">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1648">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1649">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1649">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1650">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1650">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1651">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1651">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1652">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1652">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1653">Объект класса <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1653">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1654">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1654">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1655">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1655">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1656">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1656">This method has no default implementation.</span></span> <span data-ttu-id="52934-1657">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1657">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1658">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1658">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1659">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1659">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1660">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1660">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1661">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1661">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1662">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1662">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1663">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1663">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1664">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1664">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1665">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1665">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1666">Объект класса <see cref="T:System.Windows.QueryContinueDragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1666">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1667">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1667">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1668">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1668">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1669">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1669">This method has no default implementation.</span></span> <span data-ttu-id="52934-1670">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1670">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1671">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1671">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1672">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1672">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1673">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1673">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1674">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1674">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1675">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1675">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1676">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1676">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1677">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1677">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1678">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1678">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1679">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1679">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1680">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1680">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1681">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1681">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1682">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1682">This method has no default implementation.</span></span> <span data-ttu-id="52934-1683">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1683">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1684">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1684">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1685">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1685">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1686">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1686">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1687">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1687">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1688">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1688">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1689">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1689">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1690">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1690">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1691">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1691">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1692">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1692">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1693">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1693">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1694">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1694">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1695">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1695">This method has no default implementation.</span></span> <span data-ttu-id="52934-1696">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1696">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1697">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1697">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1698">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1698">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1699">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1699">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1700">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1700">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1701">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1701">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1702">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1702">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1703">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1703">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1704">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1704">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1705">Объект класса <see cref="T:System.Windows.Input.StylusDownEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1705">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1706">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1706">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1707">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1707">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1708">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1708">This method has no default implementation.</span></span> <span data-ttu-id="52934-1709">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1709">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1710">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1710">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1711">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1711">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1712">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1712">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1713">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1713">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1714">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1714">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1715">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1715">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1716">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1716">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1717">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1717">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1718">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1718">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1719">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1719">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1720">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1720">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1721">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1721">This method has no default implementation.</span></span> <span data-ttu-id="52934-1722">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1722">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1723">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1723">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1724">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1724">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1725">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1725">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1726">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1726">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1727">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1727">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1728">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1728">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1729">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1729">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1730">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1730">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1731">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1731">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1732">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1732">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1733">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1733">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1734">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1734">This method has no default implementation.</span></span> <span data-ttu-id="52934-1735">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1735">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1736">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1736">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1737">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1737">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1738">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1738">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1739">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1739">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1740">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1740">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1741">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1741">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1742">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1742">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1743">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1743">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1744">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1744">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1745">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1745">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1746">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1746">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1747">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1747">This method has no default implementation.</span></span> <span data-ttu-id="52934-1748">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1748">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1749">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1749">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1750">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1750">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1751">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1751">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1752">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1752">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1753">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1753">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1754">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1754">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1755">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1755">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1756">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1756">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1757">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1757">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1758">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1758">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1759">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1759">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1760">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1760">This method has no default implementation.</span></span> <span data-ttu-id="52934-1761">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1761">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1762">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1762">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1763">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1763">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1764">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1764">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1765">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1765">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1766">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1766">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1767">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1767">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1768">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1768">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1769">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1769">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1770">Объект класса <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1770">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1771">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1771">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1772">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1772">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1773">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1773">This method has no default implementation.</span></span> <span data-ttu-id="52934-1774">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1774">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1775">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1775">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1776">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1776">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1777">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1777">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1778">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1778">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1779">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1779">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1780">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1780">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1781">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1781">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1782">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1782">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1783">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1783">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1784">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1784">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1785">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1785">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1786">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1786">This method has no default implementation.</span></span> <span data-ttu-id="52934-1787">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1787">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1788">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1788">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1789">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1789">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1790">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1790">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1791">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1791">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1792">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1792">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1793">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1793">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1794">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1794">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1795">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1795">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1796">Объект класса <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1796">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1797">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1797">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1798">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1798">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1799">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1799">This method has no default implementation.</span></span> <span data-ttu-id="52934-1800">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1800">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1801">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1801">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1802">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1802">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1803">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1803">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1804">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1804">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1805">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1805">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1806">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1806">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1807">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1807">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="52934-1808">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="52934-1808">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.ContentElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1809">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1809">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1810">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.ContentElement.PreviewTouchDown" />, которое происходит при сенсорном нажатии данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1810">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1811">Метод <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1811">The <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="52934-1812">Переопределите <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.ContentElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-1812">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="52934-1813">Не забудьте вызвать метод базового класса "<xref:System.Windows.ContentElement.OnPreviewTouchDown%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1813">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1814">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1814">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1815">Предоставляет обработку класса для маршрутизируемого события <see cref="E:System.Windows.ContentElement.PreviewTouchMove" />, которое происходит при перемещении касания внутри этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1815">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1816">Метод <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1816">The <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="52934-1817">Переопределите <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.ContentElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="52934-1817">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="52934-1818">Не забудьте вызвать метод базового класса "<xref:System.Windows.ContentElement.OnPreviewTouchMove%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1818">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1819">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1819">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1820">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.ContentElement.PreviewTouchUp" />, которое происходит при прекращении сенсорного нажатия внутри элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1820">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1821">Метод <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1821">The <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="52934-1822">Переопределите <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.ContentElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-1822">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="52934-1823">Не забудьте вызвать метод базового класса "<xref:System.Windows.ContentElement.OnPreviewTouchUp%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1823">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1824">Объект класса <see cref="T:System.Windows.QueryContinueDragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1824">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1825">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1825">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1826">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1826">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1827">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1827">This method has no default implementation.</span></span> <span data-ttu-id="52934-1828">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1828">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1829">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1829">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1830">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1830">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1831">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1831">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1832">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1832">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1833">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1833">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1834">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1834">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1835">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1835">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="contentElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1836">Объект класса <see cref="T:System.Windows.Input.QueryCursorEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1836">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1837">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1837">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1838">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1838">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1839">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1839">This method has no default implementation.</span></span> <span data-ttu-id="52934-1840">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1840">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1841">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1841">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1842">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1842">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1843">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1843">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1844">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1844">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1845">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1845">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1846">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1846">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1847">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1847">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1848">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1848">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1849">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1849">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1850">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1850">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1851">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1851">This method has no default implementation.</span></span> <span data-ttu-id="52934-1852">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1852">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1853">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1853">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1854">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1854">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1855">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1855">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1856">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1856">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1857">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1857">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1858">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1858">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1859">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1859">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1860">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1860">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1861">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1861">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1862">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1862">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1863">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1863">This method has no default implementation.</span></span> <span data-ttu-id="52934-1864">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1864">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1865">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1865">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1866">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1866">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1867">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1867">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1868">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1868">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1869">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1869">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1870">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1870">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1871">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1871">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1872">Объект класса <see cref="T:System.Windows.Input.StylusDownEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1872">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1873">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1873">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1874">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1874">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1875">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1875">This method has no default implementation.</span></span> <span data-ttu-id="52934-1876">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1876">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1877">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1877">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1878">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1878">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1879">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1879">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1880">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1880">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1881">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1881">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1882">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1882">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1883">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1883">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1884">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1884">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1885">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> вызывается этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-1885">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="52934-1886">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1886">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1887">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1887">This method has no default implementation.</span></span> <span data-ttu-id="52934-1888">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1888">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1889">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1889">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="52934-1890">Цель этого метода аналогична шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1890">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1891">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1891">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1892">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров (тех, которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1892">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1893">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1893">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1894">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1894">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1895">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1895">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1896">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1896">This method has no default implementation.</span></span> <span data-ttu-id="52934-1897">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1897">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1898">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1898">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1899">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1899">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1900">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1900">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1901">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1901">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1902">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1902">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1903">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1903">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1904">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1904">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1905">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1905">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1906">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1906">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1907">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1907">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1908">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1908">This method has no default implementation.</span></span> <span data-ttu-id="52934-1909">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1909">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1910">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1910">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1911">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1911">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1912">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1912">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1913">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1913">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1914">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1914">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1915">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1915">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1916">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1916">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1917">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1917">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1918">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> вызывается этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-1918">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="52934-1919">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1919">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1920">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1920">This method has no default implementation.</span></span> <span data-ttu-id="52934-1921">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1921">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="52934-1922">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="52934-1922">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="52934-1923">Цель этого метода аналогична шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1923">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1924">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1924">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1925">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров (тех, которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="52934-1925">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1926">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1926">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1927">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1927">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1928">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1928">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1929">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1929">This method has no default implementation.</span></span> <span data-ttu-id="52934-1930">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1930">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1931">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1931">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1932">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1932">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1933">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1933">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1934">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1934">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1935">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1935">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1936">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1936">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1937">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1937">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1938">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1938">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1939">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1939">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1940">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1940">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1941">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1941">This method has no default implementation.</span></span> <span data-ttu-id="52934-1942">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1942">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1943">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1943">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1944">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1944">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1945">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1945">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1946">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1946">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1947">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1947">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1948">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1948">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1949">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1949">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1950">Объект класса <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1950">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1951">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1951">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1952">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1952">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1953">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1953">This method has no default implementation.</span></span> <span data-ttu-id="52934-1954">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1954">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1955">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1955">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1956">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1956">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1957">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1957">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1958">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1958">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1959">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1959">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1960">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1960">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1961">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1961">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1962">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1962">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1963">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1963">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1964">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1964">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1965">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1965">This method has no default implementation.</span></span> <span data-ttu-id="52934-1966">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1966">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1967">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1967">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1968">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1968">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1969">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1969">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1970">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1970">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1971">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1971">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1972">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1972">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1973">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1973">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1974">Объект класса <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="52934-1974">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1975">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="52934-1975">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="52934-1976">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="52934-1976">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1977">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1977">This method has no default implementation.</span></span> <span data-ttu-id="52934-1978">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="52934-1978">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="52934-1979">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] в методах\*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="52934-1979">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="52934-1980">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="52934-1980">In this case the matching event is a routed event.</span></span> <span data-ttu-id="52934-1981">Шаблон реализации методов On\* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="52934-1981">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="52934-1982">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-1982">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="52934-1983">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1983">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="52934-1984">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.ContentElement> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-1984">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="52934-1985">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="52934-1985">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1986">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1986">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1987">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.ContentElement.TouchDown" />, которое происходит при сенсорном нажатии внутри данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1987">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1988">Метод <xref:System.Windows.ContentElement.OnTouchDown%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1988">The <xref:System.Windows.ContentElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="52934-1989">Переопределите <xref:System.Windows.ContentElement.OnTouchDown%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.ContentElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-1989">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchDown> event.</span></span> <span data-ttu-id="52934-1990">Не забудьте вызвать метод базового класса "<xref:System.Windows.ContentElement.OnTouchDown%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1990">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1991">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1991">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1992">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.ContentElement.TouchEnter" />, которое происходит при сенсорном перемещении внутрь данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1992">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1993">Метод <xref:System.Windows.ContentElement.OnTouchEnter%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1993">The <xref:System.Windows.ContentElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="52934-1994">Переопределите <xref:System.Windows.ContentElement.OnTouchEnter%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.ContentElement.TouchEnter>.</span><span class="sxs-lookup"><span data-stu-id="52934-1994">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchEnter> event.</span></span> <span data-ttu-id="52934-1995">Не забудьте вызвать метод базового класса "<xref:System.Windows.ContentElement.OnTouchEnter%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="52934-1995">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-1996">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-1996">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-1997">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.ContentElement.TouchLeave" />, которое происходит при сенсорном перемещении за границы данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-1997">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-1998">Метод <xref:System.Windows.ContentElement.OnTouchLeave%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-1998">The <xref:System.Windows.ContentElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="52934-1999">Переопределите <xref:System.Windows.ContentElement.OnTouchLeave%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.ContentElement.TouchLeave>.</span><span class="sxs-lookup"><span data-stu-id="52934-1999">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchLeave> event.</span></span> <span data-ttu-id="52934-2000">Не забудьте вызвать метод базового класса "<xref:System.Windows.ContentElement.OnTouchLeave%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="52934-2000">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-2001">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-2001">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-2002">Предоставляет обработку класса для маршрутизируемого события <see cref="E:System.Windows.ContentElement.TouchMove" />, которое происходит при перемещении касания внутри этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2002">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2003">Метод <xref:System.Windows.ContentElement.OnTouchMove%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-2003">The <xref:System.Windows.ContentElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="52934-2004">Переопределите <xref:System.Windows.ContentElement.OnTouchMove%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.ContentElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="52934-2004">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchMove> event.</span></span> <span data-ttu-id="52934-2005">Не забудьте вызвать метод базового класса "<xref:System.Windows.ContentElement.OnTouchMove%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="52934-2005">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-2006">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="52934-2006">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="52934-2007">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.ContentElement.TouchUp" />, которое происходит при прекращении сенсорного нажатия внутри элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2007">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2008">Метод <xref:System.Windows.ContentElement.OnTouchUp%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-2008">The <xref:System.Windows.ContentElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="52934-2009">Переопределите <xref:System.Windows.ContentElement.OnTouchUp%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.ContentElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-2009">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchUp> event.</span></span> <span data-ttu-id="52934-2010">Не забудьте вызвать метод базового класса "<xref:System.Windows.ContentElement.OnTouchUp%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="52934-2010">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="contentElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="52934-2011">Главное направление запроса на перемещение фокуса.</span><span class="sxs-lookup"><span data-stu-id="52934-2011">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="52934-2012">При переопределении в производном классе возвращает элемент, который должен получить фокус для указанного направления перемещения фокуса без перемещения фокуса на этот элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2012">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="52934-2013">Элемент, который мог получить фокус при фактическом вызове <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2013">The element that would have received focus if <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2014">Реализация по умолчанию этого метода в этом классе является неполной и всегда возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="52934-2014">The default implementation of this method in this class is incomplete and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2015">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2015">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2016">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewDragEnter> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2016">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2017">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewDragEnter>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2017">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2018">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2018">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2019">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2019">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="52934-2020">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2020">Routing strategy</span></span>|<span data-ttu-id="52934-2021">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2021">Tunneling</span></span>|  
|<span data-ttu-id="52934-2022">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2022">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="52934-2023">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="52934-2023">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="52934-2024">Переопределите <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2024">Override <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2025">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewDragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2025">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2026">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2026">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2027">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2027">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2028">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2028">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2029">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2029">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2030">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2030">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2031">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2031">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2032">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewDragLeave> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2032">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2033">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewDragLeave>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2033">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2034">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2034">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2035">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2035">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="52934-2036">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2036">Routing strategy</span></span>|<span data-ttu-id="52934-2037">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2037">Tunneling</span></span>|  
|<span data-ttu-id="52934-2038">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2038">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="52934-2039">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="52934-2039">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="52934-2040">Переопределите <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2040">Override <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2041">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewDragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2041">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2042">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2042">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2043">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2043">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2044">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2044">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2045">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2045">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2046">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2046">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2047">Происходит, когда подсистема ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве потенциальной цели данный элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2047">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2048">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewDragOver> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2048">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2049">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewDragOver>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2049">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2050">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2050">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2051">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2051">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragOverEvent>|  
|<span data-ttu-id="52934-2052">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2052">Routing strategy</span></span>|<span data-ttu-id="52934-2053">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2053">Tunneling</span></span>|  
|<span data-ttu-id="52934-2054">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2054">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="52934-2055">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="52934-2055">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="52934-2056">Переопределите <xref:System.Windows.ContentElement.OnPreviewDragOver%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2056">Override <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2057">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewDragOver" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2057">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2058">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2058">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2059">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2059">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2060">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2060">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2061">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2061">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2062">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2062">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2063">Происходит, когда система ввода сообщает о базовом событии удаления с этим элементом в качестве цели удаления.</span><span class="sxs-lookup"><span data-stu-id="52934-2063">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2064">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewDrop> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2064">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDrop> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2065">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewDrop>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2065">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2066">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2066">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2067">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2067">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDropEvent>|  
|<span data-ttu-id="52934-2068">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2068">Routing strategy</span></span>|<span data-ttu-id="52934-2069">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2069">Tunneling</span></span>|  
|<span data-ttu-id="52934-2070">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2070">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="52934-2071">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="52934-2071">The corresponding bubbling event is <xref:System.Windows.ContentElement.Drop>.</span></span>  
  
-   <span data-ttu-id="52934-2072">Переопределите <xref:System.Windows.ContentElement.OnPreviewDrop%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2072">Override <xref:System.Windows.ContentElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2073">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewDrop" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2073">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2074">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2074">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2075">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2075">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2076">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2076">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2077">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2077">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2078">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2078">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2079">Происходит при начале операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-2079">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2080">Событие <xref:System.Windows.ContentElement.PreviewGiveFeedback> позволяет источнику события перетаскивания изменять внешний вид указателя мыши, чтобы дать пользователю визуальную обратную связь во время операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-2080">The <xref:System.Windows.ContentElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="52934-2081">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewGiveFeedback> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2081">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2082">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewGiveFeedback>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2082">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2083">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2083">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2084">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2084">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="52934-2085">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2085">Routing strategy</span></span>|<span data-ttu-id="52934-2086">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2086">Tunneling</span></span>|  
|<span data-ttu-id="52934-2087">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2087">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="52934-2088">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="52934-2088">The corresponding bubbling event is <xref:System.Windows.ContentElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="52934-2089">Переопределите <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2089">Override <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2090">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2090">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2091">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2091">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2092">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2092">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2093">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2093">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2094">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2094">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2095">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2095">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2096">Происходит при получении данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="52934-2096">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2097">Так как это событие использует маршрутизацию нисходящей маршрутизации, элемент, имеющий фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="52934-2097">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="52934-2098">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, имеющий фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-2098">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="52934-2099">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2099">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2100">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2100">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2101">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2101">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2102">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2102">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="52934-2103">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2103">Routing strategy</span></span>|<span data-ttu-id="52934-2104">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2104">Tunneling</span></span>|  
|<span data-ttu-id="52934-2105">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2105">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="52934-2106">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="52934-2106">The corresponding bubbling event is <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="52934-2107">Переопределите <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2107">Override <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2108">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2108">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2109">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2109">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2110">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2110">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2111">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2111">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2112">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2112">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2113">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2113">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2114">Происходит при нажатии клавиши, если фокус ввода с клавиатуры находится на данном элементе.</span><span class="sxs-lookup"><span data-stu-id="52934-2114">Occurs when a key is pressed while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2115">Обработка ключей взаимодействует с другими функциями платформы, такими как команды и компоновка текста.</span><span class="sxs-lookup"><span data-stu-id="52934-2115">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="52934-2116">Событие <xref:System.Windows.ContentElement.KeyDown> — это событие текстового ввода нижнего уровня, которое может работать не так, как ожидалось в некоторых элементах управления.</span><span class="sxs-lookup"><span data-stu-id="52934-2116">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="52934-2117">Это связано с тем, что некоторые элементы управления имеют компоновку элементов управления или обработку класса, которая предоставляет версию обработки текстового ввода и связанные события более высокого уровня.</span><span class="sxs-lookup"><span data-stu-id="52934-2117">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="52934-2118">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewKeyDown> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2118">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2119">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewKeyDown>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2119">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2120">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2121">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2121">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="52934-2122">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2122">Routing strategy</span></span>|<span data-ttu-id="52934-2123">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2123">Tunneling</span></span>|  
|<span data-ttu-id="52934-2124">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2124">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="52934-2125">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-2125">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="52934-2126">Переопределите <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2126">Override <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2127">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2127">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2128">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2128">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2129">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2129">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2130">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2130">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2131">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2131">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2132">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2132">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2133">Происходит при отпускании клавиши, если фокус ввода с клавиатуры находится на данном элементе.</span><span class="sxs-lookup"><span data-stu-id="52934-2133">Occurs when a key is released while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2134">Обработка ключей взаимодействует с другими функциями платформы, такими как команды и компоновка текста.</span><span class="sxs-lookup"><span data-stu-id="52934-2134">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="52934-2135">Событие <xref:System.Windows.ContentElement.KeyUp> — это событие текстового ввода нижнего уровня, которое может работать не так, как ожидалось в некоторых элементах управления.</span><span class="sxs-lookup"><span data-stu-id="52934-2135">The <xref:System.Windows.ContentElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="52934-2136">Это связано с тем, что некоторые элементы управления имеют компоновку элементов управления или обработку класса, которая предоставляет версию обработки текстового ввода и связанные события более высокого уровня.</span><span class="sxs-lookup"><span data-stu-id="52934-2136">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="52934-2137">Дополнительные сведения см. в документации по отдельным элементам управления.</span><span class="sxs-lookup"><span data-stu-id="52934-2137">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="52934-2138">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewKeyUp> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2138">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2139">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewKeyUp>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2139">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2140">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2140">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2141">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2141">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="52934-2142">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2142">Routing strategy</span></span>|<span data-ttu-id="52934-2143">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2143">Tunneling</span></span>|  
|<span data-ttu-id="52934-2144">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2144">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="52934-2145">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-2145">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="52934-2146">Переопределите <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2146">Override <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2147">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2147">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2148">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2148">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2149">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2149">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2150">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2150">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2151">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2151">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2152">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2152">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2153">Происходит при потере данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="52934-2153">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2154">Так как это событие использует маршрутизацию нисходящей маршрутизации, элемент, который потерял фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="52934-2154">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="52934-2155">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, который потерял фокус.</span><span class="sxs-lookup"><span data-stu-id="52934-2155">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="52934-2156">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2156">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2157">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2157">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2158">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2158">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2159">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2159">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="52934-2160">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2160">Routing strategy</span></span>|<span data-ttu-id="52934-2161">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2161">Tunneling</span></span>|  
|<span data-ttu-id="52934-2162">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2162">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="52934-2163">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="52934-2163">The corresponding bubbling event is <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="52934-2164">Переопределите <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2164">Override <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2165">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2165">Identifies the <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2166">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2166">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2167">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2167">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2168">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2168">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2169">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2169">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2170">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2170">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2171">Происходит при нажатии любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2171">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2172">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewMouseDown> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2172">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2173">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewMouseDown>, присоединяются к базовому <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2173">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2174">Событие <xref:System.Windows.ContentElement.PreviewMouseDown> часто возникает вместе с <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> или <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, которое соответствует нажатию одной из двух стандартных кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-2174">The <xref:System.Windows.ContentElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="52934-2175"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> и <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> также являются перенаправленными событиями, но они являются прямыми перенаправленными событиями, а соответствующее событие, зависящее от кнопки, возникает, когда событие <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> достигает этого элемента в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-2175"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="52934-2176">См. раздел Примечания для <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> или <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-2176">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2177">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2177">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2178">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2178">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="52934-2179">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2179">Routing strategy</span></span>|<span data-ttu-id="52934-2180">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2180">Tunneling</span></span>|  
|<span data-ttu-id="52934-2181">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2181">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-2182">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-2182">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="52934-2183">Переопределите <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2183">Override <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2184">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2184">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2185">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2185">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2186">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2186">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2187">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2187">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2188">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2188">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2189">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2189">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2190">Происходит при нажатии левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2190">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2191">Несмотря на то что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) предполагается, что он проходит по нисходящему маршруту через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-2191">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="52934-2192">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-2192">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="52934-2193">Аргументы этого события предоставляют аргументы базового события <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-2193">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="52934-2194">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.ContentElement.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="52934-2194">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="52934-2195">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.ContentElement>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="52934-2195">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="52934-2196">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2196">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="52934-2197">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-2197">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2198">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2198">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2199">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2199">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="52934-2200">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2200">Routing strategy</span></span>|<span data-ttu-id="52934-2201">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-2201">Direct</span></span>|  
|<span data-ttu-id="52934-2202">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2202">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-2203">Переопределите <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2203">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2204">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2204">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2205">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2205">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2206">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2206">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2207">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2207">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2208">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2208">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2209">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2209">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2210">Происходит при отпускании левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2210">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2211">Несмотря на то что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) предполагается, что он проходит по нисходящему маршруту через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-2211">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="52934-2212">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-2212">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="52934-2213">Аргументы этого события предоставляют аргументы базового события <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-2213">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="52934-2214">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.ContentElement.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="52934-2214">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="52934-2215">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.ContentElement>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="52934-2215">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="52934-2216">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2216">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="52934-2217">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-2217">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2218">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2218">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2219">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2219">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="52934-2220">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2220">Routing strategy</span></span>|<span data-ttu-id="52934-2221">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-2221">Direct</span></span>|  
|<span data-ttu-id="52934-2222">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2222">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-2223">Переопределите <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2223">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2224">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2224">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2225">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2225">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2226">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2227">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2227">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2228">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2228">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2229">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2229">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2230">Происходит при перемещении указателя мыши, когда он находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2230">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2231">Это событие возникает, когда указатель мыши впервые попадает в границы элемента, а также когда указатель мыши перемещается, пока остается в пределах границ элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2231">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="52934-2232">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewMouseMove> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2232">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2233">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewMouseMove>, присоединяются к базовому <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2233">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2234">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2234">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2235">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2235">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="52934-2236">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2236">Routing strategy</span></span>|<span data-ttu-id="52934-2237">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2237">Tunneling</span></span>|  
|<span data-ttu-id="52934-2238">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2238">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="52934-2239">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="52934-2239">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="52934-2240">Переопределите <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2240">Override <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2241">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2241">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2242">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2242">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2243">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2243">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2244">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2244">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2245">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2245">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2246">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2246">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2247">Происходит при нажатии правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2247">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2248">Несмотря на то что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) предполагается, что он проходит по нисходящему маршруту через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-2248">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="52934-2249">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-2249">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="52934-2250">Аргументы этого события предоставляют аргументы базового события <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-2250">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="52934-2251">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.ContentElement.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="52934-2251">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="52934-2252">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.ContentElement>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="52934-2252">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="52934-2253">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2253">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="52934-2254">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-2254">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2255">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2255">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2256">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2256">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="52934-2257">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2257">Routing strategy</span></span>|<span data-ttu-id="52934-2258">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-2258">Direct</span></span>|  
|<span data-ttu-id="52934-2259">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2259">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-2260">Переопределите <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2260">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2261">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2261">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2262">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2262">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2263">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2264">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2264">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2265">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2265">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2266">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2266">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2267">Происходит при отпускании правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2267">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2268">Несмотря на то что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) предполагается, что он проходит по нисходящему маршруту через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-2268">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="52934-2269">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-2269">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="52934-2270">Аргументы этого события предоставляют аргументы базового события <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52934-2270">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="52934-2271">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.ContentElement.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="52934-2271">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="52934-2272">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.ContentElement>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="52934-2272">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="52934-2273">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2273">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="52934-2274">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-2274">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2275">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2275">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2276">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2276">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="52934-2277">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2277">Routing strategy</span></span>|<span data-ttu-id="52934-2278">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-2278">Direct</span></span>|  
|<span data-ttu-id="52934-2279">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2279">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-2280">Переопределите <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2280">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2281">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2281">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2282">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2282">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2283">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2283">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2284">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2284">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2285">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2285">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2286">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2286">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2287">Происходит при отпускании любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2287">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2288">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewMouseUp> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2288">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2289">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewMouseUp>, присоединяются к базовому <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2289">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2290">Событие <xref:System.Windows.ContentElement.PreviewMouseUp> часто возникает вместе с <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> или <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, которое соответствует нажатию одной из двух стандартных кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-2290">The <xref:System.Windows.ContentElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="52934-2291"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> и <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> также являются перенаправленными событиями, но они являются прямыми перенаправленными событиями, а соответствующее событие, зависящее от кнопки, возникает, когда событие <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> достигает этого элемента в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-2291"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="52934-2292">См. раздел Примечания для <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> или <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-2292">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2293">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2293">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2294">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2294">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="52934-2295">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2295">Routing strategy</span></span>|<span data-ttu-id="52934-2296">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2296">Tunneling</span></span>|  
|<span data-ttu-id="52934-2297">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2297">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="52934-2298">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-2298">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="52934-2299">Переопределите <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2299">Override <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2300">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2300">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2301">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2301">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2302">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2302">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2303">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2303">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2304">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2304">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2305">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2305">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2306">Происходит при вращении колесика мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2306">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2307">Фокус или захват мыши имеют приоритет над местом, где находится указатель мыши; Таким образом, если это событие получится от элемента с заданным или захваченным элементом, то указатель мыши на самом деле может находиться над другим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2307">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="52934-2308">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewMouseMove> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2308">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2309">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewMouseMove>, присоединяются к базовому <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2309">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2310">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2310">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2311">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2311">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="52934-2312">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2312">Routing strategy</span></span>|<span data-ttu-id="52934-2313">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2313">Tunneling</span></span>|  
|<span data-ttu-id="52934-2314">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2314">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="52934-2315">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="52934-2315">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="52934-2316">Переопределите <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2316">Override <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2317">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2317">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2318">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2318">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2319">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2319">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2320">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2320">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2321">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2321">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2322">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2322">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2323">Происходит, когда состояние клавиши или кнопки мыши изменяется в ходе операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-2323">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2324">Событие <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> позволяет источнику перетаскивания объявить, следует ли отменить операцию перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-2324">The <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="52934-2325">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2325">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2326">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2326">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2327">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2327">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2328">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2328">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="52934-2329">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2329">Routing strategy</span></span>|<span data-ttu-id="52934-2330">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2330">Tunneling</span></span>|  
|<span data-ttu-id="52934-2331">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2331">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="52934-2332">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="52934-2332">The corresponding bubbling event is <xref:System.Windows.ContentElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="52934-2333">Переопределите <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2333">Override <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2334">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2334">Identifies the <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2335">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2335">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2336">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2336">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2337">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2337">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2338">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2338">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2339">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2339">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2340">Происходит при нажатии кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2340">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2341">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewStylusButtonDown> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2341">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2342">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewStylusButtonDown>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2342">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2343">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2343">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2344">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2344">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2345">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2345">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2346">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2346">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="52934-2347">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2347">Routing strategy</span></span>|<span data-ttu-id="52934-2348">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2348">Tunneling</span></span>|  
|<span data-ttu-id="52934-2349">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2349">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="52934-2350">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-2350">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="52934-2351">Переопределите <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2351">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2352">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2352">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2353">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2353">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2354">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2354">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2355">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2355">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2356">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2356">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2357">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2357">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2358">Происходит при отпускании кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2358">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2359">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewStylusButtonUp> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2359">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2360">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewStylusButtonUp>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2360">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2361">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2361">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2362">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2362">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2363">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2363">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2364">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2364">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="52934-2365">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2365">Routing strategy</span></span>|<span data-ttu-id="52934-2366">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2366">Tunneling</span></span>|  
|<span data-ttu-id="52934-2367">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2367">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="52934-2368">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-2368">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="52934-2369">Переопределите <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2369">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2370">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2370">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2371">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2371">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2372">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2372">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2373">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2373">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2374">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2374">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2375">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2375">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2376">Происходит при касании дигитайзера пером в тот момент, когда оно находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2376">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2377">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewStylusDown> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2377">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2378">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewStylusDown>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2378">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2379">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2379">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2380">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2380">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2381">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2381">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2382">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2382">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="52934-2383">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2383">Routing strategy</span></span>|<span data-ttu-id="52934-2384">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2384">Tunneling</span></span>|  
|<span data-ttu-id="52934-2385">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2385">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="52934-2386">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-2386">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="52934-2387">Переопределите <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2387">Override <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2388">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewStylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2388">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2389">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2389">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2390">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2390">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2391">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2391">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2392">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2392">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2393">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2393">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2394">Происходит при движении пера над элементом без касания дигитайзера.</span><span class="sxs-lookup"><span data-stu-id="52934-2394">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2395">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewStylusInAirMove> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2395">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2396">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewStylusInAirMove>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2396">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2397">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2397">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2398">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2398">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2399">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2399">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2400">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2400">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="52934-2401">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2401">Routing strategy</span></span>|<span data-ttu-id="52934-2402">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2402">Tunneling</span></span>|  
|<span data-ttu-id="52934-2403">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2403">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2404">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="52934-2404">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="52934-2405">Переопределите <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2405">Override <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2406">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2406">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2407">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2407">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2408">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2408">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2409">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2409">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2410">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2410">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2411">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2411">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2412">Происходит при нахождении пера над данным элементом достаточно близко для того, чтобы перо было обнаружено дигитайзером.</span><span class="sxs-lookup"><span data-stu-id="52934-2412">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2413">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewStylusInRange> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2413">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2414">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewStylusInRange>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2414">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2415">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2415">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2416">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2416">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2417">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2417">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2418">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2418">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="52934-2419">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2419">Routing strategy</span></span>|<span data-ttu-id="52934-2420">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2420">Tunneling</span></span>|  
|<span data-ttu-id="52934-2421">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2421">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2422">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="52934-2422">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="52934-2423">Переопределите <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2423">Override <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2424">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2424">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2425">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2425">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2426">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2426">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2427">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2427">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2428">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2428">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2429">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2429">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2430">Происходит при перемещении пера над элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2430">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="52934-2431">Для вызова этого события перемещаемое перо должно быть обнаружено дигитайзером; в противном случае вызывается <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2431">The stylus must move while being detected by the  digitizer  to raise this event, otherwise, <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2432">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewStylusMove> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2432">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2433">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewStylusMove>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2433">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2434">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2434">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2435">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2435">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2436">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2436">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2437">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2437">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="52934-2438">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2438">Routing strategy</span></span>|<span data-ttu-id="52934-2439">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2439">Tunneling</span></span>|  
|<span data-ttu-id="52934-2440">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2440">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2441">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="52934-2441">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="52934-2442">Переопределите <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2442">Override <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2443">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewStylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2443">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2444">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2444">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2445">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2445">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2446">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2446">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2447">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2447">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2448">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2448">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2449">Происходит, когда перо находится слишком далеко от дигитайзера, чтобы быть обнаруженным.</span><span class="sxs-lookup"><span data-stu-id="52934-2449">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2450">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2450">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2451">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2451">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2452">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2452">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2453">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2453">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2454">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2454">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2455">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2455">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="52934-2456">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2456">Routing strategy</span></span>|<span data-ttu-id="52934-2457">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2457">Tunneling</span></span>|  
|<span data-ttu-id="52934-2458">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2458">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2459">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="52934-2459">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="52934-2460">Переопределите <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2460">Override <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2461">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2461">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2462">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2462">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2463">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2463">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2464">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2464">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2465">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2465">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2466">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2466">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2467">Происходит при использовании пользователем одного из жестов пером.</span><span class="sxs-lookup"><span data-stu-id="52934-2467">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2468">Дополнительные сведения о жестах пера см. в разделе <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="52934-2468">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="52934-2469">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2469">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2470">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2470">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2471">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2471">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2472">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2472">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2473">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2473">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2474">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2474">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="52934-2475">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2475">Routing strategy</span></span>|<span data-ttu-id="52934-2476">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2476">Tunneling</span></span>|  
|<span data-ttu-id="52934-2477">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2477">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="52934-2478">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="52934-2478">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="52934-2479">Переопределите <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2479">Override <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2480">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2480">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2481">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2481">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2482">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2482">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2483">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2483">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2484">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2484">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2485">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2485">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2486">Происходит, когда пользователь отрывает перо от поверхности дигитайзера в тот момент, когда оно находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2486">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2487">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewStylusDown> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2487">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2488">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewStylusDown>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2488">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2489">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2489">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2490">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2490">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2491">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2491">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2492">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2492">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="52934-2493">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2493">Routing strategy</span></span>|<span data-ttu-id="52934-2494">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2494">Tunneling</span></span>|  
|<span data-ttu-id="52934-2495">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2495">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2496">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-2496">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="52934-2497">Переопределите <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2497">Override <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2498">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewStylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2498">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2499">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2499">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2500">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2500">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2501">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2501">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2502">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2502">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2503">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2503">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2504">Происходит при получении этим элементом текста аппаратно-независимым способом.</span><span class="sxs-lookup"><span data-stu-id="52934-2504">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2505">Событие <xref:System.Windows.ContentElement.PreviewTextInput> позволяет компоненту или приложению ожидать ввода текста независимым от устройства образом.</span><span class="sxs-lookup"><span data-stu-id="52934-2505">The <xref:System.Windows.ContentElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="52934-2506">Клавиатура является основным средством <xref:System.Windows.ContentElement.PreviewTextInput>; но речь, рукописный ввод и другие устройства ввода также могут создавать <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="52934-2506">The keyboard is the primary means of <xref:System.Windows.ContentElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="52934-2507">Из-за сочетаний клавиш — либо на клавиатуре по умолчанию, либо с помощью редакторов методов ввода. несколько ключевых событий могут вызывать только одно событие текстового ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-2507">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="52934-2508">Это событие создает псевдоним для <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.PreviewTextInput> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2508">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2509">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.PreviewTextInput>, присоединяются к базовому <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2509">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2510">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2510">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2511">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2511">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTextInputEvent>|  
|<span data-ttu-id="52934-2512">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2512">Routing strategy</span></span>|<span data-ttu-id="52934-2513">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2513">Tunneling</span></span>|  
|<span data-ttu-id="52934-2514">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2514">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="52934-2515">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="52934-2515">The corresponding bubbling event is <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="52934-2516">Переопределите <xref:System.Windows.ContentElement.OnPreviewTextInput%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2516">Override <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2517">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewTextInput" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2517">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2518">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2518">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2519">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2519">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2520">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2520">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2521">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2521">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2522">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2522">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2523">Происходит при касании пальцем экрана, когда палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2523">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2524">По умолчанию события <xref:System.Windows.ContentElement.PreviewTouchDown> и <xref:System.Windows.ContentElement.TouchDown> не возникают, пока палец не касается экрана и не перемещается.</span><span class="sxs-lookup"><span data-stu-id="52934-2524">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="52934-2525">Нажатие пальца на экране и удерживания его без перемещения приводит к поведению нажатия и удерживания <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="52934-2525">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="52934-2526">Поведение нажатия и удерживания эквивалентно щелчку правой кнопкой мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-2526">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="52934-2527">Чтобы события <xref:System.Windows.ContentElement.PreviewTouchDown> и <xref:System.Windows.ContentElement.TouchDown> происходили сразу после того, как палец касается экрана, установите для свойства присоединено <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> значение `false` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2527">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2528">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2528">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2529">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2529">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="52934-2530">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2530">Routing strategy</span></span>|<span data-ttu-id="52934-2531">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2531">Tunneling</span></span>|  
|<span data-ttu-id="52934-2532">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2532">Delegate</span></span>|<span data-ttu-id="52934-2533"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="52934-2533"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="52934-2534">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-2534">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="52934-2535">Переопределите <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2535">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2536">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewTouchDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2536">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2537">Возникает при перемещении пальца по экрану при условии, если палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2537">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2538">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2538">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2539">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2539">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="52934-2540">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2540">Routing strategy</span></span>|<span data-ttu-id="52934-2541">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2541">Tunneling</span></span>|  
|<span data-ttu-id="52934-2542">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2542">Delegate</span></span>|<span data-ttu-id="52934-2543"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="52934-2543"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="52934-2544">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="52934-2544">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="52934-2545">Переопределите <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2545">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2546">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewTouchMove" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2546">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2547">Возникает, когда палец отрывается от экрана при условии, что палец находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2547">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2548">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2548">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2549">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2549">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="52934-2550">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2550">Routing strategy</span></span>|<span data-ttu-id="52934-2551">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="52934-2551">Tunneling</span></span>|  
|<span data-ttu-id="52934-2552">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2552">Delegate</span></span>|<span data-ttu-id="52934-2553"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="52934-2553"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="52934-2554">Соответствующее событие восходящей маршрутизации имеет <xref:System.Windows.ContentElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-2554">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="52934-2555">Переопределите <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2555">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2556">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.PreviewTouchUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2556">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2557">Происходит, когда состояние клавиши или кнопки мыши изменяется в ходе операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-2557">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2558">Событие <xref:System.Windows.ContentElement.QueryContinueDrag> позволяет источнику перетаскивания определить, следует ли отменить операцию перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="52934-2558">The <xref:System.Windows.ContentElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="52934-2559">Это событие создает псевдоним для <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.QueryContinueDrag> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2559">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2560">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.QueryContinueDrag>, присоединяются к базовому <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2560">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2561">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2561">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2562">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2562">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryContinueDragEvent>|  
|<span data-ttu-id="52934-2563">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2563">Routing strategy</span></span>|<span data-ttu-id="52934-2564">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2564">Bubbling</span></span>|  
|<span data-ttu-id="52934-2565">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2565">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="52934-2566">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="52934-2566">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="52934-2567">Переопределите <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2567">Override <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2568">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.QueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2568">Identifies the <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2569">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2569">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2570">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2570">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2571">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2571">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2572">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2572">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2573">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2573">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2574">Происходит при запросе отображения курсора.</span><span class="sxs-lookup"><span data-stu-id="52934-2574">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="52934-2575">Это событие возникает для элемента каждый раз, когда указатель мыши перемещается в новое положение, что может послужить причиной изменения его внешнего вида.</span><span class="sxs-lookup"><span data-stu-id="52934-2575">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2576">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.QueryCursor> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2576">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryCursor> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2577">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.QueryCursor>, присоединяются к базовому <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2577">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2578">Курсор, на который ссылается это имя события, не обязательно является текстовым курсором (иногда называемым точкой вставки).</span><span class="sxs-lookup"><span data-stu-id="52934-2578">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="52934-2579">Вместо этого курсор в этом контексте представляет собой объект, объявляющий графическое изображение на экране, связанное с несколькими возможными устройствами ввода или понятиями, связанными с вводом в программировании Windows.</span><span class="sxs-lookup"><span data-stu-id="52934-2579">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="52934-2580">Этот объект представлен классом <xref:System.Windows.Input.Cursor> в WPF.</span><span class="sxs-lookup"><span data-stu-id="52934-2580">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="52934-2581">Система ввода WPF позволяет изменить этот курсор, если он представляет позицию указателя мыши на экране.</span><span class="sxs-lookup"><span data-stu-id="52934-2581">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="52934-2582">Можно использовать предопределенные значения из перечисления <xref:System.Windows.Input.Cursors> или можно объявить пользовательский курсор в качестве файла изображения.</span><span class="sxs-lookup"><span data-stu-id="52934-2582">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="52934-2583">Прослушивание события <xref:System.Windows.ContentElement.QueryCursor> не является эффективным приемом для управления курсорами.</span><span class="sxs-lookup"><span data-stu-id="52934-2583">Listening for the <xref:System.Windows.ContentElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="52934-2584">Вместо этого каждый элемент должен определять собственное поведение курсора с <xref:System.Windows.FrameworkContentElement.Cursor%2A> и <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2584">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="52934-2585">Следует полагаться только на <xref:System.Windows.ContentElement.QueryCursor>, если не используются базовые элементы уровня среды WPF или в исключительных обстоятельствах, когда определение поведения курсора для отдельных элементов не соответствует вашим потребностям.</span><span class="sxs-lookup"><span data-stu-id="52934-2585">You should only rely on <xref:System.Windows.ContentElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="52934-2586">Дополнительные сведения о реализации поведения курсора в ответ на <xref:System.Windows.ContentElement.QueryCursor>см. в разделе <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="52934-2586">For more information on implementing cursor behavior in response to <xref:System.Windows.ContentElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2587">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2587">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2588">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2588">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryCursorEvent>|  
|<span data-ttu-id="52934-2589">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2589">Routing strategy</span></span>|<span data-ttu-id="52934-2590">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2590">Bubbling</span></span>|  
|<span data-ttu-id="52934-2591">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2591">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="52934-2592">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="52934-2592">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="52934-2593">Переопределите <xref:System.Windows.ContentElement.OnQueryCursor%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2593">Override <xref:System.Windows.ContentElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2594">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.QueryCursor" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2594">Identifies the <see cref="E:System.Windows.ContentElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2595">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2595">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2596">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2596">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2597">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2597">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2598">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2598">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2599">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2599">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52934-2600">Объект <see cref="T:System.Windows.RoutedEventArgs" />, который содержит данные события, а также определяет инициируемое событие.</span><span class="sxs-lookup"><span data-stu-id="52934-2600">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="52934-2601">Инициирует определенное перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="52934-2601">Raises a specific routed event.</span></span> <span data-ttu-id="52934-2602">Инициируемое событие <see cref="T:System.Windows.RoutedEvent" /> указывается в предоставленном экземпляре <see cref="T:System.Windows.RoutedEventArgs" /> (как свойство <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> данных этого события).</span><span class="sxs-lookup"><span data-stu-id="52934-2602">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2603">Параметр `e` типизирован как общий базовый тип для всех перенаправленных данных события; Однако данные события должны быть предоставлены как наиболее конкретный тип данных события, доступный для создаваемого события, поскольку <xref:System.Windows.RoutedEventArgs> производные классы содержат фактически определенные свойства данных, предназначенные для конкретного события при его возникновении.</span><span class="sxs-lookup"><span data-stu-id="52934-2603">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="52934-2604"><xref:System.Windows.RoutedEventArgs> не только свойства состояния для события; Он также определяет, какое перенаправленное событие следует вызывать.</span><span class="sxs-lookup"><span data-stu-id="52934-2604"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="52934-2605">Этот шаблон генерации событий и данные перенаправленного события отличаются от [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] событий и классов данных, которые обычно содержат только свойства, связанные с событием.</span><span class="sxs-lookup"><span data-stu-id="52934-2605">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52934-2606">В следующем примере создаются данные события, добавляется идентификатор события к данным, а затем используется экземпляр данных события для вызова пользовательского перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="52934-2606">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#raiseevent)]
 [!code-vb[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="contentElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-2607">Освобождает все полученные сенсорные устройства для данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2607">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="contentElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-2608">Освобождает мышь, если элемент произвел ее захват.</span><span class="sxs-lookup"><span data-stu-id="52934-2608">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2609">Если этот элемент не удерживает записи, вызов этого метода не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="52934-2609">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="52934-2610">Рассмотрите возможность проверки значения <xref:System.Windows.ContentElement.IsMouseCaptured%2A> перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="52934-2610">Consider checking the value of <xref:System.Windows.ContentElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52934-2611">Следующий обработчик фиксирует или освобождает захват мыши в соответствии с состоянием кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-2611">The following handler captures or releases mouse capture according to mouse button states.</span></span> <span data-ttu-id="52934-2612">В примере показано, как использовать захваченное перемещение мыши для альтернативных целей, отличных от перемещения указателя мыши в [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="52934-2612">The example shows how to use captured mouse movement for alternative purposes other than moving the mouse pointer in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="contentElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-2613">Освобождает перо, если элемент произвел его захват.</span><span class="sxs-lookup"><span data-stu-id="52934-2613">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2614">Если этот элемент не удерживает записи, вызов этого метода не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="52934-2614">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="52934-2615">Рассмотрите возможность проверки значения <xref:System.Windows.ContentElement.IsStylusCaptured%2A> перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="52934-2615">Consider checking the value of <xref:System.Windows.ContentElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="52934-2616">Освобождаемое устройство.</span><span class="sxs-lookup"><span data-stu-id="52934-2616">The device to release.</span></span></param>
        <summary><span data-ttu-id="52934-2617">Предпринимает попытку освободить заданное сенсорное устройство из этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2617">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="52934-2618">Значение <see langword="true" />, если устройство сенсорного ввода освобождено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2618"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="52934-2619"><paramref name="touchDevice" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2619"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="52934-2620">Идентификатор перенаправленного события, к которому присоединен обработчик.</span><span class="sxs-lookup"><span data-stu-id="52934-2620">The identifier of the.routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="52934-2621">Конкретная реализация удаляемого обработчика из коллекции обработчиков событий этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2621">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="52934-2622">Удаляет указанный обработчик маршрутизируемого события из этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2622">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2623">Наиболее распространенным сценарием использования этого API является то, что вы реализуете событие [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "оболочки", связанное с пользовательским перенаправленным событием, особенно при реализации логики "Удалить" для обработчиков на уровне [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)].</span><span class="sxs-lookup"><span data-stu-id="52934-2623">The most common scenario for using this API is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="52934-2624">Этот сценарий проиллюстрирован в приведенном ниже разделе «Примечания».</span><span class="sxs-lookup"><span data-stu-id="52934-2624">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="52934-2625">Вызов этого метода не имеет силы, если нет зарегистрированных обработчиков с критериями, соответствующими входным параметрам для вызова метода.</span><span class="sxs-lookup"><span data-stu-id="52934-2625">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="52934-2626">Если присоединено несколько обработчиков, соответствующих критериям, удаляется только первый обработчик в хранилище обработчиков событий.</span><span class="sxs-lookup"><span data-stu-id="52934-2626">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="52934-2627">Это поведение согласуется с [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]ным поведением оператора `-=`.</span><span class="sxs-lookup"><span data-stu-id="52934-2627">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="52934-2628">Невозможно `null`ни `routedEvent`, ни `handler`.</span><span class="sxs-lookup"><span data-stu-id="52934-2628">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="52934-2629">Попытка предоставить любое значение, так как `null` вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="52934-2629">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="52934-2630">Этот метод игнорирует сведения о параметрах `handledEventsToo`, которые предоставляются при первом добавлении обработчика с сигнатурой <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>, которая позволяет обрабатывать уже обработанные события.</span><span class="sxs-lookup"><span data-stu-id="52934-2630">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="52934-2631">Удаляется любой из типов обработчиков.</span><span class="sxs-lookup"><span data-stu-id="52934-2631">Either type of handler is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-2632">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.ContentElement.CommandBindings" /> в экземплярах данного класса.</span><span class="sxs-lookup"><span data-stu-id="52934-2632">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="52934-2633">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.ContentElement.CommandBindings" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2633"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2634">Это приведет к возвращению `true`, если <xref:System.Windows.ContentElement.CommandBindings%2A> установлен локально.</span><span class="sxs-lookup"><span data-stu-id="52934-2634">This will return `true` if <xref:System.Windows.ContentElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="52934-2635">Этот метод `ShouldSerialize` предоставляется, так как свойство <xref:System.Windows.UIElement.CommandBindings%2A> не имеет простого значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-2635">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="52934-2636">Этот метод указывает, изменилось ли свойство со значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-2636">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="52934-2637">Этот метод обычно вызывается при разработке конструктора или при разработке собственного элемента управления, включающего <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-2637">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="52934-2638">Дополнительные сведения см. [в разделе Определение значений по умолчанию с помощью методов ShouldSerialize и Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2638">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52934-2639">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.ContentElement.InputBindings" /> в экземплярах данного класса.</span><span class="sxs-lookup"><span data-stu-id="52934-2639">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="52934-2640">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.ContentElement.InputBindings" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2640"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2641">Это приведет к возвращению `true`, если <xref:System.Windows.ContentElement.InputBindings%2A> установлен локально.</span><span class="sxs-lookup"><span data-stu-id="52934-2641">This will return `true` if <xref:System.Windows.ContentElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="52934-2642">Этот метод `ShouldSerialize` предоставляется, так как свойство <xref:System.Windows.UIElement.InputBindings%2A> не имеет простого значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-2642">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="52934-2643">Этот метод указывает, изменилось ли свойство со значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="52934-2643">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="52934-2644">Этот метод обычно вызывается при разработке конструктора или при разработке собственного элемента управления, включающего <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="52934-2644">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="52934-2645">Дополнительные сведения см. [в разделе Определение значений по умолчанию с помощью методов ShouldSerialize и Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2645">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2646">Происходит при нажатии кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2646">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2647">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusButtonDown> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2647">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2648">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusButtonDown>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2648">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2649">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2649">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2650">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2650">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2651">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2651">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2652">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2652">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonDownEvent>|  
|<span data-ttu-id="52934-2653">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2653">Routing strategy</span></span>|<span data-ttu-id="52934-2654">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2654">Bubbling</span></span>|  
|<span data-ttu-id="52934-2655">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2655">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="52934-2656">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-2656">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="52934-2657">Переопределите <xref:System.Windows.ContentElement.OnStylusButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2657">Override <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2658">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2658">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2659">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2659">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2660">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2660">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2661">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2661">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2662">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2662">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2663">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2663">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2664">Происходит при отпускании кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2664">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2665">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusButtonUp> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2665">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2666">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusButtonUp>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2666">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2667">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2667">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2668">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2668">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2669">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2669">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2670">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2670">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonUpEvent>|  
|<span data-ttu-id="52934-2671">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2671">Routing strategy</span></span>|<span data-ttu-id="52934-2672">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2672">Bubbling</span></span>|  
|<span data-ttu-id="52934-2673">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2673">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="52934-2674">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-2674">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="52934-2675">Переопределите <xref:System.Windows.ContentElement.OnStylusButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2675">Override <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2676">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2676">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2677">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2677">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2678">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2678">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2679">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2679">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2680">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2680">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2681">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2681">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2682">Происходит при касании дигитайзера пером в тот момент, когда оно находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2682">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2683">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusDown> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2683">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2684">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusDown>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2684">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2685">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2685">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2686">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2686">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2687">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2687">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2688">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2688">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusDownEvent>|  
|<span data-ttu-id="52934-2689">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2689">Routing strategy</span></span>|<span data-ttu-id="52934-2690">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2690">Bubbling</span></span>|  
|<span data-ttu-id="52934-2691">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2691">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="52934-2692">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-2692">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="52934-2693">Переопределите <xref:System.Windows.ContentElement.OnStylusDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2693">Override <xref:System.Windows.ContentElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2694">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2694">Identifies the <see cref="E:System.Windows.ContentElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2695">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2695">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2696">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2696">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2697">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2697">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2698">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2698">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2699">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2699">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2700">Происходит, когда перо попадает внутрь границ данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2700">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2701"><xref:System.Windows.ContentElement.StylusEnter> является [обзором перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) , который использует стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="52934-2701"><xref:System.Windows.ContentElement.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="52934-2702">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="52934-2702">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="52934-2703">Однако они включают другие аспекты поведения перенаправленных событий, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="52934-2703">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="52934-2704">Хотя <xref:System.Windows.ContentElement.StylusEnter> отслеживает, когда перо попадает внутрь границ элемента, это событие более буквально сообщает, что значение свойства <xref:System.Windows.ContentElement.IsStylusOver%2A> изменилось с `false` на `true` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2704">Although <xref:System.Windows.ContentElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="52934-2705">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusEnter> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2705">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2706">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusEnter>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2706">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2707">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2707">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2708">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2708">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2709">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2709">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2710">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2710">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusEnterEvent>|  
|<span data-ttu-id="52934-2711">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2711">Routing strategy</span></span>|<span data-ttu-id="52934-2712">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-2712">Direct</span></span>|  
|<span data-ttu-id="52934-2713">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2713">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2714">Переопределите <xref:System.Windows.ContentElement.OnStylusEnter%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2714">Override <xref:System.Windows.ContentElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2715">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusEnter" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2715">Identifies the <see cref="E:System.Windows.ContentElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2716">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2716">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2717">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2717">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2718">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2718">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2719">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2719">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2720">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2720">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2721">Происходит при движении пера над элементом без касания дигитайзера.</span><span class="sxs-lookup"><span data-stu-id="52934-2721">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2722">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusInAirMove> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2722">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2723">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusInAirMove>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2723">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2724">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2724">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2725">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2725">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2726">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2726">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2727">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2727">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="52934-2728">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2728">Routing strategy</span></span>|<span data-ttu-id="52934-2729">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2729">Bubbling</span></span>|  
|<span data-ttu-id="52934-2730">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2730">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2731">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="52934-2731">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="52934-2732">Переопределите <xref:System.Windows.ContentElement.OnStylusInAirMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2732">Override <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2733">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2733">Identifies the <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2734">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2734">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2735">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2735">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2736">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2736">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2737">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2737">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2738">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2738">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2739">Происходит при нахождении пера над данным элементом достаточно близко для того, чтобы перо было обнаружено дигитайзером.</span><span class="sxs-lookup"><span data-stu-id="52934-2739">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2740">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusInRange> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2740">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2741">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusInRange>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2741">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2742">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2742">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2743">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2743">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2744">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2744">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2745">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2745">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInRangeEvent>|  
|<span data-ttu-id="52934-2746">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2746">Routing strategy</span></span>|<span data-ttu-id="52934-2747">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2747">Bubbling</span></span>|  
|<span data-ttu-id="52934-2748">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2748">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2749">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="52934-2749">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="52934-2750">Переопределите <xref:System.Windows.ContentElement.OnStylusInRange%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2750">Override <xref:System.Windows.ContentElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2751">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2751">Identifies the <see cref="E:System.Windows.ContentElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2752">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2752">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2753">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2753">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2754">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2754">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2755">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2755">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2756">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2756">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2757">Происходит, когда перо покидает границы элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2757">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2758"><xref:System.Windows.ContentElement.StylusLeave> является [обзором перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) , который использует стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="52934-2758"><xref:System.Windows.ContentElement.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="52934-2759">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="52934-2759">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="52934-2760">Однако они включают другие аспекты поведения перенаправленных событий, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="52934-2760">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="52934-2761">Несмотря на то, что <xref:System.Windows.ContentElement.StylusLeave> отслеживается, когда перо покидает границы элемента, это событие более буквально сообщает, что значение свойства <xref:System.Windows.ContentElement.IsStylusOver%2A> изменилось с `true` на `false` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2761">Although <xref:System.Windows.ContentElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="52934-2762">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusLeave> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2762">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2763">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusLeave>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2763">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2764">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2764">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2765">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2765">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2766">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2766">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2767">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2767">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusLeaveEvent>|  
|<span data-ttu-id="52934-2768">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2768">Routing strategy</span></span>|<span data-ttu-id="52934-2769">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-2769">Direct</span></span>|  
|<span data-ttu-id="52934-2770">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2770">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2771">Переопределите <xref:System.Windows.ContentElement.OnStylusLeave%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2771">Override <xref:System.Windows.ContentElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2772">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusLeave" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2772">Identifies the <see cref="E:System.Windows.ContentElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2773">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2773">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2774">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2774">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2775">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2775">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2776">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2776">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2777">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2777">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2778">Происходит при движении пера над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2778">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="52934-2779">Для вызова этого события перо должно перемещаться по дигитайзеру.</span><span class="sxs-lookup"><span data-stu-id="52934-2779">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="52934-2780">В противном случае вызывается событие <see cref="E:System.Windows.ContentElement.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2780">Otherwise, <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2781">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusMove> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2781">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2782">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusMove>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2782">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2783">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2783">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2784">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2784">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2785">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2785">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2786">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2786">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusMoveEvent>|  
|<span data-ttu-id="52934-2787">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2787">Routing strategy</span></span>|<span data-ttu-id="52934-2788">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2788">Bubbling</span></span>|  
|<span data-ttu-id="52934-2789">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2789">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2790">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="52934-2790">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="52934-2791">Переопределите <xref:System.Windows.ContentElement.OnStylusMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2791">Override <xref:System.Windows.ContentElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2792">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2792">Identifies the <see cref="E:System.Windows.ContentElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2793">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2793">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2794">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2794">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2795">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2795">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2796">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2796">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2797">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2797">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2798">Возникает, когда расстояние между пером и дигитайзером слишком велико для обнаружения пера при условии, что перо находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2798">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2799">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusOutOfRange> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2799">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2800">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusOutOfRange>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2800">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2801">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2801">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2802">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2802">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2803">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2803">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2804">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2804">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="52934-2805">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2805">Routing strategy</span></span>|<span data-ttu-id="52934-2806">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2806">Bubbling</span></span>|  
|<span data-ttu-id="52934-2807">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2807">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2808">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="52934-2808">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="52934-2809">Переопределите <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2809">Override <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2810">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2810">Identifies the <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2811">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2811">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2812">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2812">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2813">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2813">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2814">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2814">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2815">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2815">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2816">Происходит при использовании пользователем одного из жестов пером.</span><span class="sxs-lookup"><span data-stu-id="52934-2816">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2817">Дополнительные сведения о жестах пера см. в разделе <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="52934-2817">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="52934-2818">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusSystemGesture> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2818">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2819">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusSystemGesture>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2819">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2820">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2820">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2821">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2821">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2822">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2822">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2823">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2823">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="52934-2824">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2824">Routing strategy</span></span>|<span data-ttu-id="52934-2825">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2825">Bubbling</span></span>|  
|<span data-ttu-id="52934-2826">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2826">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="52934-2827">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="52934-2827">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="52934-2828">Переопределите <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2828">Override <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2829">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2829">Identifies the <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2830">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2830">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2831">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2831">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2832">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2832">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2833">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2833">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2834">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2834">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2835">Происходит, когда пользователь отрывает перо от поверхности дигитайзера в тот момент, когда оно находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2835">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2836">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.StylusUp> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2836">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2837">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.StylusUp>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2837">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="52934-2838">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="52934-2838">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="52934-2839">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="52934-2839">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2840">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2840">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2841">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2841">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusUpEvent>|  
|<span data-ttu-id="52934-2842">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2842">Routing strategy</span></span>|<span data-ttu-id="52934-2843">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2843">Bubbling</span></span>|  
|<span data-ttu-id="52934-2844">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2844">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="52934-2845">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-2845">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="52934-2846">Переопределите <xref:System.Windows.ContentElement.OnStylusUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2846">Override <xref:System.Windows.ContentElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2847">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.StylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2847">Identifies the <see cref="E:System.Windows.ContentElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2848">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2848">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2849">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2849">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2850">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2850">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2851">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2851">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2852">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2852">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2853">Происходит при получении этим элементом текста аппаратно-независимым способом.</span><span class="sxs-lookup"><span data-stu-id="52934-2853">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="52934-2854">Это событие может уже быть помечено как обработанное внутренними реализациями составных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="52934-2854">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="52934-2855">См. Примечание ниже.</span><span class="sxs-lookup"><span data-stu-id="52934-2855">See Remark below.</span></span>  
  
 <span data-ttu-id="52934-2856">Событие <xref:System.Windows.ContentElement.TextInput> может уже быть помечено как обработанное внутренними реализациями составных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="52934-2856">The <xref:System.Windows.ContentElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="52934-2857">Например, <xref:System.Windows.Controls.TextBox> является составным элементом управления, в котором событие <xref:System.Windows.ContentElement.TextInput> уже помечено как обработанное; в его композиции.</span><span class="sxs-lookup"><span data-stu-id="52934-2857">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.ContentElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="52934-2858">Это делается потому, что элемент управления должен интерпретировать некоторые типы входных данных, например клавиши со стрелками, которые имеют специальное значение для этого элемента управления.</span><span class="sxs-lookup"><span data-stu-id="52934-2858">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="52934-2859">Если вы используете <xref:System.Windows.ContentElement.PreviewTextInput> в качестве события, в котором вы присоединяете обработчики для ввода текста, вы можете получить лучшие результаты.</span><span class="sxs-lookup"><span data-stu-id="52934-2859">If you use <xref:System.Windows.ContentElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="52934-2860">Этот метод обходит большинство случаев, когда композиция элементов управления уже пометила это событие как обработанное и не дает обработчику получать событие в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="52934-2860">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="52934-2861">Событие <xref:System.Windows.ContentElement.TextInput> позволяет компоненту или приложению ожидать ввода текста независимым от устройства образом.</span><span class="sxs-lookup"><span data-stu-id="52934-2861">The <xref:System.Windows.ContentElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="52934-2862">Клавиатура является основным средством <xref:System.Windows.ContentElement.TextInput>, но при этом также могут вызываться <xref:System.Windows.ContentElement.TextInput>речи, рукописного ввода и других устройств ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-2862">The keyboard is the primary means of <xref:System.Windows.ContentElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
 <span data-ttu-id="52934-2863">Из-за сочетаний клавиш — либо на клавиатуре по умолчанию, либо с помощью редакторов методов ввода. несколько ключевых событий могут вызывать только одно событие текстового ввода.</span><span class="sxs-lookup"><span data-stu-id="52934-2863">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="52934-2864">Это событие создает псевдоним для <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.ContentElement.TextInput> является частью списка членов класса, когда <xref:System.Windows.ContentElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2864">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.TextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="52934-2865">Обработчики событий, присоединенные к событию <xref:System.Windows.ContentElement.TextInput>, присоединяются к базовому <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="52934-2865">Event handlers that are attached to the <xref:System.Windows.ContentElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2866">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2866">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2867">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2867">Identifier field</span></span>|<xref:System.Windows.ContentElement.TextInputEvent>|  
|<span data-ttu-id="52934-2868">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2868">Routing strategy</span></span>|<span data-ttu-id="52934-2869">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2869">Bubbling</span></span>|  
|<span data-ttu-id="52934-2870">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2870">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="52934-2871">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="52934-2871">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="52934-2872">Переопределите <xref:System.Windows.ContentElement.OnTextInput%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2872">Override <xref:System.Windows.ContentElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2873">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.TextInput" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2873">Identifies the <see cref="E:System.Windows.ContentElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2874">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="52934-2874">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="52934-2875">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="52934-2875">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="52934-2876">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="52934-2876">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="52934-2877">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2877">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="52934-2878">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="52934-2878">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2879">Происходит при касании пальцем экрана, когда палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2879">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2880">По умолчанию события <xref:System.Windows.ContentElement.PreviewTouchDown> и <xref:System.Windows.ContentElement.TouchDown> не возникают, пока палец не касается экрана и не перемещается.</span><span class="sxs-lookup"><span data-stu-id="52934-2880">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="52934-2881">Нажатие пальца на экране и удерживания его без перемещения приводит к поведению нажатия и удерживания <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="52934-2881">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="52934-2882">Поведение нажатия и удерживания эквивалентно щелчку правой кнопкой мыши.</span><span class="sxs-lookup"><span data-stu-id="52934-2882">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="52934-2883">Чтобы события <xref:System.Windows.ContentElement.PreviewTouchDown> и <xref:System.Windows.ContentElement.TouchDown> происходили сразу после того, как палец касается экрана, установите для свойства присоединено <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> значение `false` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2883">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2884">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2884">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2885">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2885">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchDownEvent>|  
|<span data-ttu-id="52934-2886">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2886">Routing strategy</span></span>|<span data-ttu-id="52934-2887">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2887">Bubbling</span></span>|  
|<span data-ttu-id="52934-2888">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2888">Delegate</span></span>|<span data-ttu-id="52934-2889"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="52934-2889"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="52934-2890">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="52934-2890">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="52934-2891">Переопределите <xref:System.Windows.ContentElement.OnTouchDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2891">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2892">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.TouchDown" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2892">Identifies the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2893">Происходит при перемещении касания внутрь данного элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2893">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52934-2894">Это событие всегда вызывается, независимо от того, захвачено ли сенсорное устройство этим элементом пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="52934-2894">This event is always raised, whether or not the touch device is captured to this UI element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2895">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2895">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2896">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2896">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchEnterEvent>|  
|<span data-ttu-id="52934-2897">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2897">Routing strategy</span></span>|<span data-ttu-id="52934-2898">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-2898">Direct</span></span>|  
|<span data-ttu-id="52934-2899">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2899">Delegate</span></span>|<span data-ttu-id="52934-2900"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="52934-2900"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="52934-2901">Переопределите <xref:System.Windows.ContentElement.OnTouchEnter%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2901">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2902">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.TouchEnter" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2902">Identifies the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2903">Получает все сенсорные устройства, переданные в данный элемент.</span><span class="sxs-lookup"><span data-stu-id="52934-2903">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="52934-2904">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, полученных этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2904">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2905">Получает все сенсорные устройства, переданные в этот элемент или какой-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="52934-2905">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="52934-2906">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, полученных этим элементом или каким-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="52934-2906">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2907">Получает все сенсорные устройства, находящиеся над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2907">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="52934-2908">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, находящихся над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2908">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2909">Получает все сенсорные устройства, находящиеся над этим элементом или каким-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="52934-2909">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="52934-2910">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, которые находятся над этим элементом или каким-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="52934-2910">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2911">Происходит при перемещении касания за границы элемента.</span><span class="sxs-lookup"><span data-stu-id="52934-2911">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2912">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2912">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2913">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2913">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchLeaveEvent>|  
|<span data-ttu-id="52934-2914">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2914">Routing strategy</span></span>|<span data-ttu-id="52934-2915">Direct</span><span class="sxs-lookup"><span data-stu-id="52934-2915">Direct</span></span>|  
|<span data-ttu-id="52934-2916">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2916">Delegate</span></span>|<span data-ttu-id="52934-2917"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="52934-2917"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="52934-2918">Переопределите <xref:System.Windows.ContentElement.OnTouchLeave%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2918">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2919">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.TouchLeave" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2919">Identifies the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2920">Возникает при перемещении пальца по экрану при условии, если палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2920">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2921">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2921">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2922">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2922">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchMoveEvent>|  
|<span data-ttu-id="52934-2923">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2923">Routing strategy</span></span>|<span data-ttu-id="52934-2924">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2924">Bubbling</span></span>|  
|<span data-ttu-id="52934-2925">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2925">Delegate</span></span>|<span data-ttu-id="52934-2926"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="52934-2926"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="52934-2927">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="52934-2927">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="52934-2928">Переопределите <xref:System.Windows.ContentElement.OnTouchMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2928">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2929">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.TouchMove" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2929">Identifies the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2930">Возникает, когда палец отрывается от экрана при условии, что палец находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="52934-2930">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="52934-2931">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="52934-2931">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="52934-2932">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="52934-2932">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchUpEvent>|  
|<span data-ttu-id="52934-2933">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2933">Routing strategy</span></span>|<span data-ttu-id="52934-2934">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="52934-2934">Bubbling</span></span>|  
|<span data-ttu-id="52934-2935">делегат</span><span class="sxs-lookup"><span data-stu-id="52934-2935">Delegate</span></span>|<span data-ttu-id="52934-2936"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="52934-2936"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="52934-2937">Соответствующее событие туннелирования — <xref:System.Windows.ContentElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="52934-2937">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="52934-2938">Переопределите <xref:System.Windows.ContentElement.OnTouchUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="52934-2938">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52934-2939">Идентифицирует направленное событие <see cref="E:System.Windows.ContentElement.TouchUp" />.</span><span class="sxs-lookup"><span data-stu-id="52934-2939">Identifies the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
