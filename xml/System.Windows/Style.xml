<Type Name="Style" FullName="System.Windows.Style">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b90410be2bfcdb901d1e9a88fb45e1130df2599" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69443960" /></Metadata><TypeSignature Language="C#" Value="public class Style : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IAddChild, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Style extends System.Windows.Threading.DispatcherObject implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.INameScope, class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Style" />
  <TypeSignature Language="VB.NET" Value="Public Class Style&#xA;Inherits DispatcherObject&#xA;Implements IAddChild, INameScope, IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public ref class Style : System::Windows::Threading::DispatcherObject, System::Windows::Markup::IAddChild, System::Windows::Markup::INameScope, System::Windows::Markup::IQueryAmbient" />
  <TypeSignature Language="F#" Value="type Style = class&#xA;    inherit DispatcherObject&#xA;    interface INameScope&#xA;    interface IAddChild&#xA;    interface IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.DictionaryKeyProperty("TargetType")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="20861-101">Обеспечивает возможность совместного использования свойств, ресурсов и обработчиков событий экземплярами типа.</span><span class="sxs-lookup"><span data-stu-id="20861-101">Enables the sharing of properties, resources, and event handlers between instances of a type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20861-102">Можно задать <xref:System.Windows.Style> для любого элемента, производного от <xref:System.Windows.FrameworkElement> или <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="20861-102">You can set a <xref:System.Windows.Style> on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="20861-103">Стиль чаще всего объявляется как ресурс внутри <xref:System.Windows.Application.Resources%2A> раздела.</span><span class="sxs-lookup"><span data-stu-id="20861-103">A style is most commonly declared as a resource inside the <xref:System.Windows.Application.Resources%2A> section.</span></span> <span data-ttu-id="20861-104">Так как стили являются ресурсами, они подчиняются тем же правилам области, которые применяются ко всем ресурсам, поэтому объявление стиля влияет на место его применения.</span><span class="sxs-lookup"><span data-stu-id="20861-104">Because styles are resources, they obey the same scoping rules that apply to all resources, so where you declare a style affects where it can be applied.</span></span> <span data-ttu-id="20861-105">Например, если вы объявили стиль в корневом элементе файла определения [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] приложения, стиль можно использовать в любом месте приложения.</span><span class="sxs-lookup"><span data-stu-id="20861-105">If, for instance, you declare the style in the root element of your application definition [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, the style can be used anywhere in your application.</span></span> <span data-ttu-id="20861-106">Если создается приложение навигации и объявляется стиль в одном из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] файлов приложения, стиль можно использовать только в этом [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] файле.</span><span class="sxs-lookup"><span data-stu-id="20861-106">If you are creating a navigation application and declare the style in one of the application's [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files, the style can be used only in that [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span></span> <span data-ttu-id="20861-107">Дополнительные сведения о правилах области для ресурсов см. в разделе [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="20861-107">For more information on scoping rules for resources, see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="20861-108">Объявление стиля состоит из <xref:System.Windows.Style> объекта, содержащего коллекцию из одного или нескольких <xref:System.Windows.Setter> объектов.</span><span class="sxs-lookup"><span data-stu-id="20861-108">The style declaration consists of a <xref:System.Windows.Style> object that contains a collection of one or more <xref:System.Windows.Setter> objects.</span></span> <span data-ttu-id="20861-109">Каждый <xref:System.Windows.Setter> из них состоит <xref:System.Windows.Setter.Property%2A> из и <xref:System.Windows.Setter.Value%2A>.</span><span class="sxs-lookup"><span data-stu-id="20861-109">Each <xref:System.Windows.Setter> consists of a <xref:System.Windows.Setter.Property%2A> and a <xref:System.Windows.Setter.Value%2A>.</span></span> <span data-ttu-id="20861-110">Свойство является именем свойства элемента, к которому применяется стиль.</span><span class="sxs-lookup"><span data-stu-id="20861-110">The property is the name of the property of the element the style is to apply to.</span></span> <span data-ttu-id="20861-111">После объявления стиля в качестве ресурса он может ссылаться так же, как и любой другой ресурс.</span><span class="sxs-lookup"><span data-stu-id="20861-111">After the style is declared as a resource, it can then be referenced just like any other resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20861-112">Если в коллекции Setter имеется несколько методов задания с одинаковым <xref:System.Windows.Setter.Property%2A> значением свойства, используется метод задания, объявленный последним.</span><span class="sxs-lookup"><span data-stu-id="20861-112">If there is more than one setter in the setter collection with the same <xref:System.Windows.Setter.Property%2A> property value, the setter that is declared last is used.</span></span> <span data-ttu-id="20861-113">Аналогично, если задать значение для одного и того же свойства в стиле и в элементе напрямую, то значение, заданное для элемента напрямую, имеет приоритет.</span><span class="sxs-lookup"><span data-stu-id="20861-113">Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.</span></span>  
  
 <span data-ttu-id="20861-114">Модель [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] стилизации и шаблонов обеспечивает поддержку и совместное использование внешнего вида, а также разделение представления и логики.</span><span class="sxs-lookup"><span data-stu-id="20861-114">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic.</span></span> <span data-ttu-id="20861-115">Модель стилизации и шаблонов включает набор функций, позволяющих настроить [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="20861-115">The styling and templating model includes a suite of features that enable you to customize your [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="20861-116">Этот набор функций включает <xref:System.Windows.Style> класс, а также следующие компоненты:</span><span class="sxs-lookup"><span data-stu-id="20861-116">This suite of features includes the <xref:System.Windows.Style> class as well as the following:</span></span>  
  
-   <xref:System.Windows.Trigger>  
  
-   <span data-ttu-id="20861-117"><xref:System.Windows.EventTrigger> и <xref:System.Windows.Media.Animation.Storyboard></span><span class="sxs-lookup"><span data-stu-id="20861-117"><xref:System.Windows.EventTrigger> and <xref:System.Windows.Media.Animation.Storyboard></span></span>  
  
-   <xref:System.Windows.Controls.ControlTemplate>  
  
-   <xref:System.Windows.DataTemplate>  
  
 <span data-ttu-id="20861-118">Более подробную информацию см. в разделе [Стилизация и использование шаблонов](~/docs/framework/wpf/controls/styling-and-templating.md).</span><span class="sxs-lookup"><span data-stu-id="20861-118">For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20861-119">В следующем примере показано объявление стиля, которое будет влиять <xref:System.Windows.Controls.Control.Background%2A> на свойство <xref:System.Windows.Controls.Control>объекта.</span><span class="sxs-lookup"><span data-stu-id="20861-119">The following example shows a style declaration that will affect the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Control>.</span></span>  
  
 [!code-xaml[StyleOvw01#StyleSimple](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimple)]   
  
 <span data-ttu-id="20861-120">Чтобы применить приведенный выше стиль, выполните следующие действия.</span><span class="sxs-lookup"><span data-stu-id="20861-120">To apply the above style, do the following:</span></span>  
  
 [!code-xaml[StyleOvw01#StyleSimpleApplied](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimpleapplied)]
  
 <span data-ttu-id="20861-121">Стили можно также применить ко всем элементам заданного типа с помощью <xref:System.Windows.Style.TargetType%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="20861-121">You can also apply styles to all elements of a given type by using the <xref:System.Windows.Style.TargetType%2A> property.</span></span> <span data-ttu-id="20861-122">Добавление целевого типа к стилю означает, что больше не нужно полностью определять свойство, которое вы задаете с помощью `ClassName.PropertyName` синтаксиса.</span><span class="sxs-lookup"><span data-stu-id="20861-122">Adding the target type to the style means that you no longer have to fully qualify the property you are setting with the `ClassName.PropertyName` syntax.</span></span> <span data-ttu-id="20861-123">В следующем примере определяется стиль, который будет применен к каждому <xref:System.Windows.Controls.TextBlock> элементу.</span><span class="sxs-lookup"><span data-stu-id="20861-123">The following example defines a style that will be applied to every <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
> [!NOTE]
>  <span data-ttu-id="20861-124">Многие [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элементы управления состоят из сочетания других [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элементов управления, поэтому создание стиля, применяемого ко всем элементам управления типа, может иметь широкие последствия.</span><span class="sxs-lookup"><span data-stu-id="20861-124">Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact.</span></span> <span data-ttu-id="20861-125">Например, при создании стиля, <xref:System.Windows.Controls.TextBlock> предназначенного для элементов управления <xref:System.Windows.Controls.Canvas>в, стиль применяется ко всем <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.Controls.TextBlock> элементам управления на холсте, даже если является частью другого элемента управления, например <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="20861-125">For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBlock> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBlock> controls in the canvas, even if the <xref:System.Windows.Controls.TextBlock> is part of another control, such as a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 <span data-ttu-id="20861-126">Сведения о том, как расширить или наследовать из определенного стиля, см. <xref:System.Windows.Style.BasedOn%2A> на странице.</span><span class="sxs-lookup"><span data-stu-id="20861-126">For information on how to extend or inherit from a defined style, see the <xref:System.Windows.Style.BasedOn%2A> page.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1985cd45-f197-42d5-b75e-886add64b248"><span data-ttu-id="20861-127">Атрибут x:Key</span><span class="sxs-lookup"><span data-stu-id="20861-127">x:Key Attribute</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e0e0ce6f-e873-49c7-8ad7-8b840eb353ec"><span data-ttu-id="20861-128">Расширение разметки x:Type</span><span class="sxs-lookup"><span data-stu-id="20861-128">x:Type Markup Extension</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="20861-129">Введение в Пример стилизации и создания шаблонов</span><span class="sxs-lookup"><span data-stu-id="20861-129">Introduction to Styling and Templating Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20861-130">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="20861-130">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20861-131">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="20861-131">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20861-132">Для <xref:System.Windows.Style.TargetType%2A> вызова этого конструктора требуется отложенная проверка <xref:System.Windows.Style.BasedOn%2A> типа стиля и.</span><span class="sxs-lookup"><span data-stu-id="20861-132">This constructor call requires delayed validation of <xref:System.Windows.Style.TargetType%2A> and <xref:System.Windows.Style.BasedOn%2A> style type.</span></span> <span data-ttu-id="20861-133">Если используется вне контекста средства синтаксического анализа, поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="20861-133">If this is used outside the context of the parser, behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(Type ^ targetType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Style : Type -&gt; System.Windows.Style" Usage="new System.Windows.Style targetType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="20861-134">Тип данных, к которому будет применяться стиль.</span><span class="sxs-lookup"><span data-stu-id="20861-134">The type to which the style will apply.</span></span></param>
        <summary><span data-ttu-id="20861-135">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Style" /> для использования с заданным объектом <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="20861-135">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (Type targetType, System.Windows.Style basedOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType, class System.Windows.Style basedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type, basedOn As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(Type ^ targetType, System::Windows::Style ^ basedOn);" />
      <MemberSignature Language="F#" Value="new System.Windows.Style : Type * System.Windows.Style -&gt; System.Windows.Style" Usage="new System.Windows.Style (targetType, basedOn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="basedOn" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="20861-136">Тип данных, к которому будет применяться стиль.</span><span class="sxs-lookup"><span data-stu-id="20861-136">The type to which the style will apply.</span></span></param>
        <param name="basedOn"><span data-ttu-id="20861-137">Стиль, на котором должен быть основан данный стиль.</span><span class="sxs-lookup"><span data-stu-id="20861-137">The style to base this style on.</span></span></param>
        <summary><span data-ttu-id="20861-138">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Style" /> для использования с указанным <see cref="T:System.Type" />, основанный на заданном <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="20861-138">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" /> and based on the specified <see cref="T:System.Windows.Style" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BasedOn">
      <MemberSignature Language="C#" Value="public System.Windows.Style BasedOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style BasedOn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.BasedOn" />
      <MemberSignature Language="VB.NET" Value="Public Property BasedOn As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ BasedOn { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BasedOn : System.Windows.Style with get, set" Usage="System.Windows.Style.BasedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20861-139">Возвращает или задает определенный стиль, являющийся основой текущего стиля.</span><span class="sxs-lookup"><span data-stu-id="20861-139">Gets or sets a defined style that is the basis of the current style.</span></span></summary>
        <value><span data-ttu-id="20861-140">Определенный стиль, являющийся основой текущего стиля.</span><span class="sxs-lookup"><span data-stu-id="20861-140">A defined style that is the basis of the current style.</span></span> <span data-ttu-id="20861-141">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20861-141">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20861-142">Каждый стиль поддерживает только одно <xref:System.Windows.Style.BasedOn%2A> значение.</span><span class="sxs-lookup"><span data-stu-id="20861-142">Each style only supports one <xref:System.Windows.Style.BasedOn%2A> value.</span></span>  
  
<a name="xamlAttributeUsage_BasedOn"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="20861-143">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="20861-143">XAML Attribute Usage</span></span>  
  
```  
<object BasedOn="myStyle" .../>  
```  
  
<a name="xamlValues_BasedOn"></a>   
## <a name="xaml-values"></a><span data-ttu-id="20861-144">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="20861-144">XAML Values</span></span>  
 <span data-ttu-id="20861-145">*мистиле*</span><span class="sxs-lookup"><span data-stu-id="20861-145">*myStyle*</span></span>  
 <span data-ttu-id="20861-146">Существующий стиль.</span><span class="sxs-lookup"><span data-stu-id="20861-146">An existing style.</span></span> <span data-ttu-id="20861-147">Как правило, для ссылки на существующий стиль используются [расширения разметки и XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) .</span><span class="sxs-lookup"><span data-stu-id="20861-147">Typically, you use the [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) to refer to an existing style.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20861-148">Стили в [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] могут быть расширены или унаследованы несколькими способами.</span><span class="sxs-lookup"><span data-stu-id="20861-148">There are several ways that styles in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can be extended or inherited.</span></span> <span data-ttu-id="20861-149">Стили могут основываться на других стилях с помощью этого свойства.</span><span class="sxs-lookup"><span data-stu-id="20861-149">Styles can be based on other styles through this property.</span></span> <span data-ttu-id="20861-150">При использовании этого свойства новый стиль будет наследовать значения исходного стиля, которые явно не переопределены в новом стиле.</span><span class="sxs-lookup"><span data-stu-id="20861-150">When you use this property, the new style will inherit the values of the original style that are not explicitly redefined in the new style.</span></span> <span data-ttu-id="20861-151">В `Style2` следующем примере наследует `Yellow` <xref:System.Windows.Controls.Control.Background%2A?displayProperty=nameWithType> значение и добавляет <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=nameWithType> значение `Blue`.</span><span class="sxs-lookup"><span data-stu-id="20861-151">In the following example, `Style2` inherits the <xref:System.Windows.Controls.Control.Background%2A?displayProperty=nameWithType> value of `Yellow`, and adds a <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=nameWithType> value of `Blue`.</span></span>  
  
 [!code-xaml[StyleOvw01#ExtendingStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyle)]   
  
 <span data-ttu-id="20861-152">Аналогичным образом стили могут основываться на стиле существующего [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элемента, как показано в следующем примере, где новый стиль основан на стиле <xref:System.Windows.Controls.TextBlock> элемента.</span><span class="sxs-lookup"><span data-stu-id="20861-152">Similarly, styles can be based on the style of an existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] element, as in the following example where the new style is based on the style of a <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#2)]   
  
> [!NOTE]
>  <span data-ttu-id="20861-153">Если создать стиль со <xref:System.Windows.Style.TargetType%2A> свойством и основывать его на другом стиле, который также <xref:System.Windows.Style.TargetType%2A> определяет свойство, целевой тип производного стиля должен быть таким же, как или производный от типа базового стиля.</span><span class="sxs-lookup"><span data-stu-id="20861-153">If you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the type of the base style.</span></span>  
  
 <span data-ttu-id="20861-154">Стили, определенные для конкретных типов, также могут основываться на других стилях, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="20861-154">Styles defined for specific types can also be based on other styles, as in the following example.</span></span>  
  
 [!code-xaml[StyleOvw01#ExtendingStyleTargetType](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyletargettype)]   
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="20861-155">Введение в Пример стилизации и создания шаблонов</span><span class="sxs-lookup"><span data-stu-id="20861-155">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="style.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20861-156">Возвращает хэш-код для модуля чтения данных <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="20861-156">Returns the hash code for this <see cref="T:System.Windows.Style" />.</span></span></summary>
        <returns><span data-ttu-id="20861-157">Хэш-код для этого экземпляра <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="20861-157">The hash code for this <see cref="T:System.Windows.Style" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.Style.IsSealed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.ISealable.IsSealed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20861-158">Возвращает значение, указывающее, доступен ли стиль только для чтения.</span><span class="sxs-lookup"><span data-stu-id="20861-158">Gets a value that indicates whether the style is read-only and cannot be changed.</span></span></summary>
        <value><span data-ttu-id="20861-159"><see langword="true" />, если стиль запечатан; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20861-159"><see langword="true" /> if the style is sealed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20861-160">Стиль запечатан, если на нем основан другой стиль или когда он применяется в первый раз.</span><span class="sxs-lookup"><span data-stu-id="20861-160">A style is sealed when another style is based on it or when it is applied for the first time.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Style.BasedOn" />
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit&#xA;override this.RegisterName : string * obj -&gt; unit" Usage="style.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="20861-161">Регистрируемое имя.</span><span class="sxs-lookup"><span data-stu-id="20861-161">The name to register.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="20861-162">Объект, сопоставляемый заданному имени <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="20861-162">The object to map to the specified <paramref name="name" />.</span></span></param>
        <summary><span data-ttu-id="20861-163">Регистрирует новую пару имя-объект в текущей области имен.</span><span class="sxs-lookup"><span data-stu-id="20861-163">Registers a new name-object pair in the current namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resources : System.Windows.ResourceDictionary with get, set" Usage="System.Windows.Style.Resources" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IHaveResources.Resources</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20861-164">Возвращает или задает коллекцию ресурсов, которые могут использоваться в области видимости данного стиля.</span><span class="sxs-lookup"><span data-stu-id="20861-164">Gets or sets the collection of resources that can be used within the scope of this style.</span></span></summary>
        <value><span data-ttu-id="20861-165">Ресурсы, которые могут использоваться в области видимости данного стиля.</span><span class="sxs-lookup"><span data-stu-id="20861-165">The resources that can be used within the scope of this style.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="20861-166">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="20861-166">XAML Property Element Usage</span></span>  
  
```xaml
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>
```

<span data-ttu-id="20861-167">-или-</span><span class="sxs-lookup"><span data-stu-id="20861-167">-or-</span></span>

```xaml
<object>  
  <object.Resources>  
    <ResourceDictionary Source="externalDictionarySource"/>  
  </object.Resources>  
</object>  
```

<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="20861-168">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="20861-168">XAML Values</span></span>  
 <span data-ttu-id="20861-169">*онеорморересаурцеелементс*</span><span class="sxs-lookup"><span data-stu-id="20861-169">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="20861-170">Один или несколько элементов ресурсов.</span><span class="sxs-lookup"><span data-stu-id="20861-170">One or more resource elements.</span></span> <span data-ttu-id="20861-171">Чтобы ссылаться на них в дальнейшем в синтаксисе расширения разметки [StaticResource](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) или версии [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [расширения разметки DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) в, элемент `x:Key` ресурса должен иметь атрибут.</span><span class="sxs-lookup"><span data-stu-id="20861-171">To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute.</span></span>  
  
 <span data-ttu-id="20861-172">\<ResourceDictionary Source=" *externalDictionarySource*"/></span><span class="sxs-lookup"><span data-stu-id="20861-172">\<ResourceDictionary Source=" *externalDictionarySource*"/></span></span>  
 <span data-ttu-id="20861-173">Источник внешнего словаря.</span><span class="sxs-lookup"><span data-stu-id="20861-173">An external dictionary source.</span></span> <span data-ttu-id="20861-174">Дополнительные сведения см. в разделе [Объединенные словари ресурсов](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span><span class="sxs-lookup"><span data-stu-id="20861-174">For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seal">
      <MemberSignature Language="C#" Value="public void Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.Seal" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seal();" />
      <MemberSignature Language="F#" Value="member this.Seal : unit -&gt; unit" Usage="style.Seal " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.ISealable.Seal</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20861-175">Блокирует этот стиль и все фабрики и триггеры, чтобы их нельзя было изменить.</span><span class="sxs-lookup"><span data-stu-id="20861-175">Locks this style and all factories and triggers so they cannot be changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.Style.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20861-176">Возвращает коллекцию объектов <see cref="T:System.Windows.Setter" /> и <see cref="T:System.Windows.EventSetter" />.</span><span class="sxs-lookup"><span data-stu-id="20861-176">Gets a collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</span></span></summary>
        <value><span data-ttu-id="20861-177">Коллекция объектов <see cref="T:System.Windows.Setter" /> и <see cref="T:System.Windows.EventSetter" />.</span><span class="sxs-lookup"><span data-stu-id="20861-177">A collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</span></span> <span data-ttu-id="20861-178">По умолчанию является пустой коллекцией.</span><span class="sxs-lookup"><span data-stu-id="20861-178">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20861-179">Свойство объекта может состоять только из объектов, которые <xref:System.Windows.SetterBase>могут быть назначены. <xref:System.Windows.Style> <xref:System.Windows.Style.Setters%2A></span><span class="sxs-lookup"><span data-stu-id="20861-179">The <xref:System.Windows.Style.Setters%2A> property of a <xref:System.Windows.Style> object can consist only of objects assignable to <xref:System.Windows.SetterBase>.</span></span> <span data-ttu-id="20861-180">Добавление дочернего <xref:System.Windows.Style> объекта к объекту неявно добавляет <xref:System.Windows.Style> его <xref:System.Windows.SetterBaseCollection> в объект для объекта. <xref:System.Windows.SetterBase></span><span class="sxs-lookup"><span data-stu-id="20861-180">Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.</span></span>  
  
 <span data-ttu-id="20861-181">Явное использование элемента свойства для <xref:System.Windows.Style.Setters%2A> также является сравнительно распространенным.</span><span class="sxs-lookup"><span data-stu-id="20861-181">An explicit property element usage  for <xref:System.Windows.Style.Setters%2A> is also relatively common.</span></span> <span data-ttu-id="20861-182">Это решение для стиля разметки, которое иногда помогает отличать <xref:System.Windows.Style.Setters%2A> элементы <xref:System.Windows.Style.Resources%2A> от <xref:System.Windows.Style.Triggers%2A> и в сложном стиле.</span><span class="sxs-lookup"><span data-stu-id="20861-182">This is a markup style decision that can sometimes help distinguish <xref:System.Windows.Style.Setters%2A> from <xref:System.Windows.Style.Resources%2A> and <xref:System.Windows.Style.Triggers%2A> items in a complex style.</span></span> <span data-ttu-id="20861-183">Например:</span><span class="sxs-lookup"><span data-stu-id="20861-183">For example:</span></span>  
  
```  
<Style>  
  <Style.Setters>  
    <!--one or more SetterBase derived object elements here-->  
  </Style.Setters>  
</Style>  
```  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="20861-184">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="20861-184">XAML Property Element Usage</span></span>  
  
```  
<object>  
  oneOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a><span data-ttu-id="20861-185">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="20861-185">XAML Values</span></span>  
 <span data-ttu-id="20861-186">*онеорморесеттерс*</span><span class="sxs-lookup"><span data-stu-id="20861-186">*oneOrMoreSetters*</span></span>  
 <span data-ttu-id="20861-187">Один или несколько <xref:System.Windows.Setter> объектов <xref:System.Windows.EventSetter> или.</span><span class="sxs-lookup"><span data-stu-id="20861-187">One or more <xref:System.Windows.Setter> or <xref:System.Windows.EventSetter> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20861-188">В следующем примере показано, как использовать это свойство.</span><span class="sxs-lookup"><span data-stu-id="20861-188">The following example shows how to use this property.</span></span>  
  
 [!code-csharp[listboxitemstyle#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxItemStyle/CSharp/Pane1.xaml.cs#1)]
 [!code-vb[listboxitemstyle#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxItemStyle/VisualBasic/Pane1.xaml.vb#1)]  
  
 <span data-ttu-id="20861-189">Добавление дочернего <xref:System.Windows.Style> объекта к объекту неявно добавляет <xref:System.Windows.Style> его <xref:System.Windows.SetterBaseCollection> в объект для объекта. <xref:System.Windows.SetterBase></span><span class="sxs-lookup"><span data-stu-id="20861-189">Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.</span></span> <span data-ttu-id="20861-190">Следующий <xref:System.Windows.EventSetter> пример неявно добавляется <xref:System.Windows.SetterBaseCollection> в стиль:</span><span class="sxs-lookup"><span data-stu-id="20861-190">The following <xref:System.Windows.EventSetter> is implicitly added to the <xref:System.Windows.SetterBaseCollection> of the style:</span></span>  
  
 [!code-xaml[eventovwsupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Setter" />
        <altmember cref="T:System.Windows.EventSetter" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="20861-191">Введение в Пример стилизации и создания шаблонов</span><span class="sxs-lookup"><span data-stu-id="20861-191">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.CanSeal">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.CanSeal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.CanSeal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.System#Windows#ISealable#CanSeal" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanSeal As Boolean Implements ISealable.CanSeal" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Windows::ISealable::CanSeal { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.ISealable.CanSeal" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.ISealable.CanSeal</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.IsSealed">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.System#Windows#ISealable#IsSealed" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSealed As Boolean Implements ISealable.IsSealed" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Windows::ISealable::IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.ISealable.IsSealed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.ISealable.IsSealed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.Seal">
      <MemberSignature Language="C#" Value="void ISealable.Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.ISealable.Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#ISealable#Seal" />
      <MemberSignature Language="VB.NET" Value="Sub Seal () Implements ISealable.Seal" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.ISealable.Seal() = System::Windows::ISealable::Seal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.ISealable.Seal</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20861-192">Добавляемый дочерний объект.</span><span class="sxs-lookup"><span data-stu-id="20861-192">The child object to add.</span></span></param>
        <summary><span data-ttu-id="20861-193">Добавляет дочерний объект.</span><span class="sxs-lookup"><span data-stu-id="20861-193">Adds a child object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20861-194">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="20861-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="20861-195">Он может использоваться, только если экземпляр <xref:System.Windows.Style> приведен к типу интерфейса <xref:System.Windows.Markup.IAddChild>.</span><span class="sxs-lookup"><span data-stu-id="20861-195">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="20861-196">Текст для добавления в объект.</span><span class="sxs-lookup"><span data-stu-id="20861-196">The text to add to the object.</span></span></param>
        <summary><span data-ttu-id="20861-197">Добавляет текстовое содержимое узла в объект.</span><span class="sxs-lookup"><span data-stu-id="20861-197">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20861-198">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="20861-198">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="20861-199">Он может использоваться, только если экземпляр <xref:System.Windows.Style> приведен к типу интерфейса <xref:System.Windows.Markup.IAddChild>.</span><span class="sxs-lookup"><span data-stu-id="20861-199">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.INameScope.FindName">
      <MemberSignature Language="C#" Value="object INameScope.FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Windows.Markup.INameScope.FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindName (name As String) As Object Implements INameScope.FindName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Windows.Markup.INameScope.FindName(System::String ^ name) = System::Windows::Markup::INameScope::FindName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="20861-200">Идентификатор имени для запрашиваемого объекта.</span><span class="sxs-lookup"><span data-stu-id="20861-200">The name identifier for the object being requested.</span></span></param>
        <summary><span data-ttu-id="20861-201">Возвращает объект, имеющий предоставленное идентифицирующее имя.</span><span class="sxs-lookup"><span data-stu-id="20861-201">Returns an object that has the provided identifying name.</span></span></summary>
        <returns><span data-ttu-id="20861-202">Данный объект, если он найден.</span><span class="sxs-lookup"><span data-stu-id="20861-202">The object, if found.</span></span> <span data-ttu-id="20861-203">Возвращает <see langword="null" />, если объект с таким именем не найден.</span><span class="sxs-lookup"><span data-stu-id="20861-203">Returns <see langword="null" /> if no object of that name was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20861-204">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="20861-204">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="20861-205">Он может использоваться, только если экземпляр <xref:System.Windows.Style> приведен к типу интерфейса <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="20861-205">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="20861-206">Имя запрошенного внешнего свойства.</span><span class="sxs-lookup"><span data-stu-id="20861-206">The name of the requested ambient property.</span></span></param>
        <summary><span data-ttu-id="20861-207">Запрашивает, доступно ли заданное внешнее свойство в текущей области.</span><span class="sxs-lookup"><span data-stu-id="20861-207">Queries whether a specified ambient property is available in the current scope.</span></span></summary>
        <returns><span data-ttu-id="20861-208">Значение <see langword="true" />, если запрошенное внешнее свойство доступно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20861-208"><see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.IQueryAmbient" />
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public Type TargetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : Type with get, set" Usage="System.Windows.Style.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20861-209">Возвращает или задает тип, для которого предназначен данный стиль.</span><span class="sxs-lookup"><span data-stu-id="20861-209">Gets or sets the type for which this style is intended.</span></span></summary>
        <value><span data-ttu-id="20861-210">Целевой тип стиля.</span><span class="sxs-lookup"><span data-stu-id="20861-210">The target type for this style.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20861-211">Стиль можно задать для любого элемента, производного от <xref:System.Windows.FrameworkElement> или. <xref:System.Windows.FrameworkContentElement></span><span class="sxs-lookup"><span data-stu-id="20861-211">You can set a style on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="20861-212">Таким образом, целевой тип может быть любым из этих элементов.</span><span class="sxs-lookup"><span data-stu-id="20861-212">Therefore, your target type can be any of those elements.</span></span> <span data-ttu-id="20861-213">Однако если создать стиль со <xref:System.Windows.Style.TargetType%2A> свойством и основывать его на другом стиле, который также <xref:System.Windows.Style.TargetType%2A> определяет свойство, то целевой тип производного стиля должен быть таким же, как или производный от целевого типа базового стиля.</span><span class="sxs-lookup"><span data-stu-id="20861-213">However, if you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the target type of the base style.</span></span>  
  
 <span data-ttu-id="20861-214">Если не указать <xref:System.Windows.Style.TargetType%2A>, необходимо `x:Key` указать для <xref:System.Windows.Style> , а также определить свойства в стиле, указав имя класса.</span><span class="sxs-lookup"><span data-stu-id="20861-214">If you do not specify a <xref:System.Windows.Style.TargetType%2A>, then you must specify an `x:Key` for your <xref:System.Windows.Style> and also qualify the properties in your style with a class name.</span></span>  
  
<a name="xamlAttributeUsage_TargetType"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="20861-215">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="20861-215">XAML Attribute Usage</span></span>  
  
```  
<object  TargetType="{x:Type typeName}"/>  
-or-  
<object  TargetType="typeName"/>  
```  
  
<a name="xamlValues_TargetType"></a>   
## <a name="xaml-values"></a><span data-ttu-id="20861-216">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="20861-216">XAML Values</span></span>  
 `{x:Type ...}`  
 <span data-ttu-id="20861-217">Использование расширения разметки [x:Type](~/docs/framework/xaml-services/x-type-markup-extension.md) .</span><span class="sxs-lookup"><span data-stu-id="20861-217">An [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md) markup extension usage.</span></span>  
  
 <span data-ttu-id="20861-218">*Имени*</span><span class="sxs-lookup"><span data-stu-id="20861-218">*typeName*</span></span>  
 <span data-ttu-id="20861-219">Имя типа класса.</span><span class="sxs-lookup"><span data-stu-id="20861-219">The type name of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20861-220">В следующем примере определяется стиль, который будет применен ко всем экземплярам <xref:System.Windows.Controls.TextBlock> элемента.</span><span class="sxs-lookup"><span data-stu-id="20861-220">The following example defines a style that will be applied to all instances of the <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
 <span data-ttu-id="20861-221">`x:Key` `x:Key` `{x:Type TextBlock}`Присвоение <xref:System.Windows.Controls.TextBlock> свойству значения типа без задания неявно задает для свойства значение. <xref:System.Windows.Style.TargetType%2A></span><span class="sxs-lookup"><span data-stu-id="20861-221">Setting the <xref:System.Windows.Style.TargetType%2A> property to the <xref:System.Windows.Controls.TextBlock> type without setting an `x:Key` implicitly sets the `x:Key` to `{x:Type TextBlock}`.</span></span> <span data-ttu-id="20861-222">Это также означает, что если присвоить <xref:System.Windows.Style> приведенному выше `{x:Type TextBlock}` `x:Key` значению любое значение, <xref:System.Windows.Style> отличное от, то не будет <xref:System.Windows.Controls.TextBlock> автоматически применяться ко всем элементам.</span><span class="sxs-lookup"><span data-stu-id="20861-222">This also means that if you give the above <xref:System.Windows.Style> an `x:Key` value of anything other than `{x:Type TextBlock}`, the <xref:System.Windows.Style> would not be applied to all <xref:System.Windows.Controls.TextBlock> elements automatically.</span></span> <span data-ttu-id="20861-223">Вместо этого необходимо явно применить стиль к <xref:System.Windows.Controls.TextBlock> элементам.</span><span class="sxs-lookup"><span data-stu-id="20861-223">Instead, you need to apply the style to the <xref:System.Windows.Controls.TextBlock> elements explicitly.</span></span>  
  
 <span data-ttu-id="20861-224">Многие [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элементы управления состоят из сочетания других [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элементов управления, поэтому создание стиля, применяемого ко всем элементам управления типа, может иметь широкие последствия.</span><span class="sxs-lookup"><span data-stu-id="20861-224">Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact.</span></span> <span data-ttu-id="20861-225">Например, при создании стиля, <xref:System.Windows.Controls.TextBox> предназначенного для элементов управления <xref:System.Windows.Controls.Canvas>в, стиль применяется ко всем <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox> элементам управления на холсте, даже если является частью другого элемента управления, например <xref:System.Windows.Controls.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="20861-225">For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBox> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBox> controls in the canvas, even if the <xref:System.Windows.Controls.TextBox> is part of another control, such as a <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="20861-226">Введение в Пример стилизации и создания шаблонов</span><span class="sxs-lookup"><span data-stu-id="20861-226">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Windows.TriggerCollection" Usage="System.Windows.Style.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20861-227">Возвращает коллекцию объектов <see cref="T:System.Windows.TriggerBase" />, применяющих значения свойств на основе заданных условий.</span><span class="sxs-lookup"><span data-stu-id="20861-227">Gets a collection of <see cref="T:System.Windows.TriggerBase" /> objects that apply property values based on specified conditions.</span></span></summary>
        <value><span data-ttu-id="20861-228">Коллекция объектов <see cref="T:System.Windows.TriggerBase" />.</span><span class="sxs-lookup"><span data-stu-id="20861-228">A collection of <see cref="T:System.Windows.TriggerBase" /> objects.</span></span> <span data-ttu-id="20861-229">По умолчанию является пустой коллекцией.</span><span class="sxs-lookup"><span data-stu-id="20861-229">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20861-230">Модель стилизации и шаблонов позволяет указывать триггеры <xref:System.Windows.Style>в. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</span><span class="sxs-lookup"><span data-stu-id="20861-230">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model enables you to specify triggers within your <xref:System.Windows.Style>.</span></span> <span data-ttu-id="20861-231">По сути, триггеры — это объекты, которые позволяют применять изменения при определенных условиях (например `true`, при достижении определенного значения свойства или при возникновении события).</span><span class="sxs-lookup"><span data-stu-id="20861-231">Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.</span></span>  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="20861-232">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="20861-232">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Triggers>  
    oneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="20861-233">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="20861-233">XAML Values</span></span>  
 <span data-ttu-id="20861-234">*онеорморетригжерс*</span><span class="sxs-lookup"><span data-stu-id="20861-234">*oneOrMoreTriggers*</span></span>  
 <span data-ttu-id="20861-235">Ноль или более элементов объектов, являющихся классами, <xref:System.Windows.TriggerBase>производными от.</span><span class="sxs-lookup"><span data-stu-id="20861-235">Zero or more object elements that are classes deriving from <xref:System.Windows.TriggerBase>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20861-236">В следующем примере показан именованный <xref:System.Windows.Style> объект, <xref:System.Windows.Controls.Button> доступный для элементов управления.</span><span class="sxs-lookup"><span data-stu-id="20861-236">The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls.</span></span> <span data-ttu-id="20861-237"><xref:System.Windows.Controls.Control.Foreground%2A> <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> Определяет элемент, который изменяет свойство кнопки, если свойство имеет `true`значение. <xref:System.Windows.Trigger> <xref:System.Windows.Style></span><span class="sxs-lookup"><span data-stu-id="20861-237">The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.</span></span>  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DataTrigger" />
        <altmember cref="T:System.Windows.EventTrigger" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="20861-238">Введение в Пример стилизации и создания шаблонов</span><span class="sxs-lookup"><span data-stu-id="20861-238">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit&#xA;override this.UnregisterName : string -&gt; unit" Usage="style.UnregisterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="20861-239">Имя удаляемого сопоставления.</span><span class="sxs-lookup"><span data-stu-id="20861-239">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="20861-240">Удаляет из области видимости имен сопоставление имя-объект.</span><span class="sxs-lookup"><span data-stu-id="20861-240">Removes a name-object mapping from the namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
