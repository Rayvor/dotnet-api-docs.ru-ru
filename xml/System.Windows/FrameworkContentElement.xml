<Type Name="FrameworkContentElement" FullName="System.Windows.FrameworkContentElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70bb637f8e0393750486d5d256c1653256d4e269" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66008797" /></Metadata><TypeSignature Language="C#" Value="public class FrameworkContentElement : System.Windows.ContentElement, System.ComponentModel.ISupportInitialize, System.Windows.IFrameworkInputElement, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FrameworkContentElement extends System.Windows.ContentElement implements class System.ComponentModel.ISupportInitialize, class System.Windows.IFrameworkInputElement, class System.Windows.IInputElement, class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkContentElement&#xA;Inherits ContentElement&#xA;Implements IFrameworkInputElement, IQueryAmbient, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkContentElement : System::Windows::ContentElement, System::ComponentModel::ISupportInitialize, System::Windows::IFrameworkInputElement, System::Windows::Markup::IQueryAmbient" />
  <TypeSignature Language="F#" Value="type FrameworkContentElement = class&#xA;    inherit ContentElement&#xA;    interface IFrameworkInputElement&#xA;    interface IInputElement&#xA;    interface ISupportInitialize&#xA;    interface IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ContentElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IFrameworkInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.UsableDuringInitialization(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.XmlLangProperty("Language")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="FocusVisualStyle", StyleTargetType=typeof(System.Windows.Controls.Control))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5cb61-101"><see cref="T:System.Windows.FrameworkContentElement" /> является реализацией уровня платформы WPF и расширением базового класса <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-101"><see cref="T:System.Windows.FrameworkContentElement" /> is the WPF framework-level implementation and expansion of the <see cref="T:System.Windows.ContentElement" /> base class.</span></span> <span data-ttu-id="5cb61-102"><see cref="T:System.Windows.FrameworkContentElement" /> добавляет поддержку дополнительных API входных данных (включая подсказки и контекстные меню), раскадровки, контексты данных для привязки, поддержку стилей и вспомогательные API логического дерева.</span><span class="sxs-lookup"><span data-stu-id="5cb61-102"><see cref="T:System.Windows.FrameworkContentElement" /> adds support for additional input APIs (including tooltips and context menus), storyboards, data context for data binding, styles support, and logical tree helper APIs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-103"><xref:System.Windows.FrameworkContentElement> еще не определяет собственное поведение отрисовки; Создание экземпляра реальный <xref:System.Windows.FrameworkContentElement> экземпляра класса в коде или разметке возможна, но не отображает ничего в [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] приложения [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5cb61-103"><xref:System.Windows.FrameworkContentElement> does not yet define its own rendering behavior; instantiating an actual <xref:System.Windows.FrameworkContentElement> class instance in code or markup is possible but displays nothing in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span> <span data-ttu-id="5cb61-104">Подготовка к просмотру логика должна предоставлять классы, которые принимают <xref:System.Windows.FrameworkContentElement> дочерние элементы как часть их содержимого модели, или в <xref:System.Windows.FrameworkContentElement> производных классов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-104">Rendering logic must be provided by classes that take <xref:System.Windows.FrameworkContentElement> child elements as part of their content model, or in <xref:System.Windows.FrameworkContentElement> derived classes.</span></span>  
  
 <span data-ttu-id="5cb61-105"><xref:System.Windows.FrameworkContentElement> намеренно параллельно многие одной и той же [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] как <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-105"><xref:System.Windows.FrameworkContentElement> deliberately parallels many of the same [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] as <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="5cb61-106">Обратите внимание что определенные [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] на <xref:System.Windows.FrameworkElement> не будет иметь <xref:System.Windows.FrameworkContentElement> эквивалент.</span><span class="sxs-lookup"><span data-stu-id="5cb61-106">Note that certain [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] found on <xref:System.Windows.FrameworkElement> will not have a <xref:System.Windows.FrameworkContentElement> equivalent.</span></span> <span data-ttu-id="5cb61-107">Некоторые из <xref:System.Windows.FrameworkElement> [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] предназначены для функции, такие как представление geometry или макета, которые не являются значимыми для <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-107">Several of the <xref:System.Windows.FrameworkElement> [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] are for functionality such as geometry representation or layout, which are not relevant for a <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 <span data-ttu-id="5cb61-108">Большинство существующих <xref:System.Windows.FrameworkContentElement> производные классы, которые будут находиться в <xref:System.Windows.Documents> пространства имен.</span><span class="sxs-lookup"><span data-stu-id="5cb61-108">The majority of existing <xref:System.Windows.FrameworkContentElement> derived classes will be found in the <xref:System.Windows.Documents> namespace.</span></span> <span data-ttu-id="5cb61-109">Многие из этих производных классов реализуют элементы для модели потокового документа.</span><span class="sxs-lookup"><span data-stu-id="5cb61-109">Many of these derived classes implement elements for the flow document model.</span></span> <span data-ttu-id="5cb61-110">Некоторых производных классов, таких как <xref:System.Windows.Documents.Hyperlink> имеет некоторых функциональных возможностей схожих с элементами управления, но являются производными от <xref:System.Windows.FrameworkContentElement> таким образом, что элементы схожих с элементами управления по-прежнему могут участвовать в модели потокового документа.</span><span class="sxs-lookup"><span data-stu-id="5cb61-110">Certain derived classes such as <xref:System.Windows.Documents.Hyperlink> have some control-like functionality, but are derived from <xref:System.Windows.FrameworkContentElement> such that the control-like elements can still participate in the flow document model.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.FrameworkElement" />
    <altmember cref="T:System.Windows.ContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5cb61-111">Инициализирует новый экземпляр класса <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-111">Initializes a new instance of the <see cref="T:System.Windows.FrameworkContentElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLogicalChild">
      <MemberSignature Language="C#" Value="protected internal void AddLogicalChild (object child);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddLogicalChild(object child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddLogicalChild (child As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddLogicalChild(System::Object ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddLogicalChild : obj -&gt; unit" Usage="frameworkContentElement.AddLogicalChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="5cb61-112">Добавляемый дочерний элемент.</span><span class="sxs-lookup"><span data-stu-id="5cb61-112">The child element to be added.</span></span></param>
        <summary><span data-ttu-id="5cb61-113">Добавляет указанный элемент в качестве дочернего для данного элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-113">Adds the provided element as a child of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-114">Этот метод может создавать исключения, если вызывается в момент, когда выполняется итерация логического дерева с помощью другого процесса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-114">This method can throw an exception if called at a time when the logical tree is being iterated by another process.</span></span>  
  
 <span data-ttu-id="5cb61-115">Большинство <xref:System.Windows.FrameworkContentElement> производные классы предоставляют выделенную коллекций, которые отвечают за вложения (например, <xref:System.Windows.Documents.Span.Inlines%2A> на <xref:System.Windows.Documents.Span> класса; <xref:System.Windows.Documents.Section.Blocks%2A> на <xref:System.Windows.Documents.Section> класса).</span><span class="sxs-lookup"><span data-stu-id="5cb61-115">Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class).</span></span> <span data-ttu-id="5cb61-116">Обычно необходимость управления логического дерева напрямую в том случае, если вы наследуете от этих классов, вместо этого можно избежать.</span><span class="sxs-lookup"><span data-stu-id="5cb61-116">You can typically avoid any need to manipulate the logical tree directly if you derive from these classes instead.</span></span> <span data-ttu-id="5cb61-117">Работа с логическим деревом для элементов содержимого — расширенный сценарий, который может потребовать специализированное средство синтаксического анализа или специализированный <xref:System.Windows.FrameworkElement> , выступающий в качестве родительского элемента отрисовки (хранилище содержимого).</span><span class="sxs-lookup"><span data-stu-id="5cb61-117">Working with the logical tree for content elements is an advanced scenario that may require a specialized parser or a specialized <xref:System.Windows.FrameworkElement> that acts as the parent rendering element (content host).</span></span>  
  
 <span data-ttu-id="5cb61-118">Дополнительные сведения об использовании <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> и <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, см. в разделе [деревья в WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-118">For more information about how to use <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)" />
        <altmember cref="P:System.Windows.FrameworkContentElement.LogicalChildren" />
        <altmember cref="T:System.Windows.LogicalTreeHelper" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="frameworkContentElement.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5cb61-119">Вызывается перед инициализацией элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-119">Called before an element is initialized.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5cb61-120">Переопределите этот метод для обеспечения специальной обработки, которая будет выполняться перед инициализацией элемента в процессе его загрузки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-120">Override this method to provide special handling that should occur before your element is initialized during the element loading process.</span></span>  
  
<span data-ttu-id="5cb61-121">Реализация должна вызывать базовую реализацию, так как реализация base (по умолчанию) устанавливает внутренние флаги для отслеживания инициализации.</span><span class="sxs-lookup"><span data-stu-id="5cb61-121">Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.</span></span>  
  
<span data-ttu-id="5cb61-122">Базовая реализация вызовет исключение, если <see cref="M:System.Windows.FrameworkContentElement.BeginInit" /> вызывается несколько раз на один и тот же элемент перед достижением <see cref="M:System.Windows.FrameworkContentElement.EndInit" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-122">The base implementation will throw an exception if <see cref="M:System.Windows.FrameworkContentElement.BeginInit" /> is called more than one time on the same element prior to reaching <see cref="M:System.Windows.FrameworkContentElement.EndInit" />.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginStoryboard">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5cb61-123">Начинает последовательность действий, содержащихся в предоставленной раскадровке.</span><span class="sxs-lookup"><span data-stu-id="5cb61-123">Begins the sequence of actions that are contained in the provided storyboard.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard);" />
      <MemberSignature Language="F#" Value="member this.BeginStoryboard : System.Windows.Media.Animation.Storyboard -&gt; unit" Usage="frameworkContentElement.BeginStoryboard storyboard" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
      </Parameters>
      <Docs>
        <param name="storyboard"><span data-ttu-id="5cb61-124">Раскадровка, которая будет начата.</span><span class="sxs-lookup"><span data-stu-id="5cb61-124">The storyboard to begin.</span></span></param>
        <summary><span data-ttu-id="5cb61-125">Начинает последовательность действий, содержащихся в предоставленной раскадровке.</span><span class="sxs-lookup"><span data-stu-id="5cb61-125">Begins the sequence of actions that are contained in the provided storyboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-126">Для подписей, которые не используют `isControllable`, параметр, или если указан этот параметр `false`, связанными с анимацией часы шкалы времени удаляются сразу же чем наступит время «Заливка».</span><span class="sxs-lookup"><span data-stu-id="5cb61-126">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the "Fill" period.</span></span> <span data-ttu-id="5cb61-127">Не анимации может быть перезапущено после однократного запуска.</span><span class="sxs-lookup"><span data-stu-id="5cb61-127">Therefore the animation cannot be restarted after being run once.</span></span> <span data-ttu-id="5cb61-128">Обратите внимание на то, что управление анимацией также требует раскадровки именованный или уровень доступности, как экземпляр в коде.</span><span class="sxs-lookup"><span data-stu-id="5cb61-128">Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.BeginStoryboard : System.Windows.Media.Animation.Storyboard * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="frameworkContentElement.BeginStoryboard (storyboard, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="storyboard"><span data-ttu-id="5cb61-129">Раскадровка, которая будет начата.</span><span class="sxs-lookup"><span data-stu-id="5cb61-129">The storyboard to begin.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="5cb61-130">Значение перечисления, описывающего поведение в случае, если описанное в раскадровке свойство уже анимировано.</span><span class="sxs-lookup"><span data-stu-id="5cb61-130">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</span></span></param>
        <summary><span data-ttu-id="5cb61-131">Начинает последовательность действий, содержащихся в предоставленной раскадровке, с указанием действий, которые следует выполнить в случае уже анимированного свойства.</span><span class="sxs-lookup"><span data-stu-id="5cb61-131">Begins the sequence of actions that are contained in the provided storyboard, with options specified for what should occur if the property is already animated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-132">Для подписей, которые не используют `isControllable`, параметр, или если указан этот параметр `false`, связанными с анимацией часы шкалы времени удаляются сразу же чем наступит время «Заливка».</span><span class="sxs-lookup"><span data-stu-id="5cb61-132">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the "Fill" period.</span></span> <span data-ttu-id="5cb61-133">Не анимации может быть перезапущено после однократного запуска.</span><span class="sxs-lookup"><span data-stu-id="5cb61-133">Therefore the animation cannot be restarted after being run once.</span></span> <span data-ttu-id="5cb61-134">Обратите внимание на то, что управление анимацией также требует раскадровки именованный или уровень доступности, как экземпляр в коде.</span><span class="sxs-lookup"><span data-stu-id="5cb61-134">Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="5cb61-135">С помощью Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="5cb61-135">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="5cb61-136">При применении <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>любые <xref:System.Windows.Media.Animation.Clock> ранее связанную с ним объекты по-прежнему потребляют ресурсы системы; система управления временем не не удаляет эти часы автоматически.</span><span class="sxs-lookup"><span data-stu-id="5cb61-136">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</span></span>  
  
 <span data-ttu-id="5cb61-137">Чтобы избежать проблем с производительностью при применении большого количества часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, следует удалять составные часы из анимируемого свойства после их завершения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-137">To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="5cb61-138">Существует несколько способов удаления часов:</span><span class="sxs-lookup"><span data-stu-id="5cb61-138">There are several ways to remove a clock:</span></span>  
  
-   <span data-ttu-id="5cb61-139">Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> метод анимируемого объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-139">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="5cb61-140">Укажите в качестве первого параметра анимируемое свойство и `null` как второй.</span><span class="sxs-lookup"><span data-stu-id="5cb61-140">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="5cb61-141">При этом удаляются все часы анимации из свойства.</span><span class="sxs-lookup"><span data-stu-id="5cb61-141">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="5cb61-142">Чтобы удалить определенные <xref:System.Windows.Media.Animation.AnimationClock> из списка часов, используйте <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство <xref:System.Windows.Media.Animation.AnimationClock> извлекаемого <xref:System.Windows.Media.Animation.ClockController>, затем вызвать <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-142">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="5cb61-143">Обычно это делается <xref:System.Windows.Media.Animation.Clock.Completed> обработчик событий для часов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-143">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="5cb61-144">Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> дочерних часов вернет `null`.</span><span class="sxs-lookup"><span data-stu-id="5cb61-144">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="5cb61-145">Обратите внимание, что <xref:System.Windows.Media.Animation.Clock.Completed> событие не происходит, если эффективная продолжительность часов — forever.</span><span class="sxs-lookup"><span data-stu-id="5cb61-145">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="5cb61-146">В этом случае пользователь должен определить, когда нужно вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-146">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="5cb61-147">В основном это проблема для анимации объектов, имеющих длинное время жизни.</span><span class="sxs-lookup"><span data-stu-id="5cb61-147">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="5cb61-148">Если объект удаляется сборщиком мусора, его часы также будут отключены, и сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="5cb61-148">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="5cb61-149">Дополнительные сведения об объектах часов см. в разделе [анимации и общие сведения о характере системы](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-149">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.BeginStoryboard : System.Windows.Media.Animation.Storyboard * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="frameworkContentElement.BeginStoryboard (storyboard, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="storyboard"><span data-ttu-id="5cb61-150">Раскадровка, которая будет начата.</span><span class="sxs-lookup"><span data-stu-id="5cb61-150">The storyboard to begin.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="5cb61-151">Значение перечисления, описывающего поведение в случае, если описанное в раскадровке свойство уже анимировано.</span><span class="sxs-lookup"><span data-stu-id="5cb61-151">A value of the enumeration that describes behavior to use if a  property described in the storyboard is already animated.</span></span></param>
        <param name="isControllable"><span data-ttu-id="5cb61-152">Объявляет, является ли анимация управляемой после запуска (можно ли ее приостановить).</span><span class="sxs-lookup"><span data-stu-id="5cb61-152">Declares whether the animation is controllable (can be paused) after it is started.</span></span></param>
        <summary><span data-ttu-id="5cb61-153">Начинает последовательность действий, содержащихся в предоставленной раскадровке, с указанным состоянием управления анимацией после ее запуска.</span><span class="sxs-lookup"><span data-stu-id="5cb61-153">Begins the sequence of actions that are contained in the provided storyboard, with specified state for control of the animation after it is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-154">Для подписей, которые не используют `isControllable`, параметр, или если указан этот параметр `false`, связанными с анимацией часы шкалы времени удаляются сразу же чем наступит время «Заливка».</span><span class="sxs-lookup"><span data-stu-id="5cb61-154">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the "Fill" period.</span></span> <span data-ttu-id="5cb61-155">Не анимации может быть перезапущено после однократного запуска.</span><span class="sxs-lookup"><span data-stu-id="5cb61-155">Therefore the animation cannot be restarted after being run once.</span></span> <span data-ttu-id="5cb61-156">Обратите внимание на то, что управление анимацией также требует раскадровки именованный или уровень доступности, как экземпляр в коде.</span><span class="sxs-lookup"><span data-stu-id="5cb61-156">Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="5cb61-157">С помощью Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="5cb61-157">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="5cb61-158">При применении <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>любые <xref:System.Windows.Media.Animation.Clock> ранее связанную с ним объекты по-прежнему потребляют ресурсы системы; система управления временем не не удаляет эти часы автоматически.</span><span class="sxs-lookup"><span data-stu-id="5cb61-158">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="5cb61-159">Чтобы избежать проблем с производительностью при применении большого количества часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, следует удалять составные часы из анимируемого свойства после их завершения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-159">To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="5cb61-160">Существует несколько способов удаления часов:</span><span class="sxs-lookup"><span data-stu-id="5cb61-160">There are several ways to remove a clock:</span></span>  
  
-   <span data-ttu-id="5cb61-161">Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> метод анимируемого объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-161">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="5cb61-162">Укажите в качестве первого параметра анимируемое свойство и `null` как второй.</span><span class="sxs-lookup"><span data-stu-id="5cb61-162">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="5cb61-163">При этом удаляются все часы анимации из свойства.</span><span class="sxs-lookup"><span data-stu-id="5cb61-163">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="5cb61-164">Чтобы удалить определенные <xref:System.Windows.Media.Animation.AnimationClock> из списка часов, используйте <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство <xref:System.Windows.Media.Animation.AnimationClock> извлекаемого <xref:System.Windows.Media.Animation.ClockController>, затем вызвать <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-164">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="5cb61-165">Обычно это делается <xref:System.Windows.Media.Animation.Clock.Completed> обработчик событий для часов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-165">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="5cb61-166">Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> дочерних часов вернет `null`.</span><span class="sxs-lookup"><span data-stu-id="5cb61-166">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="5cb61-167">Обратите внимание, что <xref:System.Windows.Media.Animation.Clock.Completed> событие не происходит, если эффективная продолжительность часов — forever.</span><span class="sxs-lookup"><span data-stu-id="5cb61-167">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="5cb61-168">В этом случае пользователь должен определить, когда нужно вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-168">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="5cb61-169">В основном это проблема для анимации объектов, имеющих длинное время жизни.</span><span class="sxs-lookup"><span data-stu-id="5cb61-169">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="5cb61-170">Если объект удаляется сборщиком мусора, его часы также будут отключены, и сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="5cb61-170">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="5cb61-171">Дополнительные сведения об объектах часов см. в разделе [анимации и общие сведения о характере системы](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-171">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup BindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup BindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.BindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ BindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.FrameworkContentElement.BindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-172">Возвращает или задает группу <see cref="T:System.Windows.Data.BindingGroup" />,  которая используется для элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-172">Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</span></span></summary>
        <value><span data-ttu-id="5cb61-173">Группа <see cref="T:System.Windows.Data.BindingGroup" />, используемая для элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-173">The <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-174">Объект <xref:System.Windows.Data.BindingGroup> может использоваться для проверки значений нескольких свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-174">A <xref:System.Windows.Data.BindingGroup> can be used to validate the values of multiple properties of an object.</span></span> <span data-ttu-id="5cb61-175">Например, предположим, что приложение предлагает пользователю ввести адрес, а затем заполняет объект типа `Address`, который имеет свойства `Street`, `City`, `ZipCode`, и `Country`, со значениями, пользователь предоставляются.</span><span class="sxs-lookup"><span data-stu-id="5cb61-175">For example, suppose that an application prompts the user to enter an address and then populates an object of type `Address`, which has the properties `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="5cb61-176">Приложение имеет панель, которая содержит четыре <xref:System.Windows.Controls.TextBox> элементов управления, привязанных к одному из свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-176">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is bound to one of the object's properties.</span></span> <span data-ttu-id="5cb61-177">Можно использовать <xref:System.Windows.Controls.ValidationRule> в <xref:System.Windows.Data.BindingGroup> проверяемый `Address` объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-177">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="5cb61-178">Например <xref:System.Windows.Controls.ValidationRule> гарантирует, что ZIP-код является допустимым в стране адреса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-178">For example, the <xref:System.Windows.Controls.ValidationRule> can ensure that the zip code is valid for the country of the address.</span></span>  
  
 <span data-ttu-id="5cb61-179">Дочерние элементы наследуют <xref:System.Windows.Data.BindingGroup> от своих родительских элементов, как и в других наследуемое свойство.</span><span class="sxs-lookup"><span data-stu-id="5cb61-179">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span>  
  
<a name="dependencyPropertyInfo_BindingGroup"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-180">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-180">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-181">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-181">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.BindingGroupProperty>|  
|<span data-ttu-id="5cb61-182">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-182">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingGroupProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BindingGroupProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BindingGroupProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.BindingGroupProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BindingGroupProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BindingGroupProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BindingGroupProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.BindingGroupProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-183">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.BindingGroup" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-183">Identifies the <see cref="P:System.Windows.FrameworkContentElement.BindingGroup" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public void BringIntoView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringIntoView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.BringIntoView" />
      <MemberSignature Language="VB.NET" Value="Public Sub BringIntoView ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BringIntoView();" />
      <MemberSignature Language="F#" Value="member this.BringIntoView : unit -&gt; unit" Usage="frameworkContentElement.BringIntoView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5cb61-184">Пытается отобразить данный элемент вместе с содержащимися в нем прокручиваемыми областями.</span><span class="sxs-lookup"><span data-stu-id="5cb61-184">Attempts to bring this element into view, within any scrollable regions it is contained within.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-185">Вызов этого метода, вы фактически будет вызывать <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> на любой родительский прокручиваемую область, которая содержит элемент (родительский могут оказаться очень <xref:System.Windows.FrameworkElement>, а не <xref:System.Windows.FrameworkContentElement>).</span><span class="sxs-lookup"><span data-stu-id="5cb61-185">By calling this method, you effectively will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element (the parent may very well be a <xref:System.Windows.FrameworkElement>, not a <xref:System.Windows.FrameworkContentElement>).</span></span> <span data-ttu-id="5cb61-186">Если этот элемент не содержится в прокручиваемой области, по-прежнему вызывается событие, но будет существовать не влияет.</span><span class="sxs-lookup"><span data-stu-id="5cb61-186">If this element is not contained in a scrollable area, the event is still raised, but there will be no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752352(v=vs.90)"><span data-ttu-id="5cb61-187">Практическое руководство. Создание элемента управления ScrollViewer</span><span class="sxs-lookup"><span data-stu-id="5cb61-187">How to: Create a ScrollViewer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ContextMenu ^ ContextMenu { System::Windows::Controls::ContextMenu ^ get(); void set(System::Windows::Controls::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Controls.ContextMenu with get, set" Usage="System.Windows.FrameworkContentElement.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-188">Возвращает или задает элемент контекстного меню, который должен отображаться каждый раз при запросе контекстного меню через [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] из данного элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-188">Gets or sets the context menu element that should appear whenever the context menu is requested via [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] from within this element.</span></span></summary>
        <value><span data-ttu-id="5cb61-189">Контекстное меню, используемое данным элементом.</span><span class="sxs-lookup"><span data-stu-id="5cb61-189">The context menu that this element uses.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ContextMenu"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-190">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-190">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-191">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-191">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ContextMenuProperty>|  
|<span data-ttu-id="5cb61-192">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-192">Metadata properties set to `true`</span></span>|<span data-ttu-id="5cb61-193">Нет</span><span class="sxs-lookup"><span data-stu-id="5cb61-193">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-194">В следующих местах пример <xref:System.Windows.Controls.ContextMenu> на <xref:System.Windows.Documents.Paragraph>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-194">The following example places a <xref:System.Windows.Controls.ContextMenu> on a <xref:System.Windows.Documents.Paragraph>.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#ContextMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#contextmenu)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenu" />
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ContextMenuEventHandler ContextMenuClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ContextMenuEventHandler ContextMenuClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.ContextMenuClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuClosing As ContextMenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ContextMenuEventHandler ^ ContextMenuClosing;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuClosing : System.Windows.Controls.ContextMenuEventHandler " Usage="member this.ContextMenuClosing : System.Windows.Controls.ContextMenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-195">Происходит непосредственно перед закрытием какого-либо контекстного меню в элементе.</span><span class="sxs-lookup"><span data-stu-id="5cb61-195">Occurs just before any context menu on the element is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-196">Для подавления закрытия контекстных меню обработчики события следует пометить как обработанное.</span><span class="sxs-lookup"><span data-stu-id="5cb61-196">To suppress closing context menus, handlers of the event should mark it as handled.</span></span>  
  
 <span data-ttu-id="5cb61-197">Чтобы использовать это событие как <xref:System.Windows.EventTrigger> в стиле, необходимо сослаться на идентификатор события базовой службы:</span><span class="sxs-lookup"><span data-stu-id="5cb61-197">To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:</span></span>  
  
 [!code-xaml[CorePseudocode#FEContextMenuClosing](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuclosing)]  
  
 <span data-ttu-id="5cb61-198">(Такое использование не требуются, поскольку реализация событий на <xref:System.Windows.FrameworkContentElement> , предоставляет базовые события службы не были сопоставлены правильно <xref:System.Windows.FrameworkContentElement.ContextMenuClosing> идентификатор для использования в триггерах).</span><span class="sxs-lookup"><span data-stu-id="5cb61-198">(This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuClosing> identifier for use in triggers).</span></span>  
  
<a name="routedEventInfo_ContextMenuClosing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5cb61-199">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="5cb61-199">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-200">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-200">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ContextMenuClosingEvent>|  
|<span data-ttu-id="5cb61-201">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="5cb61-201">Routing strategy</span></span>|<span data-ttu-id="5cb61-202">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="5cb61-202">Bubbling</span></span>|  
|<span data-ttu-id="5cb61-203">делегат</span><span class="sxs-lookup"><span data-stu-id="5cb61-203">Delegate</span></span>|<xref:System.Windows.Controls.ContextMenuEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-204">В следующем примере реализуется обработчик, который изменяет курсор над Именованная область `DisplayArea` (не показано).</span><span class="sxs-lookup"><span data-stu-id="5cb61-204">The following example implements a handler that changes the cursor over a named region `DisplayArea` (not shown).</span></span> <span data-ttu-id="5cb61-205">Указывает комментарий на <xref:System.Windows.UIElement> использования, но на самом деле в этом примере будет совпадать с Если `DisplayArea` были <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-205">The comment hints at a <xref:System.Windows.UIElement> usage, but in fact this sample would be identical if `DisplayArea` were a <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 [!code-csharp[cursors#ChangeCursorsSample](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#changecursorssample)]
 [!code-vb[cursors#ChangeCursorsSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#changecursorssample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuClosingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ContextMenuClosingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ContextMenuClosingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ContextMenuClosingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuClosingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ContextMenuClosingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextMenuClosingEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkContentElement.ContextMenuClosingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-206">Идентифицирует <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> [Обзор маршрутизированных событий](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-206">Identifies the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-207">Объекты идентификатор события, создаваемые при их регистрации (см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) и затем может использоваться для добавления обработчиков классов (см. в разделе <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="5cb61-207">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="5cb61-208">Идентификатор объекты содержат уникальное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-208">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuOpening">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ContextMenuEventHandler ContextMenuOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ContextMenuEventHandler ContextMenuOpening" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.ContextMenuOpening" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuOpening As ContextMenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ContextMenuEventHandler ^ ContextMenuOpening;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuOpening : System.Windows.Controls.ContextMenuEventHandler " Usage="member this.ContextMenuOpening : System.Windows.Controls.ContextMenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-209">Происходит при открытии какого-либо контекстного меню в элементе.</span><span class="sxs-lookup"><span data-stu-id="5cb61-209">Occurs when any context menu on the element is opened.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-210">Вручную открыть контекстные меню, обработчики событий следует помечать соответствующее событие как обработанное.</span><span class="sxs-lookup"><span data-stu-id="5cb61-210">To manually open context menus, handlers of the events should mark the relevant event as handled.</span></span> <span data-ttu-id="5cb61-211">В противном случае существующее значение <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> свойство будет использоваться для автоматического открытия контекстного меню.</span><span class="sxs-lookup"><span data-stu-id="5cb61-211">Otherwise, the existing value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property will be used to automatically open a context menu.</span></span> <span data-ttu-id="5cb61-212">Маркировка события как обработанного эффективно отменит действие по умолчанию и может быть возможность сбросить значение <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> свойство и откройте новый <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-212">Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>.</span></span> <span data-ttu-id="5cb61-213">Тем не менее есть ошибки синхронизации, которые следует учитывать.</span><span class="sxs-lookup"><span data-stu-id="5cb61-213">However, there is a timing issue you should be aware of.</span></span> <span data-ttu-id="5cb61-214">Чтобы полностью заменить контекстное меню способом <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> обработчик, начальной контекстное меню не должно быть null или пустым.</span><span class="sxs-lookup"><span data-stu-id="5cb61-214">In order to completely replace the context menu through a <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> handler, the initial context menu must not be null / empty.</span></span> <span data-ttu-id="5cb61-215">Кроме того может потребоваться обработать событие и затем вручную открыть новое контекстное меню.</span><span class="sxs-lookup"><span data-stu-id="5cb61-215">Alternatively, you might need to handle the event and then manually open a new context menu.</span></span> <span data-ttu-id="5cb61-216">Подробную информацию см. в разделе [Практическое руководство. Обработка события ContextMenuOpening](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-216">For details, see [How to: Handle the ContextMenuOpening Event](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md).</span></span>  
  
 <span data-ttu-id="5cb61-217">Чтобы использовать это событие как <xref:System.Windows.EventTrigger> в стиле, необходимо сослаться на идентификатор события базовой службы:</span><span class="sxs-lookup"><span data-stu-id="5cb61-217">To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:</span></span>  
  
 [!code-xaml[CorePseudocode#FEContextMenuOpening](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuopening)]  
  
 <span data-ttu-id="5cb61-218">(Такое использование не требуются, поскольку реализация событий на <xref:System.Windows.FrameworkContentElement> , предоставляет базовые события службы не были сопоставлены правильно <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> идентификатор для использования в триггерах).</span><span class="sxs-lookup"><span data-stu-id="5cb61-218">(This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> identifier for use in triggers).</span></span>  
  
<a name="routedEventInfo_ContextMenuOpening"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5cb61-219">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="5cb61-219">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-220">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-220">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent>|  
|<span data-ttu-id="5cb61-221">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="5cb61-221">Routing strategy</span></span>|<span data-ttu-id="5cb61-222">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="5cb61-222">Bubbling</span></span>|  
|<span data-ttu-id="5cb61-223">делегат</span><span class="sxs-lookup"><span data-stu-id="5cb61-223">Delegate</span></span>|<xref:System.Windows.Controls.ContextMenuEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
        <altmember cref="T:System.Windows.Controls.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuOpeningEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ContextMenuOpeningEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ContextMenuOpeningEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuOpeningEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ContextMenuOpeningEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextMenuOpeningEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkContentElement.ContextMenuOpeningEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-224">Идентифицирует <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> [Обзор маршрутизированных событий](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-224">Identifies the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-225">Объекты идентификатор события, создаваемые при их регистрации (см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) и затем может использоваться для добавления обработчиков классов (см. в разделе <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="5cb61-225">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="5cb61-226">Идентификатор объекты содержат уникальное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-226">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ContextMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextMenuProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextMenuProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.ContextMenuProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-227">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-227">Identifies the <see cref="P:System.Windows.FrameworkContentElement.ContextMenu" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Cursor ^ Cursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.FrameworkContentElement.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-228">Получение или установка курсора, который отображается при наведении указателя мыши на этот элемент.</span><span class="sxs-lookup"><span data-stu-id="5cb61-228">Gets or sets the cursor that displays when the mouse pointer is over this element.</span></span></summary>
        <value><span data-ttu-id="5cb61-229">Отображаемый курсор.</span><span class="sxs-lookup"><span data-stu-id="5cb61-229">The cursor to display.</span></span> <span data-ttu-id="5cb61-230">Значение по умолчанию определяется как <see langword="null" /> для данного свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="5cb61-230">The default value is defined as <see langword="null" /> per this dependency property.</span></span> <span data-ttu-id="5cb61-231">Однако на практике значение по умолчанию во время выполнения зависит от множества факторов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-231">However, the practical default at run time will come from a variety of factors.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-232">При задании этого свойства [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] процессора полагается на преобразования типов для <xref:System.Windows.Input.Cursor> класса для вычисления строки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-232">When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor relies on type conversion for the <xref:System.Windows.Input.Cursor> class to evaluate the string.</span></span> <span data-ttu-id="5cb61-233">Должно быть введенная строка <xref:System.Windows.Input.CursorType> значение.</span><span class="sxs-lookup"><span data-stu-id="5cb61-233">The provided string should evaluate to a <xref:System.Windows.Input.CursorType> value.</span></span> <span data-ttu-id="5cb61-234">Подробные сведения см. в разделе <xref:System.Windows.Input.Cursor>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-234">See <xref:System.Windows.Input.Cursor> for details.</span></span>  
  
 <span data-ttu-id="5cb61-235">Ли курсор, как установить это свойство будет или не выводится, когда указатель мыши находится над данным элементом зависит также от значения <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5cb61-235">Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> property.</span></span> <span data-ttu-id="5cb61-236">Кроме того вопросы, связанные с событиями, как активное перетаскивание, захват мыши, режимы редактирования текста в элементы управления и т. д., также влияет на курсор с высоким приоритетом, чем значение, указанное в этом свойстве.</span><span class="sxs-lookup"><span data-stu-id="5cb61-236">Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.</span></span>  
  
 <span data-ttu-id="5cb61-237">Чтобы отменить поведение этого свойства к стандартному, установите его в `null` еще раз.</span><span class="sxs-lookup"><span data-stu-id="5cb61-237">To revert the behavior of setting this property to the eventual default, set it to `null` again.</span></span>  
  
 <span data-ttu-id="5cb61-238">`null` По умолчанию действительно означает, что определение практического значения курсора здесь отложено и должны быть получены из другого источника.</span><span class="sxs-lookup"><span data-stu-id="5cb61-238">The `null` default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere.</span></span> <span data-ttu-id="5cb61-239">Если отображается без программный значений из любого источника, курсор по умолчанию через [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] приложения будет стрелкой.</span><span class="sxs-lookup"><span data-stu-id="5cb61-239">If presented with no programmatic values from any source, the default cursor over a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application will be an arrow.</span></span>  
  
 <span data-ttu-id="5cb61-240">Каждое движение указателя мыши над [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] приложение создает событие <xref:System.Windows.ContentElement.QueryCursor> событий.</span><span class="sxs-lookup"><span data-stu-id="5cb61-240">Each movement of the mouse over a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application raises a <xref:System.Windows.ContentElement.QueryCursor> event.</span></span> <span data-ttu-id="5cb61-241">Событие и любой элемент в маршруте имеет возможность обработать событие и установите для параметра курсора с помощью аргументов этого события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-241">The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor via the arguments of this event.</span></span> <span data-ttu-id="5cb61-242">Если это произойдет, тот факт, что событие обрабатывается и имеет измененное значение в аргументах имеет приоритет над значением <xref:System.Windows.FrameworkContentElement.Cursor%2A> свойство на любом уровне, если только не <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> имеет значение.</span><span class="sxs-lookup"><span data-stu-id="5cb61-242">If that happens, the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the <xref:System.Windows.FrameworkContentElement.Cursor%2A> property at any level, unless <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> is set.</span></span>  
  
 <span data-ttu-id="5cb61-243">Если не создается пользовательский курсор, обычно вы установите это свойство значение статического свойства <xref:System.Windows.Input.Cursors> класса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-243">If not creating a custom cursor, typically you set this property to a static property value of the <xref:System.Windows.Input.Cursors> class.</span></span>  
  
 <span data-ttu-id="5cb61-244">Параметр <xref:System.Windows.Input.Cursor> пользовательское значение не включен в режиме частичного доверия.</span><span class="sxs-lookup"><span data-stu-id="5cb61-244">Setting the <xref:System.Windows.Input.Cursor> to a custom value is not enabled in partial trust.</span></span> <span data-ttu-id="5cb61-245">Дополнительные сведения о пользовательских курсоров, см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-245">For more information on custom cursors, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_Cursor"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-246">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-246">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-247">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-247">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.CursorProperty>|  
|<span data-ttu-id="5cb61-248">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-248">Metadata properties set to `true`</span></span>|<span data-ttu-id="5cb61-249">Нет</span><span class="sxs-lookup"><span data-stu-id="5cb61-249">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-250">Следующий пример задает курсор пользовательское значение.</span><span class="sxs-lookup"><span data-stu-id="5cb61-250">The following example sets the cursor to a custom value.</span></span>  
  
 [!code-csharp[cursors#ChangeCursorsSample](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#changecursorssample)]
 [!code-vb[cursors#ChangeCursorsSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#changecursorssample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
        <altmember cref="P:System.Windows.FrameworkContentElement.ForceCursor" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="CursorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CursorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CursorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.CursorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CursorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CursorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CursorProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.CursorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-251">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.Cursor" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-251">Identifies the <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContext">
      <MemberSignature Language="C#" Value="public object DataContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.DataContext" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataContext { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataContext : obj with get, set" Usage="System.Windows.FrameworkContentElement.DataContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-252">Получает или задает контекст данных для элемента, участвующего в привязке данных.</span><span class="sxs-lookup"><span data-stu-id="5cb61-252">Gets or sets the data context for an element when it participates in data binding.</span></span></summary>
        <value><span data-ttu-id="5cb61-253">Объект, используемый в качестве контекста данных.</span><span class="sxs-lookup"><span data-stu-id="5cb61-253">The object to use as data context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-254">*Контекст данных* — это понятие, позволяет элементам наследовать сведения от своих родительских элементов об источнике привязки, который используется для привязки, а также другие характеристики привязки, например путь.</span><span class="sxs-lookup"><span data-stu-id="5cb61-254">*Data context* is a concept that allows elements to inherit information from their parent elements about the binding source that is used for binding, as well as other characteristics of the binding such as the path.</span></span>  
  
 <span data-ttu-id="5cb61-255">Контекст данных можно задать непосредственно в [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] объекта, с привязками, оценки свойств этого объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-255">Data context can be set directly to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, with the bindings evaluating to properties of that object.</span></span> <span data-ttu-id="5cb61-256">Кроме того, можно задать контекст данных <xref:System.Windows.Data.DataSourceProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-256">Alternatively, you can set the data context to a <xref:System.Windows.Data.DataSourceProvider> object.</span></span>  
  
 <span data-ttu-id="5cb61-257">Это свойство зависимостей наследует значения свойств.</span><span class="sxs-lookup"><span data-stu-id="5cb61-257">This dependency property inherits property values.</span></span> <span data-ttu-id="5cb61-258">Если существуют дочерние элементы, имеющие отсутствует значение для <xref:System.Windows.FrameworkContentElement.DataContext%2A> установленное при помощи локальных значений или стили, система свойств задаст значение должно быть <xref:System.Windows.FrameworkContentElement.DataContext%2A> значение ближайшего родительского элемента с назначенным данным значением.</span><span class="sxs-lookup"><span data-stu-id="5cb61-258">If there are child elements with no other value for <xref:System.Windows.FrameworkContentElement.DataContext%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkContentElement.DataContext%2A> value of the nearest parent element with this value assigned.</span></span>  
  
 <span data-ttu-id="5cb61-259">Кроме того, можно использовать один из следующих свойств объекта <xref:System.Windows.Data.Binding> класс, чтобы явно указать источник привязки: <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, или <xref:System.Windows.Data.Binding.RelativeSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-259">Alternatively, you can use one of the following properties of the <xref:System.Windows.Data.Binding> class to specify the binding source explicitly: <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, or <xref:System.Windows.Data.Binding.RelativeSource%2A>.</span></span> <span data-ttu-id="5cb61-260">Дополнительные сведения см. в разделе [Практическое руководство. Указание источника привязки](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-260">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="5cb61-261">В [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.FrameworkContentElement.DataContext%2A> чаще всего значение как <xref:System.Windows.Data.Binding> объявления.</span><span class="sxs-lookup"><span data-stu-id="5cb61-261">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.FrameworkContentElement.DataContext%2A> is most commonly set to as a <xref:System.Windows.Data.Binding> declaration.</span></span> <span data-ttu-id="5cb61-262">Можно использовать синтаксис элементов свойств или синтаксиса атрибутов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-262">You can use either property element syntax or attribute syntax.</span></span> <span data-ttu-id="5cb61-263">Синтаксис атрибутов показан в примере на этой странице.</span><span class="sxs-lookup"><span data-stu-id="5cb61-263">Attribute syntax is shown in the example on this page.</span></span> <span data-ttu-id="5cb61-264">Можно также задать <xref:System.Windows.FrameworkContentElement.DataContext%2A> в коде.</span><span class="sxs-lookup"><span data-stu-id="5cb61-264">You can also set <xref:System.Windows.FrameworkContentElement.DataContext%2A> in code.</span></span>  
  
<a name="xamlPropertyElementUsage_DataContext"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="5cb61-265">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-265">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.DataContext>  
    <dataContextObject />  
  </object.DataContext>  
</object>  
```  
  
<a name="xamlAttributeUsage_DataContext"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5cb61-266">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-266">XAML Attribute Usage</span></span>  
  
```  
<object DataContext="bindingUsage"/>  
- or -  
<object DataContext="{resourceExtension contextResourceKey}"/>  
```  
  
<a name="xamlValues_DataContext"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5cb61-267">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-267">XAML Values</span></span>  
 <span data-ttu-id="5cb61-268">*dataContextObject*</span><span class="sxs-lookup"><span data-stu-id="5cb61-268">*dataContextObject*</span></span>  
 <span data-ttu-id="5cb61-269">Непосредственно внедренный объект, который служит в качестве контекста данных для любых привязок внутри родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-269">A directly embedded object that serves as data context for any bindings within the parent element.</span></span> <span data-ttu-id="5cb61-270">Как правило, этот объект является <xref:System.Windows.Data.Binding> или другой <xref:System.Windows.Data.BindingBase> подкласс.</span><span class="sxs-lookup"><span data-stu-id="5cb61-270">Typically, this object is a <xref:System.Windows.Data.Binding> or another <xref:System.Windows.Data.BindingBase> subclass.</span></span> <span data-ttu-id="5cb61-271">Кроме того необработанные данные любого [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] тип, предназначенный для привязки могут быть помещены здесь, а фактические привязки, определенные позднее объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-271">Alternatively, raw data of any [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object type intended for binding may be placed here, with the actual bindings defined later.</span></span>  
  
 <span data-ttu-id="5cb61-272">*bindingUsage*</span><span class="sxs-lookup"><span data-stu-id="5cb61-272">*bindingUsage*</span></span>  
 <span data-ttu-id="5cb61-273">Использование привязки, результатом вычисления которого в соответствующий контекст данных.</span><span class="sxs-lookup"><span data-stu-id="5cb61-273">A binding usage that evaluates to an appropriate data context.</span></span> <span data-ttu-id="5cb61-274">Дополнительные сведения см. в разделе [Привязка расширения разметки](~/docs/framework/wpf/advanced/binding-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-274">For details, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md).</span></span>  
  
 <span data-ttu-id="5cb61-275">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="5cb61-275">*resourceExtension*</span></span>  
 <span data-ttu-id="5cb61-276">Одно из следующих: `StaticResource`, или `DynamicResource`.</span><span class="sxs-lookup"><span data-stu-id="5cb61-276">One of the following: `StaticResource`, or `DynamicResource`.</span></span> <span data-ttu-id="5cb61-277">Такое использование используется при обращении к необработанным данным объектом, в ресурсах.</span><span class="sxs-lookup"><span data-stu-id="5cb61-277">This usage is used when referring to raw data defined as an object in resources.</span></span> <span data-ttu-id="5cb61-278">См. в разделе [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-278">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="5cb61-279">*contextResourceKey*</span><span class="sxs-lookup"><span data-stu-id="5cb61-279">*contextResourceKey*</span></span>  
 <span data-ttu-id="5cb61-280">Идентификатор ключа для запрашиваемого изнутри объекта <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-280">The key identifier for the object being requested from within a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
<a name="dependencyPropertyInfo_DataContext"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-281">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-281">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-282">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-282">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.DataContextProperty>|  
|<span data-ttu-id="5cb61-283">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-283">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-284">В следующем примере задается привязка на <xref:System.Windows.Documents.Paragraph> элемент, путем создания нового объекта пользовательские данные, установлении объект в качестве <xref:System.Windows.FrameworkContentElement.DataContext%2A>и указав путь привязки к свойству в ней.</span><span class="sxs-lookup"><span data-stu-id="5cb61-284">The following example sets a binding on a <xref:System.Windows.Documents.Paragraph> element, by creating a new custom data object, establishing that object as <xref:System.Windows.FrameworkContentElement.DataContext%2A>, and setting the binding path to a property within it.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#DataContext](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#datacontext)]
 [!code-vb[ContentElementsSmorgasbord#DataContext](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#datacontext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler DataContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler DataContextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.DataContextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataContextChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ DataContextChanged;" />
      <MemberSignature Language="F#" Value="member this.DataContextChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.DataContextChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-285">Происходит при изменении контекста данных настоящего элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-285">Occurs when this element's data context changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-286">Описание контекстов данных и привязки данных, см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-286">For an explanation of data contexts and data binding, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5cb61-287">Когда элемента <xref:System.Windows.FrameworkContentElement.DataContext%2A> потенциально подвержены изменения, все свойства с привязкой к данным в этом элементе.</span><span class="sxs-lookup"><span data-stu-id="5cb61-287">When an element's <xref:System.Windows.FrameworkContentElement.DataContext%2A> changes, all data-bound properties on this element are potentially affected.</span></span> <span data-ttu-id="5cb61-288">Это относится к элементов-потомков текущего элемента, которые наследуют контекст данных, все элементы, а также к самому текущему элементу.</span><span class="sxs-lookup"><span data-stu-id="5cb61-288">This applies to any elements that are descendant elements of the current element, which inherit the data context, and also the current element itself.</span></span> <span data-ttu-id="5cb61-289">Все привязки повторно интерпретировать новый <xref:System.Windows.FrameworkContentElement.DataContext%2A> в соответствии с новым значением привязки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-289">All such bindings re-interpret the new <xref:System.Windows.FrameworkContentElement.DataContext%2A> to reflect the new value in bindings.</span></span> <span data-ttu-id="5cb61-290">Нет никакой гарантии, производимые на порядок этих изменений относительно формирование <xref:System.Windows.FrameworkContentElement.DataContextChanged> событий.</span><span class="sxs-lookup"><span data-stu-id="5cb61-290">There is no guarantee made about the order of these changes relative to the raising of the <xref:System.Windows.FrameworkContentElement.DataContextChanged> event.</span></span>  <span data-ttu-id="5cb61-291">Изменения могут произойти до события, после события или в любом сочетании.</span><span class="sxs-lookup"><span data-stu-id="5cb61-291">The changes can occur before the event, after the event, or in any mixture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DataContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DataContextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.DataContextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataContextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DataContextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DataContextProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.DataContextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-292">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-292">Identifies the <see cref="P:System.Windows.FrameworkContentElement.DataContext" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStyleKey">
      <MemberSignature Language="C#" Value="protected internal object DefaultStyleKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.DefaultStyleKey" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property DefaultStyleKey As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Object ^ DefaultStyleKey { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultStyleKey : obj with get, set" Usage="System.Windows.FrameworkContentElement.DefaultStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-293">Возвращает или задает ключ, используемый для поиска шаблона стиля данного элемента управления в темах.</span><span class="sxs-lookup"><span data-stu-id="5cb61-293">Gets or sets the key to use to find the style template for this control in themes.</span></span></summary>
        <value><span data-ttu-id="5cb61-294">Ключ стиля.</span><span class="sxs-lookup"><span data-stu-id="5cb61-294">The style key.</span></span> <span data-ttu-id="5cb61-295">Для корректной работы этого значения в ходе поиска тематического стиля ожидается, что оно принадлежит к типу <see cref="T:System.Type" /> элемента, к которому применяется стиль.</span><span class="sxs-lookup"><span data-stu-id="5cb61-295">To work correctly as part of theme style lookup, this value is expected to be the <see cref="T:System.Type" /> of the element being styled.</span></span> <span data-ttu-id="5cb61-296"><see langword="null" /> является значением, принятых в некоторых случаях.</span><span class="sxs-lookup"><span data-stu-id="5cb61-296"><see langword="null" /> is an accepted value for a certain case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-297">Это свойство обычно не задается через любой из его прямых переключателей.</span><span class="sxs-lookup"><span data-stu-id="5cb61-297">This property is typically not set through any of its direct setters.</span></span> <span data-ttu-id="5cb61-298">Вместо этого каждый раз при создании нового подкласса переопределить метаданные определенного типа данного свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="5cb61-298">Instead, you override the type-specific metadata of this dependency property every time you create a new subclass.</span></span> <span data-ttu-id="5cb61-299">Когда вы подкласс, вызов <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> метода по отношению <xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty> идентификатор в статическом конструкторе подкласса элемента управления.</span><span class="sxs-lookup"><span data-stu-id="5cb61-299">When you subclass, call the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method against the <xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty> identifier, within the static constructor of the control subclass.</span></span>  
  
 <span data-ttu-id="5cb61-300">Для экземпляра класса встроенной, например <xref:System.Windows.Documents.Bold> фактически имеет очень мало реализацию помимо переопределения <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> метаданные в своем статическом конструкторе и предоставляет несколько конструкторов экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5cb61-300">For instance, an inline class such as <xref:System.Windows.Documents.Bold> actually has very little implementation beyond overriding the <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> metadata in its static constructor, and exposing several instance constructors.</span></span> <span data-ttu-id="5cb61-301">Тот факт, что элементы заключены в <xref:System.Windows.Documents.Bold> тег прибыль <xref:System.Windows.Documents.TextElement.FontWeight%2A> свойство <xref:System.Windows.FontWeights.Bold%2A> реализуется в тематическом стиле, на который ссылается параметр значение по умолчанию <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> для `typeof(Bold)`.</span><span class="sxs-lookup"><span data-stu-id="5cb61-301">The fact that elements surrounded by the <xref:System.Windows.Documents.Bold> tag gain a <xref:System.Windows.Documents.TextElement.FontWeight%2A> property of <xref:System.Windows.FontWeights.Bold%2A> is implemented within the theme style that was referenced by setting the default value of <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> to `typeof(Bold)`.</span></span>  
  
 <span data-ttu-id="5cb61-302">Элемент или элемент управления, намеренно не использовать тематические стили, задайте <xref:System.Windows.FrameworkContentElement.OverridesDefaultStyle%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="5cb61-302">If you want your element or control to deliberately not use theme styles, set the <xref:System.Windows.FrameworkContentElement.OverridesDefaultStyle%2A> property to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_DefaultStyleKey"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-303">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-303">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-304">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-304">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty>|  
|<span data-ttu-id="5cb61-305">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-305">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStyleKeyProperty">
      <MemberSignature Language="C#" Value="protected internal static readonly System.Windows.DependencyProperty DefaultStyleKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly static initonly class System.Windows.DependencyProperty DefaultStyleKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared ReadOnly DefaultStyleKeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="protected public: static initonly System::Windows::DependencyProperty ^ DefaultStyleKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultStyleKeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.DefaultStyleKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-306">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-306">Identifies the <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="frameworkContentElement.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5cb61-307">Вызывается сразу после инициализации элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-307">Called immediately after an element is initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-308">Этот метод реализуется для обеспечения специальной обработки, которое должно происходить при инициализации элемента в процессе его загрузки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-308">Implement this method to provide special handling that should occur when your element is initialized during the element loading process.</span></span>  
  
 <span data-ttu-id="5cb61-309">Реализация должна вызывать базовую реализацию, так как реализация base (по умолчанию) устанавливает внутренние флаги для отслеживания инициализации.</span><span class="sxs-lookup"><span data-stu-id="5cb61-309">Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.</span></span>  
  
 <span data-ttu-id="5cb61-310">Если <xref:System.Windows.FrameworkContentElement.BeginInit%2A> ранее был вызван, базовый реализация будет создавать <xref:System.Windows.FrameworkContentElement.Initialized> событий.</span><span class="sxs-lookup"><span data-stu-id="5cb61-310">If <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was previously called, the base implementation will raise the <xref:System.Windows.FrameworkContentElement.Initialized> event.</span></span> <span data-ttu-id="5cb61-311">В противном случае, если <xref:System.Windows.FrameworkContentElement.BeginInit%2A> не был вызван или не удалось определить ли <xref:System.Windows.FrameworkContentElement.BeginInit%2A> был вызван, событие не вызывается.</span><span class="sxs-lookup"><span data-stu-id="5cb61-311">Otherwise, if <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was not called or it could not be determined whether <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was called, the event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.FindName : string -&gt; obj" Usage="frameworkContentElement.FindName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5cb61-312">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-312">Name of the element to search for.</span></span></param>
        <summary><span data-ttu-id="5cb61-313">Находит элемент по указанному имени идентификатора.</span><span class="sxs-lookup"><span data-stu-id="5cb61-313">Finds an element that has the provided identifier name.</span></span></summary>
        <returns><span data-ttu-id="5cb61-314">Запрошенный элемент.</span><span class="sxs-lookup"><span data-stu-id="5cb61-314">The requested element.</span></span> <span data-ttu-id="5cb61-315">Может быть равен <see langword="null" />, если соответствующий элемент не найден.</span><span class="sxs-lookup"><span data-stu-id="5cb61-315">May be <see langword="null" /> if no matching element was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-316">Если этот элемент имеет дочерние элементы, эти дочерние элементы являются все выполняется рекурсивный поиск запрошенного именованного элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-316">If this element has child elements, these child elements are all searched recursively for the requested named element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-317">В следующем примере задается свойство на элементе найден по имени в ссылке <xref:System.Windows.Documents.FlowDocument> на странице.</span><span class="sxs-lookup"><span data-stu-id="5cb61-317">The following example sets a property on an element found by name within a referenced <xref:System.Windows.Documents.FlowDocument> on a page.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#FindName](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#findname)]
 [!code-vb[ContentElementsSmorgasbord#FindName](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#findname)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindResource">
      <MemberSignature Language="C#" Value="public object FindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.FindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindResource(System::Object ^ resourceKey);" />
      <MemberSignature Language="F#" Value="member this.FindResource : obj -&gt; obj" Usage="frameworkContentElement.FindResource resourceKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey"><span data-ttu-id="5cb61-318">Идентификатор ключа искомого ресурса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-318">Key identifier of the resource to be found.</span></span></param>
        <summary><span data-ttu-id="5cb61-319">Ищет ресурс с указанным ключом и вызывает исключение, если запрошенный ресурс не удается найти.</span><span class="sxs-lookup"><span data-stu-id="5cb61-319">Searches for a resource with the specified key, and will throw an exception if the requested resource is not found.</span></span></summary>
        <returns><span data-ttu-id="5cb61-320">Найденный ресурс или <see langword="null" />, если соответствующий ресурс не найден (но при <see langword="null" /> также будет вызвано исключение).</span><span class="sxs-lookup"><span data-stu-id="5cb61-320">The found resource, or <see langword="null" /> if no matching resource was found (but will also throw an exception if <see langword="null" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="5cb61-321">Если этот метод вызывается для ключа, который не удается найти, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="5cb61-321">If you call this method for a key that cannot be found, an exception is thrown.</span></span> <span data-ttu-id="5cb61-322">Если вы не хотите обрабатывать исключения для этого случая, следует вызвать <xref:System.Windows.FrameworkContentElement.TryFindResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-322">If you do not want to handle exceptions for this case, you should instead call <xref:System.Windows.FrameworkContentElement.TryFindResource%2A>.</span></span> <span data-ttu-id="5cb61-323"><xref:System.Windows.FrameworkContentElement.TryFindResource%2A> Возвращает `null` при ресурс не найден и выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="5cb61-323"><xref:System.Windows.FrameworkContentElement.TryFindResource%2A> returns `null` when no resource is found, and does not throw an exception.</span></span>  
  
 <span data-ttu-id="5cb61-324">Если ресурс не найден в вызывающем элементе, выполняется поиск в дереве родительского, с помощью логического дерева, таким же образом, который бы были запрошены искомая Если ресурс по ключу во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-324">If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a resource were requested by key at run-time.</span></span>  
  
 <span data-ttu-id="5cb61-325">Обычно вы сразу же привести возвращаемое значение к типу свойства, которое вы пытаетесь значения возвращаемым ресурсом.</span><span class="sxs-lookup"><span data-stu-id="5cb61-325">Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-326">Следующий пример находит ресурс, определенный в разметке и применяет его к определенному свойству элемента в ответ на перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="5cb61-326">The following example finds a resource as defined in markup and applies it to a certain property of an element in response to a routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#FindResource](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#findresource)]
 [!code-vb[ContentElementsSmorgasbord#FindResource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#findresource)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException"><span data-ttu-id="5cb61-327">Запрошенный ключ ресурса не найден.</span><span class="sxs-lookup"><span data-stu-id="5cb61-327">The requested resource key was not found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5cb61-328"><paramref name="resourceKey" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-328"><paramref name="resourceKey" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FocusVisualStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style FocusVisualStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style FocusVisualStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.FocusVisualStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusVisualStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ FocusVisualStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FocusVisualStyle : System.Windows.Style with get, set" Usage="System.Windows.FrameworkContentElement.FocusVisualStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-329">Получает или задает объект, позволяющий настройку внешнего вида, эффектов или других характеристик стиля, применяемых к данному элементу, когда он получает фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="5cb61-329">Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.</span></span></summary>
        <value><span data-ttu-id="5cb61-330">Требуемый стиль для применения при получении фокуса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-330">The desired style to apply on focus.</span></span> <span data-ttu-id="5cb61-331">Значением по умолчанию, как объявлено в свойстве зависимостей, является пустой статический объект <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-331">The default value as declared in the dependency property is an empty static <see cref="T:System.Windows.Style" />.</span></span> <span data-ttu-id="5cb61-332">Тем не менее, действительным значением во время выполнения часто (но не всегда) является стиль, представленный поддержкой тем для элементов управления.</span><span class="sxs-lookup"><span data-stu-id="5cb61-332">However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-333">При задании этого свойства [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], стили, почти всегда определяются как ресурсов, а не встроенного как элемент, и, что это обычно называемое <xref:System.Windows.StaticResourceExtension>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-333">When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], styles are almost always defined as a resource, rather than inline as an element, and that resource is usually referenced as a <xref:System.Windows.StaticResourceExtension>.</span></span>  
  
 <span data-ttu-id="5cb61-334">Обратите внимание, что это свойство влияет на внешний вид, но не сообщает это в метаданных.</span><span class="sxs-lookup"><span data-stu-id="5cb61-334">Note that this property affects visual appearance but does not report so in metadata.</span></span> <span data-ttu-id="5cb61-335">Это, поскольку изменение внешнего вида основано на событиях и могут применяться не все время и поэтому не следует сообщать обычно любые сведения о visual или макета в метаданных.</span><span class="sxs-lookup"><span data-stu-id="5cb61-335">This is because the visual appearance change is event-driven and may not apply at all times, and thus should not generally report any visual or layout information in metadata.</span></span>  
  
 <span data-ttu-id="5cb61-336">По существу визуальное поведение фокуса, примененное к элементу управления должно быть согласовано между элементами.</span><span class="sxs-lookup"><span data-stu-id="5cb61-336">Conceptually, the visual behavior of focus applied to a control should be coherent from element to element.</span></span> <span data-ttu-id="5cb61-337">Наиболее понятным способом применения согласованности является изменение визуального стиля фокуса только при составлении целой темы.</span><span class="sxs-lookup"><span data-stu-id="5cb61-337">The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme.</span></span> <span data-ttu-id="5cb61-338">Задание этого свойства отдельных стилей, а не как частью темы не предполагаемое использование этого свойства, так как это может привести к путанице при использовании фокуса клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="5cb61-338">Setting this property on individual styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus.</span></span> <span data-ttu-id="5cb61-339">Если планируется поведение отдельных элементов, которое намеренно не согласовано в рамках темы, гораздо лучшим подходом является использование триггеры в стилях для отдельных свойств состояния ввода, таких как <xref:System.Windows.UIElement.IsFocused%2A> или <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>и таким образом способом, который не поддерживает визуально повлиять на работу любого существующего визуального стиля фокуса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-339">If you are intending element-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <xref:System.Windows.UIElement.IsFocused%2A> or <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>, and to do so in a way that does not visually interfere with any existing focus visual style.</span></span> <span data-ttu-id="5cb61-340">Дополнительные сведения о необходимым <xref:System.Windows.FrameworkContentElement.FocusVisualStyle%2A> и альтернативное сосредоточиться свойств, см. в разделе [Стилизация фокуса в элементах управления и FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-340">For more information on the design intention of <xref:System.Windows.FrameworkContentElement.FocusVisualStyle%2A> and alternative focus properties, see [Styling for Focus in Controls, and FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md).</span></span>  
  
<a name="xamlAttributeUsage_FocusVisualStyle"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5cb61-341">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-341">XAML Attribute Usage</span></span>  
  
```  
<object FocusVisualStyle="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_FocusVisualStyle"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="5cb61-342">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-342">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_FocusVisualStyle"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5cb61-343">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-343">XAML Values</span></span>  
 <span data-ttu-id="5cb61-344">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="5cb61-344">*resourceExtension*</span></span>  
 <span data-ttu-id="5cb61-345">Одно из следующих:, или.</span><span class="sxs-lookup"><span data-stu-id="5cb61-345">One of the following: , or .</span></span> <span data-ttu-id="5cb61-346">См. в разделе [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-346">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="5cb61-347">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="5cb61-347">*styleResourceKey*</span></span>  
 <span data-ttu-id="5cb61-348">Ключ, который идентифицирует запрашиваемый стиль.</span><span class="sxs-lookup"><span data-stu-id="5cb61-348">The key that identifies the style being requested.</span></span> <span data-ttu-id="5cb61-349">Ключ ссылается на существующий ресурс в <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-349">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5cb61-350">Синтаксис элемента свойства технически возможно, но не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="5cb61-350">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="5cb61-351">См. в разделе [встроенные стили и шаблоны](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-351">See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span>  <span data-ttu-id="5cb61-352">Ссылка на привязку с помощью [TemplateBinding](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md) или <xref:System.Windows.Data.Binding> — также, возможно, но встречается редко.</span><span class="sxs-lookup"><span data-stu-id="5cb61-352">A binding reference using [TemplateBinding](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md) or <xref:System.Windows.Data.Binding> is also possible, but uncommon.</span></span>  
  
<a name="dependencyPropertyInfo_FocusVisualStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-353">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-353">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-354">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-354">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.FocusVisualStyleProperty>|  
|<span data-ttu-id="5cb61-355">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-355">Metadata properties set to `true`</span></span>|<span data-ttu-id="5cb61-356">Нет</span><span class="sxs-lookup"><span data-stu-id="5cb61-356">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusVisualStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusVisualStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusVisualStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.FocusVisualStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusVisualStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusVisualStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusVisualStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.FocusVisualStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-357">Определяет свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-357">Identifies the <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCursor">
      <MemberSignature Language="C#" Value="public bool ForceCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.ForceCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ForceCursor : bool with get, set" Usage="System.Windows.FrameworkContentElement.ForceCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-358">Возвращает или задает значение, указывающее, должен ли данный <see cref="T:System.Windows.FrameworkContentElement" /> заставлять [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] визуализировать курсор, как объявлено свойством <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5cb61-358">Gets or sets a value indicating whether this <see cref="T:System.Windows.FrameworkContentElement" /> should force the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] to render the cursor as declared by this instance's <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> property.</span></span></summary>
        <value><span data-ttu-id="5cb61-359"><see langword="true" /> означает принудительное использование настройки данного экземпляра для презентации курсора, когда он находится над данным элементом (включая все дочерние); в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-359"><see langword="true" /> to force cursor presentation while over this element to use this instance's setting for the cursor (including on all child elements); otherwise <see langword="false" />.</span></span> <span data-ttu-id="5cb61-360">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-360">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-361">Этому свойству присвоить `true` переопределит настройки курсора, установленные дочерними элементами.</span><span class="sxs-lookup"><span data-stu-id="5cb61-361">Setting this property to `true` will override the cursor preferences established by child elements.</span></span> <span data-ttu-id="5cb61-362">Поэтому в общем приложении это [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] может ввести в заблуждение пользователя, особенно в том случае, если дочерние элементы пытаются задавать курсоры.</span><span class="sxs-lookup"><span data-stu-id="5cb61-362">Doing so in general application [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] might be confusing for the user, particularly if child elements are attempting to specify cursors.</span></span> <span data-ttu-id="5cb61-363">Параметр <xref:System.Windows.FrameworkElement.ForceCursor%2A> больше подходит в сценариях создания подклассов или композиции элемента управления.</span><span class="sxs-lookup"><span data-stu-id="5cb61-363">Setting <xref:System.Windows.FrameworkElement.ForceCursor%2A> is more appropriate in control subclassing or compositing scenarios.</span></span>  
  
<a name="dependencyPropertyInfo_ForceCursor"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-364">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-364">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-365">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-365">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ForceCursorProperty>|  
|<span data-ttu-id="5cb61-366">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-366">Metadata properties set to `true`</span></span>|<span data-ttu-id="5cb61-367">Нет</span><span class="sxs-lookup"><span data-stu-id="5cb61-367">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-368">В следующем примере принудительно курсор над элементом.</span><span class="sxs-lookup"><span data-stu-id="5cb61-368">The following example forces the cursor while over the element.</span></span>  
  
 [!code-xaml[ForceCursor#ForceCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/ForceCursor/CS/default.xaml#forcecursor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCursorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForceCursorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForceCursorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ForceCursorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ForceCursorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ForceCursorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ForceCursorProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.ForceCursorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-369">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.ForceCursor" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-369">Identifies the <see cref="P:System.Windows.FrameworkContentElement.ForceCursor" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBindingExpression (dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.GetBindingExpression : System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpression" Usage="frameworkContentElement.GetBindingExpression dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="5cb61-370">Целевое <see cref="T:System.Windows.DependencyProperty" />, из которого следует получить привязку.</span><span class="sxs-lookup"><span data-stu-id="5cb61-370">The target <see cref="T:System.Windows.DependencyProperty" /> from which to get the binding.</span></span></param>
        <summary><span data-ttu-id="5cb61-371">Возвращает <see cref="T:System.Windows.Data.BindingExpression" /> для привязки указанного свойства.</span><span class="sxs-lookup"><span data-stu-id="5cb61-371">Gets the <see cref="T:System.Windows.Data.BindingExpression" /> for the specified property's binding.</span></span></summary>
        <returns><span data-ttu-id="5cb61-372">Возвращает <see cref="T:System.Windows.Data.BindingExpression" />, если цель привязана к данным; в противном случае — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-372">Returns a <see cref="T:System.Windows.Data.BindingExpression" /> if the target is data bound; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5cb61-373">В следующем примере извлекается привязка, запросив свойство.</span><span class="sxs-lookup"><span data-stu-id="5cb61-373">The following example retrieves a binding by querying a property.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#GetBindingExpression](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#getbindingexpression)]
 [!code-vb[ContentElementsSmorgasbord#GetBindingExpression](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#getbindingexpression)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="frameworkContentElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5cb61-374">Возвращает альтернативный логический родительский объект для этого элемента при отсутствии визуального родительского объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-374">Returns an alternative logical parent for this element if there is no visual parent.</span></span> <span data-ttu-id="5cb61-375">В данном случае родительский объект <see cref="T:System.Windows.FrameworkContentElement" /> всегда имеет то же значение, что и свойство <see cref="P:System.Windows.FrameworkContentElement.Parent" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-375">In this case, a <see cref="T:System.Windows.FrameworkContentElement" /> parent is always the same value as the <see cref="P:System.Windows.FrameworkContentElement.Parent" /> property.</span></span></summary>
        <returns><span data-ttu-id="5cb61-376">Возвращает нечто, отличное от <see langword="null" />, каждый раз, когда реализация уровня инфраструктуры WPF этого метода имеет подключение без визуального родительского объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-376">Returns something other than <see langword="null" /> whenever a WPF framework-level implementation of this method has a non-visual parent connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-377">Реализация по умолчанию возвращает ожидаемый одного визуального родительского объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-377">The default implementation returns the expected single visual parent.</span></span> <span data-ttu-id="5cb61-378">Пользовательские реализации могут возвращать альтернативные родительские связи.</span><span class="sxs-lookup"><span data-stu-id="5cb61-378">Custom implementations might return alternate parent relationships.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Initialized;" />
      <MemberSignature Language="F#" Value="member this.Initialized : EventHandler " Usage="member this.Initialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-379">Происходит во время инициализации данного <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-379">Occurs when this <see cref="T:System.Windows.FrameworkContentElement" /> is initialized.</span></span> <span data-ttu-id="5cb61-380">Это совпадает со случаями, когда значение свойства <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> меняется с <see langword="false" /> (или неопределенного) на <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-380">This coincides with cases where the value of the <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> property changes from <see langword="false" /> (or undefined) to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-381">Это событие будет вызывается при изменении <xref:System.Windows.FrameworkContentElement.EndInit%2A> или <xref:System.Windows.FrameworkContentElement.OnInitialized%2A> методы вызываются.</span><span class="sxs-lookup"><span data-stu-id="5cb61-381">This event will be raised whenever the <xref:System.Windows.FrameworkContentElement.EndInit%2A> or <xref:System.Windows.FrameworkContentElement.OnInitialized%2A> methods are called.</span></span> <span data-ttu-id="5cb61-382">Вызовы этих методов могут выполняться с произвольного кода или [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] процесс загрузки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-382">Calls to these methods could have been made by deliberate code, or by the [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] loading process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputScope">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputScope InputScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputScope InputScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.InputScope" />
      <MemberSignature Language="VB.NET" Value="Public Property InputScope As InputScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputScope ^ InputScope { System::Windows::Input::InputScope ^ get(); void set(System::Windows::Input::InputScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InputScope : System.Windows.Input.InputScope with get, set" Usage="System.Windows.FrameworkContentElement.InputScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-383">Получает или задает контекст для входных данных, используемых этим элементом <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-383">Gets or sets the context for input used by this <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></summary>
        <value><span data-ttu-id="5cb61-384">Область ввода, которая изменяет интерпретацию ввода с помощью альтернативных методов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-384">The input scope, which modifies how input from alternative input methods is interpreted.</span></span> <span data-ttu-id="5cb61-385">Значение по умолчанию — <see langword="null" /> (что приводит к обработке команд по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="5cb61-385">The default value is <see langword="null" /> (which results in a default handling of commands).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-386">Это свойство зависимостей наследует значения свойств.</span><span class="sxs-lookup"><span data-stu-id="5cb61-386">This dependency property inherits property values.</span></span> <span data-ttu-id="5cb61-387">Если существуют дочерние элементы, имеющие отсутствует значение для <xref:System.Windows.FrameworkElement.InputScope%2A> установленное при помощи локальных значений или стили, система свойств задаст значение должно быть <xref:System.Windows.FrameworkElement.InputScope%2A> значение ближайшего родительского элемента с назначенным данным значением.</span><span class="sxs-lookup"><span data-stu-id="5cb61-387">If there are child elements with no other value for <xref:System.Windows.FrameworkElement.InputScope%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.InputScope%2A> value of the nearest parent element with this value assigned.</span></span>  
  
 <span data-ttu-id="5cb61-388">Несмотря на то что [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксис использования указано и синтаксически разрешено, задание этого свойства [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] не часто.</span><span class="sxs-lookup"><span data-stu-id="5cb61-388">Although a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax usage is listed and is syntactically allowed, setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is not common.</span></span>  
  
<a name="dependencyPropertyInfo_InputScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-389">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-389">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-390">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-390">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.InputScopeProperty>|  
|<span data-ttu-id="5cb61-391">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-391">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.InputScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InputScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.InputScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-392">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.InputScope" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-392">Identifies the <see cref="P:System.Windows.FrameworkContentElement.InputScope" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="System.Windows.FrameworkContentElement.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-393">Возвращает значение, указывающее, был ли инициализирован данный элемент, либо путем загрузки в качестве [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], либо путем явного вызова своего метода <see cref="M:System.Windows.FrameworkContentElement.EndInit" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-393">Gets a value indicating whether this element has been initialized, either by being loaded as [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], or by explicitly having its <see cref="M:System.Windows.FrameworkContentElement.EndInit" /> method called.</span></span></summary>
        <value><span data-ttu-id="5cb61-394"><see langword="true" />, если элемент инициализирован путем вышеупомянутой загрузки или вызовов метода; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-394"><see langword="true" /> if the element is initialized per the aforementioned loading or method calls; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-395">Это свойство также может быть `true` Если этот элемент был перемещен в дереве элементов таким образом, он имеет новый родительский элемент и снова станет перегруженным.</span><span class="sxs-lookup"><span data-stu-id="5cb61-395">This property may also be `true` if this element has been moved within the element tree such that it has a new parent element, and therefore becomes reloaded again.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkContentElement.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="System.Windows.FrameworkContentElement.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-396">Возвращает значение, указывающее, загружен ли данный элемент для презентации.</span><span class="sxs-lookup"><span data-stu-id="5cb61-396">Gets a value indicating whether this element has been loaded for presentation.</span></span></summary>
        <value><span data-ttu-id="5cb61-397"><see langword="true" />, если текущий элемент прикреплен к дереву элементов и визуализирован; <see langword="false" /> — если элемент никогда не был присоединен к загруженному дереву элементов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-397"><see langword="true" /> if the current element is attached to an element tree and has been rendered; <see langword="false" /> if the element has never been attached to a loaded element tree.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-398">Вновь созданного экземпляра это свойство начинается `false`и остается `true` после его установки в `true`, даже если впоследствии удаляется по коду.</span><span class="sxs-lookup"><span data-stu-id="5cb61-398">From a newly constructed instance, this property starts off `false`, and remains `true` once it is set to `true`, even if subsequently removed by  code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-399">В следующем примере кода используется <xref:System.Windows.FrameworkContentElement.IsLoaded%2A> как условного проверку, чтобы убедиться, что функция `displayData` (не показано) будет допустимые элементы загружены на странице, чтобы работать, как часть обработчик по запросу.</span><span class="sxs-lookup"><span data-stu-id="5cb61-399">The following example code uses <xref:System.Windows.FrameworkContentElement.IsLoaded%2A> as a conditional check to assure that a function `displayData` (not shown) will have valid elements loaded on the page to work against, as part of an on-demand handler.</span></span> <span data-ttu-id="5cb61-400">Что же логика выполняется как обработчик событий для <xref:System.Windows.FrameworkContentElement.Loaded>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-400">That same logic is run as an event handler for <xref:System.Windows.FrameworkContentElement.Loaded>.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsLoaded](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#isloaded)]
 [!code-vb[ContentElementsSmorgasbord#IsLoaded](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#isloaded)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkContentElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlLanguage Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlLanguage Language" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlLanguage ^ Language { System::Windows::Markup::XmlLanguage ^ get(); void set(System::Windows::Markup::XmlLanguage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : System.Windows.Markup.XmlLanguage with get, set" Usage="System.Windows.FrameworkContentElement.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-401">Возвращает или задает сведения о языке локализации и глобализации, который применяется к отдельному элементу.</span><span class="sxs-lookup"><span data-stu-id="5cb61-401">Gets or sets localization/globalization language information that applies to an individual element.</span></span></summary>
        <value><span data-ttu-id="5cb61-402">Сведения о языке и региональных параметрах для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-402">The culture information for this element.</span></span> <span data-ttu-id="5cb61-403">Значение по умолчанию — экземпляр <see cref="T:System.Windows.Markup.XmlLanguage" /> со значением <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />, равным строке "гu-RU".</span><span class="sxs-lookup"><span data-stu-id="5cb61-403">The default value is an <see cref="T:System.Windows.Markup.XmlLanguage" /> instance with its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value set to the string "en-US".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-404">Строковые форматы соответствуют стандарту RFC 3066.</span><span class="sxs-lookup"><span data-stu-id="5cb61-404">The string formats follow the RFC 3066 standard.</span></span> <span data-ttu-id="5cb61-405">Например США Английский — «en US».</span><span class="sxs-lookup"><span data-stu-id="5cb61-405">For example, U.S. English is "en-US".</span></span> <span data-ttu-id="5cb61-406">См. в разделе <xref:System.Windows.Markup.XmlLanguage> Дополнительные сведения о значениях и формате.</span><span class="sxs-lookup"><span data-stu-id="5cb61-406">See <xref:System.Windows.Markup.XmlLanguage> for more information on the values and format.</span></span>  
  
 <span data-ttu-id="5cb61-407">Это свойство зависимостей наследует значения свойств.</span><span class="sxs-lookup"><span data-stu-id="5cb61-407">This dependency property inherits property values.</span></span> <span data-ttu-id="5cb61-408">Если существуют дочерние элементы, имеющие отсутствует значение для <xref:System.Windows.FrameworkElement.Language%2A> установленное при помощи локальных значений или стили, система свойств задаст значение должно быть <xref:System.Windows.FrameworkElement.Language%2A> значение ближайшего родительского элемента с назначенным данным значением.</span><span class="sxs-lookup"><span data-stu-id="5cb61-408">If there are child elements with no other value for <xref:System.Windows.FrameworkElement.Language%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.Language%2A> value of the nearest parent element with this value assigned.</span></span>  
  
<a name="dependencyPropertyInfo_CultureInfo"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-409">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-409">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-410">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-410">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.LanguageProperty>|  
|<span data-ttu-id="5cb61-411">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-411">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LanguageProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LanguageProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.LanguageProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LanguageProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LanguageProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LanguageProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.LanguageProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-412">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.Language" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-412">Identifies the <see cref="P:System.Windows.FrameworkContentElement.Language" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Loaded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Loaded;" />
      <MemberSignature Language="F#" Value="member this.Loaded : System.Windows.RoutedEventHandler " Usage="member this.Loaded : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-413">Происходит, если элемент размещен, отрисован и готов к взаимодействию.</span><span class="sxs-lookup"><span data-stu-id="5cb61-413">Occurs when the element is laid out, rendered, and ready for interaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-414">События с прямой маршрутизацией не выполняйте маршрут, они обрабатываются только внутри элемента, на котором они вызываются.</span><span class="sxs-lookup"><span data-stu-id="5cb61-414">Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</span></span> <span data-ttu-id="5cb61-415">Прямые перенаправленные события поддерживают другие поведения перенаправленного события: они поддерживают коллекцию доступных обработчиков и могут использоваться в качестве <xref:System.Windows.EventTrigger> в стиле.</span><span class="sxs-lookup"><span data-stu-id="5cb61-415">Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.</span></span>  
  
<a name="routedEventInfo_Loaded"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5cb61-416">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="5cb61-416">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-417">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-417">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.LoadedEvent>|  
|<span data-ttu-id="5cb61-418">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="5cb61-418">Routing strategy</span></span>|<span data-ttu-id="5cb61-419">Direct</span><span class="sxs-lookup"><span data-stu-id="5cb61-419">Direct</span></span>|  
|<span data-ttu-id="5cb61-420">делегат</span><span class="sxs-lookup"><span data-stu-id="5cb61-420">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.LoadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LoadedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LoadedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LoadedEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkContentElement.LoadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-421">Идентифицирует <see cref="E:System.Windows.FrameworkContentElement.Loaded" /> [Обзор маршрутизированных событий](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-421">Identifies the <see cref="E:System.Windows.FrameworkContentElement.Loaded" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-422">Объекты идентификатор события, создаваемые при их регистрации (см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) и затем может использоваться для добавления обработчиков классов (см. в разделе <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="5cb61-422">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="5cb61-423">Идентификатор объекты содержат уникальное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-423">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.FrameworkContentElement.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-424">Возвращает перечислитель для логических дочерних элементов данного элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-424">Gets an enumerator for the logical child elements of this element.</span></span></summary>
        <value><span data-ttu-id="5cb61-425">Перечислитель для логических дочерних элементов данного элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-425">An enumerator for logical child elements of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-426">Дополнительные сведения об использовании <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> и <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, см. в разделе [деревья в WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-426">For more information on how to use <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public override sealed bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="frameworkContentElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="5cb61-427">Направление, в котором перемещается фокус, в виде значения перечисления.</span><span class="sxs-lookup"><span data-stu-id="5cb61-427">The direction that focus is to be moved, as a value of the enumeration.</span></span></param>
        <summary><span data-ttu-id="5cb61-428">Перемещает клавиатурный фокус с данного элемента на другой.</span><span class="sxs-lookup"><span data-stu-id="5cb61-428">Moves the keyboard focus from this element to another element.</span></span></summary>
        <returns><span data-ttu-id="5cb61-429">Возвращает <see langword="true" />, если фокус перемещен успешно; <see langword="false" />, если целевого элемента в указанном направлении не существует.</span><span class="sxs-lookup"><span data-stu-id="5cb61-429">Returns <see langword="true" /> if focus is moved successfully; <see langword="false" /> if the target element in direction as specified does not exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.FrameworkContentElement.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IFrameworkInputElement.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-430">Возвращает или задает имя, обозначающее элемент.</span><span class="sxs-lookup"><span data-stu-id="5cb61-430">Gets or sets the identifying name of the element.</span></span> <span data-ttu-id="5cb61-431">Имя предоставляет ссылку на экземпляр, чтобы код программной части, например код обработчика событий, мог ссылаться на элемент после создания этого элемента во время синтаксического анализа [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5cb61-431">The name provides an instance reference so that programmatic code-behind, such as event handler code, can refer to an element once it is constructed during parsing of [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span></summary>
        <value><span data-ttu-id="5cb61-432">Имя элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-432">The name of the element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-433">Наиболее распространенный случай использования этого свойства — при указании [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] имя элемента в разметке.</span><span class="sxs-lookup"><span data-stu-id="5cb61-433">The most common usage of this property is when specifying a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] element name in markup.</span></span>  
  
 <span data-ttu-id="5cb61-434">По существу, это свойство предоставляет свойство удобства уровня платформы WPF, чтобы установить [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [директива x: Name](~/docs/framework/xaml-services/x-name-directive.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-434">This property essentially provides a WPF framework-level convenience property to set the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md).</span></span>  
  
 <span data-ttu-id="5cb61-435">Начало <xref:System.Windows.FrameworkContentElement.Name%2A> из кода не часто, потому что если вы уже соответствующую ссылку в коде, можно просто вызвать методы и свойства в элементе ссылки и не обычно необходимость <xref:System.Windows.FrameworkContentElement.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-435">Getting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code is not common, because if you have the appropriate reference in code already, you can just call methods and properties on the element reference and do not generally need the <xref:System.Windows.FrameworkContentElement.Name%2A>.</span></span> <span data-ttu-id="5cb61-436">Исключение — если строка имеет несколько перегруженных значение, например если необходимо отобразить это имя в [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5cb61-436">An exception is if the string has some overloaded meaning, for instance if it is useful to display that name in [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="5cb61-437">Установка <xref:System.Windows.FrameworkContentElement.Name%2A> из кода если исходный <xref:System.Windows.FrameworkContentElement.Name%2A> был набор из разметки, также не рекомендуется, и изменения свойства не изменится ссылка на объект.</span><span class="sxs-lookup"><span data-stu-id="5cb61-437">Setting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code if the original <xref:System.Windows.FrameworkContentElement.Name%2A> was set from markup is also not recommended, and changing the property will not change the object reference.</span></span> <span data-ttu-id="5cb61-438">Ссылки на такие объекты создаются только в том случае, когда основной области видимости имен явно создаются во время [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] загрузки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-438">Such object references are created only when the underlying namescopes are explicitly created during [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] loading.</span></span>  
  
 <span data-ttu-id="5cb61-439">Необходимо явно вызывать <xref:System.Windows.FrameworkContentElement.RegisterName%2A> действующие сделать на <xref:System.Windows.FrameworkContentElement.Name%2A> свойства элемента уже загружен.</span><span class="sxs-lookup"><span data-stu-id="5cb61-439">You must specifically call <xref:System.Windows.FrameworkContentElement.RegisterName%2A> to make an effective change on the <xref:System.Windows.FrameworkContentElement.Name%2A> property of an already loaded element.</span></span>  
  
 <span data-ttu-id="5cb61-440">Один заметных случае там, где параметр <xref:System.Windows.FrameworkContentElement.Name%2A> из кода важна для именования элементов, которые раскадровки будет выполняться.</span><span class="sxs-lookup"><span data-stu-id="5cb61-440">One notable case where setting <xref:System.Windows.FrameworkContentElement.Name%2A> from  code is important is for naming elements that storyboards will run against.</span></span> <span data-ttu-id="5cb61-441">Перед регистрацией имени, может также потребоваться создания экземпляров и присваивания <xref:System.Windows.NameScope> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5cb61-441">Before you can register a name, might also need to instantiate and assign a <xref:System.Windows.NameScope> instance.</span></span> <span data-ttu-id="5cb61-442">См. в разделе "Пример" или [Общие сведения о раскадровках](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-442">See the Example section, or [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="5cb61-443">Параметр <xref:System.Windows.FrameworkContentElement.Name%2A> из кода имеет ограниченную приложений, но поиск элемента по имени чаще, особенно в том случае, если задействуется модель навигации с перезагрузкой страниц в приложение и код времени выполнения не обязательно является кодом программной части, соответствующую страницу.</span><span class="sxs-lookup"><span data-stu-id="5cb61-443">Setting <xref:System.Windows.FrameworkContentElement.Name%2A> from code has limited applications, but looking up an element by name is more common, particularly if you are employing a navigation model where pages reload into the application and the run-time code is not necessarily the code-behind of that respective page.</span></span> <span data-ttu-id="5cb61-444">Служебный метод <xref:System.Windows.FrameworkContentElement.FindName%2A>, который доступен из любого <xref:System.Windows.FrameworkContentElement>, можно найти любой элемент, <xref:System.Windows.FrameworkContentElement.Name%2A> в рекурсивно логического дерева этого элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-444">The utility method <xref:System.Windows.FrameworkContentElement.FindName%2A>, which is available from any <xref:System.Windows.FrameworkContentElement>, can find any element by <xref:System.Windows.FrameworkContentElement.Name%2A> in that element's logical tree recursively.</span></span> <span data-ttu-id="5cb61-445">Или можно использовать <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> статический метод <xref:System.Windows.LogicalTreeHelper>, который также принимает <xref:System.Windows.FrameworkContentElement.Name%2A> строку в качестве аргумента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-445">Or you can use the <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> static method of <xref:System.Windows.LogicalTreeHelper>, which also takes the <xref:System.Windows.FrameworkContentElement.Name%2A> string as an argument.</span></span>  
  
 <span data-ttu-id="5cb61-446">Часто используемые корневых элементов (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> для примера) реализовать интерфейс <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-446">Commonly used root elements (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> for example) implement the interface <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="5cb61-447">Реализации этого интерфейса ожидается обеспечение однозначности имен в их области.</span><span class="sxs-lookup"><span data-stu-id="5cb61-447">Implementations of this interface are expected to enforce that names be unambiguous within their scope.</span></span>  
  
<a name="dependencyPropertyInfo_Name"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-448">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-448">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-449">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-449">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.NameProperty>|  
|<span data-ttu-id="5cb61-450">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-450">Metadata properties set to `true`</span></span>|<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-451">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.Name" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-451">Identifies the <see cref="P:System.Windows.FrameworkContentElement.Name" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuClosing (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuClosing(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuClosing (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuClosing(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuClosing : System.Windows.Controls.ContextMenuEventArgs -&gt; unit&#xA;override this.OnContextMenuClosing : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="frameworkContentElement.OnContextMenuClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5cb61-452">Предоставляет данные о событии.</span><span class="sxs-lookup"><span data-stu-id="5cb61-452">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="5cb61-453">Вызывается, когда перенаправленное событие <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> достигает этого класса на своем пути.</span><span class="sxs-lookup"><span data-stu-id="5cb61-453">Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="5cb61-454">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-454">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-455">Этот метод не имеет значение по умолчанию реализации.</span><span class="sxs-lookup"><span data-stu-id="5cb61-455">This method has no default implementation.</span></span> <span data-ttu-id="5cb61-456">Если промежуточный класс в цепочке наследования реализует данный метод рекомендуется вызывать базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="5cb61-456">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="5cb61-457">Этот метод похож на [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблон событий на \* методы: она предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5cb61-457">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="5cb61-458">В этом случае соответствующее событие является перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="5cb61-458">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5cb61-459">Шаблон реализации методы On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерний элемент, не обязательно является элементом, который будет вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="5cb61-459">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5cb61-460">Таким образом реализации необходимо учитывать исходные свойства аргументов события (и не следует пытаться повторно отправить событие в большинстве случаев).</span><span class="sxs-lookup"><span data-stu-id="5cb61-460">Therefore, your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="5cb61-461">Подклассы <xref:System.Windows.FrameworkContentElement> может выбрать для вызова методов обработчика закрытый класс при получении события в маршруте.</span><span class="sxs-lookup"><span data-stu-id="5cb61-461">Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="5cb61-462">Одним из потенциальных сценариев является получение аргументов события и пометка события как обработанного для сокращения маршрута.</span><span class="sxs-lookup"><span data-stu-id="5cb61-462">One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit&#xA;override this.OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="frameworkContentElement.OnContextMenuOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5cb61-463">Данные для события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-463">Event data for the event.</span></span></param>
        <summary><span data-ttu-id="5cb61-464">Вызывается, когда перенаправленное событие <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> достигает этого класса на своем пути.</span><span class="sxs-lookup"><span data-stu-id="5cb61-464">Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="5cb61-465">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-465">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-466">Этот метод не имеет значение по умолчанию реализации.</span><span class="sxs-lookup"><span data-stu-id="5cb61-466">This method has no default implementation.</span></span> <span data-ttu-id="5cb61-467">Если промежуточный класс в цепочке наследования реализует данный метод рекомендуется вызывать base().</span><span class="sxs-lookup"><span data-stu-id="5cb61-467">You should still call base() in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="5cb61-468">Этот метод похож на [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблон событий на \* методы: она предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5cb61-468">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="5cb61-469">В этом случае соответствующее событие является перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="5cb61-469">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5cb61-470">Шаблон реализации методы On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерний элемент, не обязательно является элементом, который будет вызывать обработчики, реализация придется использовать источник для аргументов событий свойства в учетной записи (и не следует пытаться повторно отправить событие в большинстве случаев).</span><span class="sxs-lookup"><span data-stu-id="5cb61-470">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="5cb61-471">Подклассы <xref:System.Windows.FrameworkContentElement> может выбрать для вызова методов обработчика закрытый класс при получении события в маршруте.</span><span class="sxs-lookup"><span data-stu-id="5cb61-471">Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="5cb61-472">Одним из потенциальных сценариев является получение аргументов события и пометка события как обработанного для сокращения маршрута.</span><span class="sxs-lookup"><span data-stu-id="5cb61-472">One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="frameworkContentElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5cb61-473">Данные для события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-473">Event data for the event.</span></span></param>
        <summary><span data-ttu-id="5cb61-474">Обработчик класса для события <see cref="E:System.Windows.ContentElement.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-474">Class handler for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-475">Этот обработчик класса задает соответствующее поведение фокуса на данном элементе, если событие происходит из этого элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-475">This class handler sets appropriate focus behavior on this element if the event originated from this element.</span></span> <span data-ttu-id="5cb61-476">Если источником события был другой элемент в дереве, обработчик не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="5cb61-476">If the event's source was another element in the tree, the handler does nothing.</span></span>  
  
 <span data-ttu-id="5cb61-477">Переопределите этот метод, чтобы изменить фокусировки поведение вашего элемента по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="5cb61-477">Override this method in order to change these default focusing behavior on your element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInitialized : EventArgs -&gt; unit&#xA;override this.OnInitialized : EventArgs -&gt; unit" Usage="frameworkContentElement.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5cb61-478">Данные для события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-478">Event data for the event.</span></span></param>
        <summary><span data-ttu-id="5cb61-479">Создает событие <see cref="E:System.Windows.FrameworkContentElement.Initialized" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-479">Raises the <see cref="E:System.Windows.FrameworkContentElement.Initialized" /> event.</span></span> <span data-ttu-id="5cb61-480">Этот метод вызывается при каждой установке для свойства <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> значения <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-480">This method is invoked whenever <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> is set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-481">Реализация по умолчанию данного виртуального метода вызывает событие, как описано ранее в этом разделе.</span><span class="sxs-lookup"><span data-stu-id="5cb61-481">The default implementation of this virtual method raises the event as described earlier in this topic.</span></span> <span data-ttu-id="5cb61-482">Переопределения должны вызывать base() для сохранения этого поведения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-482">Overrides should call base() to preserve this behavior.</span></span>  
  
 <span data-ttu-id="5cb61-483">Обратите внимание, что <xref:System.Windows.FrameworkContentElement.IsInitialized%2A> свойство доступно только для чтения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-483">Note that the <xref:System.Windows.FrameworkContentElement.IsInitialized%2A> property is read-only.</span></span> <span data-ttu-id="5cb61-484">Таким образом нельзя задать для него принудительную инициализацию таким образом.</span><span class="sxs-lookup"><span data-stu-id="5cb61-484">Therefore, you cannot set it to force initialization behavior that way.</span></span> <span data-ttu-id="5cb61-485">Параметр инициализации должен выполняться только в [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework.</span><span class="sxs-lookup"><span data-stu-id="5cb61-485">Initialization setting is intended to be done only by the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="frameworkContentElement.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5cb61-486">Данные события, описывающие измененное свойство, а также старое и новое значения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-486">The event data that describes the property that changed, including the old and new values.</span></span></param>
        <summary><span data-ttu-id="5cb61-487">Вызывается каждый раз, когда обновляется действительное значение любого свойства зависимостей для данного <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-487">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkContentElement" /> has been updated.</span></span> <span data-ttu-id="5cb61-488">Конкретное измененное свойство зависимостей сообщается в параметре аргументов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-488">The specific dependency property that changed is reported in the arguments parameter.</span></span> <span data-ttu-id="5cb61-489">Переопределяет <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-489">Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-490">Этот метод не предназначен для обычно обнаружения изменения свойств или недействительности.</span><span class="sxs-lookup"><span data-stu-id="5cb61-490">This method is not intended to generally detect property changes or invalidations.</span></span> <span data-ttu-id="5cb61-491">Он предназначен для изменения общего шаблона недействительности Если известны определенные сведения о классификациях расширенных свойств.</span><span class="sxs-lookup"><span data-stu-id="5cb61-491">It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.</span></span>  
  
 <span data-ttu-id="5cb61-492">Этот метод потенциально вызывается много раз в течение жизненного цикла объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-492">This method is potentially invoked many times during the life of an object.</span></span> <span data-ttu-id="5cb61-493">Таким образом, можно повысить производительность, если переопределить метаданные свойств, а затем подключить <xref:System.Windows.CoerceValueCallback> или <xref:System.Windows.PropertyChangedCallback> функции для отдельных свойств.</span><span class="sxs-lookup"><span data-stu-id="5cb61-493">Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions for individual properties.</span></span> <span data-ttu-id="5cb61-494">Тем не менее, можно использовать, этот метод Если <xref:System.Windows.FrameworkContentElement> включает значительное количество свойств зависимостей с взаимосвязанными значение, или если он содержит логику, такие как поведение отрисовки, необходимо повторно для нескольких связанных случаев недействительности свойств.</span><span class="sxs-lookup"><span data-stu-id="5cb61-494">However, you would use this method if a <xref:System.Windows.FrameworkContentElement> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</span></span>  
  
 <span data-ttu-id="5cb61-495">Обратите внимание, что таким же именем `OnPropertyChanged` метод с другой сигнатурой (тип параметра является <xref:System.ComponentModel.PropertyChangedEventArgs>), которые могут возникнуть на несколько классов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-495">Note that there is an identically named `OnPropertyChanged` method with a different signature (the parameter type is <xref:System.ComponentModel.PropertyChangedEventArgs>) that can appear on a number of classes.</span></span> <span data-ttu-id="5cb61-496">Что `OnPropertyChanged` используется для уведомления объекта данных, и является частью контракта для <xref:System.ComponentModel.INotifyPropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-496">That `OnPropertyChanged` is used for data object notifications, and is part of the contract for <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5cb61-497">Всегда вызывайте базовую реализацию, как первую операцию в реализации.</span><span class="sxs-lookup"><span data-stu-id="5cb61-497">Always call the base implementation, as the first operation in your implementation.</span></span> <span data-ttu-id="5cb61-498">Если этого не сделать значительно отключит всего [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] системы свойств, в результате чего будут сообщены неверные значения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-498">Failure to do this will significantly disable the entire [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system, which causes incorrect values to be reported.</span></span></para></block>
        <altmember cref="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <altmember cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStyleChanged (System.Windows.Style oldStyle, System.Windows.Style newStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStyleChanged(class System.Windows.Style oldStyle, class System.Windows.Style newStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStyleChanged (oldStyle As Style, newStyle As Style)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStyleChanged(System::Windows::Style ^ oldStyle, System::Windows::Style ^ newStyle);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleChanged : System.Windows.Style * System.Windows.Style -&gt; unit&#xA;override this.OnStyleChanged : System.Windows.Style * System.Windows.Style -&gt; unit" Usage="frameworkContentElement.OnStyleChanged (oldStyle, newStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldStyle" Type="System.Windows.Style" />
        <Parameter Name="newStyle" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="oldStyle"><span data-ttu-id="5cb61-499">Старый стиль.</span><span class="sxs-lookup"><span data-stu-id="5cb61-499">The old style.</span></span></param>
        <param name="newStyle"><span data-ttu-id="5cb61-500">Новый стиль.</span><span class="sxs-lookup"><span data-stu-id="5cb61-500">The new style.</span></span></param>
        <summary><span data-ttu-id="5cb61-501">Вызывается при изменении стиля, используемого для данного элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-501">Invoked when the style that is in use on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-502">Этот метод имеет реализацию по умолчанию, которая устанавливает внутренний флаг, уведомляя об измененном состоянии стиля.</span><span class="sxs-lookup"><span data-stu-id="5cb61-502">This method has a default implementation that sets an internal flag noting the style changed condition.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5cb61-503">Всегда вызывать базовую реализацию, в противном случае невозможно применить стили.</span><span class="sxs-lookup"><span data-stu-id="5cb61-503">Always call the base implementation, otherwise styles cannot be applied.</span></span> <span data-ttu-id="5cb61-504">Сценарии для переопределения этого метода может содержать, если в производном классе имеется селектор специализированного стиля или кэшированные значения стиля.</span><span class="sxs-lookup"><span data-stu-id="5cb61-504">Scenarios for overriding this method might include if your derived class has a specialized style selector, or caches style values.</span></span> <span data-ttu-id="5cb61-505">Изменения темы потенциально будет вызывать этот метод.</span><span class="sxs-lookup"><span data-stu-id="5cb61-505">Theme changes will potentially invoke this method.</span></span></para></block>
        <altmember cref="P:System.Windows.FrameworkContentElement.Style" />
      </Docs>
    </Member>
    <Member MemberName="OnToolTipClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnToolTipClosing (System.Windows.Controls.ToolTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnToolTipClosing(class System.Windows.Controls.ToolTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnToolTipClosing (e As ToolTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnToolTipClosing(System::Windows::Controls::ToolTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnToolTipClosing : System.Windows.Controls.ToolTipEventArgs -&gt; unit&#xA;override this.OnToolTipClosing : System.Windows.Controls.ToolTipEventArgs -&gt; unit" Usage="frameworkContentElement.OnToolTipClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ToolTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5cb61-506">Предоставляет данные о событии.</span><span class="sxs-lookup"><span data-stu-id="5cb61-506">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="5cb61-507">Вызывается, когда перенаправленное событие <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> достигает этого класса на своем пути.</span><span class="sxs-lookup"><span data-stu-id="5cb61-507">Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="5cb61-508">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-508">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-509">Этот метод не имеет значение по умолчанию реализации.</span><span class="sxs-lookup"><span data-stu-id="5cb61-509">This method has no default implementation.</span></span> <span data-ttu-id="5cb61-510">Если промежуточный класс в цепочке наследования реализует данный метод рекомендуется вызывать base().</span><span class="sxs-lookup"><span data-stu-id="5cb61-510">You should still call base() in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="5cb61-511">Этот метод похож на [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблон событий на \* методы: она предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5cb61-511">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="5cb61-512">В этом случае соответствующее событие является перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="5cb61-512">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5cb61-513">Шаблон реализации методы On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерний элемент, не обязательно является элементом, который будет вызывать обработчики, реализация придется использовать источник для аргументов событий свойства в учетной записи (и не следует пытаться повторно отправить событие в большинстве случаев).</span><span class="sxs-lookup"><span data-stu-id="5cb61-513">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="5cb61-514">Подклассы <xref:System.Windows.FrameworkContentElement> может выбрать для вызова методов обработчика закрытый класс при получении события в маршруте.</span><span class="sxs-lookup"><span data-stu-id="5cb61-514">Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="5cb61-515">Одним из потенциальных сценариев является получение аргументов события и пометка события как обработанного для сокращения маршрута.</span><span class="sxs-lookup"><span data-stu-id="5cb61-515">One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnToolTipOpening">
      <MemberSignature Language="C#" Value="protected virtual void OnToolTipOpening (System.Windows.Controls.ToolTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnToolTipOpening(class System.Windows.Controls.ToolTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnToolTipOpening (e As ToolTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnToolTipOpening(System::Windows::Controls::ToolTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnToolTipOpening : System.Windows.Controls.ToolTipEventArgs -&gt; unit&#xA;override this.OnToolTipOpening : System.Windows.Controls.ToolTipEventArgs -&gt; unit" Usage="frameworkContentElement.OnToolTipOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ToolTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5cb61-516">Предоставляет данные о событии.</span><span class="sxs-lookup"><span data-stu-id="5cb61-516">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="5cb61-517">Вызывается, когда перенаправленное событие <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> достигает этого класса на своем пути.</span><span class="sxs-lookup"><span data-stu-id="5cb61-517">Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="5cb61-518">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-518">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-519">Этот метод не имеет значение по умолчанию реализации.</span><span class="sxs-lookup"><span data-stu-id="5cb61-519">This method has no default implementation.</span></span> <span data-ttu-id="5cb61-520">Если промежуточный класс в цепочке наследования реализует данный метод рекомендуется вызывать base().</span><span class="sxs-lookup"><span data-stu-id="5cb61-520">You should still call base() in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="5cb61-521">Этот метод похож на [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблон событий на \* методы: она предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5cb61-521">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="5cb61-522">В этом случае соответствующее событие является перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="5cb61-522">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5cb61-523">Шаблон реализации методы On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерний элемент, не обязательно является элементом, который будет вызывать обработчики, поэтому вашей реализации потребуется использовать источник для аргументов событий свойства в учетной записи (и не следует пытаться повторно отправить событие в большинстве случаев).</span><span class="sxs-lookup"><span data-stu-id="5cb61-523">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="5cb61-524">Подклассы <xref:System.Windows.FrameworkContentElement> может выбрать для вызова методов обработчика закрытый класс при получении события в маршруте.</span><span class="sxs-lookup"><span data-stu-id="5cb61-524">Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="5cb61-525">Одним из потенциальных сценариев является получение аргументов события и пометка события как обработанного для сокращения маршрута.</span><span class="sxs-lookup"><span data-stu-id="5cb61-525">One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverridesDefaultStyle">
      <MemberSignature Language="C#" Value="public bool OverridesDefaultStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OverridesDefaultStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property OverridesDefaultStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OverridesDefaultStyle { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OverridesDefaultStyle : bool with get, set" Usage="System.Windows.FrameworkContentElement.OverridesDefaultStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-526">Возвращает или задает значение, указывающее, содержит ли данный элемент свойства стиля из тематических стилей.</span><span class="sxs-lookup"><span data-stu-id="5cb61-526">Gets or sets a value indicating whether this element incorporates style properties from theme styles.</span></span></summary>
        <value><span data-ttu-id="5cb61-527">Значение <see langword="true" />, если этот элемент не использует свойства стиля темы; все свойства, определяющие стиль, получаются из локальных стилей приложения, а свойства стиля темы не применяются.</span><span class="sxs-lookup"><span data-stu-id="5cb61-527"><see langword="true" /> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply.</span></span> <span data-ttu-id="5cb61-528">Значение <see langword="false" />, если сначала применяются стили приложения, а затем стили тем для свойств, которые не были явным образом заданы в стилях приложения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-528"><see langword="false" /> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-529">Наиболее распространенный случай использования этого свойства является непрямое использование в переключателе стиля, который передает тематический стиль.</span><span class="sxs-lookup"><span data-stu-id="5cb61-529">The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.</span></span>  
  
<a name="dependencyPropertyInfo_OverridesDefaultStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-530">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-530">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-531">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-531">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty>|  
|<span data-ttu-id="5cb61-532">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-532">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" />
      </Docs>
    </Member>
    <Member MemberName="OverridesDefaultStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OverridesDefaultStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OverridesDefaultStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OverridesDefaultStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OverridesDefaultStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OverridesDefaultStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-533">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-533">Identifies the <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.FrameworkContentElement.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-534">Возвращает родительский объект в логическом дереве для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-534">Gets the parent in the logical tree for this element.</span></span></summary>
        <value><span data-ttu-id="5cb61-535">Логический родительский объект для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-535">The logical parent for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-536">Обратите внимание, что логический родитель элемента потенциально может меняться в зависимости от функциональности приложения, и сохранение значения этого свойства не отразит это изменение.</span><span class="sxs-lookup"><span data-stu-id="5cb61-536">Note that the logical parent of an element can potentially change depending on your application functionality, and keeping the value of this property will not reflect that change.</span></span> <span data-ttu-id="5cb61-537">Обычно нужно получить значение, непосредственно перед он вам нужен.</span><span class="sxs-lookup"><span data-stu-id="5cb61-537">You typically should get the value immediately before you need it.</span></span>  
  
 <span data-ttu-id="5cb61-538">См. в разделе [деревья в WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md) Дополнительные сведения о просмотре логические деревья и сценарии, в которых подходит при таком подходе к элемент обнаружения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-538">See [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md) for more information about traversing logical trees, and the scenarios where taking this approach towards element discovery is appropriate.</span></span>  
  
 <span data-ttu-id="5cb61-539">Система свойств потенциально пересчитывает все значения свойств элемента при изменении его родителя, так как некоторые свойства наследуют значения по логическому дереву.</span><span class="sxs-lookup"><span data-stu-id="5cb61-539">The property system will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree.</span></span> <span data-ttu-id="5cb61-540"><xref:System.Windows.FrameworkContentElement.DataContext%2A> , Применяемый для привязки также можно изменить при изменении в родителя или элементов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-540">The <xref:System.Windows.FrameworkContentElement.DataContext%2A> that applies for bindings can also change when elements are reparented.</span></span>  
  
 <span data-ttu-id="5cb61-541">Изменение родительского элемента обычно выполняется только через управление коллекциями, с использованием выделенных методов добавления и удаления, или путем задания свойств содержимого элементов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-541">Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.</span></span>  
  
 <span data-ttu-id="5cb61-542">Наиболее типичный сценарий использования <xref:System.Windows.FrameworkContentElement.Parent%2A> свойство является получить ссылку, а затем получить различные <xref:System.Windows.FrameworkContentElement> значения свойств из родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-542">The most typical scenario for using the <xref:System.Windows.FrameworkContentElement.Parent%2A> property is to obtain a reference and then get various <xref:System.Windows.FrameworkContentElement> property values from the parent.</span></span> <span data-ttu-id="5cb61-543">Для шаблонов <xref:System.Windows.FrameworkContentElement.Parent%2A> шаблона со временем будет `null`.</span><span class="sxs-lookup"><span data-stu-id="5cb61-543">For templates, the <xref:System.Windows.FrameworkContentElement.Parent%2A> of the template eventually will be `null`.</span></span> <span data-ttu-id="5cb61-544">Чтобы преодолеть эту точку и расширить в логическом дереве, где фактически применяется шаблон, используйте <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-544">To get past this point and extend into the logical tree where the template is actually applied, use <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-545">В следующем примере проверяется, чтобы увидеть ли <xref:System.Windows.FrameworkContentElement.Parent%2A> из <xref:System.Windows.Documents.TextPointer> является определенного типа.</span><span class="sxs-lookup"><span data-stu-id="5cb61-545">The following example checks to see whether the <xref:System.Windows.FrameworkContentElement.Parent%2A> of a <xref:System.Windows.Documents.TextPointer> is of a particular type.</span></span>  
  
 [!code-csharp[TextPointer_snippets#FCEParent](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#fceparent)]
 [!code-vb[TextPointer_snippets#FCEParent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#fceparent)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkContentElement.TemplatedParent" />
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="frameworkContentElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="5cb61-546">Направление, в котором следует определить перспективное изменение фокуса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-546">The direction for which a prospective focus change should be determined.</span></span></param>
        <summary><span data-ttu-id="5cb61-547">Определяет следующий элемент, который получит фокус, относительно данного элемента для указанного направления движения фокуса, но реально фокус не перемещает.</span><span class="sxs-lookup"><span data-stu-id="5cb61-547">Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.</span></span> <span data-ttu-id="5cb61-548">Данный метод запечатан и не может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="5cb61-548">This method is sealed and cannot be overridden.</span></span></summary>
        <returns><span data-ttu-id="5cb61-549">Следующий элемент, на который будет перемещен фокус в случае фактического обхода фокуса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-549">The next element that focus would move to if focus were actually traversed.</span></span> <span data-ttu-id="5cb61-550">Может возвращать значение <see langword="null" />, если фокус нельзя переместить относительно данного элемента в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="5cb61-550">May return <see langword="null" /> if focus cannot be moved relative to this element for the provided direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-551"><xref:System.Windows.FrameworkContentElement.MoveFocus%2A> — Это связанный метод, который фактически перемещения фокуса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-551"><xref:System.Windows.FrameworkContentElement.MoveFocus%2A> is the related method that actually does move focus.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="5cb61-552">Одно из следующих направлений, указанное в <see cref="T:System.Windows.Input.TraversalRequest" />: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-552">Specified one of the following directions in the <see cref="T:System.Windows.Input.TraversalRequest" />: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />.</span></span> <span data-ttu-id="5cb61-553">Эти направления недопустимы для метода <see cref="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (однако допустимы для метода <see cref="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />).</span><span class="sxs-lookup"><span data-stu-id="5cb61-553">These directions are not legal for <see cref="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (but they are legal for <see cref="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="member this.RegisterName : string * obj -&gt; unit" Usage="frameworkContentElement.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5cb61-554">Имя, используемое для сопоставления указанного имени с объектом.</span><span class="sxs-lookup"><span data-stu-id="5cb61-554">Name to use for the specified name-object mapping.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="5cb61-555">Объект для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="5cb61-555">Object for the mapping.</span></span></param>
        <summary><span data-ttu-id="5cb61-556">Предоставляет метод доступа, упрощающий доступ к методу регистрации <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-556">Provides an accessor that simplifies access to the <see cref="T:System.Windows.NameScope" /> registration method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-557">Этот метод — это удобный метод для вызова <xref:System.Windows.NameScope.RegisterName%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-557">This method is a convenience method for calling <xref:System.Windows.NameScope.RegisterName%2A>.</span></span> <span data-ttu-id="5cb61-558">Реализация будет проверять последовательных родительских элементах, пока не найдет применимой <xref:System.Windows.NameScope> реализации, в которой находится путем поиск элемента, который реализует <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-558">The implementation will check successive parent elements until it finds the applicable <xref:System.Windows.NameScope> implementation, which is found by finding an element that implements <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="5cb61-559">Дополнительные сведения об области видимости имен см. в разделе [области видимости имен XAML WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-559">For more information about namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="5cb61-560">Вызов <xref:System.Windows.FrameworkContentElement.RegisterName%2A> нужно, чтобы правильно подключить раскадровки анимации для приложений, при создании в коде.</span><span class="sxs-lookup"><span data-stu-id="5cb61-560">Calling <xref:System.Windows.FrameworkContentElement.RegisterName%2A> is necessary in order to correctly hook up animation storyboards for applications when created in code.</span></span> <span data-ttu-id="5cb61-561">Это обусловлено тем, одним из ключевых раскадровка свойства, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, выполняет поиск имен времени выполнения, вместо того использовать ссылку на целевой элемент.</span><span class="sxs-lookup"><span data-stu-id="5cb61-561">This is because one of the key storyboard properties, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, uses a run-time name lookup instead of being able to take a reference to a target element.</span></span> <span data-ttu-id="5cb61-562">Это справедливо, даже если этот элемент доступен по ссылке из кода.</span><span class="sxs-lookup"><span data-stu-id="5cb61-562">This is true even if that element is accessible by reference from the code.</span></span> <span data-ttu-id="5cb61-563">Дополнительные сведения о том, почему требуется регистрировать имена целей раскадровки, см. в разделе [Общие сведения о раскадровках](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-563">For more information on why you need to register names for storyboard targets, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span> <span data-ttu-id="5cb61-564">Анимация элементов содержимого применяется реже, чем анимация элементов, [Общие сведения о раскадровках](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md) управления.</span><span class="sxs-lookup"><span data-stu-id="5cb61-564">Animations for content elements are less common than animations on controls, the [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md) concentrates on control scenarios.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)" />
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLogicalChild">
      <MemberSignature Language="C#" Value="protected internal void RemoveLogicalChild (object child);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RemoveLogicalChild(object child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RemoveLogicalChild (child As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RemoveLogicalChild(System::Object ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveLogicalChild : obj -&gt; unit" Usage="frameworkContentElement.RemoveLogicalChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="5cb61-565">Подлежащий удалению элемент.</span><span class="sxs-lookup"><span data-stu-id="5cb61-565">The element to remove.</span></span></param>
        <summary><span data-ttu-id="5cb61-566">Удаляет указанный элемент из логического дерева данного элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-566">Removes the specified element from the logical tree for this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-567">Это [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] основном относится к сценариям, произведения при добавлении поддержки для коллекций дочерних классов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-567">This [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is mainly relevant for class deriving scenarios, when adding support for child collections.</span></span>  
  
 <span data-ttu-id="5cb61-568">Большинство <xref:System.Windows.FrameworkContentElement> производные классы предоставляют выделенную коллекций, которые отвечают за вложения (например, <xref:System.Windows.Documents.Span.Inlines%2A> на <xref:System.Windows.Documents.Span> класса; <xref:System.Windows.Documents.Section.Blocks%2A> на <xref:System.Windows.Documents.Section> класса).</span><span class="sxs-lookup"><span data-stu-id="5cb61-568">Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class).</span></span> <span data-ttu-id="5cb61-569">Наследование от таких классов обычно можно избежать необходимости обращаться к логическому дереву напрямую.</span><span class="sxs-lookup"><span data-stu-id="5cb61-569">Deriving from such classes typically can avoid any need to manipulate the logical tree directly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.LogicalTreeHelper" />
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resources : System.Windows.ResourceDictionary with get, set" Usage="System.Windows.FrameworkContentElement.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-570">Возвращает или задает текущий локально определенный словарь ресурсов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-570">Gets or sets the current locally-defined resource dictionary.</span></span></summary>
        <value><span data-ttu-id="5cb61-571">Текущие локально определенные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="5cb61-571">The current locally-defined resources.</span></span> <span data-ttu-id="5cb61-572">Это словарь ресурсов, доступ к ресурсам которого можно получить по ключу.</span><span class="sxs-lookup"><span data-stu-id="5cb61-572">This is a dictionary of resources, where resources within the dictionary are accessed by key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-573">Словари ресурсов, которые могут быть определены полностью или частично в [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] обычно создаются в качестве элемента свойства и обычно находятся на корневой элемент для любой отдельной страницы или приложения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-573">Resource dictionaries that can be defined completely or partially in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] are typically created as a property element, and are typically on the root element for any individual page or for the application.</span></span> <span data-ttu-id="5cb61-574">Размещение словаря ресурсов на этом уровне облегчает поиск из отдельных дочерних элементов на странице (или с любой страницы, в случае приложения).</span><span class="sxs-lookup"><span data-stu-id="5cb61-574">Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case).</span></span> <span data-ttu-id="5cb61-575">В большинстве сценариев приложений, рекомендуется определить эти стили как элементы объекта в словаре ресурсов, или как внешние ресурсы, чтобы весь ресурс стиля могут быть автономными (этот подход помогает отдельный конструктор Ответственность от ответственности разработчика путем разделения физических файлов, которые нужно редактировать).</span><span class="sxs-lookup"><span data-stu-id="5cb61-575">In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).</span></span>  
  
 <span data-ttu-id="5cb61-576">Обратите внимание, что это свойство возвращает только словарь ресурсов, объявленные непосредственно в этот элемент.</span><span class="sxs-lookup"><span data-stu-id="5cb61-576">Note that this property returns only the resource dictionary declared directly within that element.</span></span> <span data-ttu-id="5cb61-577">Это отличается от фактического процесса поиска ресурсов, где дочерний элемент можно использовать все ресурсы, определенные в каждом родительском элементе, поиск вверх рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="5cb61-577">This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.</span></span>  
  
 <span data-ttu-id="5cb61-578">Ресурсы можно ссылаться с помощью кода из коллекции, но имейте в виду, что ресурсы созданы в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] , определенно не будут доступны до после <xref:System.Windows.FrameworkContentElement.Loaded> элементом, который объявляет словаря.</span><span class="sxs-lookup"><span data-stu-id="5cb61-578">Resources can also be referenced by code from within the collection, but be aware that resources created in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will definitely not be accessible until after <xref:System.Windows.FrameworkContentElement.Loaded> is raised by the element that declares the dictionary.</span></span> <span data-ttu-id="5cb61-579">На самом деле, ресурсы обрабатываются асинхронно и даже <xref:System.Windows.FrameworkContentElement.Loaded> событий является гарантией того, вы можете ссылаться на [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] определенных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-579">In fact, resources are parsed asynchronously, and not even the <xref:System.Windows.FrameworkContentElement.Loaded> event is an assurance that you can reference a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resource.</span></span> <span data-ttu-id="5cb61-580">По этой причине следует обычно только обращаться к [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ресурсы, определяемые как часть кода среды выполнения, или через другие [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] методы, такие как стили или ссылки на расширения ресурсов для значений атрибутов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-580">For this reason you should generally only access [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resources as part of run-time code, or through other [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] techniques such as styles or resource extension references for attribute values.</span></span> <span data-ttu-id="5cb61-581">При доступе к ресурсам с помощью кода, это по существу эквивалентно [DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) ссылку из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5cb61-581">When you access resources through code, it is essentially equivalent to a [DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) reference made from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 <span data-ttu-id="5cb61-582">Базовый <xref:System.Windows.ResourceDictionary> поддерживает методы, необходимые для добавления, удаления или запроса ресурсов из коллекции с помощью кода.</span><span class="sxs-lookup"><span data-stu-id="5cb61-582">The underlying <xref:System.Windows.ResourceDictionary> supports the methods required to add, remove, or query resources from within the collection by using code.</span></span> <span data-ttu-id="5cb61-583"><xref:System.Windows.FrameworkContentElement.Resources%2A> Свойство является настраиваемым для поддержки сценария полной замены ресурсам коллекцию новый или другой элемент <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-583">The <xref:System.Windows.FrameworkContentElement.Resources%2A> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <xref:System.Windows.ResourceDictionary>.</span></span>  
  
 <span data-ttu-id="5cb61-584">Обратите внимание, что [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксиса не включает элемент для <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-584">Notice that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax shown does not include an element for the <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="5cb61-585">Ниже приведен пример неявного синтаксиса коллекции; можно опустить тег, представляющий элемент коллекции.</span><span class="sxs-lookup"><span data-stu-id="5cb61-585">This is an example of implicit collection syntax; a tag representing the collection element can be omitted.</span></span> <span data-ttu-id="5cb61-586">Вместо этого указываются элементы, которые будут добавлены как элементы в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="5cb61-586">The elements that are added as items to the collection are specified instead.</span></span> <span data-ttu-id="5cb61-587">Дополнительные сведения о неявных коллекциях и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], см. в разделе [XAML подробное описание синтаксиса](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-587">For more information about implicit collections and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span> <span data-ttu-id="5cb61-588">Один случай где <xref:System.Windows.ResourceDictionary> по-прежнему указывается явно как элемент, Представляем объединенный словарь, в этом случае существует обычно нет дочерних элементов для этого <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-588">One case where a <xref:System.Windows.ResourceDictionary> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="5cb61-589">Дополнительные сведения см. в разделе [объединенные словари ресурсов](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-589">For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span></span>  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="5cb61-590">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-590">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>  
```  
  
<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5cb61-591">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-591">XAML Values</span></span>  
 <span data-ttu-id="5cb61-592">*oneOrMoreResourceElements*</span><span class="sxs-lookup"><span data-stu-id="5cb61-592">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="5cb61-593">Один или несколько объектов элементов, каждый из которых определяет ресурс.</span><span class="sxs-lookup"><span data-stu-id="5cb61-593">One or more object elements, each of which defines a resource.</span></span> <span data-ttu-id="5cb61-594">В каждом элементе свойства ресурсов в каждом <xref:System.Windows.ResourceDictionary> должен иметь уникальное значение для [директивы x: Key](~/docs/framework/xaml-services/x-key-directive.md), который используется в качестве уникального ключа при получении значений из <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-594">Each resource property element within each <xref:System.Windows.ResourceDictionary> must have a unique value for the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md), which serves as the unique key when values are retrieved from the <xref:System.Windows.ResourceDictionary>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-595">Следующий пример устанавливает <xref:System.Windows.FrameworkContentElement.Resources%2A> коллекции <xref:System.Windows.Documents.FlowDocument> корневого элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-595">The following example establishes a <xref:System.Windows.FrameworkContentElement.Resources%2A> collection on a <xref:System.Windows.Documents.FlowDocument> root element.</span></span> <span data-ttu-id="5cb61-596"><xref:System.Windows.Documents.FlowDocument> — Это стандартный вариант, поскольку он является одним из немногих <xref:System.Windows.FrameworkContentElement> с корневой страницы или на даже более высоких уровнях, например приложение, обычно хранятся классы, которые имеют смысл как корневой элемент и ресурсы.</span><span class="sxs-lookup"><span data-stu-id="5cb61-596"><xref:System.Windows.Documents.FlowDocument> is a typical choice because it is one of the few <xref:System.Windows.FrameworkContentElement> classes that make sense as a root element, and resources are generally stored at the page root or at even higher levels such as in the application.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#FCEResources](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page2.xaml#fceresources)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Application.Resources" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBinding">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5cb61-597">Присоединяет привязку к этому элементу для указанного свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="5cb61-597">Attaches a binding to this element for the specified dependency property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpression SetBinding (System.Windows.DependencyProperty dp, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpression SetBinding(class System.Windows.DependencyProperty dp, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBinding (dp As DependencyProperty, path As String) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpression ^ SetBinding(System::Windows::DependencyProperty ^ dp, System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetBinding : System.Windows.DependencyProperty * string -&gt; System.Windows.Data.BindingExpression" Usage="frameworkContentElement.SetBinding (dp, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="5cb61-598">Идентифицирует привязанное свойство.</span><span class="sxs-lookup"><span data-stu-id="5cb61-598">Identifies the bound property.</span></span></param>
        <param name="path"><span data-ttu-id="5cb61-599">Имя исходного свойства или путь к свойству, используемому для привязки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-599">The source property name or the path to the property used for the binding.</span></span></param>
        <summary><span data-ttu-id="5cb61-600">Прикрепляет привязку к данному элементу на основе указанного имени исходного свойства в виде классификационного пути к источнику данных.</span><span class="sxs-lookup"><span data-stu-id="5cb61-600">Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.</span></span></summary>
        <returns><span data-ttu-id="5cb61-601">Фиксирует состояния привязки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-601">Records the conditions of the binding.</span></span> <span data-ttu-id="5cb61-602">Это возвращаемое значение можно использовать для проверки ошибок.</span><span class="sxs-lookup"><span data-stu-id="5cb61-602">This return value can be useful for error checking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-603">Этот метод — это удобный метод для вызова <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, который передает текущий экземпляр как <xref:System.Windows.DependencyObject>и создает новый <xref:System.Windows.Data.Binding> на основе предоставленной `path` параметра.</span><span class="sxs-lookup"><span data-stu-id="5cb61-603">This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, which passes the current instance as the <xref:System.Windows.DependencyObject>, and creates a new <xref:System.Windows.Data.Binding> based on the provided `path` parameter.</span></span> <span data-ttu-id="5cb61-604">Эта подпись является более удобным, если устанавливается простой привязки по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="5cb61-604">This signature is more convenient if you are establishing a simple default binding.</span></span> <span data-ttu-id="5cb61-605">Если вам нужно указать любые свойства привязки для условия не по умолчанию, или хотите использовать <xref:System.Windows.Data.MultiBinding> или <xref:System.Windows.Data.PriorityBinding>, следует использовать <xref:System.Windows.FrameworkContentElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> подписи.</span><span class="sxs-lookup"><span data-stu-id="5cb61-605">If you need to specify any binding properties to non-default conditions, or want to use a <xref:System.Windows.Data.MultiBinding> or <xref:System.Windows.Data.PriorityBinding>,you should use the <xref:System.Windows.FrameworkContentElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> signature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-606">В следующем примере задается привязка на <xref:System.Windows.Documents.Paragraph> элемент, путем создания нового объекта пользовательские данные, установлении объект в качестве <xref:System.Windows.FrameworkContentElement.DataContext%2A>и указав путь привязки к свойству в ней.</span><span class="sxs-lookup"><span data-stu-id="5cb61-606">The following example sets a binding on a <xref:System.Windows.Documents.Paragraph> element, by creating a new custom data object, establishing that object as <xref:System.Windows.FrameworkContentElement.DataContext%2A>, and setting the binding path to a property within it.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#DataContext](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#datacontext)]
 [!code-vb[ContentElementsSmorgasbord#DataContext](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#datacontext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBinding (dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="member this.SetBinding : System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; System.Windows.Data.BindingExpressionBase" Usage="frameworkContentElement.SetBinding (dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="5cb61-607">Идентифицирует привязанное свойство.</span><span class="sxs-lookup"><span data-stu-id="5cb61-607">Identifies the bound property.</span></span></param>
        <param name="binding"><span data-ttu-id="5cb61-608">Представляет привязку данных.</span><span class="sxs-lookup"><span data-stu-id="5cb61-608">Represents a data binding.</span></span></param>
        <summary><span data-ttu-id="5cb61-609">Прикрепляет привязку к данному элементу на основе предоставленной привязки объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-609">Attaches a binding to this element, based on the provided binding object.</span></span></summary>
        <returns><span data-ttu-id="5cb61-610">Фиксирует состояния привязки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-610">Records the conditions of the binding.</span></span> <span data-ttu-id="5cb61-611">Это возвращаемое значение можно использовать для проверки ошибок.</span><span class="sxs-lookup"><span data-stu-id="5cb61-611">This return value can be useful for error checking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-612">Этот метод — это удобный метод для вызова <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, который передает текущий экземпляр как <xref:System.Windows.DependencyObject>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-612">This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, which passes the current instance as the <xref:System.Windows.DependencyObject>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-613">В следующем примере задается привязка на <xref:System.Windows.Documents.Paragraph> элемент, создавая новый <xref:System.Windows.Data.Binding> и установив источник для вновь созданных `DateTime` объекта.</span><span class="sxs-lookup"><span data-stu-id="5cb61-613">The following example sets a binding on a <xref:System.Windows.Documents.Paragraph> element, by creating a new <xref:System.Windows.Data.Binding> and setting the source to a newly built `DateTime` object.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#SetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#setbinding)]
 [!code-vb[ContentElementsSmorgasbord#SetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#setbinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResourceReference">
      <MemberSignature Language="C#" Value="public void SetResourceReference (System.Windows.DependencyProperty dp, object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResourceReference(class System.Windows.DependencyProperty dp, object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceReference (dp As DependencyProperty, name As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResourceReference(System::Windows::DependencyProperty ^ dp, System::Object ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetResourceReference : System.Windows.DependencyProperty * obj -&gt; unit" Usage="frameworkContentElement.SetResourceReference (dp, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="5cb61-614">Свойство, к которому привязан ресурс.</span><span class="sxs-lookup"><span data-stu-id="5cb61-614">The property to which the resource is bound.</span></span></param>
        <param name="name"><span data-ttu-id="5cb61-615">Имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-615">The name of the resource.</span></span></param>
        <summary><span data-ttu-id="5cb61-616">Выполняет поиск ресурса по указанному имени и устанавливает ссылку на этот ресурс для указанного свойства.</span><span class="sxs-lookup"><span data-stu-id="5cb61-616">Searches for a resource with the specified name and sets up a resource reference to it for the specified property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-617">Ссылка на ресурс похоже на использование [расширение разметки DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) в разметке.</span><span class="sxs-lookup"><span data-stu-id="5cb61-617">A resource reference is similar to the use of a [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) in markup.</span></span> <span data-ttu-id="5cb61-618">Ссылка на ресурс создает внутреннее выражение, содержащий значение заданного свойства на основе отложенного выполнения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-618">The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis.</span></span> <span data-ttu-id="5cb61-619">Выражение будет повторно вычисляться каждый раз, когда словарь ресурсов указывает измененного значения через внутренние события, или при каждом изменении родителя текущего элемента (родителя изменяется путь для поиска словаря).</span><span class="sxs-lookup"><span data-stu-id="5cb61-619">The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkContentElement.FindResource(System.Object)" />
        <altmember cref="P:System.Windows.Application.Resources" />
        <altmember cref="P:System.Windows.FrameworkElement.Resources" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeResources">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.ShouldSerializeResources" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeResources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeResources();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeResources : unit -&gt; bool" Usage="frameworkContentElement.ShouldSerializeResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5cb61-620">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.FrameworkContentElement.Resources" /> в экземплярах данного класса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-620">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkContentElement.Resources" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="5cb61-621">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.FrameworkContentElement.Resources" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-621"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkContentElement.Resources" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-622">Эта команда возвращает `true` до тех пор, пока есть хотя бы один ресурс с ключом в локальной <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-622">This will return `true` so long as there is at least one keyed resource in the local <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeStyle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.ShouldSerializeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeStyle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeStyle();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeStyle : unit -&gt; bool" Usage="frameworkContentElement.ShouldSerializeStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5cb61-623">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.FrameworkContentElement.Style" /> в экземплярах данного класса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-623">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkContentElement.Style" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="5cb61-624">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.FrameworkContentElement.Style" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-624"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkContentElement.Style" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-625">Эта команда возвращает `true` Если <xref:System.Windows.Style> устанавливается локально.</span><span class="sxs-lookup"><span data-stu-id="5cb61-625">This will return `true` if the <xref:System.Windows.Style> is locally set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; SourceUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; SourceUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceUpdated As EventHandler(Of DataTransferEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ SourceUpdated;" />
      <MemberSignature Language="F#" Value="member this.SourceUpdated : EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " Usage="member this.SourceUpdated : System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-626">Происходит при изменении какого-либо связанного источника данных, участвующего в привязке к данному элементу.</span><span class="sxs-lookup"><span data-stu-id="5cb61-626">Occurs when any associated data source participating in a binding on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-627">Это событие поверхности <xref:System.Windows.Data.Binding.SourceUpdated> событие, вызванное каким-либо <xref:System.Windows.Data.Binding> связанных с этим элементом.</span><span class="sxs-lookup"><span data-stu-id="5cb61-627">This event surfaces the <xref:System.Windows.Data.Binding.SourceUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.</span></span>  
  
<a name="xamlAttributeUsage_SourceUpdated"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5cb61-628">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-628">XAML Attribute Usage</span></span>  
  
```  
<object SourceUpdated="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Style Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ Style { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Style with get, set" Usage="System.Windows.FrameworkContentElement.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-629">Получает или задает стиль, который должен использоваться этим элементом.</span><span class="sxs-lookup"><span data-stu-id="5cb61-629">Gets or sets the style to be used by this element.</span></span></summary>
        <value><span data-ttu-id="5cb61-630">Примененный стиль не по умолчанию для элемента, если присутствует.</span><span class="sxs-lookup"><span data-stu-id="5cb61-630">The applied, nondefault style for the element, if present.</span></span> <span data-ttu-id="5cb61-631">В противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-631">Otherwise, <see langword="null" />.</span></span> <span data-ttu-id="5cb61-632">Значение по умолчанию для созданного по умолчанию <see cref="T:System.Windows.FrameworkContentElement" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-632">The default for a default-constructed <see cref="T:System.Windows.FrameworkContentElement" /> is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-633">Текущий стиль часто обеспечивается путем стиль по умолчанию из темы или из стилей, обычно применяемых к объектам этого типа ресурсами на уровне страницы или приложения (неявный стиль).</span><span class="sxs-lookup"><span data-stu-id="5cb61-633">The current style is often provided by a default style from theming, or from styles generally applied to objects of that type by resources at page or application level (an implicit style).</span></span> <span data-ttu-id="5cb61-634">Это свойство не по умолчанию устанавливает и не возвращает стили (темы), но возвращает неявный или явный стиль.</span><span class="sxs-lookup"><span data-stu-id="5cb61-634">This property does not set or return default (theme) styles, but it does return the implicit style or an explicit style.</span></span> <span data-ttu-id="5cb61-635">В случае явного или неявного стили неважно ли стиль доступен как ресурс, или определен локально.</span><span class="sxs-lookup"><span data-stu-id="5cb61-635">In the case of implicit or explicit styles, it does not matter whether the style is accessed as a resource or defined locally.</span></span>  
  
 <span data-ttu-id="5cb61-636">Задание стилей имеет некоторые ограничения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-636">Setting the styles has some restrictions.</span></span> <span data-ttu-id="5cb61-637">Вы можете сбросить всего <xref:System.Windows.FrameworkContentElement.Style%2A> свойство в новый <xref:System.Windows.Style> в любое время, что вынудит рекомпозиции макета.</span><span class="sxs-lookup"><span data-stu-id="5cb61-637">You can reset the entire <xref:System.Windows.FrameworkContentElement.Style%2A> property to a new <xref:System.Windows.Style> at any time, which will force a layout recomposition.</span></span> <span data-ttu-id="5cb61-638">Тем не менее, как можно быстрее, так как этот стиль размещается используется загруженным элементом <xref:System.Windows.Style> должно считаться запечатанный.</span><span class="sxs-lookup"><span data-stu-id="5cb61-638">However, as soon as that style is placed in use by a loaded element, the <xref:System.Windows.Style> should be considered sealed.</span></span> <span data-ttu-id="5cb61-639">Попытка внести изменение любого отдельного свойства используемого стиля (такие как любые действия в коллекцию <xref:System.Windows.Style.Setters%2A>) приводит к возникновению исключения, исключение.</span><span class="sxs-lookup"><span data-stu-id="5cb61-639">Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <xref:System.Windows.Style.Setters%2A>) causes an exception to be thrown.</span></span> <span data-ttu-id="5cb61-640">Стиль, определенный в разметке считается используется как только он загружается из словаря ресурсов (для ресурсов) или загрузке страницы, в которой оно содержится в (для встроенных стилей).</span><span class="sxs-lookup"><span data-stu-id="5cb61-640">A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).</span></span>  
  
 <span data-ttu-id="5cb61-641"><xref:System.Windows.FrameworkContentElement.Style%2A> является свойством зависимостей с помощью специальных приоритет.</span><span class="sxs-lookup"><span data-stu-id="5cb61-641"><xref:System.Windows.FrameworkContentElement.Style%2A> is a dependency property with special precedence.</span></span> <span data-ttu-id="5cb61-642">Локально заданное стиль обычно действует с наивысшим приоритетом в системе свойств.</span><span class="sxs-lookup"><span data-stu-id="5cb61-642">The locally set style generally operates at the highest precedence in the property system.</span></span> <span data-ttu-id="5cb61-643">Если <xref:System.Windows.FrameworkContentElement.Style%2A> имеет значение null на этом этапе во время загрузки, система свойств проверяет наличие неявных стилей как определенных ресурсов этого типа.</span><span class="sxs-lookup"><span data-stu-id="5cb61-643">If the <xref:System.Windows.FrameworkContentElement.Style%2A> is null at this point, during loading the property system checks for implicit styles as defined resources that specify that type.</span></span> <span data-ttu-id="5cb61-644">Если стиль равен null после выполнения этого шага, то стиль поступает из стиля по умолчанию (тема), но стиль по умолчанию не возвращается в <xref:System.Windows.FrameworkContentElement.Style%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="5cb61-644">If the style is still null after this step, then the style comes from the default (theme) style, but the default style is not returned in the <xref:System.Windows.FrameworkContentElement.Style%2A> property value.</span></span> <span data-ttu-id="5cb61-645">См. в разделе [приоритет значений свойств зависимостей](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-645">See [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
<a name="xamlAttributeUsage_Style"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5cb61-646">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-646">XAML Attribute Usage</span></span>  
  
```  
<object Style="{resourceExtension StyleResourceKey}"/>  
```  
  
<a name="xamlValues_Style"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5cb61-647">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-647">XAML Values</span></span>  
 <span data-ttu-id="5cb61-648">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="5cb61-648">*resourceExtension*</span></span>  
 <span data-ttu-id="5cb61-649">Одно из следующих:, или.</span><span class="sxs-lookup"><span data-stu-id="5cb61-649">One of the following: , or .</span></span> <span data-ttu-id="5cb61-650">См. в разделе [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-650">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="5cb61-651">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="5cb61-651">*styleResourceKey*</span></span>  
 <span data-ttu-id="5cb61-652">Ключ, который идентифицирует запрашиваемый стиль.</span><span class="sxs-lookup"><span data-stu-id="5cb61-652">The key that identifies the style being requested.</span></span> <span data-ttu-id="5cb61-653">Ключ ссылается на существующий ресурс в <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-653">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5cb61-654">Синтаксис элемента свойства технически возможно, но не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="5cb61-654">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="5cb61-655">См. в разделе [встроенные стили и шаблоны](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-655">See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span>  <span data-ttu-id="5cb61-656">Ссылка на привязку с помощью [TemplateBinding](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md) или <xref:System.Windows.Data.Binding> — также, возможно, но встречается редко.</span><span class="sxs-lookup"><span data-stu-id="5cb61-656">A binding reference using [TemplateBinding](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md) or <xref:System.Windows.Data.Binding> is also possible, but uncommon.</span></span>  
  
<a name="dependencyPropertyInfo_Style"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-657">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-657">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-658">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-658">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.StyleProperty>|  
|<span data-ttu-id="5cb61-659">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-659">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-660">Следующий пример устанавливает <xref:System.Windows.FrameworkContentElement.Resources%2A> коллекции <xref:System.Windows.Documents.FlowDocument> корневой элемент и затем ссылается на нее в качестве ресурса, как определенный стиль для <xref:System.Windows.Documents.Paragraph>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-660">The following example establishes a <xref:System.Windows.FrameworkContentElement.Resources%2A> collection on a <xref:System.Windows.Documents.FlowDocument> root element and then references it as a resource as a specific style for a <xref:System.Windows.Documents.Paragraph>.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#FCEResources](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page2.xaml#fceresources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.StyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.StyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-661">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.Style" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-661">Identifies the <see cref="P:System.Windows.FrameworkContentElement.Style" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="5cb61-662">Имя запрошенного внешнего свойства.</span><span class="sxs-lookup"><span data-stu-id="5cb61-662">The name of the requested ambient property.</span></span></param>
        <summary><span data-ttu-id="5cb61-663">Описание этого элемента содержится в методе <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-663">For a description of this member, see the <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="5cb61-664">Значение <see langword="true" />, если свойство с именем в параметре <paramref name="propertyName" /> доступно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-664"><see langword="true" /> if <paramref name="propertyName" /> is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-665">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-665">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5cb61-666">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.FrameworkContentElement> приведен к типу интерфейса <xref:System.Windows.Markup.IQueryAmbient>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-666">It can be used only when the <xref:System.Windows.FrameworkContentElement> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.FrameworkContentElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-667">Получение или установка произвольного значения объекта, которое может использоваться для хранения особых сведений об этом элементе.</span><span class="sxs-lookup"><span data-stu-id="5cb61-667">Gets or sets an arbitrary object value that can be used to store custom information about this element.</span></span></summary>
        <value><span data-ttu-id="5cb61-668">Целевое значение.</span><span class="sxs-lookup"><span data-stu-id="5cb61-668">The intended value.</span></span> <span data-ttu-id="5cb61-669">Это свойство не имеет значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="5cb61-669">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-670">Это свойство является аналогом свойства тега в других моделях программирования для Microsoft, таких как Visual Basic для приложений или Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="5cb61-670">This property is analogous to Tag properties in other Microsoft programming models, such as Visual Basic for Applications or Windows Forms.</span></span> <span data-ttu-id="5cb61-671">Он предназначен для предоставления готовых место для хранения базовой пользовательской информации о любом элементе не принуждает разработчиков приложения подкласс.</span><span class="sxs-lookup"><span data-stu-id="5cb61-671">It is intended to provide a pre-existing place to store some basic custom information about any element without forcing application developers to subclass.</span></span>  
  
<a name="xamlValues_Tag"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5cb61-672">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-672">XAML Values</span></span>  
 <span data-ttu-id="5cb61-673">Так как это свойство принимает объект, необходимо использовать использование элемента свойства, чтобы задать <xref:System.Windows.FrameworkContentElement.Tag%2A> свойства в XAML только на объект с известным и встроенный тип преобразователя, например строку.</span><span class="sxs-lookup"><span data-stu-id="5cb61-673">Because this property takes an object, you need to use the property element usage in order to set the <xref:System.Windows.FrameworkContentElement.Tag%2A> property in XAML to anything other than an object with a known and built-in type converter, such as a string.</span></span> <span data-ttu-id="5cb61-674">Объекты, используемые таким образом, обычно не входят в стандартные пространства имен WPF и поэтому может потребоваться сопоставление пространства имен с внешним пространством имен для новых элементов XAML.</span><span class="sxs-lookup"><span data-stu-id="5cb61-674">Objects used in this way are typically not within the standard WPF namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as XAML elements.</span></span>  
  
<a name="dependencyPropertyInfo_Tag"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-675">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-675">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-676">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-676">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.TagProperty>|  
|<span data-ttu-id="5cb61-677">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-677">Metadata properties set to `true`</span></span>|<span data-ttu-id="5cb61-678">Нет</span><span class="sxs-lookup"><span data-stu-id="5cb61-678">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkContentElement.Name" />
      </Docs>
    </Member>
    <Member MemberName="TagProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TagProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TagProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.TagProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TagProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TagProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TagProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.TagProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-679">Определяет свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.Tag" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-679">Identifies the <see cref="P:System.Windows.FrameworkContentElement.Tag" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; TargetUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; TargetUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TargetUpdated As EventHandler(Of DataTransferEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ TargetUpdated;" />
      <MemberSignature Language="F#" Value="member this.TargetUpdated : EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " Usage="member this.TargetUpdated : System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-680">Происходит при изменении любого связанного целевого свойства, участвующего в привязке в этом элементе.</span><span class="sxs-lookup"><span data-stu-id="5cb61-680">Occurs when any associated target property participating in a binding on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-681">Это событие поверхности <xref:System.Windows.Data.Binding.TargetUpdated> событие, вызванное каким-либо <xref:System.Windows.Data.Binding> связанных с этим элементом.</span><span class="sxs-lookup"><span data-stu-id="5cb61-681">This event surfaces the <xref:System.Windows.Data.Binding.TargetUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.</span></span> <span data-ttu-id="5cb61-682">Обычно это означает, что рассматриваемая представляет собой двустороннюю привязку, и что связанного свойства зависимостей подтверждает недействительность предыдущего значения свойства проверку или схеме кеширования, который поддерживает свойство.</span><span class="sxs-lookup"><span data-stu-id="5cb61-682">This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms an invalidation of the previous property value per any validation or caching scheme that the property supports.</span></span>  
  
 <span data-ttu-id="5cb61-683">Аргументы события этого события сообщит, что вы какое связанное свойство была изменена.</span><span class="sxs-lookup"><span data-stu-id="5cb61-683">The event arguments of this event will inform you which bound property was changed.</span></span>  
  
<a name="xamlAttributeUsage_TargetUpdated"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5cb61-684">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-684">XAML Attribute Usage</span></span>  
  
```  
<object TargetUpdated="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject TemplatedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.TemplatedParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatedParent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ TemplatedParent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplatedParent : System.Windows.DependencyObject" Usage="System.Windows.FrameworkContentElement.TemplatedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-685">Получает ссылку на родительский объект шаблона данного элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-685">Gets a reference to the template parent of this element.</span></span> <span data-ttu-id="5cb61-686">Это свойство не актуально, если элемент не был создан с помощью шаблона.</span><span class="sxs-lookup"><span data-stu-id="5cb61-686">This property is not relevant if the element was not created through a template.</span></span></summary>
        <value><span data-ttu-id="5cb61-687">Элемент, свойство <see cref="T:System.Windows.FrameworkTemplate" /> шаблона <see cref="P:System.Windows.FrameworkTemplate.VisualTree" />  которого вызвало создание данного элемента.</span><span class="sxs-lookup"><span data-stu-id="5cb61-687">The element whose <see cref="T:System.Windows.FrameworkTemplate" /><see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> caused this element to be created.</span></span> <span data-ttu-id="5cb61-688">Это значение часто равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-688">This value is frequently <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-689">Шаблоны являются фактически общих объектов, в которой содержимое шаблона создаются только один раз.</span><span class="sxs-lookup"><span data-stu-id="5cb61-689">Templates are actually shared objects, where the contents of the template are created only once.</span></span> <span data-ttu-id="5cb61-690">Таким образом Если получить ссылку на элемент, который поступил из шаблона, вы обнаружите, что заметно логическое дерево не удалось связаться с корневой страницы.</span><span class="sxs-lookup"><span data-stu-id="5cb61-690">Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root.</span></span> <span data-ttu-id="5cb61-691">Чтобы подключить такую ссылку шаблона для логического дерева страницы, вы должны получить <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> значение и продолжать переместиться в этом дереве элемент, при необходимости.</span><span class="sxs-lookup"><span data-stu-id="5cb61-691">In order to connect such a template reference to the page's logical tree, you should get the <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> value and continue to navigate that element tree as desired.</span></span>  
  
 <span data-ttu-id="5cb61-692"><xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> часто оказываются `null` для общих объектов, так как если вы получили ссылку на объект из линейных страницы в приложении обычно средствами, этот элемент, возможно, не был создан из шаблона.</span><span class="sxs-lookup"><span data-stu-id="5cb61-692"><xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> will frequently be `null` for common objects, because if you have obtained an object reference from out of a page in your application through typical means, that element probably was not created from a template.</span></span> <span data-ttu-id="5cb61-693">Ситуации, когда <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> может оказаться `null` включает операции, такие как события нажатия, обрабатывает определенные низкоуровневые события ввода, или работа с перечислителями, которые могут возвращать элементы, полученные из шаблонов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-693">Cases where <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> might not be `null` would include operations such as hit-testing, event handling for certain low-level input events, or working with enumerators, which may have returned elements that came from templates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public object ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ToolTip { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : obj with get, set" Usage="System.Windows.FrameworkContentElement.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-694">Получает или задает объект подсказки, отображаемый для данного элемента в [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5cb61-694">Gets or sets the tool-tip object that is displayed for this element in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="5cb61-695">Объект подсказки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-695">The tooltip object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-696">Если значение этого свойства имеет тип <xref:System.Windows.Controls.ToolTip>, затем это средство подсказку, которая будет использоваться в [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5cb61-696">If the value of this property is of type <xref:System.Windows.Controls.ToolTip>, then that is the tool-tip that will be used in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  <span data-ttu-id="5cb61-697">Если значение любого другого типа, то это значение будет использоваться в качестве *содержимого* для <xref:System.Windows.Controls.ToolTip> предоставленные (создан) системой.</span><span class="sxs-lookup"><span data-stu-id="5cb61-697">If the value is of any other type, then that value will be used as the *content* for a <xref:System.Windows.Controls.ToolTip> provided (constructed) by the system.</span></span> <span data-ttu-id="5cb61-698">Дополнительные сведения см. в разделе <xref:System.Windows.Controls.ToolTipService>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-698">For more information see <xref:System.Windows.Controls.ToolTipService>.</span></span> <span data-ttu-id="5cb61-699">Класс службы предоставляет вложенные свойства, которые могут использоваться для дальнейшей настройки всплывающей подсказки.</span><span class="sxs-lookup"><span data-stu-id="5cb61-699">The service class provides attached properties that can be used to further customize a tool-tip.</span></span>  
  
<a name="xamlAttributeUsage_ToolTip"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5cb61-700">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-700">XAML Attribute Usage</span></span>  
  
```  
<object ToolTip="toolTipContent"/>  
```  
  
<a name="xamlPropertyElementUsage_ToolTip"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="5cb61-701">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-701">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ToolTip>  
    <ToolTip .../>  
  </object.ToolTip>  
</object>  
- or -  
<object>  
  <object.ToolTip>  
    toolTipObjectContent  
  </object.ToolTip>  
</object>  
```  
  
<a name="xamlValues_ToolTip"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5cb61-702">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="5cb61-702">XAML Values</span></span>  
 <span data-ttu-id="5cb61-703">*toolTipContent*</span><span class="sxs-lookup"><span data-stu-id="5cb61-703">*toolTipContent*</span></span>  
 <span data-ttu-id="5cb61-704">Строка, которая становится отображаемый текст для <xref:System.Windows.FrameworkContentElement.ToolTip%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-704">A string that becomes the display text for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>.</span></span>  
  
 <span data-ttu-id="5cb61-705">*toolTipObjectContent*</span><span class="sxs-lookup"><span data-stu-id="5cb61-705">*toolTipObjectContent*</span></span>  
 <span data-ttu-id="5cb61-706">Некоторые объектом, указанным в форме элемента объекта, который должен использоваться как содержимое <xref:System.Windows.FrameworkContentElement> .</span><span class="sxs-lookup"><span data-stu-id="5cb61-706">Some object, provided in object element form, that should be used as the content for the <xref:System.Windows.FrameworkContentElement> .</span></span> <span data-ttu-id="5cb61-707">Обычно это было бы <xref:System.Windows.FrameworkElement> или другой элемент, который создает композиции макета для <xref:System.Windows.FrameworkContentElement.ToolTip%2A>, со временем, содержащий текстовое содержимое в композиции.</span><span class="sxs-lookup"><span data-stu-id="5cb61-707">Typically this would be a <xref:System.Windows.FrameworkElement> or some other element that creates layout compositing for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>, eventually containing text content within the compositing.</span></span> <span data-ttu-id="5cb61-708">При таком использовании <xref:System.Windows.Controls.ToolTip> создается элемент неявно из проанализированный [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]и *toolTipObjectContent* содержимое устанавливается в качестве его <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="5cb61-708">In this usage, the <xref:System.Windows.Controls.ToolTip> element is created implicitly from the parsed [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], and the *toolTipObjectContent* content is set as its <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="5cb61-709"><`ToolTip` .../></span><span class="sxs-lookup"><span data-stu-id="5cb61-709"><`ToolTip` .../></span></span>  
 <span data-ttu-id="5cb61-710">См. раздел <xref:System.Windows.Controls.ToolTip>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-710">See <xref:System.Windows.Controls.ToolTip>.</span></span>  
  
<a name="dependencyPropertyInfo_ToolTip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5cb61-711">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="5cb61-711">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-712">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-712">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ToolTipProperty>|  
|<span data-ttu-id="5cb61-713">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="5cb61-713">Metadata properties set to `true`</span></span>|<span data-ttu-id="5cb61-714">Нет</span><span class="sxs-lookup"><span data-stu-id="5cb61-714">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-715">В следующем примере значение <xref:System.Windows.FrameworkElement.ToolTip%2A> свойства непосредственно в строку.</span><span class="sxs-lookup"><span data-stu-id="5cb61-715">The following example sets the value of the <xref:System.Windows.FrameworkElement.ToolTip%2A> property directly to a string.</span></span>  
  
 [!code-csharp[TableSnippets2#_Table_RowGroups_ManipRows](~/samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets2/CSharp/Window1.xaml.cs#_table_rowgroups_maniprows)]
 [!code-vb[TableSnippets2#_Table_RowGroups_ManipRows](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TableSnippets2/visualbasic/window1.xaml.vb#_table_rowgroups_maniprows)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ToolTipEventHandler ToolTipClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ToolTipEventHandler ToolTipClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.ToolTipClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ToolTipClosing As ToolTipEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ToolTipEventHandler ^ ToolTipClosing;" />
      <MemberSignature Language="F#" Value="member this.ToolTipClosing : System.Windows.Controls.ToolTipEventHandler " Usage="member this.ToolTipClosing : System.Windows.Controls.ToolTipEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ToolTipEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-716">Происходит непосредственно перед закрытием какой-либо подсказки в элементе.</span><span class="sxs-lookup"><span data-stu-id="5cb61-716">Occurs just before any tooltip on the element is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-717">Чтобы подавить закрытие подсказки, обработчики события следует пометить его как обработанное.</span><span class="sxs-lookup"><span data-stu-id="5cb61-717">To suppress closing the tooltip, handlers of the event should mark it as handled.</span></span>  
  
 <span data-ttu-id="5cb61-718">Это событие не может быть <xref:System.Windows.EventTrigger> в стиле.</span><span class="sxs-lookup"><span data-stu-id="5cb61-718">This event cannot be an <xref:System.Windows.EventTrigger> in a style.</span></span> <span data-ttu-id="5cb61-719">Это потому, что поле идентификатора данного события повторно использует реализацию из службы, не предоставляет методы для добавления/удаления события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-719">This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.</span></span>  
  
<a name="routedEventInfo_ToolTipClosing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5cb61-720">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="5cb61-720">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-721">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-721">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ToolTipClosingEvent>|  
|<span data-ttu-id="5cb61-722">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="5cb61-722">Routing strategy</span></span>|<span data-ttu-id="5cb61-723">Direct</span><span class="sxs-lookup"><span data-stu-id="5cb61-723">Direct</span></span>|  
|<span data-ttu-id="5cb61-724">делегат</span><span class="sxs-lookup"><span data-stu-id="5cb61-724">Delegate</span></span>|<xref:System.Windows.Controls.ToolTipEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ToolTipClosingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ToolTipClosingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ToolTipClosingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipClosingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ToolTipClosingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipClosingEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkContentElement.ToolTipClosingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-725">Идентифицирует <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> [Обзор маршрутизированных событий](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-725">Identifies the <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-726">Объекты идентификатор события, создаваемые при их регистрации (см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) и затем может использоваться для добавления обработчиков классов (см. в разделе <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="5cb61-726">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="5cb61-727">Идентификатор объекты содержат уникальное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-727">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpening">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ToolTipEventHandler ToolTipOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ToolTipEventHandler ToolTipOpening" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.ToolTipOpening" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ToolTipOpening As ToolTipEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ToolTipEventHandler ^ ToolTipOpening;" />
      <MemberSignature Language="F#" Value="member this.ToolTipOpening : System.Windows.Controls.ToolTipEventHandler " Usage="member this.ToolTipOpening : System.Windows.Controls.ToolTipEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ToolTipEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-728">Происходит при открытии любой всплывающей подсказки к элементу.</span><span class="sxs-lookup"><span data-stu-id="5cb61-728">Occurs when any tooltip on the element is opened.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-729">Вручную открыть всплывающие подсказки, обработчики событий следует помечать соответствующее событие как обработанное.</span><span class="sxs-lookup"><span data-stu-id="5cb61-729">To manually open tooltips, handlers of the events should mark the relevant event as handled.</span></span> <span data-ttu-id="5cb61-730">В противном случае — значение <xref:System.Windows.FrameworkContentElement.ToolTip%2A> свойство будет использоваться для автоматического открытия контекстного меню.</span><span class="sxs-lookup"><span data-stu-id="5cb61-730">Otherwise, the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property will be used to automatically open a context menu.</span></span> <span data-ttu-id="5cb61-731">Маркировка события как обработанного эффективно отменит действие по умолчанию и может быть возможность сбросить значение <xref:System.Windows.FrameworkContentElement.ToolTip%2A> свойство и откройте новый <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="5cb61-731">Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>.</span></span> <span data-ttu-id="5cb61-732">Обратите внимание, что это событие не будет вызываться, если <xref:System.Windows.FrameworkContentElement.ToolTip%2A> является пустой ссылкой или иным способом не задано.</span><span class="sxs-lookup"><span data-stu-id="5cb61-732">Note that this event will not be raised if <xref:System.Windows.FrameworkContentElement.ToolTip%2A> is a null reference or otherwise unset.</span></span>  
  
 <span data-ttu-id="5cb61-733">Это событие не может быть <xref:System.Windows.EventTrigger> в стиле.</span><span class="sxs-lookup"><span data-stu-id="5cb61-733">This event cannot be an <xref:System.Windows.EventTrigger> in a style.</span></span> <span data-ttu-id="5cb61-734">Это потому, что поле идентификатора данного события повторно использует реализацию из службы, не предоставляет методы для добавления/удаления события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-734">This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.</span></span>  
  
<a name="routedEventInfo_ToolTipOpening"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5cb61-735">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="5cb61-735">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-736">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-736">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ToolTipOpeningEvent>|  
|<span data-ttu-id="5cb61-737">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="5cb61-737">Routing strategy</span></span>|<span data-ttu-id="5cb61-738">Direct</span><span class="sxs-lookup"><span data-stu-id="5cb61-738">Direct</span></span>|  
|<span data-ttu-id="5cb61-739">делегат</span><span class="sxs-lookup"><span data-stu-id="5cb61-739">Delegate</span></span>|<xref:System.Windows.Controls.ToolTipEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpeningEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ToolTipOpeningEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ToolTipOpeningEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ToolTipOpeningEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipOpeningEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ToolTipOpeningEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipOpeningEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkContentElement.ToolTipOpeningEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-740">Идентифицирует <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> [Обзор маршрутизированных событий](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-740">Identifies the <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-741">Объекты идентификатор события, создаваемые при их регистрации (см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) и затем может использоваться для добавления обработчиков классов (см. в разделе <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="5cb61-741">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="5cb61-742">Идентификатор объекты содержат уникальное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-742">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ToolTipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ToolTipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ToolTipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ToolTipProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkContentElement.ToolTipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-743">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkContentElement.ToolTip" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-743">Identifies the <see cref="P:System.Windows.FrameworkContentElement.ToolTip" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFindResource">
      <MemberSignature Language="C#" Value="public object TryFindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object TryFindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.TryFindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ TryFindResource(System::Object ^ resourceKey);" />
      <MemberSignature Language="F#" Value="member this.TryFindResource : obj -&gt; obj" Usage="frameworkContentElement.TryFindResource resourceKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey"><span data-ttu-id="5cb61-744">Идентификатор ключа искомого ресурса.</span><span class="sxs-lookup"><span data-stu-id="5cb61-744">Key identifier of the resource to be found.</span></span></param>
        <summary><span data-ttu-id="5cb61-745">Ищет ресурс с указанным ключом и возвращает его, если он найден.</span><span class="sxs-lookup"><span data-stu-id="5cb61-745">Searches for a resource with the specified key, and returns that resource if found.</span></span></summary>
        <returns><span data-ttu-id="5cb61-746">Найденный ресурс.</span><span class="sxs-lookup"><span data-stu-id="5cb61-746">The found resource.</span></span> <span data-ttu-id="5cb61-747">Если не удалось найти ресурс, возвращается <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-747">If no resource was found, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-748">Если ресурс не найден в вызывающем элементе, родительское дерево выполняется поиск, с помощью логического дерева таким же образом, который бы выполнялся поиск, если ссылка на динамический ресурс был запрошен по ключу во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="5cb61-748">If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a dynamic resource reference were requested by key at run-time.</span></span>  
  
 <span data-ttu-id="5cb61-749">Обычно вы сразу же привести возвращаемое значение к типу свойства, которое вы пытаетесь значения возвращаемым ресурсом.</span><span class="sxs-lookup"><span data-stu-id="5cb61-749">Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.</span></span>  
  
 <span data-ttu-id="5cb61-750"><xref:System.Windows.FrameworkContentElement.FindResource%2A> Метод имеет аналогичное поведение, за исключением того, что он приведет к возникновению исключения в случае отсутствия ресурса с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="5cb61-750">The <xref:System.Windows.FrameworkContentElement.FindResource%2A> method has similar behavior, except that it will throw an exception in the case of not finding a resource with the provided key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cb61-751">Следующий пример находит ресурс, определенный в разметке и применяет его к определенному свойству элемента в ответ на перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="5cb61-751">The following example finds a resource as defined in markup and applies it to a certain property of an element in response to a routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#TryFindResource](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#tryfindresource)]
 [!code-vb[ContentElementsSmorgasbord#TryFindResource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#tryfindresource)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkContentElement.FindResource(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unloaded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Unloaded;" />
      <MemberSignature Language="F#" Value="member this.Unloaded : System.Windows.RoutedEventHandler " Usage="member this.Unloaded : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-752">Происходит при удалении элемента из дерева загруженных элементов.</span><span class="sxs-lookup"><span data-stu-id="5cb61-752">Occurs when the element is removed from an element tree of loaded elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-753">События с прямой маршрутизацией не выполняйте маршрут, они обрабатываются только внутри элемента, на котором они вызываются.</span><span class="sxs-lookup"><span data-stu-id="5cb61-753">Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</span></span> <span data-ttu-id="5cb61-754">Прямые перенаправленные события поддерживают другие поведения перенаправленного события: они поддерживают коллекцию доступных обработчиков и могут использоваться в качестве <xref:System.Windows.EventTrigger> в стиле.</span><span class="sxs-lookup"><span data-stu-id="5cb61-754">Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.</span></span>  
  
<a name="routedEventInfo_Unloaded"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5cb61-755">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="5cb61-755">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5cb61-756">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="5cb61-756">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.UnloadedEvent>|  
|<span data-ttu-id="5cb61-757">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="5cb61-757">Routing strategy</span></span>|<span data-ttu-id="5cb61-758">Direct</span><span class="sxs-lookup"><span data-stu-id="5cb61-758">Direct</span></span>|  
|<span data-ttu-id="5cb61-759">делегат</span><span class="sxs-lookup"><span data-stu-id="5cb61-759">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent UnloadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent UnloadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.UnloadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnloadedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ UnloadedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnloadedEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkContentElement.UnloadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cb61-760">Идентифицирует <see cref="E:System.Windows.FrameworkContentElement.Unloaded" /> [Обзор маршрутизированных событий](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5cb61-760">Identifies the <see cref="E:System.Windows.FrameworkContentElement.Unloaded" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-761">Объекты идентификатор события, создаваемые при их регистрации (см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) и затем может использоваться для добавления обработчиков классов (см. в разделе <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="5cb61-761">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="5cb61-762">Идентификатор объекты содержат уникальное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="5cb61-762">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.UnregisterName : string -&gt; unit" Usage="frameworkContentElement.UnregisterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5cb61-763">Имя пары имя-объект, которую необходимо удалить из текущей области видимости.</span><span class="sxs-lookup"><span data-stu-id="5cb61-763">Name of the name-object pair to remove from the current scope.</span></span></param>
        <summary><span data-ttu-id="5cb61-764">Упрощает доступ к методу отмены регистрации <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-764">Simplifies access to the <see cref="T:System.Windows.NameScope" /> de-registration method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cb61-765">Требуется отменять регистрацию имен Если планируется повторно зарегистрировать другой элемент с таким же именем.</span><span class="sxs-lookup"><span data-stu-id="5cb61-765">You only need to un-register names if you intend to re-register another element with that same name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)" />
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDefaultStyle">
      <MemberSignature Language="C#" Value="public void UpdateDefaultStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateDefaultStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.UpdateDefaultStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateDefaultStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateDefaultStyle();" />
      <MemberSignature Language="F#" Value="member this.UpdateDefaultStyle : unit -&gt; unit" Usage="frameworkContentElement.UpdateDefaultStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5cb61-766">Повторно применяет стиль по умолчанию к текущему объекту <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="5cb61-766">Reapplies the default style to the current <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>