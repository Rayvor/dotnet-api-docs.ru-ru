<Type Name="LogicalTreeHelper" FullName="System.Windows.LogicalTreeHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0ea4471d2a29b70a6214ef483c4841369c1364f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70659706" /></Metadata><TypeSignature Language="C#" Value="public static class LogicalTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LogicalTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LogicalTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class LogicalTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalTreeHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type LogicalTreeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="01d43-101">Предоставляет статические вспомогательные методы для запроса объектов в логическом дереве.</span><span class="sxs-lookup"><span data-stu-id="01d43-101">Provides static helper methods for querying objects in the logical tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01d43-102"><xref:System.Windows.LogicalTreeHelper> Класс предоставляет методы, которые можно использовать для возврата дочерних коллекций объектов или конкретных объектов из подузлов логического дерева.</span><span class="sxs-lookup"><span data-stu-id="01d43-102">The <xref:System.Windows.LogicalTreeHelper> class provides methods that you can use to return child collections of objects, or specific objects from within subnodes of the logical tree.</span></span> <span data-ttu-id="01d43-103">Однако большинство операций в дереве объектов, которые обычно выполняются, также предоставляются аналогичными методами или свойствами в <xref:System.Windows.FrameworkElement> или. <xref:System.Windows.FrameworkContentElement></span><span class="sxs-lookup"><span data-stu-id="01d43-103">However, most of the object tree operations that you typically perform are also exposed by similar methods or properties on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="01d43-104">Например, попробуйте выполнить следующие действия.</span><span class="sxs-lookup"><span data-stu-id="01d43-104">For example, try the following:</span></span>  
  
-   <span data-ttu-id="01d43-105">Вместо вызова статического <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> метода, который возвращает перечислитель для логических дочерних объектов, используйте выделенную коллекцию, доступную в модели содержимого для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="01d43-105">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> method, which returns an enumerator for the logical child objects, use the dedicated collection exposed in the content model for that object.</span></span> <span data-ttu-id="01d43-106">Почти все объекты, поддерживающие модель содержимого, предоставляют некоторое свойство, содержащее коллекцию дочерних объектов, и предоставляет поддержку интерфейса коллекции непосредственно в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="01d43-106">Nearly all objects that support a content model expose some property that contains the collection of child objects, and provides collection interface support directly on that collection.</span></span>  
  
-   <span data-ttu-id="01d43-107">Вместо вызова статического <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> метода для получения дочернего объекта путем указания его имени <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> вызовите метод или <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> для конкретных объектов.</span><span class="sxs-lookup"><span data-stu-id="01d43-107">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> method to obtain a child object by specifying its name, call the <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> method on specific objects.</span></span>  
  
 <span data-ttu-id="01d43-108"><xref:System.Windows.LogicalTreeHelper>наиболее удобен в сценариях анализа, когда логическое дерево перемещается вверх или вниз по нескольким уровням и требуется использовать единообразный подход для проверки различных родительских или дочерних объектов.</span><span class="sxs-lookup"><span data-stu-id="01d43-108"><xref:System.Windows.LogicalTreeHelper> is most useful for analysis scenarios where you are traveling up or down the logical tree recursively through multiple levels, and want to use a consistent approach for examining the various parent or child objects.</span></span> <span data-ttu-id="01d43-109">В этом случае вы можете получить доступ к сочетаниям моделей содержимого, а использование других интерфейсов API для модели содержимого будет слишком сложным.</span><span class="sxs-lookup"><span data-stu-id="01d43-109">In this case, you might be accessing a mixture of content models, and using the more content-model specific APIs would be too complex.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public static void BringIntoView (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BringIntoView(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BringIntoView (current As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BringIntoView(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member BringIntoView : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.LogicalTreeHelper.BringIntoView current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="01d43-110">Элемент пользовательского интерфейса, который требуется сделать видимым.</span><span class="sxs-lookup"><span data-stu-id="01d43-110">The UI element to bring into view.</span></span></param>
        <summary><span data-ttu-id="01d43-111">Пытается сделать видимым запрошенный элемент пользовательского интерфейса и порождает событие <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> для целевого объекта, чтобы сообщить результаты.</span><span class="sxs-lookup"><span data-stu-id="01d43-111">Attempts to bring the requested UI element into view and raises the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event on the target in order to report the results.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01d43-112">Как правило, более удобно вызывать методы <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> экземпляра или <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> , а не статический служебный метод.</span><span class="sxs-lookup"><span data-stu-id="01d43-112">It is typically more convenient to call the instance methods <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> rather than this static utility method.</span></span> <span data-ttu-id="01d43-113">Поведение методов экземпляра эквивалентно поведению статического метода.</span><span class="sxs-lookup"><span data-stu-id="01d43-113">The behavior of the instance methods is equivalent to the behavior of the static method.</span></span>  
  
 <span data-ttu-id="01d43-114">Даже если `current` предоставленным элементом пользовательского интерфейса является <xref:System.Windows.FrameworkContentElement>, полученное событие по-прежнему будет <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> иметь то же самое событие с <xref:System.Windows.FrameworkContentElement> источником, идентифицируемым путем проверки данных события события.</span><span class="sxs-lookup"><span data-stu-id="01d43-114">Even if the `current` UI element provided was a <xref:System.Windows.FrameworkContentElement>, the resulting event is still the same <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> event, with the originating <xref:System.Windows.FrameworkContentElement> identifiable by checking the event data of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      </Docs>
    </Member>
    <Member MemberName="FindLogicalNode">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject FindLogicalNode(class System.Windows.DependencyObject logicalTreeNode, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLogicalNode (logicalTreeNode As DependencyObject, elementName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ FindLogicalNode(System::Windows::DependencyObject ^ logicalTreeNode, System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="static member FindLogicalNode : System.Windows.DependencyObject * string -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.FindLogicalNode (logicalTreeNode, elementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalTreeNode" Type="System.Windows.DependencyObject" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logicalTreeNode"><span data-ttu-id="01d43-115">Объект, с которого должен начаться поиск.</span><span class="sxs-lookup"><span data-stu-id="01d43-115">The object to start searching from.</span></span> <span data-ttu-id="01d43-116">Этот объект должен принадлежать к типу <see cref="T:System.Windows.FrameworkElement" /> или <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="01d43-116">This object must be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></param>
        <param name="elementName"><span data-ttu-id="01d43-117">Имя искомого объекта.</span><span class="sxs-lookup"><span data-stu-id="01d43-117">The name of the object to find.</span></span></param>
        <summary><span data-ttu-id="01d43-118">Пытается найти и возвратить объект с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="01d43-118">Attempts to find and return an object that has the specified name.</span></span> <span data-ttu-id="01d43-119">Поиск начинается с заданного объекта, после чего переходит в подузлы логического дерева.</span><span class="sxs-lookup"><span data-stu-id="01d43-119">The search starts from the specified object and continues into subnodes of the logical tree.</span></span></summary>
        <returns><span data-ttu-id="01d43-120">Объект с соответствующим именем (в случае нахождения); значение <see langword="null" />, если соответствующее имя в логическом дереве не обнаружено.</span><span class="sxs-lookup"><span data-stu-id="01d43-120">The object with the matching name, if one is found; returns <see langword="null" /> if no matching name was found in the logical tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01d43-121">Методы <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>и <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> внешне похожи на, но работают с другой логикой:</span><span class="sxs-lookup"><span data-stu-id="01d43-121">The methods <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> and <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> are superficially similar to <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, but operate by different logic:</span></span>  
  
-   <span data-ttu-id="01d43-122">Направление поиска для <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> — дочерние объекты (вниз по дереву); направление поиска `FindName` для методов приближается к родительским объектам (вверх по дереву).</span><span class="sxs-lookup"><span data-stu-id="01d43-122">The search direction for <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> is toward child objects (down the tree); the search direction for the `FindName` methods is towards parent objects (up the tree).</span></span>  
  
-   <span data-ttu-id="01d43-123">`FindName` Методы определяются концепцией области имен XAML.</span><span class="sxs-lookup"><span data-stu-id="01d43-123">The `FindName` methods are governed by the concept of a XAML namescope.</span></span> <span data-ttu-id="01d43-124">С `FindName` помощью вы гарантируете, что существует только один объект с таким именем, так как области имен XAML обеспечивают уникальность.</span><span class="sxs-lookup"><span data-stu-id="01d43-124">Using `FindName` you are guaranteed that only one object of that name exists, because XAML namescopes enforce uniqueness.</span></span> <span data-ttu-id="01d43-125">В отличие от <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> них, не учитывает область имен XAML и может пересекать границы области имен XAML во время поиска.</span><span class="sxs-lookup"><span data-stu-id="01d43-125">In contrast, <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ignores XAML namescope and might cross XAML namescope boundaries during the search.</span></span> <span data-ttu-id="01d43-126">Таким образом, уникальность `elementName` имени не гарантируется после того, как границы будут перепутаны.</span><span class="sxs-lookup"><span data-stu-id="01d43-126">As such, there is no guarantee of uniqueness of the `elementName` name once boundaries are crossed.</span></span> <span data-ttu-id="01d43-127">Дополнительные сведения об областях имен XAML см. в разделе [области имен XAML WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="01d43-127">For more information about XAML namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildren">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01d43-128">Возвращает коллекцию непосредственных дочерних объектов заданного объекта путем обработки логического дерева.</span><span class="sxs-lookup"><span data-stu-id="01d43-128">Returns the collection of immediate child objects of the specified object by processing the logical tree.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As DependencyObject) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.DependencyObject -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="01d43-129">Объект, с которого должна начинаться обработка логического дерева.</span><span class="sxs-lookup"><span data-stu-id="01d43-129">The object from which to start processing the logical tree.</span></span> <span data-ttu-id="01d43-130">Предполагается, что данный объект будет <see cref="T:System.Windows.FrameworkElement" /> или <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="01d43-130">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></param>
        <summary><span data-ttu-id="01d43-131">Возвращает коллекцию непосредственных дочерних объектов заданного объекта путем обработки логического дерева.</span><span class="sxs-lookup"><span data-stu-id="01d43-131">Returns the collection of immediate child objects of the specified object, by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="01d43-132">Перечисляемая коллекция непосредственных дочерних объектов из логического дерева указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="01d43-132">The enumerable collection of immediate child objects from the logical tree of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01d43-133">Используйте эту сигнатуру и вспомогательный метод, в основном, если `current` вы не <xref:System.Windows.FrameworkElement> уверены <xref:System.Windows.FrameworkContentElement> , что является или и не уверены, поддерживает ли класс этого объекта собственную коллекцию моделей содержимого.</span><span class="sxs-lookup"><span data-stu-id="01d43-133">Use this signature and helper method primarily when you are unsure whether `current` is a <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> and are also unsure whether that object's class supports its own content model collection.</span></span> <span data-ttu-id="01d43-134">Если вы можете определить тип объекта, для которого выполняется запрос, проверьте конкретное свойство содержимого, которое вы уже определили для этого типа.</span><span class="sxs-lookup"><span data-stu-id="01d43-134">If you can determine the type of the object you are querying, check the specific content property that you know exists on that type.</span></span> <span data-ttu-id="01d43-135">Например, если известно, что запрашиваемый объект является <xref:System.Windows.Controls.ItemsControl>, <xref:System.Windows.Controls.ItemsControl.Items%2A> проверьте свойство, чтобы получить строго типизированную коллекцию, которая имеет поддержку интерфейса коллекции и, вероятно, более полезна, чем перечислитель.</span><span class="sxs-lookup"><span data-stu-id="01d43-135">For example, if you know that the object you are querying is an <xref:System.Windows.Controls.ItemsControl>, check the <xref:System.Windows.Controls.ItemsControl.Items%2A> property to get a strongly typed collection, which has collection interface support and is probably more useful than an enumerator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkContentElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkContentElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkContentElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkContentElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="01d43-136">Объект, с которого должна начинаться обработка логического дерева.</span><span class="sxs-lookup"><span data-stu-id="01d43-136">The object from which to start processing the logical tree.</span></span></param>
        <summary><span data-ttu-id="01d43-137">Возвращает коллекцию непосредственных дочерних объектов заданного объекта <see cref="T:System.Windows.FrameworkContentElement" /> путем обработки логического дерева.</span><span class="sxs-lookup"><span data-stu-id="01d43-137">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkContentElement" /> by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="01d43-138">Перечисляемая коллекция непосредственных дочерних объектов в логическом дереве, начиная с объекта в параметре <paramref name="current" />.</span><span class="sxs-lookup"><span data-stu-id="01d43-138">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="01d43-139">Объект, с которого должна начинаться обработка логического дерева.</span><span class="sxs-lookup"><span data-stu-id="01d43-139">The object from which to start processing the logical tree.</span></span></param>
        <summary><span data-ttu-id="01d43-140">Возвращает коллекцию непосредственных дочерних объектов заданного объекта <see cref="T:System.Windows.FrameworkElement" /> путем обработки логического дерева.</span><span class="sxs-lookup"><span data-stu-id="01d43-140">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkElement" /> by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="01d43-141">Перечисляемая коллекция непосредственных дочерних объектов в логическом дереве, начиная с объекта в параметре <paramref name="current" />.</span><span class="sxs-lookup"><span data-stu-id="01d43-141">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (current As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetParent : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.GetParent current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="01d43-142">Объект, для которого требуется найти родительский объект.</span><span class="sxs-lookup"><span data-stu-id="01d43-142">The object to find the parent object for.</span></span> <span data-ttu-id="01d43-143">Предполагается, что этот объект будет принадлежать к типу <see cref="T:System.Windows.FrameworkElement" /> или типу <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="01d43-143">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></param>
        <summary><span data-ttu-id="01d43-144">Возвращает родительский объект заданного объекта путем обработки логического дерева.</span><span class="sxs-lookup"><span data-stu-id="01d43-144">Returns the parent object of the specified object by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="01d43-145">Запрошенный родительский объект.</span><span class="sxs-lookup"><span data-stu-id="01d43-145">The requested parent object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01d43-146">Этот метод является просто оболочкой, которая получает соответствующую версию типа (<xref:System.Windows.FrameworkElement> или <xref:System.Windows.FrameworkContentElement>) <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> свойства или <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> ; поэтому, если не удается определить `current` тип, может потребоваться проверить соответствующий Вместо этого следует использовать свойства экземпляра.</span><span class="sxs-lookup"><span data-stu-id="01d43-146">This method is merely a wrapper that gets the appropriate type version (<xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>) of the <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> property; so unless you are unable to determine the `current` type, you might want to check the respective instance properties instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
