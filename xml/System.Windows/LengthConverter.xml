<Type Name="LengthConverter" FullName="System.Windows.LengthConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa65b4410c72835c5b977942d8d33b6a4e6e7ae2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444482" /></Metadata><TypeSignature Language="C#" Value="public class LengthConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LengthConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LengthConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class LengthConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class LengthConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type LengthConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Преобразует экземпляры других типов в экземпляры <see cref="T:System.Double" /> и обратно для представления длины объекта.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.LengthConverter>поддерживает преобразование в следующие типы и из следующих типов <xref:System.String>: <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16> <xref:System.Int32>,, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, и <xref:System.UInt64>.  
  
## Examples  
 В следующем примере показано, как создать и использовать экземпляр <xref:System.Windows.LengthConverter> объекта. Определен пользовательский метод с `ChangeLeft` именем, который преобразует содержимое <xref:System.Windows.Controls.ListBoxItem> (определенное в отдельном [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] файле) в экземпляр <xref:System.Double>, а затем в <xref:System.String>. Этот <xref:System.Windows.Controls.ListBoxItem> метод передает <xref:System.Double>в <xref:System.Windows.LengthConverter> <xref:System.Windows.Controls.ListBoxItem> объект,который<xref:System.Windows.Controls.ContentControl.Content%2A> преобразует в экземпляр. Обратите внимание, что это значение уже было преобразовано <xref:System.String> в с <xref:System.Windows.Controls.Control.ToString%2A> помощью метода. Затем это значение передается <xref:System.Windows.Controls.Canvas.SetLeft%2A> обратно методу <xref:System.Windows.Controls.Canvas.GetLeft%2A> и методу, <xref:System.Windows.Controls.Canvas> чтобы изменить расположение `text1` объекта.  
  
 [!code-csharp[CanvasPositioningProperties#2](~/samples/snippets/csharp/VS_Snippets_Wpf/CanvasPositioningProperties/CSharp/Window1.xaml.cs#2)]
 [!code-vb[CanvasPositioningProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CanvasPositioningProperties/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LengthConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LengthConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LengthConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.LengthConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (typeDescriptorContext As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="lengthConverter.CanConvertFrom (typeDescriptorContext, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">Предоставляет контекстные сведения по компоненту.</param>
        <param name="sourceType">Идентифицирует тип оцениваемых данных для преобразования.</param>
        <summary>Определяет, возможно ли преобразование из указанного типа в <see cref="T:System.Double" />, представляющий длину объекта.</summary>
        <returns><see langword="true" />, если преобразование возможно, в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.LengthConverter>поддерживает преобразование в следующие типы и из следующих типов <xref:System.String>: <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16> <xref:System.Int32>,, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, и <xref:System.UInt64>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (typeDescriptorContext As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="lengthConverter.CanConvertTo (typeDescriptorContext, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">Предоставляет контекстные сведения по компоненту.</param>
        <param name="destinationType">Идентифицирует тип оцениваемых данных для преобразования.</param>
        <summary>Определяет, возможно ли преобразование в указанный тип из <see cref="T:System.Double" />, представляющего длину объекта.</summary>
        <returns><see langword="true" />, если преобразование в тип <paramref name="destinationType" /> возможно; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.LengthConverter><xref:System.String>поддерживает преобразование следующих типов:, <xref:System.Int16> ,,,,<xref:System.Int32> ,<xref:System.Int64> ,<xref:System.UInt64>, и<xref:System.UInt32>. <xref:System.UInt16> <xref:System.Double> <xref:System.Single> <xref:System.Decimal>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, System::Globalization::CultureInfo ^ cultureInfo, System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="lengthConverter.ConvertFrom (typeDescriptorContext, cultureInfo, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">Предоставляет контекстные сведения по компоненту.</param>
        <param name="cultureInfo">Представляет информацию о языке и региональных параметрах, сохраняемую в ходе преобразования.</param>
        <param name="source">Идентифицирует объект, преобразуемый в тип <see cref="T:System.Double" />.</param>
        <summary>Преобразует экземпляры других типов данных в экземпляры <see cref="T:System.Double" />, представляющие длину объекта.</summary>
        <returns>Экземпляр <see cref="T:System.Double" />, являющийся значением преобразования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.LengthConverter><xref:System.String>поддерживает преобразование следующих типов:, <xref:System.Int16> ,,,,<xref:System.Int32> ,<xref:System.Int64> ,<xref:System.UInt64>, ,<xref:System.UInt32>. <xref:System.UInt16> <xref:System.Double> <xref:System.Single> <xref:System.Decimal>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Происходит, если параметр <paramref name="source" /> равен <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Происходит, если параметр <paramref name="source" /> не равен <see langword="null" /> и не является допустимым типом для преобразования.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, System::Globalization::CultureInfo ^ cultureInfo, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="lengthConverter.ConvertTo (typeDescriptorContext, cultureInfo, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">Описывает контекстную информацию о компоненте, включая его контейнер и <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
        <param name="cultureInfo">Идентифицирует информацию о языке и региональных параметрах, включая систему письма и используемый календарь.</param>
        <param name="value">Идентифицирует преобразуемый <see cref="T:System.Object" />.</param>
        <param name="destinationType">Тип данных, в который преобразуется данный экземпляр <see cref="T:System.Double" />.</param>
        <summary>Преобразует другие типы в экземпляры <see cref="T:System.Double" />, представляющие длину объекта.</summary>
        <returns>Новый <see cref="T:System.Object" />, который является значением преобразования.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Происходит, если параметр <paramref name="value" /> равен <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Происходит, если параметр <paramref name="value" /> не равен <see langword="null" /> и не является <see cref="T:System.Windows.Media.Brush" />, или если тип <paramref name="destinationType" /> недопустим.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
