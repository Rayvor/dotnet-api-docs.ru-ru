<Type Name="DependencyPropertyChangedEventArgs" FullName="System.Windows.DependencyPropertyChangedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a33524a4df14c324a5fcdb2b10f7383c87f24c3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69445063" /></Metadata><TypeSignature Language="C#" Value="public struct DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DependencyPropertyChangedEventArgs extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Structure DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public value class DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="F#" Value="type DependencyPropertyChangedEventArgs = struct" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c7ebf-101">Предоставляет данные для различных событий изменения свойств.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-101">Provides data for various property changed events.</span></span> <span data-ttu-id="c7ebf-102">Обычно такие события сообщают об изменениях действительных значений в свойстве зависимостей только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-102">Typically these events report effective value changes in the value of a read-only dependency property.</span></span> <span data-ttu-id="c7ebf-103">Также они используются как часть реализации <see cref="T:System.Windows.PropertyChangedCallback" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-103">Another usage is as part of a <see cref="T:System.Windows.PropertyChangedCallback" /> implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ebf-104">События <xref:System.Windows.DependencyPropertyChangedEventArgs> , использующие класс для данных события `Is*Changed` <xref:System.Windows.DependencyPropertyChangedEventHandler> и реализации методов для обработчиков, обычно следуют шаблону именования и обычно реализуются как [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] события без <xref:System.Windows.RoutedEvent> резервные копии (они не являются перенаправленными событиями).</span><span class="sxs-lookup"><span data-stu-id="c7ebf-104">The events that use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events).</span></span> <span data-ttu-id="c7ebf-105">Некоторые методы обработки класса, «обрабатывающие» недоступные события, которые сообщают об изменении состояния через изменение свойства, <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=nameWithType>такие как, также <xref:System.Windows.DependencyPropertyChangedEventArgs> используют класс для данных события.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-105">Some class handling methods that "handle" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=nameWithType>, also use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data.</span></span>  
  
 <span data-ttu-id="c7ebf-106">Сценарий для <xref:System.Windows.PropertyChangedCallback> заключается в использовании аргументов для сообщения старых и новых значений, полученных из оценки системы свойств свойства.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-106">The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property.</span></span> <span data-ttu-id="c7ebf-107">Обратный вызов, обрабатывающий старые и новые значения, может выбрать специальную обработку в зависимости от этих значений, например не отвечать на изменения значений, которые считаются несущественными.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-107">A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ebf-108">В следующем примере <xref:System.Windows.DependencyPropertyChangedEventArgs> класс используется в контексте <xref:System.Windows.PropertyChangedCallback> для конкретного свойства пользовательского класса, который также определяет события.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-108">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="c7ebf-109">Обратный вызов принимает результаты старых и новых значений из системы свойств в соответствии с <xref:System.Windows.DependencyPropertyChangedEventArgs>передачей, а затем переупаковывает их в другой класс <xref:System.Windows.RoutedPropertyChangedEventArgs%601>аргументов событий.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-109">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="c7ebf-110">Новые аргументы затем используются в качестве данных для события «ValueChanged», определенного и вызванного настраиваемым классом.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-110">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As DependencyProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DependencyPropertyChangedEventArgs(System::Windows::DependencyProperty ^ property, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.DependencyPropertyChangedEventArgs : System.Windows.DependencyProperty * obj * obj -&gt; System.Windows.DependencyPropertyChangedEventArgs" Usage="new System.Windows.DependencyPropertyChangedEventArgs (property, oldValue, newValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="c7ebf-111">Идентификатор для измененного свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-111">The identifier for the dependency property that changed.</span></span></param>
        <param name="oldValue"><span data-ttu-id="c7ebf-112">Значение свойства до сообщения об изменении соответствующим событием или изменением состояния.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-112">The value of the property before the change reported by the relevant event or state change.</span></span></param>
        <param name="newValue"><span data-ttu-id="c7ebf-113">Значение свойства после сообщения об изменении соответствующим событием или изменением состояния.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-113">The value of the property after the change reported by the relevant event or state change.</span></span></param>
        <summary><span data-ttu-id="c7ebf-114">Инициализирует новый экземпляр класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-114">Initializes a new instance of the <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ebf-115">Разработчикам пользовательских событий, которые сообщают об изменениях свойства зависимостей, следует использовать этот конструктор для заполнения данных события с учетом особенностей изменения, возникающих при возникновении события.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-115">Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ebf-116">Сообщает, эквивалентен ли указанный объект текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-116">Returns whether the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dependencyPropertyChangedEventArgs.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c7ebf-117">Объект для сравнения с текущим объектом <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-117">The object to compare to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="c7ebf-118">Определяет, эквивалентен ли указанный объект текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-118">Determines whether the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></summary>
        <returns><span data-ttu-id="c7ebf-119"><see langword="true" />, если указанный объект эквивалентен текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-119"><see langword="true" /> if the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ebf-120">Эта реализация основана на эквивалентности значений всех свойств, включая внутренние свойства.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-120">This implementation relies on value equivalence of all properties, including internal properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.DependencyPropertyChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (args As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::DependencyPropertyChangedEventArgs args);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.DependencyPropertyChangedEventArgs -&gt; bool" Usage="dependencyPropertyChangedEventArgs.Equals args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="c7ebf-121"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения с текущим <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-121">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></span></span></param>
        <summary><span data-ttu-id="c7ebf-122">Определяет, эквивалентен ли указанный <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-122">Determines whether the provided <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></summary>
        <returns><span data-ttu-id="c7ebf-123"><see langword="true" />, если указанный <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> эквивалентен текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-123"><see langword="true" /> if the provided <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ebf-124">Эта реализация основана на эквивалентности значений всех свойств, включая внутренние свойства.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-124">This implementation relies on value equivalence of all properties, including internal properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dependencyPropertyChangedEventArgs.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ebf-125">Возвращает хэш-код для данного объекта <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-125">Gets a hash code  for this <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></summary>
        <returns><span data-ttu-id="c7ebf-126">Хэш-код в виде 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-126">A signed 32-bit integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public object NewValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValue : obj" Usage="System.Windows.DependencyPropertyChangedEventArgs.NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7ebf-127">Возвращает значение свойства после изменения.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-127">Gets the value of the property after the change.</span></span></summary>
        <value><span data-ttu-id="c7ebf-128">Значение свойства после изменения.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-128">The property value after the change.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ebf-129">Тип предоставленного значения должен всегда быть приведен к типу сообщаемого свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-129">The type of the value provided should always be castable to the type of the dependency property being reported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ebf-130">В следующем примере <xref:System.Windows.DependencyPropertyChangedEventArgs> класс используется в контексте <xref:System.Windows.PropertyChangedCallback> для конкретного свойства пользовательского класса, который также определяет события.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-130">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="c7ebf-131">Обратный вызов принимает результаты старых и новых значений из системы свойств в соответствии с <xref:System.Windows.DependencyPropertyChangedEventArgs>передачей, а затем переупаковывает их в другой класс <xref:System.Windows.RoutedPropertyChangedEventArgs%601>аргументов событий.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-131">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="c7ebf-132">Новые аргументы затем используются в качестве данных для события «ValueChanged», определенного и вызванного настраиваемым классом.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-132">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValue">
      <MemberSignature Language="C#" Value="public object OldValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OldValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OldValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValue : obj" Usage="System.Windows.DependencyPropertyChangedEventArgs.OldValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7ebf-133">Возвращает значение свойства перед изменением.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-133">Gets the value of the property before the change.</span></span></summary>
        <value><span data-ttu-id="c7ebf-134">Значение свойства перед изменением.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-134">The property value before the change.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ebf-135">Тип предоставленного значения должен всегда быть приведен к типу сообщаемого свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-135">The type of the value provided should always be castable to the type of the dependency property being reported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ebf-136">В следующем примере <xref:System.Windows.DependencyPropertyChangedEventArgs> класс используется в контексте <xref:System.Windows.PropertyChangedCallback> для конкретного свойства пользовательского класса, который также определяет события.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-136">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="c7ebf-137">Обратный вызов принимает результаты старых и новых значений из системы свойств в соответствии с <xref:System.Windows.DependencyPropertyChangedEventArgs>передачей, а затем переупаковывает их в другой класс <xref:System.Windows.RoutedPropertyChangedEventArgs%601>аргументов событий.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-137">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="c7ebf-138">Новые аргументы затем используются в качестве данных для события «ValueChanged», определенного и вызванного настраиваемым классом.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-138">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.DependencyPropertyChangedEventArgs left, valuetype System.Windows.DependencyPropertyChangedEventArgs right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DependencyPropertyChangedEventArgs, right As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::DependencyPropertyChangedEventArgs left, System::Windows::DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.DependencyPropertyChangedEventArgs * System.Windows.DependencyPropertyChangedEventArgs -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.DependencyPropertyChangedEventArgs" />
        <Parameter Name="right" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c7ebf-139">Первый экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-139">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c7ebf-140">Второй объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-140">The second <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span></span></param>
        <summary><span data-ttu-id="c7ebf-141">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-141">Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="c7ebf-142"><see langword="true" />, если два экземпляра <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> эквивалентны; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-142"><see langword="true" /> if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ebf-143">Реализация использует ту же логику, <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>что и.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-143">The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.DependencyPropertyChangedEventArgs left, valuetype System.Windows.DependencyPropertyChangedEventArgs right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DependencyPropertyChangedEventArgs, right As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::DependencyPropertyChangedEventArgs left, System::Windows::DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.DependencyPropertyChangedEventArgs * System.Windows.DependencyPropertyChangedEventArgs -&gt; bool" Usage="System.Windows.DependencyPropertyChangedEventArgs.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.DependencyPropertyChangedEventArgs" />
        <Parameter Name="right" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c7ebf-144">Первый экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-144">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c7ebf-145">Второй экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-145">The second <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span></span></param>
        <summary><span data-ttu-id="c7ebf-146">Определяет, различаются ли два заданных объекта <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-146">Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects are different.</span></span></summary>
        <returns><span data-ttu-id="c7ebf-147"><see langword="true" />, если два экземпляра <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> различаются; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-147"><see langword="true" /> if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are different; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ebf-148">Реализация возвращает отрицание той же логики, что <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>и.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-148">The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.Property" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty" Usage="System.Windows.DependencyPropertyChangedEventArgs.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7ebf-149">Возвращает идентификатор свойства зависимостей, в котором произошло изменение значения.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-149">Gets the identifier for the dependency property where the value change occurred.</span></span></summary>
        <value><span data-ttu-id="c7ebf-150">Поле идентификатора свойства зависимостей, в котором произошло изменение значения.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-150">The identifier field of the dependency property where the value change occurred.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ebf-151">Это свойство имеет значение, если используется в общем <xref:System.Windows.PropertyChangedCallback> , зарегистрированном для нескольких свойств, и необходимо определить, какое изменение свойства вызвало обратный вызов.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-151">This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback.</span></span> <span data-ttu-id="c7ebf-152"><xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A>обычно не имеет значения для вызова событий, так как обычно существует 1:1 соответствие между свойствами и событиями, которые сообщают об изменении свойства.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-152"><xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change.</span></span> <span data-ttu-id="c7ebf-153">Событие, которое было вызвано, само по себе указывает, какое свойство изменилось.</span><span class="sxs-lookup"><span data-stu-id="c7ebf-153">The event that was raised is itself the indication of which property changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
