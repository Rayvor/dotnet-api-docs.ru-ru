<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e292cf08dc37397cb088217a8002f0ff421f6494" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75179854" /></Metadata><TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type DataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет триггер, применяющий значения свойства или выполняющий действия при соответствии связанных данных указанному условию.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>и <xref:System.Windows.DataTemplate> имеют коллекцию Triggers. <xref:System.Windows.DataTrigger> позволяет задавать значения свойств, если значение свойства объекта данных совпадает с указанным <xref:System.Windows.Condition.Value%2A>. Например, при отображении списка объектов `Employee` может потребоваться, чтобы цвет переднего плана отличался в зависимости от каждого `Employee's` текущего присутствия. (Например, `Employees`, которые в настоящее время находятся в отпуске, отображаются фиолетовым цветом.) В некоторых сценариях может оказаться более подходящим создание преобразователя или использование <xref:System.Windows.Controls.DataTemplateSelector>. Дополнительные сведения см. в разделе [Общие сведения о шаблонах данных](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 Обратите внимание, что в <xref:System.Windows.DataTrigger> необходимо указать свойства <xref:System.Windows.DataTrigger.Binding%2A> и <xref:System.Windows.DataTrigger.Value%2A>, чтобы триггер данных был осмысленным. Если одно или оба свойства не указаны, создается исключение.  
  
 Свойство <xref:System.Windows.DataTrigger.Setters%2A> объекта <xref:System.Windows.DataTrigger> может состоять только из <xref:System.Windows.Setter> объектов. Добавление дочернего <xref:System.Windows.Setter> в объект <xref:System.Windows.DataTrigger> неявно добавляет его в <xref:System.Windows.SetterBaseCollection> для объекта <xref:System.Windows.DataTrigger>. <xref:System.Windows.EventSetter> объекты не поддерживаются; <xref:System.Windows.EventSetter> объекты поддерживаются только <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> <xref:System.Windows.Controls.ListBox> привязан к *местам*, <xref:System.Collections.ObjectModel.ObservableCollection%601> объектов *размещения* . *Располагать* объекты имеют свойства *Name* и *State*.  
  
 Каждый <xref:System.Windows.Controls.ListBoxItem> <xref:System.Windows.Controls.ListBox> отображает объект *Place* . <xref:System.Windows.Style> в примере применяется к каждому <xref:System.Windows.Controls.ListBoxItem>.  
  
 <xref:System.Windows.DataTrigger> указывается таким образом, что если элемент данных *размещения* *имеет значение WA* , то передний план соответствующей <xref:System.Windows.Controls.ListBoxItem> задается красным.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 В следующем примере показано, как использовать <xref:System.Windows.DataTrigger>, <xref:System.Windows.Media.Animation.BeginStoryboard> действие и <xref:System.Windows.Media.Animation.Storyboard> для анимации свойства, когда привязанные данные соответствуют заданному условию. В примере данные инвентаризации отображаются в элементе управления <xref:System.Windows.Controls.ListBox>. В нем используется <xref:System.Windows.DataTrigger> для анимации <xref:System.Windows.UIElement.Opacity%2A> каждого <xref:System.Windows.Controls.ListBoxItem>, содержащего книгу за использование в запасах.  
  
 [!code-xaml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/AnimatePropertyStoryboards/XAML/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Введение в пример создания шаблонов данных</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Windows.DataTrigger" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.DataTrigger.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает привязку, которая дает значение свойства объекта данных.</summary>
        <value>Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства, созданное этой привязкой, сравнивается со значением, заданным свойством <xref:System.Windows.DataTrigger.Value%2A>. Это значение сначала преобразуется в тип значения привязки (если возможно), а затем два значения сравниваются с помощью метода `Object.Equals`. Если два значения равны, применяются связанные действия или методы задания.  
  
 Вы создаете привязку и используете свойство <xref:System.Windows.Data.Binding.Path%2A> для привязки к свойству определенного объекта (объекта источника привязки). Например, можно выполнить привязку к свойству *Priority* *задачи*. Более подробную информацию см. в разделе [Общие сведения о связывании данных](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Обратите внимание, что в <xref:System.Windows.DataTrigger> необходимо указать свойства <xref:System.Windows.DataTrigger.Binding%2A> и <xref:System.Windows.DataTrigger.Value%2A>, чтобы триггер данных был осмысленным. Если одно или оба свойства не заданы, возникает исключение.  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>Использование элемента свойства XAML  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *declaration*  
 Ноль или несколько предложений атрибутов, разделенных запятыми (,). Дополнительные сведения см. в разделе [Привязка расширения разметки](~/docs/framework/wpf/advanced/binding-markup-extension.md) .  
  
   
  
## Examples  
 В следующем примере <xref:System.Windows.DataTrigger> задает для <xref:System.Windows.Controls.Border.BorderBrush%2A> элемента с именем `border` значение `Yellow`, если свойство `TaskType` имеет значение `TaskType.Home`.  
  
 [!code-xaml[DataTemplatingIntro#DT](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#dt)]  
[!code-xaml[DataTemplatingIntro#DataTrigger](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#datatrigger)]  
[!code-xaml[DataTemplatingIntro#AddingMore2](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#addingmore2)]  
  
 Подробное описание этого примера см. в разделе [Общие сведения о шаблонах данных](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DataTrigger.Value" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Введение в пример создания шаблонов данных</related>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.DataTrigger.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetObject">Объект, в котором расширение разметки устанавливает значение.</param>
        <param name="eventArgs">Данные, относящиеся к обработке расширения разметки.</param>
        <summary>Обрабатывает случаи, когда расширение разметки предоставляет значение для свойства объекта <see cref="T:System.Windows.DataTrigger" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это метод, на который ссылается примененный атрибут <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> на уровне класса, что означает, что этот метод обрабатывает все попытки установки значений <xref:System.Windows.DataTrigger> с расширением разметки. Обычно этот метод не вызывается напрямую.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.DataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию объектов <see cref="T:System.Windows.Setter" />, описывающих значения свойства, применяемые при соответствии элемента данных определенному условию.</summary>
        <value>Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Использование элемента свойства XAML  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *зерурморесеттерс*  
 Ноль или более <xref:System.Windows.Setter> объектов.  
  
 <xref:System.Windows.DataTrigger> позволяет запускать действия или использовать <xref:System.Windows.Setter>s для применения значений свойств, если элемент данных соответствует заданному условию.  
  
 Если в одной коллекции задано одно и то же свойство задания, то используется метод задания, объявленный последним.  
  
 Свойство <xref:System.Windows.DataTrigger.Setters%2A> объекта <xref:System.Windows.DataTrigger> может состоять только из <xref:System.Windows.Setter> объектов. Добавление дочернего <xref:System.Windows.Setter> в объект <xref:System.Windows.DataTrigger> неявно добавляет его в <xref:System.Windows.SetterBaseCollection> для объекта <xref:System.Windows.DataTrigger>. <xref:System.Windows.EventSetter> объекты не поддерживаются; <xref:System.Windows.EventSetter> объекты поддерживаются только <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере показаны два <xref:System.Windows.DataTrigger> объектов, определенных в <xref:System.Windows.DataTemplate>. <xref:System.Windows.DataTemplate> применяется к объектам данных *AuctionItem* (не показанным в этом примере), которые имеют свойство *SpecialFeatures*.  
  
 Первая <xref:System.Windows.DataTrigger> указывает, что если объект данных имеет *SpecialFeatures* значение *Color*, то элемент отображается с `DodgerBlue`ным фоном с заголовками ВМФ. Если объект данных имеет *выделенное*значение *SpecialFeatures* , то второй <xref:System.Windows.DataTrigger> будет активным, что приведет к отображению элемента со оранжевой границей звездочкой.  
  
 Полный пример см. в разделе [Демонстрация привязки данных](https://go.microsoft.com/fwlink/?LinkID=163703).  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Введение в пример создания шаблонов данных</related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Добавляемый дочерний объект.</param>
        <summary>Добавляет дочерний объект.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.DataTrigger> приведен к типу интерфейса <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст для добавления в объект.</param>
        <summary>Добавляет текстовое содержимое узла в объект.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.DataTrigger> приведен к типу интерфейса <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.DataTrigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение для сравнения со значением свойства объекта данных.</summary>
        <value>Значение по умолчанию — <see langword="null" />. Также см. раздел "Исключения".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>Использование элемента свойства XAML  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 Это значение сравнивается со значением свойства, созданным свойством <xref:System.Windows.DataTrigger.Binding%2A> <xref:System.Windows.DataTrigger>. Данное сравнение является проверкой равенства ссылок. Если два значения равны, применяются связанные действия или методы задания.  
  
 Обратите внимание, что в <xref:System.Windows.DataTrigger> необходимо указать свойства <xref:System.Windows.DataTrigger.Binding%2A> и <xref:System.Windows.DataTrigger.Value%2A>, чтобы триггер данных был осмысленным. Если одно или оба свойства не заданы, будет создано исключение.  
  
   
  
## Examples  
 В следующем примере <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> <xref:System.Windows.Controls.ListBox> привязан к *местам*, <xref:System.Collections.ObjectModel.ObservableCollection%601> объектов *размещения* . *Располагать* объекты имеют свойства *Name* и *State*.  
  
 Каждый <xref:System.Windows.Controls.ListBoxItem> <xref:System.Windows.Controls.ListBox> отображает объект *Place* . <xref:System.Windows.Style> в примере применяется к каждому <xref:System.Windows.Controls.ListBoxItem>.  
  
 <xref:System.Windows.DataTrigger> указывается таким образом, что если элемент данных *размещения* *имеет значение WA* , то передний план соответствующей <xref:System.Windows.Controls.ListBoxItem> задается красным.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 В следующем примере показаны две <xref:System.Windows.DataTrigger>s, определенные в <xref:System.Windows.DataTemplate>. <xref:System.Windows.DataTemplate> применяется к объектам данных *AuctionItem* (не показанным в этом примере), которые имеют свойство *SpecialFeatures*. Полный пример см. в статье [Демонстрация привязки данных](https://go.microsoft.com/fwlink/?LinkID=163703) .  
  
 Первая <xref:System.Windows.DataTrigger> указывает, что если объект данных имеет *SpecialFeatures* значение *Color*, то элемент отображается с доджерблуе фоном с заголовками ВМФ. Если объект данных имеет *выделенное*значение *SpecialFeatures* , то второй <xref:System.Windows.DataTrigger> будет активным, что приведет к отображению элемента со оранжевой границей звездочкой.  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Выражения не поддерживаются. Привязки не поддерживаются.</exception>
        <altmember cref="P:System.Windows.DataTrigger.Binding" />
        <altmember cref="P:System.Windows.DataTrigger.Setters" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Введение в пример создания шаблонов данных</related>
      </Docs>
    </Member>
  </Members>
</Type>
