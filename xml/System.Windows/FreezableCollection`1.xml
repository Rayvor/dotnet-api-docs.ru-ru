<Type Name="FreezableCollection&lt;T&gt;" FullName="System.Windows.FreezableCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e048a4b30d5bdeda6c34018bbb5231b91a0d8ec" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70512815" /></Metadata><TypeSignature Language="C#" Value="public class FreezableCollection&lt;T&gt; : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged where T : DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FreezableCollection`1&lt;(class System.Windows.DependencyObject) T&gt; extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FreezableCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class FreezableCollection(Of T)&#xA;Inherits Animatable&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), INotifyCollectionChanged, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : DependencyObjectpublic ref class FreezableCollection : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type FreezableCollection&lt;'T (requires 'T :&gt; DependencyObject)&gt; = class&#xA;    inherit Animatable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface ICollection&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface seq&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface INotifyCollectionChanged&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="47e5b-101">Тип коллекции.</span><span class="sxs-lookup"><span data-stu-id="47e5b-101">The type of collection.</span></span> <span data-ttu-id="47e5b-102">Этот тип должен быть <see cref="T:System.Windows.DependencyObject" /> или производным классом.</span><span class="sxs-lookup"><span data-stu-id="47e5b-102">This type must be a <see cref="T:System.Windows.DependencyObject" /> or a derived class.</span></span></typeparam>
    <summary><span data-ttu-id="47e5b-103">Представляет коллекцию объектов <see cref="T:System.Windows.DependencyObject" />, <see cref="T:System.Windows.Freezable" /> или <see cref="T:System.Windows.Media.Animation.Animatable" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-103">Represents a collection of <see cref="T:System.Windows.DependencyObject" />, <see cref="T:System.Windows.Freezable" />, or <see cref="T:System.Windows.Media.Animation.Animatable" /> objects.</span></span> <span data-ttu-id="47e5b-104"><see cref="T:System.Windows.FreezableCollection`1" /> сам по себе является типом <see cref="T:System.Windows.Media.Animation.Animatable" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-104"><see cref="T:System.Windows.FreezableCollection`1" /> is itself an <see cref="T:System.Windows.Media.Animation.Animatable" /> type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-105">Этот класс предоставляется для обеспечения возможности создания пользовательских типов коллекций, которые полностью поддерживают привязку данных, уведомления об изменении, недействительность свойств и анимацию его содержимого.</span><span class="sxs-lookup"><span data-stu-id="47e5b-105">This class is provided to enable the creation of custom collection types that fully support data binding, change notification, property invalidation, and animation of its contents.</span></span>  
  
### <a name="xaml-usage-for-freezablecollection"></a><span data-ttu-id="47e5b-106">Использование XAML для FreezableCollection</span><span class="sxs-lookup"><span data-stu-id="47e5b-106">XAML Usage for FreezableCollection</span></span>  
 <span data-ttu-id="47e5b-107"><xref:System.Windows.FreezableCollection%601>поддерживает ограниченный [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксис.</span><span class="sxs-lookup"><span data-stu-id="47e5b-107"><xref:System.Windows.FreezableCollection%601> supports a limited [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span>  
  
-   <span data-ttu-id="47e5b-108">Как элемент Object в корне, теоретически можно указать неограниченный <xref:System.Windows.FreezableCollection%601> объектный элемент, который также должен указывать [директиву x:TypeArguments](~/docs/framework/xaml-services/x-typearguments-directive.md) для объявления ограничения.</span><span class="sxs-lookup"><span data-stu-id="47e5b-108">As an object element at the root, you can theoretically specify an unconstrained <xref:System.Windows.FreezableCollection%601> object element, which must also specify the [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) to declare the constraint.</span></span> <span data-ttu-id="47e5b-109">Однако это не распространенный сценарий, поскольку для <xref:System.Windows.FreezableCollection%601> этого требуется корневой элемент.</span><span class="sxs-lookup"><span data-stu-id="47e5b-109">However, this is not a common scenario, because to do this, the <xref:System.Windows.FreezableCollection%601> must be the root element.</span></span> <span data-ttu-id="47e5b-110">Это ограничение обусловлено тем [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] , что реализация [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] процессора в может поддерживать только [директиву x:TypeArguments](~/docs/framework/xaml-services/x-typearguments-directive.md) , если элемент, на котором он выполняется, является корневым элементом, и необходимо использовать для любого открытого ограничения generic, если вы хотите Создайте экземпляр универсального типа в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="47e5b-110">This limitation exists because the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor implementation in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can only support [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="47e5b-111">Маловероятно, что требуется <xref:System.Windows.FreezableCollection%601> как корневой элемент, даже как свободный. [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</span><span class="sxs-lookup"><span data-stu-id="47e5b-111">It is unlikely that you want a <xref:System.Windows.FreezableCollection%601> as the root element, even as loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
-   <span data-ttu-id="47e5b-112">Если вы наследуете <xref:System.Windows.FreezableCollection%601> от и примените ограничение типа в производной коллекции, то производная коллекция может поддерживать различные способы использования.</span><span class="sxs-lookup"><span data-stu-id="47e5b-112">If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages.</span></span> <span data-ttu-id="47e5b-113">Это возможно, так как ограничение на производные избавляет от необходимости передавать.</span><span class="sxs-lookup"><span data-stu-id="47e5b-113">This is possible because the constraint in your derivation eliminates the need to pass .</span></span>  
  
    -   <span data-ttu-id="47e5b-114">Типичное [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] использование такой производной коллекции — это неявный синтаксис коллекции.</span><span class="sxs-lookup"><span data-stu-id="47e5b-114">The typical [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage for such a derived collection is through implicit collection syntax.</span></span> <span data-ttu-id="47e5b-115">Коллекции, поддерживающие определенные интерфейсы, не должны указывать саму коллекцию как объектный элемент.</span><span class="sxs-lookup"><span data-stu-id="47e5b-115">Collections that support certain interfaces do not need to specify the collection itself as an object element.</span></span> <span data-ttu-id="47e5b-116">Дополнительные сведения о синтаксисе коллекций [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]в см. [в разделе Подробное описание синтаксиса XAML](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="47e5b-116">For details on collection syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span> <span data-ttu-id="47e5b-117">Например, *объект* со *свойством* , в котором *свойство* имело ограничение типа <xref:System.Windows.FreezableCollection%601> , <xref:System.Windows.DependencyObject> может поддерживать следующий синтаксис:</span><span class="sxs-lookup"><span data-stu-id="47e5b-117">For instance, an *object* with a *property* where the *property* was of type <xref:System.Windows.FreezableCollection%601> constrained by <xref:System.Windows.DependencyObject> could support the following syntax:</span></span>  
  
        ```  
        <object>  
          <object.property>  
            oneOrMoreDependencyObjectElements  
          </object.property>  
        </object>  
        ```  
  
    -   <span data-ttu-id="47e5b-118">Пока не скрыт конструктор без параметров, производная коллекция также может поддерживать синтаксис элемента объекта (где объект является явным, в отличие от неявного использования, показанного выше).</span><span class="sxs-lookup"><span data-stu-id="47e5b-118">As long as you do not hide the parameterless constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above).</span></span> <span data-ttu-id="47e5b-119">Он не обязательно должен быть корневым элементом.</span><span class="sxs-lookup"><span data-stu-id="47e5b-119">It does not need to be the root element.</span></span> <span data-ttu-id="47e5b-120">Также можно использовать производную коллекцию в качестве корневого элемента без указания, хотя использование коллекции в качестве корневого элемента является редким.</span><span class="sxs-lookup"><span data-stu-id="47e5b-120">Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.</span></span>  
  
-   <span data-ttu-id="47e5b-121">Любые дочерние элементы коллекции в любом из приведенных выше сценариев должны иметь тип либо реализованного ограничения, либо, как указано в.</span><span class="sxs-lookup"><span data-stu-id="47e5b-121">Any child elements of the collection in either of the above scenarios must be of the type of either the implemented constraint, or as specified by .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47e5b-122">Инициализирует новый экземпляр <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-122">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47e5b-123">Инициализирует новый пустой экземпляр класса <see cref="T:System.Windows.FreezableCollection`1" /> с начальной емкостью по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="47e5b-123">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the default initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; : seq&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="47e5b-124">Коллекция, элементы которой добавляются в новую коллекцию <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-124">The collection whose items should be added to the new <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="47e5b-125">Инициализирует новый экземпляр класса <see cref="T:System.Windows.FreezableCollection`1" />, содержащий те же элементы, что и заданная коллекция.</span><span class="sxs-lookup"><span data-stu-id="47e5b-125">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> class that contains the same elements as the specified collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-126">Эта операция выполняет неполную копию указанной коллекции; копируются только ссылки на элементы коллекции, сами элементы не копируются.</span><span class="sxs-lookup"><span data-stu-id="47e5b-126">This operation performs a shallow copy on the specified collection; only references to the collection's elements are copied, the elements themselves are not cloned.</span></span> <span data-ttu-id="47e5b-127">Изменение элемента нового <xref:System.Windows.FreezableCollection%601> также приводит к изменению этого элемента для `collection`.</span><span class="sxs-lookup"><span data-stu-id="47e5b-127">Modifying an element of the new <xref:System.Windows.FreezableCollection%601> also modifies that element for `collection`.</span></span>  
  
 <span data-ttu-id="47e5b-128">Элементы помещаются в новый <xref:System.Windows.FreezableCollection%601> в том же порядке, в котором они считываются перечислителем указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="47e5b-128">The elements are placed in the new <xref:System.Windows.FreezableCollection%601> in the same order they are read by the enumerator of the specified collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47e5b-129">Свойство <paramref name="collection" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-129"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; : int -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="47e5b-130">Значение, большее или равное 0, определяющее количество элементов, которые первоначально может хранить новая коллекция.</span><span class="sxs-lookup"><span data-stu-id="47e5b-130">A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.</span></span></param>
        <summary><span data-ttu-id="47e5b-131">Инициализирует новый пустой экземпляр класса <see cref="T:System.Windows.FreezableCollection`1" /> с указанной начальной емкостью.</span><span class="sxs-lookup"><span data-stu-id="47e5b-131">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47e5b-132">Значение параметра <paramref name="capacity" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="47e5b-132"><paramref name="capacity" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="freezableCollection.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47e5b-133">Объект, добавляемый в конец коллекции <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-133">The object to be added to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span> <span data-ttu-id="47e5b-134">Это значение не может быть равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-134">This value cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="47e5b-135">Добавляет заданный объект в конец <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-135">Adds the specified object to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47e5b-136">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-136"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47e5b-137">Коллекция <see cref="T:System.Windows.FreezableCollection`1" /> заморожена (ее свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> содержит значение <see langword="true" />).</span><span class="sxs-lookup"><span data-stu-id="47e5b-137">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="freezableCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47e5b-138">Удаляет из коллекции все элементы.</span><span class="sxs-lookup"><span data-stu-id="47e5b-138">Removes all elements from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="freezableCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47e5b-139">Создает модифицируемую копию данной коллекции <see cref="T:System.Windows.FreezableCollection`1" /> и ее содержимого, делая глубокие копии ее элементов.</span><span class="sxs-lookup"><span data-stu-id="47e5b-139">Creates a modifiable clone of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies.</span></span> <span data-ttu-id="47e5b-140">Если эта коллекция (или ее содержимое) имеет анимированные свойства зависимостей, копируется базовое значение этого свойства, а не его текущее анимированное значение.</span><span class="sxs-lookup"><span data-stu-id="47e5b-140">If this collection (or its contents) has animated dependency properties, the property's base value is copied, not its current animated value.</span></span></summary>
        <returns><span data-ttu-id="47e5b-141">Модифицируемая копия данной коллекции и ее содержимого.</span><span class="sxs-lookup"><span data-stu-id="47e5b-141">A modifiable copy of this collection and its contents.</span></span> <span data-ttu-id="47e5b-142">Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> копии имеет значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-142">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> value is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-143">Этот метод затеняет наследуемый <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> метод строго типизированной реализацией для удобства.</span><span class="sxs-lookup"><span data-stu-id="47e5b-143">This method shadows the inherited <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.CloneCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="47e5b-144">Копируемый <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-144">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span></span></param>
        <summary><span data-ttu-id="47e5b-145">Делает данный экземпляр глубокой копией заданного объекта <see cref="T:System.Windows.FreezableCollection`1" />, используя базовые (не анимированные) значения свойств.</span><span class="sxs-lookup"><span data-stu-id="47e5b-145">Makes this instance a clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-146">Этот метод вызывается <xref:System.Windows.FreezableCollection%601.Clone%2A> методом и не должен вызываться непосредственно из кода, за исключением случаев вызова базовой реализации при переопределении этого метода.</span><span class="sxs-lookup"><span data-stu-id="47e5b-146">This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="47e5b-147">Чтобы создать изменяемую копию текущего объекта, вызовите <xref:System.Windows.FreezableCollection%601.Clone%2A> метод вместо вызова этого метода напрямую.</span><span class="sxs-lookup"><span data-stu-id="47e5b-147">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47e5b-148">Сведения о <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> том, когда следует переопределять этот метод, см. на этой странице.</span><span class="sxs-lookup"><span data-stu-id="47e5b-148">See the <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> page for information about when you should override this method.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="freezableCollection.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47e5b-149">Создает модифицируемую копию данного объекта <see cref="T:System.Windows.FreezableCollection`1" /> и его содержимого, делая глубокие копии текущих значений этого объекта.</span><span class="sxs-lookup"><span data-stu-id="47e5b-149">Creates a modifiable copy of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies of this object's current values.</span></span> <span data-ttu-id="47e5b-150">Если этот объект (или входящие в его состав объекты) имеет анимированные свойства зависимостей, копируются их текущие анимированные значения.</span><span class="sxs-lookup"><span data-stu-id="47e5b-150">If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.</span></span></summary>
        <returns><span data-ttu-id="47e5b-151">Модифицируемая копия данной коллекции и ее содержимого.</span><span class="sxs-lookup"><span data-stu-id="47e5b-151">A modifiable clone of the collection and its contents.</span></span> <span data-ttu-id="47e5b-152">Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клонированного объекта будет содержать значение <see langword="false" />, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта содержало значение <see langword="true." />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-152">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-153">Этот метод затеняет наследуемый <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> метод строго типизированной реализацией для удобства.</span><span class="sxs-lookup"><span data-stu-id="47e5b-153">This method shadows the inherited <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Animatable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.CloneCurrentValueCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="47e5b-154">Копируемый объект <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-154">The <see cref="T:System.Windows.FreezableCollection`1" /> to clone.</span></span></param>
        <summary><span data-ttu-id="47e5b-155">Делает данный экземпляр модифицируемой глубокой копией заданного объекта <see cref="T:System.Windows.FreezableCollection`1" />, используя текущие значения свойств.</span><span class="sxs-lookup"><span data-stu-id="47e5b-155">Makes this instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using current property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-156">Этот метод вызывается <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> методом и не должен вызываться непосредственно из кода, за исключением случаев вызова базовой реализации при переопределении этого метода.</span><span class="sxs-lookup"><span data-stu-id="47e5b-156">This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="47e5b-157">Чтобы создать изменяемую копию текущего объекта, вызовите <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> метод вместо вызова этого метода напрямую.</span><span class="sxs-lookup"><span data-stu-id="47e5b-157">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47e5b-158">Сведения о <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> том, когда следует переопределять этот метод, см. на этой странице.</span><span class="sxs-lookup"><span data-stu-id="47e5b-158">See the <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> page for information about when you should override this method.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="freezableCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47e5b-159">Объект, который требуется отыскать в данной коллекции.</span><span class="sxs-lookup"><span data-stu-id="47e5b-159">The object to locate in this collection.</span></span> <span data-ttu-id="47e5b-160">Этим объектом может быть <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-160">This object may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="47e5b-161">Определяет, содержит ли данная коллекция <see cref="T:System.Windows.FreezableCollection`1" /> указанное значение.</span><span class="sxs-lookup"><span data-stu-id="47e5b-161">Determines whether this <see cref="T:System.Windows.FreezableCollection`1" /> contains the specified value.</span></span></summary>
        <returns><span data-ttu-id="47e5b-162"><see langword="true" />, если значение найдено в <see cref="T:System.Windows.FreezableCollection`1" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-162"><see langword="true" /> if value is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="freezableCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="47e5b-163">Одномерный массив, в который копируются элементы из коллекции <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-163">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <param name="index"><span data-ttu-id="47e5b-164">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="47e5b-164">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="47e5b-165">Копирует <see cref="T:System.Windows.FreezableCollection`1" /> целиком в совместимый одномерный массив, начиная с указанного индекса конечного массива.</span><span class="sxs-lookup"><span data-stu-id="47e5b-165">Copies the entire <see cref="T:System.Windows.FreezableCollection`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-166">Обратите внимание, что эта операция выполняет неполную копию.</span><span class="sxs-lookup"><span data-stu-id="47e5b-166">Note that this operation performs a shallow copy.</span></span> <span data-ttu-id="47e5b-167">Элементы копируются в целевой массив в том же порядке, в котором перечислитель выполняет итерацию по этому <xref:System.Windows.FreezableCollection%601>объекту.</span><span class="sxs-lookup"><span data-stu-id="47e5b-167">The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47e5b-168"><paramref name="array" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-168"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47e5b-169">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="47e5b-169"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47e5b-170">Количество элементов в исходной коллекции <see cref="T:System.Windows.FreezableCollection`1" /> превышает количество доступных позиций в целевом массиве <paramref name="array" /> от заданного индекса до конца массива.</span><span class="sxs-lookup"><span data-stu-id="47e5b-170">The number of elements in the source <see cref="T:System.Windows.FreezableCollection`1" /> is greater than the available space from index to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47e5b-171">Возвращает число элементов, содержащихся в данной коллекции <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-171">Gets the number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <value><span data-ttu-id="47e5b-172">Число элементов, содержащихся данной коллекции <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-172">The number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezableCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47e5b-173">Создает новый экземпляр класса <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-173">Creates a new instance of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="47e5b-174">Новый экземпляр.</span><span class="sxs-lookup"><span data-stu-id="47e5b-174">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-175">Не вызывайте этот метод напрямую (за исключением вызова Base в реализации).</span><span class="sxs-lookup"><span data-stu-id="47e5b-175">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="47e5b-176">Этот метод вызывается внутренним образом <xref:System.Windows.Freezable.CreateInstance%2A>при создании нового экземпляра. <xref:System.Windows.Freezable></span><span class="sxs-lookup"><span data-stu-id="47e5b-176">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47e5b-177">В следующем примере показана типичная реализация <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-177">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47e5b-178">Каждый <see cref="T:System.Windows.Freezable" /> подкласс должен реализовывать этот метод.</span><span class="sxs-lookup"><span data-stu-id="47e5b-178">Every <see cref="T:System.Windows.Freezable" /> subclass must implement this method.</span></span> <span data-ttu-id="47e5b-179">Типичная реализация заключается в простом вызове конструктора без параметров класса и возврате результата.</span><span class="sxs-lookup"><span data-stu-id="47e5b-179">Typical implementation is to simply call the class parameterless constructor and return the result.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="freezableCollection.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="47e5b-180">Значение <see langword="true" />, если этот метод должен просто определять, может ли быть заморожен данный экземпляр <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-180"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> should simply return whether it can be frozen.</span></span> <span data-ttu-id="47e5b-181">Значение <see langword="false" />, если при вызове этого метода экземпляр <see cref="T:System.Windows.FreezableCollection`1" /> должен быть фактически заморожен.</span><span class="sxs-lookup"><span data-stu-id="47e5b-181"><see langword="false" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> instance should actually freeze itself when this method is called.</span></span></param>
        <summary><span data-ttu-id="47e5b-182">Делает данный объект <see cref="T:System.Windows.FreezableCollection`1" /> неизменяемым или определяет, может ли он быть сделан неизменяемым.</span><span class="sxs-lookup"><span data-stu-id="47e5b-182">Makes this <see cref="T:System.Windows.FreezableCollection`1" /> object unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="47e5b-183">Если параметр <paramref name="isChecking" /> равен <see langword="true" />, этот метод возвращает значение <see langword="true" /> при возможности сделать данный объект <see cref="T:System.Windows.FreezableCollection`1" /> неизменяемым или значение <see langword="false" />, если такая возможность отсутствует.</span><span class="sxs-lookup"><span data-stu-id="47e5b-183">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.FreezableCollection`1" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span></span>  
  
<span data-ttu-id="47e5b-184">Если свойство <paramref name="isChecking" /> содержит значение <see langword="false" />, этот метод возвращает значение <see langword="true" />, если заданный объект <see cref="T:System.Windows.FreezableCollection`1" /> уже является неизменяемым, либо значение <see langword="false" />, если его невозможно сделать неизменяемым, при этом в качестве побочного эффекта начнется изменение замороженного состояния этого объекта.</span><span class="sxs-lookup"><span data-stu-id="47e5b-184">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.FreezableCollection`1" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-185">Не вызывайте этот метод напрямую (за исключением вызова Base в реализации).</span><span class="sxs-lookup"><span data-stu-id="47e5b-185">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="47e5b-186">Этот метод вызывается внутренним <xref:System.Windows.Freezable.CanFreeze%2A> методом (с `isChecking` равным `true`) и <xref:System.Windows.Freezable.Freeze%2A> (с `isChecking` равным `false`).</span><span class="sxs-lookup"><span data-stu-id="47e5b-186">This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47e5b-187">Дополнительные сведения о том, когда следует переопределять этот <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />метод, см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="47e5b-187">For information about when to override this method, see <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.GetAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="47e5b-188">Копируемый <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-188">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span></span></param>
        <summary><span data-ttu-id="47e5b-189">Делает данный экземпляр замороженной копии заданного объекта <see cref="T:System.Windows.FreezableCollection`1" />, используя базовые (не анимированные) значения свойств.</span><span class="sxs-lookup"><span data-stu-id="47e5b-189">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-190">Этот метод вызывается методом <xref:System.Windows.Freezable.GetAsFrozen%2A> и не должен вызываться непосредственно из кода, за исключением случаев вызова базовой реализации при переопределении этого метода.</span><span class="sxs-lookup"><span data-stu-id="47e5b-190">This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="47e5b-191">Чтобы создать замороженную копию текущего объекта, вызовите <xref:System.Windows.Freezable.GetAsFrozen%2A> метод вместо вызова этого метода напрямую.</span><span class="sxs-lookup"><span data-stu-id="47e5b-191">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47e5b-192">Дополнительные сведения о том, когда следует переопределять этот <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />метод, см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="47e5b-192">For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.GetCurrentValueAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="47e5b-193">Копируемый <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-193">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span></span></param>
        <summary><span data-ttu-id="47e5b-194">Делает этот экземпляр зафиксированным клоном указанного объекта <see cref="T:System.Windows.Freezable" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-194">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="47e5b-195">Если этот объект имеет анимированные свойства зависимостей, копируются их текущие анимированные значения.</span><span class="sxs-lookup"><span data-stu-id="47e5b-195">If this object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-196">Этот метод вызывается методом <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> и не должен вызываться непосредственно из кода, за исключением случаев вызова базовой реализации при переопределении этого метода.</span><span class="sxs-lookup"><span data-stu-id="47e5b-196">This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="47e5b-197">Чтобы создать замороженную копию текущего объекта, вызовите <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> метод вместо вызова этого метода напрямую.</span><span class="sxs-lookup"><span data-stu-id="47e5b-197">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47e5b-198">Дополнительные сведения о том, когда следует переопределять этот <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />метод, см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="47e5b-198">For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.FreezableCollection`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As FreezableCollection(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Enumerator" Usage="freezableCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47e5b-199">Возвращает перечислитель для класса <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-199">Returns an enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="47e5b-200">Перечислитель для всей коллекции <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-200">An enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="freezableCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47e5b-201">Объект для поиска в <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-201">The object to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="47e5b-202">Осуществляет поиск указанного объекта и возвращает отсчитываемый от нуля индекс первого вхождения, найденного в пределах всего списка <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-202">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="47e5b-203">Индекс (с нуля) первого вхождения параметра <paramref name="value" />, если оно найдено в коллекции <see cref="T:System.Windows.FreezableCollection`1" />; в противном случае -1.</span><span class="sxs-lookup"><span data-stu-id="47e5b-203">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Windows.FreezableCollection`1" />, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="freezableCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47e5b-204">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-204">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="47e5b-205">Вставляемый объект.</span><span class="sxs-lookup"><span data-stu-id="47e5b-205">The object to insert.</span></span></param>
        <summary><span data-ttu-id="47e5b-206">Вставляет заданный объект в <see cref="T:System.Windows.FreezableCollection`1" /> по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="47e5b-206">Inserts the specified object into the <see cref="T:System.Windows.FreezableCollection`1" /> at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47e5b-207">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-207"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47e5b-208">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="47e5b-208"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="47e5b-209">- или -</span><span class="sxs-lookup"><span data-stu-id="47e5b-209">-or-</span></span> 
 <span data-ttu-id="47e5b-210">Значение <paramref name="index" /> больше значения <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-210"><paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47e5b-211">Коллекция <see cref="T:System.Windows.FreezableCollection`1" /> заморожена (ее свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> содержит значение <see langword="true" />).</span><span class="sxs-lookup"><span data-stu-id="47e5b-211">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47e5b-212">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</span><span class="sxs-lookup"><span data-stu-id="47e5b-212">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="47e5b-213">Возвращает или задает элемент по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="47e5b-213">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="47e5b-214">Элемент, расположенный по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="47e5b-214">The element at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47e5b-215">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="47e5b-215"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="47e5b-216">-или-</span><span class="sxs-lookup"><span data-stu-id="47e5b-216">-or-</span></span> 
 <span data-ttu-id="47e5b-217">Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-217"><paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47e5b-218">Заданный элемент равен <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-218">The specified element is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47e5b-219">Попытка изменить элемент в коллекции, когда она заморожена (ее свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> содержит значение <see langword="true" />).</span><span class="sxs-lookup"><span data-stu-id="47e5b-219">Attempting to set an item in the collection when the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="freezableCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47e5b-220">Удаляемый объект.</span><span class="sxs-lookup"><span data-stu-id="47e5b-220">The object to remove.</span></span></param>
        <summary><span data-ttu-id="47e5b-221">Удаляет первое вхождение указанного объекта из <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-221">Removes the first occurrence of the specified object from the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="47e5b-222"><see langword="true" />, если вхождение <paramref name="value" /> найдено в коллекции и удалено; <see langword="false" />, если не удалось найти в коллекции вхождение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-222"><see langword="true" /> if an occurrence of <paramref name="value" /> was found in the collection and removed; <see langword="false" /> if <paramref name="value" /> could not be found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47e5b-223">Коллекция <see cref="T:System.Windows.FreezableCollection`1" /> заморожена (ее свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> содержит значение <see langword="true" />).</span><span class="sxs-lookup"><span data-stu-id="47e5b-223">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="freezableCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47e5b-224">Индекс (с нуля) удаляемого объекта.</span><span class="sxs-lookup"><span data-stu-id="47e5b-224">The zero-based index of the object to remove.</span></span></param>
        <summary><span data-ttu-id="47e5b-225">Удаляет объект по указанному индексу (с нуля) из коллекции <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-225">Removes the object at the specified zero-based index of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47e5b-226">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="47e5b-226"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="47e5b-227">- или -</span><span class="sxs-lookup"><span data-stu-id="47e5b-227">-or-</span></span> 
 <span data-ttu-id="47e5b-228">Значение <paramref name="index" /> больше значения <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-228"><paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47e5b-229">Коллекция <see cref="T:System.Windows.FreezableCollection`1" /> заморожена (ее свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> содержит значение <see langword="true" />).</span><span class="sxs-lookup"><span data-stu-id="47e5b-229">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47e5b-230">Описание этого члена см. в разделе <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-230">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span></span></summary>
        <value><span data-ttu-id="47e5b-231">Значение <see langword="true" />, если интерфейс <see cref="T:System.Windows.FreezableCollection`1" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-231"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-232">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-232">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-233">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-233">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47e5b-234">Описание этого члена см. в разделе <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-234">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="47e5b-235">Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который используется для прохода по коллекции.</span><span class="sxs-lookup"><span data-stu-id="47e5b-235">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-236">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-236">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-237">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-237">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="47e5b-238">Отсчитываемый от нуля класс <see cref="T:System.Array" />, который получает элементы, скопированные из <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-238">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <param name="index"><span data-ttu-id="47e5b-239">Позиция в заданном <see cref="T:System.Array" />, начиная с которой в него будет помещаться копируемое содержимое.</span><span class="sxs-lookup"><span data-stu-id="47e5b-239">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span></span></param>
        <summary><span data-ttu-id="47e5b-240">Описание этого члена см. в разделе <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-240">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-241">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-241">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-242">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-242">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47e5b-243">Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-243">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span></span></summary>
        <value><span data-ttu-id="47e5b-244"><see langword="true" />, если доступ к классу <see cref="T:System.Windows.FreezableCollection`1" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-244"><see langword="true" /> if access to the <see cref="T:System.Windows.FreezableCollection`1" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-245">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-246">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-246">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47e5b-247">Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-247">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span></span></summary>
        <value><span data-ttu-id="47e5b-248">Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-248">An object that can be used to synchronize access to the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-249">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-249">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-250">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-250">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47e5b-251">Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-251">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="47e5b-252">Объект <see cref="T:System.Collections.IEnumerator" />, который используется для прохода по коллекции.</span><span class="sxs-lookup"><span data-stu-id="47e5b-252">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-253">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-253">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-254">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-254">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47e5b-255">Объект <see cref="T:System.Object" />, добавляемый в список <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-255">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="47e5b-256">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-256">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="47e5b-257">Позиция, на которую вставлен новый элемент.</span><span class="sxs-lookup"><span data-stu-id="47e5b-257">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-258">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-258">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-259">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-259">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Add(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47e5b-260">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-260">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="47e5b-261">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-261">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="47e5b-262">Значение <see langword="true" />, если объект <see cref="T:System.Object" /> найден в <see cref="T:System.Windows.FreezableCollection`1" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-262"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-263">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-263">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-264">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-264">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47e5b-265">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-265">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="47e5b-266">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-266">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="47e5b-267">Индекс <paramref name="value" />, если он найден в списке; в противном случае — значение -1.</span><span class="sxs-lookup"><span data-stu-id="47e5b-267">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-268">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-268">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-269">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-269">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47e5b-270">Начинающийся с нуля индекс, по которому следует вставить объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-270">The zero-based index at which to insert the <see cref="T:System.Object" />.</span></span></param>
        <param name="value"><span data-ttu-id="47e5b-271">Объект <see cref="T:System.Object" />, вставляемый в <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-271">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="47e5b-272">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-272">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-273">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-273">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-274">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-274">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47e5b-275">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-275">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span></span></summary>
        <value><span data-ttu-id="47e5b-276">Значение <see langword="true" />, если словарь <see cref="T:System.Windows.FreezableCollection`1" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-276"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-277">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-277">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-278">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-278">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47e5b-279">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-279">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span></span></summary>
        <value><span data-ttu-id="47e5b-280">Значение <see langword="true" />, если интерфейс <see cref="T:System.Windows.FreezableCollection`1" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-280"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-281">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-281">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-282">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-282">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47e5b-283">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</span><span class="sxs-lookup"><span data-stu-id="47e5b-283">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="47e5b-284">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-284">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span></span></summary>
        <value><span data-ttu-id="47e5b-285">Элемент, расположенный по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="47e5b-285">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-286">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-287">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-287">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47e5b-288">Элемент <see cref="T:System.Object" />, который требуется удалить из <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-288">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="47e5b-289">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-289">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e5b-290">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-291">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-291">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <MemberSignature Language="C#" Value="event System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FreezableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event CollectionChanged As NotifyCollectionChangedEventHandler Implements System.Collections.Specialized.INotifyCollectionChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47e5b-292">Описание этих членов см. в описании свойства <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-292">For a description of this members, see <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="47e5b-293">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-293">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-294">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.Collections.Specialized.INotifyCollectionChanged>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-294">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Specialized.INotifyCollectionChanged> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FreezableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47e5b-295">Описание этих членов см. в описании свойства <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span><span class="sxs-lookup"><span data-stu-id="47e5b-295">For a description of this members, see <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="47e5b-296">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="47e5b-296">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47e5b-297">Он может использоваться, только если экземпляр <xref:System.Windows.FreezableCollection%601> приведен к типу интерфейса <xref:System.ComponentModel.INotifyPropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="47e5b-297">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.ComponentModel.INotifyPropertyChanged> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
