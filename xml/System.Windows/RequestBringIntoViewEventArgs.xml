<Type Name="RequestBringIntoViewEventArgs" FullName="System.Windows.RequestBringIntoViewEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8dedc010a032951ae5455df27586a27907cf9a1f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444280" /></Metadata><TypeSignature Language="C#" Value="public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestBringIntoViewEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestBringIntoViewEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestBringIntoViewEventArgs : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventArgs = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для перенаправленного события <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие вызывается элементами при вызове <xref:System.Windows.FrameworkElement.BringIntoView%2A> из этого элемента. <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> Как правило, перенаправленное событие не обрабатывается источником. Промежуточные классы, не реализующие прокручиваемые области или аналогичные концепции, которые обрезает содержимое, не должны обработать событие.  Событие должно быть разрешено пузырьковым родительским элементам, реализующим прокручиваемую область или иным образом <xref:System.Windows.UIElement.ClipToBounds%2A> `false`задавая. Такие родительские элементы обычно обеспечивают обработку класса для <xref:System.Windows.FrameworkElement.RequestBringIntoView> события, то есть необходимая логика отрисовки возникает каждый раз, когда запрашивается доступ к этому элементу в пределах вырезанной области.  
  
 Элементы содержимого могут вызвать событие в узлах содержимого (путем вызова <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> и вызова <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> из узла содержимого). Аналогичным образом можно запросить элементы логического дерева, которые будут добавлены в представление с помощью вспомогательного метода <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.  
  
 В <xref:System.Windows.Controls.ListBox> реализуется связанный, но другой <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>метод.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
  </Docs>
  <Members>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="requestBringIntoViewEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">Универсальный обработчик, способ вызова которого зависит от конкретного типа.</param>
        <param name="genericTarget">Объект, для которого необходимо вызвать данный обработчик.</param>
        <summary>Вызывает обработчики событий способом, зависящим от типа, что может повысить эффективность системы событий.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта реализация приводит к приведению универсального обработчика в качестве <xref:System.Windows.RequestBringIntoViewEventHandler> , а затем вызывает его. Дополнительные сведения об этом шаблоне реализации и его причинах см. <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> в разделе [Общие сведения о перенаправленных событиях](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ TargetObject { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : System.Windows.DependencyObject" Usage="System.Windows.RequestBringIntoViewEventArgs.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который следует сделать видимым в ответ на событие.</summary>
        <value>Объект, который вызвал метод <see cref="M:System.Windows.FrameworkElement.BringIntoView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот объект обычно является объектом, возвращаемым методом <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.RoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TargetRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect TargetRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect TargetRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRect As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect TargetRect { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetRect : System.Windows.Rect" Usage="System.Windows.RequestBringIntoViewEventArgs.TargetRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает прямоугольную область в пространстве координат объекта, которую следует сделать видимой.</summary>
        <value>Запрошенное прямоугольное пространство.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сигнатура <xref:System.Windows.FrameworkElement.BringIntoView%2A> , вызываемая для вызова события, не указывала целевой прямоугольник, это свойство может <xref:System.Windows.Rect.Empty%2A> быть значением <xref:System.Windows.Rect> структуры.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
      </Docs>
    </Member>
  </Members>
</Type>
