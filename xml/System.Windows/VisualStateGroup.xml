<Type Name="VisualStateGroup" FullName="System.Windows.VisualStateGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e7dca855e26d14e53afefb1dbf04dc0ce9773eb" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75180010" /></Metadata><TypeSignature Language="C#" Value="public class VisualStateGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("States")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Содержит взаимоисключающие объекты <see cref="T:System.Windows.VisualState" /> и объекты <see cref="T:System.Windows.VisualTransition" />, используемые для перехода из одного состояния в другое.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый <xref:System.Windows.VisualStateGroup> содержит коллекцию объектов <xref:System.Windows.VisualState>. <xref:System.Windows.VisualState> содержит коллекцию объектов <xref:System.Windows.Media.Animation.Storyboard>, которые определяют, как внешний вид элемента управления изменяется, когда элемент управления находится в определенном состоянии. Например, <xref:System.Windows.Controls.Button> может немного отличаться при нажатии, чем когда она не нажата. Два состояния, которые определяются <xref:System.Windows.Controls.Button>, соответствуют моменту его нажатия (`"Pressed"`), а если нет (`"Normal"`).  
  
 Добавление <xref:System.Windows.VisualState> к элементу управления осуществляется путем задания `VisualStateManager.VisualStateGroups` присоединенным свойством элемента управления. Вы помещаете состояния, которые являются взаимоисключающими друг с другом в одном <xref:System.Windows.VisualStateGroup>. Например, у <xref:System.Windows.Controls.CheckBox> есть два объекта <xref:System.Windows.VisualStateGroup>. Один из них содержит состояния, `Normal`, `MouseOver`, `Pressed`и `Disabled`. Другой содержит состояния, `Checked`, `UnChecked`и `Indeterminate`. <xref:System.Windows.Controls.CheckBox> может находиться в состоянии одновременно `MouseOver` и `UnChecked`, но не может одновременно находиться в состоянии `MouseOver` и `Pressed`.  
  
 Хотя в любой элемент можно добавлять <xref:System.Windows.VisualState> объекты, они особенно полезны для того, чтобы другие могли переопределить визуальное поведение <xref:System.Windows.Controls.Control>. При создании пользовательского элемента управления, использующего <xref:System.Windows.Controls.ControlTemplate>, можно указать, к каким состояниям может принадлежать управление, добавив <xref:System.Windows.TemplateVisualStateAttribute> в его определение класса. Затем любой пользователь, создающий новый <xref:System.Windows.Controls.ControlTemplate> для элемента управления, может добавлять в шаблон <xref:System.Windows.VisualState> объекты. <xref:System.Windows.TemplateVisualStateAttribute> позволяет средствам конструктора, таким как Expression Blend, предоставлять состояния элемента управления. Состояния с одним и тем же <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> принадлежат одному и тому же <xref:System.Windows.VisualStateGroup>.  
  
 Дополнительные сведения об использовании <xref:System.Windows.VisualStateGroup> объектов в <xref:System.Windows.Controls.ControlTemplate>см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Дополнительные сведения о создании элементов управления, использующих <xref:System.Windows.VisualStateManager>, см. в разделе [Создание элемента управления с настраиваемым внешним видом](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 Свойство <xref:System.Windows.VisualStateGroup.Transitions%2A> содержит объекты <xref:System.Windows.VisualTransition>, которые применяются, когда элемент управления переходит между состояниями, определенными в <xref:System.Windows.VisualStateGroup>.  
  
   
  
## Examples  
 В следующем примере создается простой <xref:System.Windows.Controls.ControlTemplate> для <xref:System.Windows.Controls.Button>, который содержит один <xref:System.Windows.Controls.Grid>. Он также содержит <xref:System.Windows.VisualStateGroup> с именем `CommonStates`, который определяет состояния `MouseOver` и `Normal`. В <xref:System.Windows.VisualStateGroup> также есть <xref:System.Windows.VisualTransition>, указывающий, что для <xref:System.Windows.Controls.Grid> при перемещении указателя мыши над <xref:System.Windows.Controls.Button>ом выделяется одна половина секунд.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Windows.VisualStateGroup" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.VisualState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.VisualState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As VisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VisualState ^ CurrentState { System::Windows::VisualState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Windows.VisualState" Usage="System.Windows.VisualStateGroup.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.VisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает состояние <see cref="T:System.Windows.VisualState" />, применяемое в настоящий момент к элементу управления.</summary>
        <value>Состояние <see cref="T:System.Windows.VisualState" />, применяемое в настоящий момент к элементу управления.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanged : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanged : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после перехода элемента управления в другое состояние.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает после перехода элемента управления в новое состояние и возникновения события <xref:System.Windows.VisualStateGroup.CurrentStateChanging>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanging;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanging : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanging : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда элемент управления начинает переход в другое состояние.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает, когда элемент управления начинает переходить к состояниям. Если к изменению состояния применяется <xref:System.Windows.VisualTransition>, это событие возникает при начале перехода. Если <xref:System.Windows.VisualTransition> не применяется, это событие возникает после перехода элемента управления в новое состояние, но до события <xref:System.Windows.VisualStateGroup.CurrentStateChanged>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualStateGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Windows.VisualStateGroup" />.</summary>
        <value>Имя <see cref="T:System.Windows.VisualStateGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Авторы элементов управления указывают, в какие состояния может входить элемент управления, добавляя <xref:System.Windows.TemplateVisualStateAttribute> в его определение класса. Состояния с одним и тем же <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> принадлежат одному и тому же <xref:System.Windows.VisualStateGroup>. Установите <xref:System.Windows.VisualStateGroup.Name%2A> <xref:System.Windows.VisualStateGroup> в значение свойства <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере создаются два <xref:System.Windows.VisualStateGroup> объектов с именами `CommonStates` и `FocusStates`. Элемент управления будет находиться в одном состоянии каждый раз <xref:System.Windows.VisualStateGroup>. Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="States">
      <MemberSignature Language="C#" Value="public System.Collections.IList States { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList States" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.States" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property States As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ States { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.States : System.Collections.IList" Usage="System.Windows.VisualStateGroup.States" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию взаимоисключающих объектов <see cref="T:System.Windows.VisualState" />.</summary>
        <value>Коллекция взаимоисключающих объектов <see cref="T:System.Windows.VisualState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере создается простой <xref:System.Windows.Controls.ControlTemplate> для <xref:System.Windows.Controls.Button>, который содержит один <xref:System.Windows.Controls.Grid>. Он также содержит <xref:System.Windows.VisualStateGroup> с именем `CommonStates`, который определяет состояния `MouseOver` и `Normal`. В <xref:System.Windows.VisualStateGroup> также есть <xref:System.Windows.VisualTransition>, указывающий, что для <xref:System.Windows.Controls.Grid> при перемещении указателя мыши над <xref:System.Windows.Controls.Button>ом выделяется одна половина секунд.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitions">
      <MemberSignature Language="C#" Value="public System.Collections.IList Transitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Transitions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Transitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transitions As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Transitions { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transitions : System.Collections.IList" Usage="System.Windows.VisualStateGroup.Transitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию объектов <see cref="T:System.Windows.VisualTransition" />.</summary>
        <value>Коллекция объектов <see cref="T:System.Windows.VisualTransition" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition> объекты в <xref:System.Windows.VisualStateGroup.Transitions%2A> применяются, когда элемент управления переходит между состояниями, определенными в <xref:System.Windows.VisualStateGroup>.  
  
   
  
## Examples  
 В следующем примере создается простой <xref:System.Windows.Controls.ControlTemplate> для <xref:System.Windows.Controls.Button>, который содержит один <xref:System.Windows.Controls.Grid>. Он также содержит <xref:System.Windows.VisualStateGroup> с именем `CommonStates`, который определяет состояния `MouseOver` и `Normal`. В <xref:System.Windows.VisualStateGroup> также есть <xref:System.Windows.VisualTransition>, указывающий, что для <xref:System.Windows.Controls.Grid> при перемещении указателя мыши над <xref:System.Windows.Controls.Button>ом выделяется одна половина секунд.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
