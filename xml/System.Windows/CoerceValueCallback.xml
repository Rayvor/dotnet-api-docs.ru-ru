<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bbc70fa825fb1449321a5aebd633372a4e8df0e5" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70729309" /></Metadata><TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <TypeSignature Language="F#" Value="type CoerceValueCallback = delegate of DependencyObject * obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d">Объект, содержащий свойство. При вызове ответа, система свойств передает это значение.</param>
    <param name="baseValue">Новое значение свойства до применения операции запрета изменения значения.</param>
    <summary>Предоставляет шаблон для метода, вызываемого при оценке значения свойства зависимостей и запросе запрета изменения значения.</summary>
    <returns>Запрещенное значение (с соответствующим типом).</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратные вызовы, <xref:System.Windows.CoerceValueCallback> основанные на, могут быть назначены свойству зависимостей с помощью нескольких различных методов. Для каждого из этих методов необходимо сначала создать новый объект метаданных свойства (<xref:System.Windows.PropertyMetadata>или производный класс, такой как <xref:System.Windows.FrameworkPropertyMetadata>). Создайте объект метаданных с помощью сигнатуры конструктора, принимающей `coerceValueCallback` параметр, и назначьте этот параметр обработчику обратного вызова. Или создайте метаданные по любой сигнатуре и задайте <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> свойство перед размещением используемых метаданных.  
  
 При наличии этих метаданных можно:  
  
-   Определите новое свойство зависимостей для нового класса с помощью сигнатуры <xref:System.Windows.DependencyProperty.Register%2A>, предоставляя метаданные в `typeMetadata` качестве значения.  
  
-   Переопределяйте метаданные (Call <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) для существующего свойства зависимостей при наследовании от класса, владеющего свойством зависимостей.  
  
-   Добавление существующего свойства зависимостей в новый <xref:System.Windows.DependencyObject> класс с помощью новых метаданных путем вызова. <xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>  
  
 Реализации этого обратного вызова должны проверять значение в `baseValue` и определять его на основе значения или типа, является ли это значение допустимым для дальнейшего приведения.  
  
 Для свойства зависимостей вызывается каждый раз, когда система свойств или любые другие вызывающие вызовы вызываются <xref:System.Windows.DependencyObject.CoerceValue%2A> в <xref:System.Windows.DependencyObject> экземпляре `dp`, указывая идентификатор этого свойства в качестве. <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>  
  
 Изменения в значении свойства могут поступать от любого возможного участника в системе свойств. К ним относятся стили, универсальная недействительность, триггеры, наследование значения свойства и настройка локального значения.  
  
 Как правило, следует избегать указания более одного <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> значения для любого заданного свойства зависимости (переопределение или добавление с новыми метаданными для свойства зависимостей, которое уже <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>имело значение). Только один из обратных вызовов сможет действовать. Действующий обратный вызов будет применен к наиболее производному классу в наследовании по сравнению <xref:System.Windows.DependencyObject> с вызывающим объектом. Другие обратные вызовы, назначенные метаданным для свойства зависимостей, как оно существовало выше в иерархии владельца, заменяются при переопределении метаданных.  
  
   
  
## Examples  
 Следующий пример включает реализацию этого обратного вызова для приведения сохраненного значения свойства зависимостей на основе других входных данных, например значения другого свойства. В этом случае обратный вызов проверяет, соответствует ли `ShirtType` свойство типу рубашки с кнопками; если это так, он устанавливает начальный цвет по умолчанию `ButtonColor`для, если у типа рубашки нет кнопок `ButtonColor` , он приводит значение вернемся к начальному значению, которое [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] приводит к удалению раскрывающегося списка из действующих вариантов (не показано).  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>
