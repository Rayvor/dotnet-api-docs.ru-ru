<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="50919b4b6c3b6707d5830ddef58a2ce821e29187" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64190272" /></Metadata><TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <TypeSignature Language="F#" Value="type CoerceValueCallback = delegate of DependencyObject * obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d">Объект, содержащий свойство. При вызове ответа, система свойств передает это значение.</param>
    <param name="baseValue">Новое значение свойства до применения операции запрета изменения значения.</param>
    <summary>Предоставляет шаблон для метода, вызываемого при оценке значения свойства зависимостей и запросе запрета изменения значения.</summary>
    <returns>Запрещенное значение (с соответствующим типом).</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 На основе обратных вызовов <xref:System.Windows.CoerceValueCallback> можно назначить свойству зависимостей через несколькими способами. Каждый из этих способов необходимо сначала создать объект метаданных свойств (<xref:System.Windows.PropertyMetadata>, или производного класса, например <xref:System.Windows.FrameworkPropertyMetadata>). Создать объект метаданных, используя подпись конструктор, принимающий `coerceValueCallback` параметра и назначить этому параметру в обработчике обратного вызова. Или создать метаданные любые подписи, причем <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> свойство до помещения метаданных используется.  
  
 Если у вас есть эти метаданные, вы можете:  
  
-   Определение нового свойства зависимости на новый класс, используя либо подпись <xref:System.Windows.DependencyProperty.Register%2A>, предоставляя метаданные в виде `typeMetadata` значение.  
  
-   Переопределить метаданные (вызвать <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) для существующего свойства зависимости, при наследовании от класса, которому принадлежит свойство зависимостей.  
  
-   Добавление существующего свойства зависимостей в новый <xref:System.Windows.DependencyObject> класса, с помощью новых метаданных путем вызова <xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>.  
  
 Реализации данного ответа следует проверить значение `baseValue` и определить на основе значения или тип ли это значение необходимо для дальнейшей привести.  
  
 <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> Зависимости свойство вызывается каждый раз, когда система свойств или любой вызывающий объект вызывает <xref:System.Windows.DependencyObject.CoerceValue%2A> на <xref:System.Windows.DependencyObject> экземпляр, указав идентификатор этого свойства как `dp`.  
  
 Изменение значения свойства могут поступать любого из членов системы свойств. Это включает стили, изначальную, триггеры, наследование значения свойства и локальное значение параметра.  
  
 Обычно следует избегать, указание более одного <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> для любого заданного свойства зависимостей (переопределения или добавления новых метаданных свойства зависимости, которое уже есть <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>). Только один из обратных вызовов, будет действовать. Действующим ответом будет тот, который был применен к наиболее производного класса в наследовании по сравнению с <xref:System.Windows.DependencyObject> вызывающего объекта. При переопределении метаданных, заменяются другие обратные вызовы, связанные с метаданными для свойства зависимостей, существовавшего выше в иерархии владельцев.  
  
   
  
## Examples  
 Следующий пример содержит реализацию этого обратного вызова для запрета хранимого значения свойства зависимостей на основе других входных данных, например значение другого свойства. В этом случае обратный вызов проверяет, ли `ShirtType` свойства соответствует типу объекта, содержащего кнопки; Если Да, она устанавливает начальный цвет по умолчанию для `ButtonColor`, если кнопки не типа "рубашка", он преобразует `ButtonColor` значение к начальному значению, что вызывает [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] (не показано) для удаления выпадающего меню из эффективных выборов.  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>