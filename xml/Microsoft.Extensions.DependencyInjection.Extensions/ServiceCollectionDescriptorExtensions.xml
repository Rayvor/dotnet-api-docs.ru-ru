<Type Name="ServiceCollectionDescriptorExtensions" FullName="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5bd5302d4b32eb8a88a3db2fd8bf2b8228a056fa" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72417966" /></Metadata><TypeSignature Language="C#" Value="public static class ServiceCollectionDescriptorExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceCollectionDescriptorExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceCollectionDescriptorExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCollectionDescriptorExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ServiceCollectionDescriptorExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b21f7-101">Методы расширения для добавления и удаления служб в <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-101">Extension methods for adding and removing services to an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Add (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Add(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Add (collection As IServiceCollection, descriptor As ServiceDescriptor) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Add(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member Add : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.DependencyInjection.ServiceDescriptor -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add (collection, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptor" Type="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-102"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-102">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptor"><span data-ttu-id="b21f7-103">Добавляемый объект <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-103">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> to add.</span></span></param>
        <summary><span data-ttu-id="b21f7-104">Добавляет заданный объект <paramref name="descriptor" /> в <paramref name="collection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-104">Adds the specified <paramref name="descriptor" /> to the <paramref name="collection" />.</span></span></summary>
        <returns><span data-ttu-id="b21f7-105">Ссылка на текущий экземпляр <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-105">A reference to the current instance of <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Add (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Add(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Add (collection As IServiceCollection, descriptors As IEnumerable(Of ServiceDescriptor)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Add(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^&gt; ^ descriptors);" />
      <MemberSignature Language="F#" Value="static member Add : Microsoft.Extensions.DependencyInjection.IServiceCollection * seq&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add (collection, descriptors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptors" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-106"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-106">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptors"><span data-ttu-id="b21f7-107">Добавляемые <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-107">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />s to add.</span></span></param>
        <summary><span data-ttu-id="b21f7-108">Добавляет последовательность <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> в <paramref name="collection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-108">Adds a sequence of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> to the <paramref name="collection" />.</span></span></summary>
        <returns><span data-ttu-id="b21f7-109">Ссылка на текущий экземпляр <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-109">A reference to the current instance of <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection RemoveAll (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection RemoveAll(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAll(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveAll (collection As IServiceCollection, serviceType As Type) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ RemoveAll(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="static member RemoveAll : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAll (collection, serviceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="serviceType" Type="System.Type" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-110"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-110">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="serviceType"><span data-ttu-id="b21f7-111">Удаляемый тип службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-111">The service type to remove.</span></span></param>
        <summary><span data-ttu-id="b21f7-112">Удаляет все службы типа <paramref name="serviceType" /> в <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-112">Removes all services of type <paramref name="serviceType" /> in <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="b21f7-113"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="b21f7-113">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> for chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection RemoveAll&lt;T&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection RemoveAll&lt;T&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAll``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveAll(Of T) (collection As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ RemoveAll(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member RemoveAll : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAll collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="collection"><span data-ttu-id="b21f7-114"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-114">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="b21f7-115">Удаляет все службы типа <typeparamref name="T" /> в <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-115">Removes all services of type <typeparamref name="T" /> in <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="b21f7-116"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="b21f7-116">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> for chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Replace (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Replace(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Replace(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (collection As IServiceCollection, descriptor As ServiceDescriptor) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Replace(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member Replace : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.DependencyInjection.ServiceDescriptor -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Replace (collection, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptor" Type="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-117"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-117">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptor"><span data-ttu-id="b21f7-118"><see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> для замены.</span><span class="sxs-lookup"><span data-stu-id="b21f7-118">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> to replace with.</span></span></param>
        <summary><span data-ttu-id="b21f7-119">Удаляет первую службу в <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> с тем же типом службы, что и <paramref name="descriptor" />, и добавляет <paramref name="descriptor" /> в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="b21f7-119">Removes the first service in <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> with the same service type as <paramref name="descriptor" /> and adds <paramref name="descriptor" /> to the collection.</span></span></summary>
        <returns><span data-ttu-id="b21f7-120"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="b21f7-120">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> for chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public static void TryAdd (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAdd(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAdd (collection As IServiceCollection, descriptor As ServiceDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAdd(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member TryAdd : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.DependencyInjection.ServiceDescriptor -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd (collection, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptor" Type="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-121"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-121">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptor"><span data-ttu-id="b21f7-122">Добавляемый объект <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-122">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> to add.</span></span></param>
        <summary><span data-ttu-id="b21f7-123">Добавляет указанный <paramref name="descriptor" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-123">Adds the specified <paramref name="descriptor" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public static void TryAdd (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAdd(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAdd (collection As IServiceCollection, descriptors As IEnumerable(Of ServiceDescriptor))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAdd(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^&gt; ^ descriptors);" />
      <MemberSignature Language="F#" Value="static member TryAdd : Microsoft.Extensions.DependencyInjection.IServiceCollection * seq&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd (collection, descriptors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptors" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-124"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-124">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptors"><span data-ttu-id="b21f7-125">Добавляемые <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-125">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />s to add.</span></span></param>
        <summary><span data-ttu-id="b21f7-126">Добавляет указанный <paramref name="descriptors" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-126">Adds the specified <paramref name="descriptors" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddEnumerable">
      <MemberSignature Language="C#" Value="public static void TryAddEnumerable (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddEnumerable(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddEnumerable (services As IServiceCollection, descriptor As ServiceDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddEnumerable(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member TryAddEnumerable : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.DependencyInjection.ServiceDescriptor -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable (services, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptor" Type="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="b21f7-127"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-127">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptor"><span data-ttu-id="b21f7-128"><see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-128">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="b21f7-129">Добавляет <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />, если существует дескриптор с тем же <see cref="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" /> и реализацией, которая отсутствует в <paramref name="services.." />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-129">Adds a <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> if an existing descriptor with the same <see cref="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" /> and an implementation that does not already exist in <paramref name="services.." />.</span></span></summary>
        <remarks><span data-ttu-id="b21f7-130">Используйте <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> при регистрации реализации службы типа службы, которая поддерживает несколько регистраций одного типа службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-130">Use <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> when registering a service implementation of a service type that supports multiple registrations of the same service type.</span></span> <span data-ttu-id="b21f7-131">Использование <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> не идемпотентными и может добавлять дубликаты экземпляров <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />, если они вызываются дважды.</span><span class="sxs-lookup"><span data-stu-id="b21f7-131">Using <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> is not idempotent and can add duplicate <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> instances if called twice.</span></span> <span data-ttu-id="b21f7-132">Использование <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> предотвратит регистрацию нескольких типов реализации.</span><span class="sxs-lookup"><span data-stu-id="b21f7-132">Using <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> will prevent registration of multiple implementation types.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddEnumerable">
      <MemberSignature Language="C#" Value="public static void TryAddEnumerable (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddEnumerable(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddEnumerable (services As IServiceCollection, descriptors As IEnumerable(Of ServiceDescriptor))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddEnumerable(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^&gt; ^ descriptors);" />
      <MemberSignature Language="F#" Value="static member TryAddEnumerable : Microsoft.Extensions.DependencyInjection.IServiceCollection * seq&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable (services, descriptors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptors" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="b21f7-133"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-133">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptors"><span data-ttu-id="b21f7-134">Объекты <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-134">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />s.</span></span></param>
        <summary><span data-ttu-id="b21f7-135">Добавляет указанные <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />, если существует дескриптор с тем же <see cref="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" /> и реализацией, которая отсутствует в <paramref name="services.." />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-135">Adds the specified <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />s if an existing descriptor with the same <see cref="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" /> and an implementation that does not already exist in <paramref name="services.." />.</span></span></summary>
        <remarks><span data-ttu-id="b21f7-136">Используйте <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> при регистрации реализации службы типа службы, которая поддерживает несколько регистраций одного типа службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-136">Use <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> when registering a service implementation of a service type that supports multiple registrations of the same service type.</span></span> <span data-ttu-id="b21f7-137">Использование <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> не идемпотентными и может добавлять дубликаты экземпляров <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />, если они вызываются дважды.</span><span class="sxs-lookup"><span data-stu-id="b21f7-137">Using <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> is not idempotent and can add duplicate <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> instances if called twice.</span></span> <span data-ttu-id="b21f7-138">Использование <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> предотвратит регистрацию нескольких типов реализации.</span><span class="sxs-lookup"><span data-stu-id="b21f7-138">Using <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> will prevent registration of multiple implementation types.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped">
      <MemberSignature Language="C#" Value="public static void TryAddScoped (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped (collection As IServiceCollection, service As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped (collection, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-139"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-139">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="b21f7-140">Тип регистрируемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-140">The type of the service to register.</span></span></param>
        <summary><span data-ttu-id="b21f7-141">Добавляет указанный <paramref name="service" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-141">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped">
      <MemberSignature Language="C#" Value="public static void TryAddScoped (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped (collection As IServiceCollection, service As Type, implementationFactory As Func(Of IServiceProvider, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Func&lt;IServiceProvider, obj&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped (collection, service, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-142"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-142">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="b21f7-143">Тип регистрируемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-143">The type of the service to register.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="b21f7-144">Фабрика, создающая службу.</span><span class="sxs-lookup"><span data-stu-id="b21f7-144">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="b21f7-145">Добавляет указанный <paramref name="service" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> в <paramref name="collection" />, используя указанную в <paramref name="implementationFactory" /> фабрику, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-145">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped">
      <MemberSignature Language="C#" Value="public static void TryAddScoped (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped (collection As IServiceCollection, service As Type, implementationType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped (collection, service, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-146"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-146">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="b21f7-147">Тип регистрируемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-147">The type of the service to register.</span></span></param>
        <param name="implementationType"><span data-ttu-id="b21f7-148">Тип реализации службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-148">The implementation type of the service.</span></span></param>
        <summary><span data-ttu-id="b21f7-149">Добавляет указанный <paramref name="service" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> с реализацией <paramref name="implementationType" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-149">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service with the <paramref name="implementationType" /> implementation to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddScoped&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped(Of TService As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="b21f7-150">Тип добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-150">The type of the service to add.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="b21f7-151"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-151">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="b21f7-152">Добавляет указанный <typeparamref name="TService" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-152">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddScoped&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped(Of TService As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="b21f7-153">Тип добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-153">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="b21f7-154"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-154">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="b21f7-155">Фабрика, создающая службу.</span><span class="sxs-lookup"><span data-stu-id="b21f7-155">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="b21f7-156">Добавляет указанный <typeparamref name="TService" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> в <paramref name="services" />, используя указанную в <paramref name="implementationFactory" /> фабрику, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-156">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="services" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddScoped&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped(Of TService As Class, TImplementation As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="b21f7-157">Тип добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-157">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="b21f7-158">Тип используемой реализации.</span><span class="sxs-lookup"><span data-stu-id="b21f7-158">The type of the implementation to use.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="b21f7-159"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-159">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="b21f7-160">Добавляет указанный <typeparamref name="TService" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> в <paramref name="collection" />, используя указанный в <typeparamref name="TImplementation" /> тип реализации, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-160">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service implementation type specified in <typeparamref name="TImplementation" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton (collection As IServiceCollection, service As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton (collection, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-161"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-161">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="b21f7-162">Тип регистрируемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-162">The type of the service to register.</span></span></param>
        <summary><span data-ttu-id="b21f7-163">Добавляет указанный <paramref name="service" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-163">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton (collection As IServiceCollection, service As Type, implementationFactory As Func(Of IServiceProvider, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Func&lt;IServiceProvider, obj&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton (collection, service, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-164"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-164">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="b21f7-165">Тип регистрируемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-165">The type of the service to register.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="b21f7-166">Фабрика, создающая службу.</span><span class="sxs-lookup"><span data-stu-id="b21f7-166">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="b21f7-167">Добавляет указанный <paramref name="service" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> в <paramref name="collection" />, используя указанную в <paramref name="implementationFactory" /> фабрику, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-167">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton (collection As IServiceCollection, service As Type, implementationType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton (collection, service, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-168"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-168">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="b21f7-169">Тип регистрируемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-169">The type of the service to register.</span></span></param>
        <param name="implementationType"><span data-ttu-id="b21f7-170">Тип реализации службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-170">The implementation type of the service.</span></span></param>
        <summary><span data-ttu-id="b21f7-171">Добавляет указанный <paramref name="service" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> с реализацией <paramref name="implementationType" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-171">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service with the <paramref name="implementationType" /> implementation to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton(Of TService As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="b21f7-172">Тип добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-172">The type of the service to add.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="b21f7-173"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-173">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="b21f7-174">Добавляет указанный <typeparamref name="TService" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-174">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton(Of TService As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="b21f7-175">Тип добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-175">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="b21f7-176"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-176">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="b21f7-177">Фабрика, создающая службу.</span><span class="sxs-lookup"><span data-stu-id="b21f7-177">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="b21f7-178">Добавляет указанный <typeparamref name="TService" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> в <paramref name="services" />, используя указанную в <paramref name="implementationFactory" /> фабрику, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-178">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="services" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, TService instance) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, !!TService instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton(Of TService As Class) (collection As IServiceCollection, instance As TService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, TService instance);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * 'Service -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton (collection, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="instance" Type="TService" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="b21f7-179">Тип добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-179">The type of the service to add.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="b21f7-180"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-180">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="instance"><span data-ttu-id="b21f7-181">Экземпляр добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-181">The instance of the service to add.</span></span></param>
        <summary><span data-ttu-id="b21f7-182">Добавляет указанный <typeparamref name="TService" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> в <paramref name="collection" />, используя указанный в <paramref name="instance" /> экземпляр, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-182">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service with an instance specified in <paramref name="instance" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton(Of TService As Class, TImplementation As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="b21f7-183">Тип добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-183">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="b21f7-184">Тип используемой реализации.</span><span class="sxs-lookup"><span data-stu-id="b21f7-184">The type of the implementation to use.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="b21f7-185"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-185">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="b21f7-186">Добавляет указанный <typeparamref name="TService" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> в <paramref name="collection" />, используя указанный в <typeparamref name="TImplementation" /> тип реализации, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-186">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service implementation type specified in <typeparamref name="TImplementation" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient">
      <MemberSignature Language="C#" Value="public static void TryAddTransient (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient (collection As IServiceCollection, service As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient (collection, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-187"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-187">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="b21f7-188">Тип регистрируемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-188">The type of the service to register.</span></span></param>
        <summary><span data-ttu-id="b21f7-189">Добавляет указанный <paramref name="service" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-189">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient">
      <MemberSignature Language="C#" Value="public static void TryAddTransient (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient (collection As IServiceCollection, service As Type, implementationFactory As Func(Of IServiceProvider, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Func&lt;IServiceProvider, obj&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient (collection, service, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-190"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-190">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="b21f7-191">Тип регистрируемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-191">The type of the service to register.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="b21f7-192">Фабрика, создающая службу.</span><span class="sxs-lookup"><span data-stu-id="b21f7-192">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="b21f7-193">Добавляет указанный <paramref name="service" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> в <paramref name="collection" />, используя указанную в <paramref name="implementationFactory" /> фабрику, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-193">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient">
      <MemberSignature Language="C#" Value="public static void TryAddTransient (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient (collection As IServiceCollection, service As Type, implementationType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient (collection, service, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="b21f7-194"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-194">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="b21f7-195">Тип регистрируемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-195">The type of the service to register.</span></span></param>
        <param name="implementationType"><span data-ttu-id="b21f7-196">Тип реализации службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-196">The implementation type of the service.</span></span></param>
        <summary><span data-ttu-id="b21f7-197">Добавляет указанный <paramref name="service" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> с реализацией <paramref name="implementationType" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-197">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service with the <paramref name="implementationType" /> implementation to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddTransient&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient(Of TService As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="b21f7-198">Тип добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-198">The type of the service to add.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="b21f7-199"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-199">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="b21f7-200">Добавляет указанный <typeparamref name="TService" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> в <paramref name="collection" />, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-200">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddTransient&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient(Of TService As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="b21f7-201">Тип добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-201">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="b21f7-202"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-202">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="b21f7-203">Фабрика, создающая службу.</span><span class="sxs-lookup"><span data-stu-id="b21f7-203">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="b21f7-204">Добавляет указанный <typeparamref name="TService" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> в <paramref name="services" />, используя указанную в <paramref name="implementationFactory" /> фабрику, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-204">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="services" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddTransient&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient(Of TService As Class, TImplementation As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="b21f7-205">Тип добавляемой службы.</span><span class="sxs-lookup"><span data-stu-id="b21f7-205">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="b21f7-206">Тип используемой реализации.</span><span class="sxs-lookup"><span data-stu-id="b21f7-206">The type of the implementation to use.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="b21f7-207"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b21f7-207">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="b21f7-208">Добавляет указанный <typeparamref name="TService" /> в качестве службы <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> в <paramref name="collection" />, используя указанный в <typeparamref name="TImplementation" /> тип реализации, если этот тип службы еще не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="b21f7-208">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service implementation type specified in <typeparamref name="TImplementation" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
