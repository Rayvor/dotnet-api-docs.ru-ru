<Type Name="PromptBuilder" FullName="System.Speech.Synthesis.PromptBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f41778121fe03a89870af51f4a9ecdc996e9194b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70533595" /></Metadata><TypeSignature Language="C#" Value="public class PromptBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PromptBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.PromptBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PromptBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PromptBuilder" />
  <TypeSignature Language="F#" Value="type PromptBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="29cda-101">Создает пустой объект <see cref="T:System.Speech.Synthesis.Prompt" /> и предоставляет методы для добавления содержимого, выбора голоса, управления атрибутами голоса и управления произношением произносимых слов.</span><span class="sxs-lookup"><span data-stu-id="29cda-101">Creates an empty <see cref="T:System.Speech.Synthesis.Prompt" /> object and provides methods for adding content, selecting voices, controlling voice attributes, and controlling the pronunciation of spoken words.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-102">С <xref:System.Speech.Synthesis.PromptBuilder>помощью можно добавить в запрос различные типы содержимого, включая обычный текст, разметку SSML (в виде строки или файла), записанный звук или даже другой <xref:System.Speech.Synthesis.PromptBuilder> объект.</span><span class="sxs-lookup"><span data-stu-id="29cda-102">With <xref:System.Speech.Synthesis.PromptBuilder>, you can add a variety of content types to a prompt, including plain text, SSML markup (as a string or a file), recorded audio, or even another <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 <span data-ttu-id="29cda-103">Чтобы добавить текст в <xref:System.Speech.Synthesis.PromptBuilder> объект и при необходимости управлять голосовыми атрибутами, такими как выделение, скорость и громкость, используйте один <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> из методов.</span><span class="sxs-lookup"><span data-stu-id="29cda-103">To append text to a <xref:System.Speech.Synthesis.PromptBuilder> object and optionally control voice attributes such as emphasis, rate, and volume, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> methods.</span></span>  <span data-ttu-id="29cda-104">Также можно управлять голосовыми атрибутами как группой с <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> помощью методов и. <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-104">You can also control voice attributes as a group with the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> methods.</span></span>  
  
 <span data-ttu-id="29cda-105">Можно добавить текст и управлять тем <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A> <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, что говорят, или как он произносится с помощью <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>методов, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>,, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> или.</span><span class="sxs-lookup"><span data-stu-id="29cda-105">You can append text and control what is spoken or how it is pronounced using the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>,  <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> methods.</span></span>  
  
 <span data-ttu-id="29cda-106">Изменение текущего выбранного голоса в командной строке с помощью одного из перегруженных <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> методов, именования определенного голоса или указание требуемых характеристик голоса, таких как возраст и пол.</span><span class="sxs-lookup"><span data-stu-id="29cda-106">Change the currently selected speaking voice in the prompt using one of the overloaded <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods, naming a specific voice to use or specifying required voice characteristics, such as age and gender.</span></span>  
  
 <span data-ttu-id="29cda-107">Чтобы создать речь из <xref:System.Speech.Synthesis.PromptBuilder> объекта, можно передать его в качестве аргумента <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="29cda-107">To generate speech from a <xref:System.Speech.Synthesis.PromptBuilder> object, you can pass it as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="29cda-108">Дополнительные сведения см. [в разделе Создание сложной подсказки](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361616(v%3doffice.14)).</span><span class="sxs-lookup"><span data-stu-id="29cda-108">For more information, see [Constructing a Complex Prompt](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361616(v%3doffice.14)).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29cda-109">Создает новый экземпляр класса <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-109">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29cda-110">Создает новый экземпляр класса <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-110">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29cda-111">В следующем примере создается новый <xref:System.Speech.Synthesis.PromptBuilder> экземпляр и в него добавляется текстовая строка.</span><span class="sxs-lookup"><span data-stu-id="29cda-111">The following example creates a new <xref:System.Speech.Synthesis.PromptBuilder> instance and adds a text string to it.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="29cda-112">В следующей разметке показан эквивалент в языке разметки речи (SSML) (`xml:lang` является обязательным атрибутом `speak` элемента):</span><span class="sxs-lookup"><span data-stu-id="29cda-112">The following markup shows the equivalent in Speech Synthesis Markup Language (SSML), (`xml:lang` is a required attribute of the `speak` element):</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.PromptBuilder : System.Globalization.CultureInfo -&gt; System.Speech.Synthesis.PromptBuilder" Usage="new System.Speech.Synthesis.PromptBuilder culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="29cda-113">Предоставляет сведения об определенном языке и региональных параметрах, например языке, названии языка и региональных параметров, система письма, используемый календаря, и как форматирование даты и отсортировать строки.</span><span class="sxs-lookup"><span data-stu-id="29cda-113">Provides information about a specific culture, such as its language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="29cda-114">Создает новый экземпляр класса <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и задает язык и региональные параметры.</span><span class="sxs-lookup"><span data-stu-id="29cda-114">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class and specifies a culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-115">Этот конструктор задает значение для <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="29cda-115">This constructor sets the value for the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="29cda-116">Объект попытается выбрать установленный голоса, поддерживающий язык, заданный `culture` параметром, для обработки запроса. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="29cda-116">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the `culture` parameter to process the prompt.</span></span> <span data-ttu-id="29cda-117">При обнаружении голоса с указанным языком и региональными параметрами будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="29cda-117">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="29cda-118">Если не удается найти голосовое значение с указанным языком и региональными параметрами, будет использоваться стандартный Voice.</span><span class="sxs-lookup"><span data-stu-id="29cda-118">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="29cda-119">Для правильного произношения слов на языке, указанном `culture` параметром, необходимо установить подсистему синтеза речи (преобразование текста в речь или TTS), поддерживающую язык.</span><span class="sxs-lookup"><span data-stu-id="29cda-119">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="29cda-120">Установленный модуль TTS называется голосовым.</span><span class="sxs-lookup"><span data-stu-id="29cda-120">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="29cda-121">Чтобы получить сведения о том, какие голоса установлены для конкретного языка и региональных параметров <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> , используйте метод.</span><span class="sxs-lookup"><span data-stu-id="29cda-121">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="29cda-122">Microsoft Windows и API System. Speech принимают все допустимые коды языковых стран в виде значений `culture`для.</span><span class="sxs-lookup"><span data-stu-id="29cda-122">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="29cda-123">Модули TTS, поставляемые с Windows 7, поддерживают следующие коды языков:</span><span class="sxs-lookup"><span data-stu-id="29cda-123">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="29cda-124">EN-US.</span><span class="sxs-lookup"><span data-stu-id="29cda-124">en-US.</span></span> <span data-ttu-id="29cda-125">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="29cda-125">English (United States)</span></span>  
  
-   <span data-ttu-id="29cda-126">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="29cda-126">zh-CN.</span></span> <span data-ttu-id="29cda-127">Китайский (Китай)</span><span class="sxs-lookup"><span data-stu-id="29cda-127">Chinese (China)</span></span>  
  
-   <span data-ttu-id="29cda-128">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="29cda-128">zh-TW.</span></span> <span data-ttu-id="29cda-129">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="29cda-129">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="29cda-130">Также разрешены двухбуквенный код языка, например "en".</span><span class="sxs-lookup"><span data-stu-id="29cda-130">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-131">Следующий пример создает <xref:System.Speech.Synthesis.PromptBuilder> экземпляр и указывает его <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>.</span><span class="sxs-lookup"><span data-stu-id="29cda-131">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies its <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder(new System.Globalization.CultureInfo("en-US"));  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="29cda-132">В следующей разметке показан эквивалентный SSML:</span><span class="sxs-lookup"><span data-stu-id="29cda-132">The following markup shows the equivalent SSML:</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendAudio">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29cda-133">Добавляет заданный звуковой файл в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-133">Appends a specified audio file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendAudio : string -&gt; unit" Usage="promptBuilder.AppendAudio path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="29cda-134">Полный путь к аудиофайлу.</span><span class="sxs-lookup"><span data-stu-id="29cda-134">A fully qualified path to the audio file.</span></span></param>
        <summary><span data-ttu-id="29cda-135">Добавляет указанный звуковой файл в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-135">Appends the specified audio file to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile);" />
      <MemberSignature Language="F#" Value="member this.AppendAudio : Uri -&gt; unit" Usage="promptBuilder.AppendAudio audioFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="audioFile"><span data-ttu-id="29cda-136">URI для звукового файла.</span><span class="sxs-lookup"><span data-stu-id="29cda-136">URI for the audio file.</span></span></param>
        <summary><span data-ttu-id="29cda-137">Добавляет звуковой файл по указанному универсальному коду ресурса (URI) в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-137">Appends the audio file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29cda-138">В следующем примере инициализируется новый экземпляр <xref:System.Speech.Synthesis.PromptBuilder> класса, а затем в него добавляется текст, за которым следует звуковой файл.</span><span class="sxs-lookup"><span data-stu-id="29cda-138">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class and then adds text to it, followed by an audio file.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
    // Add a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("How are you today?");  
    builder.AppendAudio(new Uri ("http://www.speech.microsoft.com/ding.wav"));  
}  
```  
  
 <span data-ttu-id="29cda-139">В следующей разметке показана Эквивалентная разметка SSML.</span><span class="sxs-lookup"><span data-stu-id="29cda-139">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  How are you today?  
  <audio src="http://www.speech.microsoft.com/ding.wav" />  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile, string alternateText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile, string alternateText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri, alternateText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile, System::String ^ alternateText);" />
      <MemberSignature Language="F#" Value="member this.AppendAudio : Uri * string -&gt; unit" Usage="promptBuilder.AppendAudio (audioFile, alternateText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
        <Parameter Name="alternateText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile"><span data-ttu-id="29cda-140">URI для звукового файла.</span><span class="sxs-lookup"><span data-stu-id="29cda-140">URI for the audio file.</span></span></param>
        <param name="alternateText"><span data-ttu-id="29cda-141">Строка, содержащая альтернативный текст, представляющий звуковое содержимое.</span><span class="sxs-lookup"><span data-stu-id="29cda-141">A string containing alternate text representing the audio.</span></span></param>
        <summary><span data-ttu-id="29cda-142">Добавляет указанный звуковой файл и альтернативный текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-142">Appends the specified audio file and alternate text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-143">Подсистема синтеза речи будет обращаться к альтернативному тексту, если воспроизведение звукового файла невозможно.</span><span class="sxs-lookup"><span data-stu-id="29cda-143">The speech synthesis engine will speak the alternate text if the audio file cannot be played.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-144">В следующих примерах добавляется звуковой файл в <xref:System.Speech.Synthesis.PromptBuilder> экземпляр и указывается текст, который будет говорить, если аудиофайл не может быть воспроизведен.</span><span class="sxs-lookup"><span data-stu-id="29cda-144">The following examples adds an audio file to a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies text to speak if the audio file cannot be played.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
  
    // Concatenate a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendAudio(new Uri ("C:\\OnHold.wav"), "Your call will be answered in the order it was received");  
}  
```  
  
 <span data-ttu-id="29cda-145">В следующей разметке показана Эквивалентная разметка SSML.</span><span class="sxs-lookup"><span data-stu-id="29cda-145">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  <audio src="C:\OnHold.wav"> Your call will be answered in the order it was received. </audio>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBookmark">
      <MemberSignature Language="C#" Value="public void AppendBookmark (string bookmarkName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBookmark(string bookmarkName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBookmark (bookmarkName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBookmark(System::String ^ bookmarkName);" />
      <MemberSignature Language="F#" Value="member this.AppendBookmark : string -&gt; unit" Usage="promptBuilder.AppendBookmark bookmarkName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="29cda-146">Строка, содержащая имя добавленной закладки.</span><span class="sxs-lookup"><span data-stu-id="29cda-146">A string containing the name of the appended bookmark.</span></span></param>
        <summary><span data-ttu-id="29cda-147">Добавляет закладку для объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-147">Appends a bookmark to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-148">Обработчик <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> синтеза речи создаст событие <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, если оно встречает закладку, при этом выводит запрос с помощью любого из <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>методов <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>,, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> или.</span><span class="sxs-lookup"><span data-stu-id="29cda-148">A speech synthesis engine will generate a <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event if it encounters a bookmark while speaking a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-149">В следующем примере создается запрос, включающий две закладки и отправляющий выходные данные в WAV-файл для воспроизведения.</span><span class="sxs-lookup"><span data-stu-id="29cda-149">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="29cda-150">Обработчик <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> события записывает имя закладки и ее расположение в потоке аудио при возникновении события в консоли.</span><span class="sxs-lookup"><span data-stu-id="29cda-150">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nighttime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendBreak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29cda-151">Вставляет разрыв (паузу) в содержимое объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-151">Inserts a break (pause) in the content of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak();" />
      <MemberSignature Language="F#" Value="member this.AppendBreak : unit -&gt; unit" Usage="promptBuilder.AppendBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29cda-152">Добавляет перерыв в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-152">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-153">Этот метод не задает длительность перерыва.</span><span class="sxs-lookup"><span data-stu-id="29cda-153">This method does not specify a duration for the break.</span></span> <span data-ttu-id="29cda-154"><xref:System.Speech.Synthesis.SpeechSynthesizer> Определит значение длительности на основе лингвистического контекста.</span><span class="sxs-lookup"><span data-stu-id="29cda-154">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will determine a duration value based on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-155">В следующем примере создается запрос, содержащий два предложения, разделенных разрывом, и принимает приглашение на звуковое устройство по умолчанию на компьютере.</span><span class="sxs-lookup"><span data-stu-id="29cda-155">The following example builds a prompt containing two sentences separated by a break and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45.");  
        builder.AppendBreak();  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:30, and 9:15.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (System.Speech.Synthesis.PromptBreak strength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.Speech.Synthesis.PromptBreak strength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (strength As PromptBreak)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(System::Speech::Synthesis::PromptBreak strength);" />
      <MemberSignature Language="F#" Value="member this.AppendBreak : System.Speech.Synthesis.PromptBreak -&gt; unit" Usage="promptBuilder.AppendBreak strength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strength" Type="System.Speech.Synthesis.PromptBreak" />
      </Parameters>
      <Docs>
        <param name="strength"><span data-ttu-id="29cda-156">Указывает продолжительность перерыва со следующими возрастающими значениями:</span><span class="sxs-lookup"><span data-stu-id="29cda-156">Indicates the duration of the break, with the following increasing values:</span></span></param>
        <summary><span data-ttu-id="29cda-157">Добавляет перерыв в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает его продолжительность.</span><span class="sxs-lookup"><span data-stu-id="29cda-157">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its strength (duration).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-158">Значения в <xref:System.Speech.Synthesis.PromptBreak> перечислении представляют диапазон интервалов разделения (паузы) между границами слов.</span><span class="sxs-lookup"><span data-stu-id="29cda-158">The values in the <xref:System.Speech.Synthesis.PromptBreak> enumeration represent a range of separation intervals (pauses) between word boundaries.</span></span> <span data-ttu-id="29cda-159">Подсистема синтеза речи определяет точную длительность интервала.</span><span class="sxs-lookup"><span data-stu-id="29cda-159">The speech synthesis engine determines the exact duration of the interval.</span></span> <span data-ttu-id="29cda-160">При запросе на прерывание одно из этих значений передается в подсистему преобразования текста в речь (TTS), которая содержит сопоставление между этими значениями и соответствующими значениями перерыва в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="29cda-160">When a break is requested, one of these values is passed to the text-to-speech (TTS) engine, which contains a mapping between these values and the corresponding millisecond break values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-161">В следующем примере создается запрос, содержащий два предложения, разделенных разрывом, и отправляет выходные данные в WAV-файл для воспроизведения.</span><span class="sxs-lookup"><span data-stu-id="29cda-161">The following example builds a prompt containing two sentences separated by a break and sends the output to a WAV file for playback.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(PromptBreak.Medium);  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (duration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(TimeSpan duration);" />
      <MemberSignature Language="F#" Value="member this.AppendBreak : TimeSpan -&gt; unit" Usage="promptBuilder.AppendBreak duration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="duration"><span data-ttu-id="29cda-162">Время в тактах, где один такт равен 100 наносекунд.</span><span class="sxs-lookup"><span data-stu-id="29cda-162">The time in ticks, where one tick equals 100 nanoseconds.</span></span></param>
        <summary><span data-ttu-id="29cda-163">Добавляет перерыв заданной длительности в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-163">Appends a break of the specified duration to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-164">Разрыв можно использовать для управления паузами или другими интонационную границами между словами.</span><span class="sxs-lookup"><span data-stu-id="29cda-164">A break can be used to control pauses or other prosodic boundaries between words.</span></span> <span data-ttu-id="29cda-165">Перерыв является необязательным.</span><span class="sxs-lookup"><span data-stu-id="29cda-165">A break is optional.</span></span> <span data-ttu-id="29cda-166">Если перерыв отсутствует, синтезатор определяет разрыв между словами в зависимости от лингвистического контекста.</span><span class="sxs-lookup"><span data-stu-id="29cda-166">If a break is not present, the synthesizer determines the break between words depending on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-167">В следующем примере создается запрос, содержащий два предложения, разделенные перерывом в 15 000 000 тактов (1,5 секунд), и принимает приглашение на звуковое устройство по умолчанию на компьютере.</span><span class="sxs-lookup"><span data-stu-id="29cda-167">The following example builds a prompt containing two sentences separated by a break of 15,000,000 ticks (1.5 seconds), and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(new TimeSpan(15000000));  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPromptBuilder">
      <MemberSignature Language="C#" Value="public void AppendPromptBuilder (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendPromptBuilder(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendPromptBuilder(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.AppendPromptBuilder : System.Speech.Synthesis.PromptBuilder -&gt; unit" Usage="promptBuilder.AppendPromptBuilder promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="29cda-168">Добавляемое содержимое.</span><span class="sxs-lookup"><span data-stu-id="29cda-168">The content to append.</span></span></param>
        <summary><span data-ttu-id="29cda-169">Добавляет объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> к другому объекту <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-169">Appends a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object to another <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29cda-170">Следующий пример создает два <xref:System.Speech.Synthesis.PromptBuilder> экземпляра, а затем добавляет их к третьему. <xref:System.Speech.Synthesis.PromptBuilder></span><span class="sxs-lookup"><span data-stu-id="29cda-170">The example that follows creates two <xref:System.Speech.Synthesis.PromptBuilder> instances and then appends them to a third <xref:System.Speech.Synthesis.PromptBuilder>.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\showtimes.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\showtimes.wav");  
  
        // Build child prompts.  
        PromptBuilder theatreA = new PromptBuilder();  
        theatreA.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 9:30");  
        theatreA.AppendBreak(PromptBreak.Large);  
        PromptBuilder theatreB = new PromptBuilder();  
        theatreB.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Build the parent prompt and append the two child prompts.  
        PromptBuilder showTimes = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        showTimes.AppendText(  
          "The following are the show times for tonight's movies:");  
        showTimes.AppendPromptBuilder(theatreA);  
        showTimes.AppendPromptBuilder(theatreB);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(showTimes);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSsml">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29cda-171">Добавляет файл SSML к объекту <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-171">Appends an SSML file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendSsml : string -&gt; unit" Usage="promptBuilder.AppendSsml path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="29cda-172">Полный путь к добавляемому файлу SSML.</span><span class="sxs-lookup"><span data-stu-id="29cda-172">A fully qualified path to the SSML file to append.</span></span></param>
        <summary><span data-ttu-id="29cda-173">Добавляет файл SSML по указанному пути в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-173">Appends the SSML file at the specified path to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-174">Файл SSML должен представлять собой XML-файл форматирования, который соответствует спецификации [версии 1,0 для языка разметки речи (SSML)](https://go.microsoft.com/fwlink/?LinkId=201763) .</span><span class="sxs-lookup"><span data-stu-id="29cda-174">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763) specification.</span></span>  
  
 <span data-ttu-id="29cda-175">Можно также добавить разметку SSML в виде строки с <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>помощью.</span><span class="sxs-lookup"><span data-stu-id="29cda-175">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-176">Следующий пример создает <xref:System.Speech.Synthesis.PromptBuilder> объект и добавляет содержимое файла SSML <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="29cda-176">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml("c:\\test\\Weather.ssml");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 <span data-ttu-id="29cda-177">Ниже приведен файл SSML, на который ссылается предыдущий пример.</span><span class="sxs-lookup"><span data-stu-id="29cda-177">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (Uri ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Uri ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(Uri ^ ssmlFile);" />
      <MemberSignature Language="F#" Value="member this.AppendSsml : Uri -&gt; unit" Usage="promptBuilder.AppendSsml ssmlFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="ssmlFile"><span data-ttu-id="29cda-178">Полный URI добавляемого файла SSML.</span><span class="sxs-lookup"><span data-stu-id="29cda-178">A fully qualified URI to the SSML file to append.</span></span></param>
        <summary><span data-ttu-id="29cda-179">Добавляет файл SSML по указанному универсальному коду ресурса (URI) в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-179">Appends the SSML file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-180">Файл SSML должен представлять собой XML-файл форматирования, который соответствует спецификации [версии 1,0 для языка разметки речи (SSML)](https://www.w3.org/TR/speech-synthesis/) .</span><span class="sxs-lookup"><span data-stu-id="29cda-180">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="29cda-181">Можно также добавить разметку SSML в виде строки с <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>помощью.</span><span class="sxs-lookup"><span data-stu-id="29cda-181">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-182">Следующий пример создает <xref:System.Speech.Synthesis.PromptBuilder> объект и добавляет содержимое файла SSML <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="29cda-182">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml(new Uri("c:\\test\\Weather.ssml"));  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="29cda-183">Ниже приведен файл SSML, на который ссылается предыдущий пример.</span><span class="sxs-lookup"><span data-stu-id="29cda-183">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (System.Xml.XmlReader ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Xml.XmlReader ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::Xml::XmlReader ^ ssmlFile);" />
      <MemberSignature Language="F#" Value="member this.AppendSsml : System.Xml.XmlReader -&gt; unit" Usage="promptBuilder.AppendSsml ssmlFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="ssmlFile"><span data-ttu-id="29cda-184">Полное имя добавляемого файла XML.</span><span class="sxs-lookup"><span data-stu-id="29cda-184">A fully qualified name to the XML file to append.</span></span></param>
        <summary><span data-ttu-id="29cda-185">Добавляет объект <c>XMLReader</c>, который ссылается на запрос SSML, в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-185">Appends an <c>XMLReader</c> object that references an SSML prompt to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-186">Файл SSML должен представлять собой XML-файл форматирования, который соответствует спецификации [версии 1,0 для языка разметки речи (SSML)](https://www.w3.org/TR/speech-synthesis/) .</span><span class="sxs-lookup"><span data-stu-id="29cda-186">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="29cda-187">Можно также добавить разметку SSML в виде строки с <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>помощью.</span><span class="sxs-lookup"><span data-stu-id="29cda-187">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-188">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объект <xref:System.Xml.XmlReader> из объекта, который ссылается на файл, содержащий разметку языка SSML.</span><span class="sxs-lookup"><span data-stu-id="29cda-188">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from an <xref:System.Xml.XmlReader> object that references a file containing Speech Synthesis Markup Language (SSML) markup.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Create the path to the SSML file.  
        string weatherFile = Path.GetFullPath("c:\\test\\Weather.xml");  
        PromptBuilder builder = null;  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        if (File.Exists(weatherFile))  
        {  
          XmlReader reader = XmlReader.Create(weatherFile);  
          builder = new PromptBuilder();  
          builder.AppendSsml(reader);  
          reader.Close();  
        }  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsmlMarkup">
      <MemberSignature Language="C#" Value="public void AppendSsmlMarkup (string ssmlMarkup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsmlMarkup(string ssmlMarkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsmlMarkup (ssmlMarkup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsmlMarkup(System::String ^ ssmlMarkup);" />
      <MemberSignature Language="F#" Value="member this.AppendSsmlMarkup : string -&gt; unit" Usage="promptBuilder.AppendSsmlMarkup ssmlMarkup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlMarkup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ssmlMarkup"><span data-ttu-id="29cda-189">Строка, содержащая разметку SSML.</span><span class="sxs-lookup"><span data-stu-id="29cda-189">A string containing SSML markup.</span></span></param>
        <summary><span data-ttu-id="29cda-190">Добавляет указанную строку, содержащую разметку SSML, в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-190">Appends the specified string containing SSML markup to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-191">При добавлении разметки SSML необходимо использовать соответствующие escape-символы.</span><span class="sxs-lookup"><span data-stu-id="29cda-191">You must use the appropriate escape characters when appending SSML markup.</span></span> <span data-ttu-id="29cda-192">Обратите внимание на обратную косую черту перед кавычками, включающие `interpret-as` значение атрибута в следующем примере:</span><span class="sxs-lookup"><span data-stu-id="29cda-192">Notice the backward-slashes preceding the quotation marks enclosing the value of the `interpret-as` attribute in the following example:</span></span>  
  
```csharp  
builder.AppendSsmlMarkup("<say-as interpret-as = \"characters\"> chair </say-as>");  
```  
  
> [!NOTE]
>  <span data-ttu-id="29cda-193">Строка, используемая в качестве аргумента <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> , не может `speak` включать элемент.</span><span class="sxs-lookup"><span data-stu-id="29cda-193">The string used as an argument to <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> cannot include a `speak` element.</span></span>  
  
 <span data-ttu-id="29cda-194">При использовании <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> для указания встроенных произношений `phoneme` в элементе можно использовать телефоны любого из следующих фонетических алфавитов при условии, что текущий обработчик речи поддерживает его:</span><span class="sxs-lookup"><span data-stu-id="29cda-194">When using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> to specify inline pronunciations in a `phoneme` element, you can use phones from any of the following phonetic alphabets, provided that the current speech engine supports it:</span></span>  
  
-   <span data-ttu-id="29cda-195">Международный фонетический алфавит (IPA)</span><span class="sxs-lookup"><span data-stu-id="29cda-195">International Phonetic Alphabet (IPA)</span></span>  
  
-   <span data-ttu-id="29cda-196">Универсальный набор телефонов (ИБП)</span><span class="sxs-lookup"><span data-stu-id="29cda-196">Universal Phone Set (UPS)</span></span>  
  
-   <span data-ttu-id="29cda-197">Телефонный набор SAPI</span><span class="sxs-lookup"><span data-stu-id="29cda-197">SAPI Phone Set</span></span>  
  
 <span data-ttu-id="29cda-198">Любой подсистема распознавания речи, совместимая с SSML, будет говорить о телефонах из IPA.</span><span class="sxs-lookup"><span data-stu-id="29cda-198">Any SSML-compliant speech engine will speak phones from the IPA.</span></span>  
  
 <span data-ttu-id="29cda-199">Можно также добавить файл, содержащий разметку SSML, с помощью одного <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> из методов.</span><span class="sxs-lookup"><span data-stu-id="29cda-199">You can also append a file containing SSML markup using one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods.</span></span> <span data-ttu-id="29cda-200">Чтобы добавить текст для озвучивания, не отформатированного с помощью языка разметки, используйте <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>один <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>из <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>методов, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> , или.</span><span class="sxs-lookup"><span data-stu-id="29cda-200">To append text to be spoken that is not formatted with markup language, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendText">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29cda-201">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-201">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="promptBuilder.AppendText textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="29cda-202">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="29cda-202">A string containing the text to be spoken.</span></span></param>
        <summary><span data-ttu-id="29cda-203">Указывает текст, который необходимо добавить в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-203">Specifies text to append to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-204">Чтобы добавить текст, отформатированный как язык разметки SSML <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, используйте.</span><span class="sxs-lookup"><span data-stu-id="29cda-204">To append text that is formatted as SSML markup language, use <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-205">Следующий пример создает <xref:System.Speech.Synthesis.PromptBuilder> объект и добавляет текстовую строку <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="29cda-205">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends a text string using the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder speakText = new PromptBuilder();  
        speakText.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt.  
        synth.Speak(speakText);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptEmphasis emphasis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptEmphasis emphasis) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, emphasis As PromptEmphasis)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptEmphasis emphasis);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string * System.Speech.Synthesis.PromptEmphasis -&gt; unit" Usage="promptBuilder.AppendText (textToSpeak, emphasis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="emphasis" Type="System.Speech.Synthesis.PromptEmphasis" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="29cda-206">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="29cda-206">A string containing the text to be spoken.</span></span></param>
        <param name="emphasis"><span data-ttu-id="29cda-207">Значение выделения, которое необходимо применить к тексту.</span><span class="sxs-lookup"><span data-stu-id="29cda-207">The value for the emphasis or stress to apply to the text.</span></span></param>
        <summary><span data-ttu-id="29cda-208">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает степень выделения для текста.</span><span class="sxs-lookup"><span data-stu-id="29cda-208">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the degree of emphasis for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-209">Модули синтеза речи в Windows в настоящее время не поддерживают параметр выделения.</span><span class="sxs-lookup"><span data-stu-id="29cda-209">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="29cda-210">Установка значений для параметра выделения не приведет к изменению в синтезированном речевом выводе.</span><span class="sxs-lookup"><span data-stu-id="29cda-210">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptRate rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptRate rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, rate As PromptRate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptRate rate);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string * System.Speech.Synthesis.PromptRate -&gt; unit" Usage="promptBuilder.AppendText (textToSpeak, rate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="rate" Type="System.Speech.Synthesis.PromptRate" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="29cda-211">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="29cda-211">A string containing the text to be spoken.</span></span></param>
        <param name="rate"><span data-ttu-id="29cda-212">Значение скорости речи, которое необходимо применить к тексту.</span><span class="sxs-lookup"><span data-stu-id="29cda-212">The value for the speaking rate to apply to the text.</span></span></param>
        <summary><span data-ttu-id="29cda-213">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает скорость озвучивания текста.</span><span class="sxs-lookup"><span data-stu-id="29cda-213">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the speaking rate for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29cda-214">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объект и добавляются текстовые строки.</span><span class="sxs-lookup"><span data-stu-id="29cda-214">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="29cda-215">В примере <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> метод используется для указания скорости для добавляемой строки, которая перечисляет содержимое заказа.</span><span class="sxs-lookup"><span data-stu-id="29cda-215">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder speakRate = new PromptBuilder();  
        speakRate.AppendText("Your order for");  
        speakRate.AppendText("one kitchen sink and one faucet", PromptRate.Slow);  
        speakRate.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(speakRate);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptVolume volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptVolume volume) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, volume As PromptVolume)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptVolume volume);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string * System.Speech.Synthesis.PromptVolume -&gt; unit" Usage="promptBuilder.AppendText (textToSpeak, volume)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="volume" Type="System.Speech.Synthesis.PromptVolume" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="29cda-216">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="29cda-216">A string containing the text to be spoken.</span></span></param>
        <param name="volume"><span data-ttu-id="29cda-217">Значение громкости речи, которое необходимо применить к тексту.</span><span class="sxs-lookup"><span data-stu-id="29cda-217">The value for the speaking volume (loudness) to apply to the text.</span></span></param>
        <summary><span data-ttu-id="29cda-218">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает громкость озвучивания текста.</span><span class="sxs-lookup"><span data-stu-id="29cda-218">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the volume to speak the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-219">Параметр для <xref:System.Speech.Synthesis.PromptVolume> — это полный том, <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>который совпадает с. <xref:System.Speech.Synthesis.PromptVolume.Default></span><span class="sxs-lookup"><span data-stu-id="29cda-219">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="29cda-220">Другие параметры уменьшают объем речевого вывода относительно полного тома.</span><span class="sxs-lookup"><span data-stu-id="29cda-220">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-221">В следующем примере <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> метод используется для указания параметров тома <xref:System.Speech.Synthesis.SpeechSynthesizer> , которые должны применяться к выходным данным речи.</span><span class="sxs-lookup"><span data-stu-id="29cda-221">The following example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify volume settings that the <xref:System.Speech.Synthesis.SpeechSynthesizer> should apply to speech output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt that applies different volume settings.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is the default speaking volume.", PromptVolume.Default);  
        builder.AppendBreak();  
        builder.AppendText("This is the extra loud speaking volume.", PromptVolume.ExtraLoud);  
        builder.AppendBreak();  
        builder.AppendText("This is the medium speaking volume.", PromptVolume.Medium);  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithAlias">
      <MemberSignature Language="C#" Value="public void AppendTextWithAlias (string textToSpeak, string substitute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithAlias(string textToSpeak, string substitute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithAlias (textToSpeak As String, substitute As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithAlias(System::String ^ textToSpeak, System::String ^ substitute);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithAlias : string * string -&gt; unit" Usage="promptBuilder.AppendTextWithAlias (textToSpeak, substitute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="substitute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="29cda-222">Строка, содержащая представление текста.</span><span class="sxs-lookup"><span data-stu-id="29cda-222">A string containing the text representation.</span></span></param>
        <param name="substitute"><span data-ttu-id="29cda-223">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="29cda-223">A string containing the text to be spoken.</span></span></param>
        <summary><span data-ttu-id="29cda-224">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает текст псевдонимов для общения вместо добавленного текста.</span><span class="sxs-lookup"><span data-stu-id="29cda-224">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the alias text to be spoken in place of the appended text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-225">Это позволяет документу содержать как произнесенный, так и письменный формат запроса.</span><span class="sxs-lookup"><span data-stu-id="29cda-225">This allows a document to contain both a spoken and a written form for a prompt.</span></span> <span data-ttu-id="29cda-226">Например, написанная форма может быть акронимом, например SAPI, а произнесенная форма может быть развернутым текстом акронима, в данном случае — программного интерфейса речевого приложения.</span><span class="sxs-lookup"><span data-stu-id="29cda-226">For example, the written form could be an acronym, such as SAPI, and the spoken form could be the expanded text for the acronym, in this case Speech Application Programming Interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-227">В следующем примере в <xref:System.Speech.Synthesis.PromptBuilder> объект добавляется текстовая строка («язык разметки речи») и ее псевдоним («SSML»).</span><span class="sxs-lookup"><span data-stu-id="29cda-227">The following example appends a text string ("Speech Synthesis Markup Language") and its alias ("SSML") to a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span> <span data-ttu-id="29cda-228">Синтезатор будет произношен "S M L".</span><span class="sxs-lookup"><span data-stu-id="29cda-228">The synthesizer will pronounce "S S M L".</span></span>  
  
```  
PromptBuilder alias = new PromptBuilder();  
alias.AppendTextWithAlias("Speech Synthesis Markup Language","SSML");   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendTextWithHint">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29cda-229">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает тип содержимого текста.</span><span class="sxs-lookup"><span data-stu-id="29cda-229">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type of the text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, System.Speech.Synthesis.SayAs sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, valuetype System.Speech.Synthesis.SayAs sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::Speech::Synthesis::SayAs sayAs);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithHint : string * System.Speech.Synthesis.SayAs -&gt; unit" Usage="promptBuilder.AppendTextWithHint (textToSpeak, sayAs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.Speech.Synthesis.SayAs" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="29cda-230">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="29cda-230">A string containing the text to be spoken.</span></span></param>
        <param name="sayAs"><span data-ttu-id="29cda-231">Тип содержимого текста.</span><span class="sxs-lookup"><span data-stu-id="29cda-231">The content type of the text.</span></span></param>
        <summary><span data-ttu-id="29cda-232">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает тип содержимого с помощью члена перечисления <see cref="T:System.Speech.Synthesis.SayAs" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-232">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type using a member of the <see cref="T:System.Speech.Synthesis.SayAs" /> enumeration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-233">Тип содержимого, заданный `sayAs` параметром, может предоставлять инструкции подсистемы синтеза речи о том, как `textToSpeak`произносится его содержимое.</span><span class="sxs-lookup"><span data-stu-id="29cda-233">The content type specified by `sayAs` can provide guidance to the speech synthesis engine about how to pronounce the contents of `textToSpeak`.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and define the data types for some of the added strings.  
        PromptBuilder sayAs = new PromptBuilder();  
        sayAs.AppendText("Your");  
        sayAs.AppendTextWithHint("1st", SayAs.NumberOrdinal);  
        sayAs.AppendText("request was for");  
        sayAs.AppendTextWithHint("1", SayAs.NumberCardinal);  
        sayAs.AppendText("room, on");  
        sayAs.AppendTextWithHint("10/19/2012,", SayAs.MonthDayYear);  
        sayAs.AppendText("with early arrival at");  
        sayAs.AppendTextWithHint("12:35pm", SayAs.Time12);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(sayAs);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, string sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, string sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithHint (textToSpeak As String, sayAs As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::String ^ sayAs);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithHint : string * string -&gt; unit" Usage="promptBuilder.AppendTextWithHint (textToSpeak, sayAs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="29cda-234">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="29cda-234">A string containing the text to be spoken.</span></span></param>
        <param name="sayAs"><span data-ttu-id="29cda-235">Тип содержимого текста.</span><span class="sxs-lookup"><span data-stu-id="29cda-235">The content type of the text.</span></span></param>
        <summary><span data-ttu-id="29cda-236">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и объект <see cref="T:System.String" />, указывающий тип содержимого текста.</span><span class="sxs-lookup"><span data-stu-id="29cda-236">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and a <see cref="T:System.String" /> that specifies the content type of the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-237">Этот метод можно использовать для указания типа содержимого, не включенного в <xref:System.Speech.Synthesis.SayAs> перечисление.</span><span class="sxs-lookup"><span data-stu-id="29cda-237">You can use this method to specify a content type that is not included in the <xref:System.Speech.Synthesis.SayAs> enumeration.</span></span> <span data-ttu-id="29cda-238">Однако обработчик TTS должен поддерживать указанный вами параметр.</span><span class="sxs-lookup"><span data-stu-id="29cda-238">However, the TTS engine must support the parameter that you specify.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithPronunciation">
      <MemberSignature Language="C#" Value="public void AppendTextWithPronunciation (string textToSpeak, string pronunciation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithPronunciation(string textToSpeak, string pronunciation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithPronunciation (textToSpeak As String, pronunciation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithPronunciation(System::String ^ textToSpeak, System::String ^ pronunciation);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithPronunciation : string * string -&gt; unit" Usage="promptBuilder.AppendTextWithPronunciation (textToSpeak, pronunciation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="pronunciation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="29cda-239">Строка, содержащая форму слова, записанную традиционными для соответствующего языка знаками алфавита.</span><span class="sxs-lookup"><span data-stu-id="29cda-239">A string containing the written form of the word using the conventional alphabet for a language.</span></span></param>
        <param name="pronunciation"><span data-ttu-id="29cda-240">Строка, содержащая звуки из Международного алфавита звуков (IPA), которые необходимо произнести.</span><span class="sxs-lookup"><span data-stu-id="29cda-240">A string containing phones to be spoken from the International Phonetic Alphabet (IPA).</span></span></param>
        <summary><span data-ttu-id="29cda-241">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает произношение текста.</span><span class="sxs-lookup"><span data-stu-id="29cda-241">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the pronunciation for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-242">Синтезатор говорит содержимое `pronunciation` параметра, а не содержимое `textToSpeak` параметра.</span><span class="sxs-lookup"><span data-stu-id="29cda-242">The synthesizer speaks the contents of the `pronunciation` parameter, not the contents of the `textToSpeak` parameter.</span></span>  
  
 <span data-ttu-id="29cda-243">Произношения, указанные встроенными запросами, применяются только к отдельному вхождению слова и переопределяют произношение речевого модуля или любого активного в настоящий момент словаря.</span><span class="sxs-lookup"><span data-stu-id="29cda-243">Pronunciations specified inline in prompts apply only to the individual occurrence of a word and override pronunciations of the speech engine or any of its currently active lexicons.</span></span> <span data-ttu-id="29cda-244">Как правило, вы будете использовать встроенные произношения для пользовательских произношений существующих слов или произношения редко встречающихся слов, таких как правильные имена, которые подсистема синтеза речи может не поменять и ожидалось.</span><span class="sxs-lookup"><span data-stu-id="29cda-244">Typically, you will use inline pronunciations for custom pronunciations of existing words or for pronunciation of uncommon words, such as proper names, which the speech synthesis engine may not pronounce as well as expected.</span></span>  
  
 <span data-ttu-id="29cda-245">Подставляемые произношения должны быть указаны с использованием телефонов из международного алфавита (IPA).</span><span class="sxs-lookup"><span data-stu-id="29cda-245">Inline pronunciations must be specified using phones from the International Phonetic Alphabet (IPA).</span></span> <span data-ttu-id="29cda-246">Телефон — это буква или символ, который представляет скрытыеный звук речи.</span><span class="sxs-lookup"><span data-stu-id="29cda-246">A phone is a letter or character that represents a discreet sound of speech.</span></span> <span data-ttu-id="29cda-247">Речевые модули, соответствующие спецификации [SSML версии 1,0](https://go.microsoft.com/fwlink/?LinkId=201763) , будут говорить о выизношении телефонов из IPA.</span><span class="sxs-lookup"><span data-stu-id="29cda-247">Speech engines that comply with the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763) specification will pronounce phones from the IPA.</span></span> <span data-ttu-id="29cda-248">Чтобы задать встроенные произношения с использованием других фонетических алфавитов <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, см. раздел.</span><span class="sxs-lookup"><span data-stu-id="29cda-248">To specify inline pronunciations using other phonetic alphabets, see <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
 <span data-ttu-id="29cda-249">IPA публикует [диаграмму](https://go.microsoft.com/fwlink/?LinkId=58362) со списком телефонов и сопоставляет их с числами Юникода.</span><span class="sxs-lookup"><span data-stu-id="29cda-249">The IPA publishes a [chart](https://go.microsoft.com/fwlink/?LinkId=58362) that lists its phones and maps them to Unicode numbers.</span></span>  
  
 <span data-ttu-id="29cda-250">Некоторые телефоны в IPA алфавите имеют те же представления, что и буквы в Латинской алфавите.</span><span class="sxs-lookup"><span data-stu-id="29cda-250">Some phones in the IPA alphabet have the same representations as letters in the Latin alphabet.</span></span> <span data-ttu-id="29cda-251">В таких случаях можно ввести Латинский символ и иметь правильное представление для телефона.</span><span class="sxs-lookup"><span data-stu-id="29cda-251">In those cases, it is possible to type the Latin character and have the proper representation for a phone.</span></span> <span data-ttu-id="29cda-252">Так как символы латиницы, обычно используемые в тексте, могут представлять несколько телефонов набора IPA Phone, просто ввод латинского символа может не привести к желаемому числу IPA телефона.</span><span class="sxs-lookup"><span data-stu-id="29cda-252">Because the Latin characters as commonly used in text may represent several phones of the IPA phone set, simply typing the Latin character might not result in the precise IPA phone desired.</span></span> <span data-ttu-id="29cda-253">Другие телефоны IPA алфавита должны быть представлены в коде в виде ссылок на символы, состоящие из амперсанда (&), знака решетки (#) и номера Юникода для нужного телефона в шестнадцатеричном или десятичном формате, за которым следует точка с запятой (;).</span><span class="sxs-lookup"><span data-stu-id="29cda-253">Other phones of the IPA alphabet need to be represented in code as character references consisting of an ampersand (&), the number sign (#), and a Unicode number for the desired phone in hexadecimal or decimal, all followed by a semicolon (;).</span></span> <span data-ttu-id="29cda-254">Например, счва (&\#x0259;) будет представлено `&#x0259;`.</span><span class="sxs-lookup"><span data-stu-id="29cda-254">For example, a schwa (&\#x0259;) would be represented by `&#x0259;`.</span></span>  
  
 <span data-ttu-id="29cda-255">Чтобы добавить новые или пользовательские произношения для нескольких слов, например для выражения региональных диалектов или для добавления правильных названий или словарей, характерных для образовательных или медицинских дисциплин, создайте словарь и добавьте его в <xref:System.Speech.Synthesis.SpeechSynthesizer> с помощью. <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-255">To add new or custom pronunciations for multiple words, for example to express regional dialects or to add proper names or vocabulary that is specific to an educational or medical discipline, build a lexicon and add it to the <xref:System.Speech.Synthesis.SpeechSynthesizer> using <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-256">В следующем примере инициализируется новый экземпляр <xref:System.Speech.Synthesis.PromptBuilder> класса.</span><span class="sxs-lookup"><span data-stu-id="29cda-256">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class.</span></span> <span data-ttu-id="29cda-257">Затем в экземпляр добавляется текстовая строка «My Name».</span><span class="sxs-lookup"><span data-stu-id="29cda-257">It then appends the text string "My name is" to the instance.</span></span> <span data-ttu-id="29cda-258">Наконец, он добавляет строку, содержащую правильное имя "Дубоис", и задает произношение имени.</span><span class="sxs-lookup"><span data-stu-id="29cda-258">Finally, it appends a string containing the proper name "DuBois" and specifies the pronunciation of the name.</span></span>  
  
```csharp  
public void ProperName()  
{  
    PromptBuilder builder = new PromptBuilder();  
    builder.AppendText("My name is");  
  
    // Add a proper name and its pronunciation.  
    builder.AppendTextWithPronunciation("DuBois", "duˈbwɑ");     
}  
```  
  
 <span data-ttu-id="29cda-259">В следующей разметке показаны SSML, <xref:System.Speech.Synthesis.PromptBuilder> создаваемые этим объектом.</span><span class="sxs-lookup"><span data-stu-id="29cda-259">The following markup shows the SSML that this <xref:System.Speech.Synthesis.PromptBuilder> object generates.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-us">  
  My name is <phoneme ph="duˈbwɑ"> DuBois </phoneme>  
</speak>  
```  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363"><span data-ttu-id="29cda-260">Международная ассоциация с фонетическим названием</span><span class="sxs-lookup"><span data-stu-id="29cda-260">International Phonetic Association</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearContent();" />
      <MemberSignature Language="F#" Value="member this.ClearContent : unit -&gt; unit" Usage="promptBuilder.ClearContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29cda-261">Очищает содержимое из объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-261">Clears the content from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Synthesis.PromptBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29cda-262">Получает или задает сведения о языке и региональных параметрах для объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-262">Gets or sets the culture information for the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-263">Объект попытается выбрать установленный голоса, поддерживающий язык, заданный <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойством, для обработки запроса. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="29cda-263">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property to process the prompt.</span></span> <span data-ttu-id="29cda-264">При обнаружении голоса с указанным языком и региональными параметрами будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="29cda-264">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="29cda-265">Если не удается найти голосовое значение с указанным языком и региональными параметрами, будет использоваться стандартный Voice.</span><span class="sxs-lookup"><span data-stu-id="29cda-265">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="29cda-266">Кроме того, язык и региональные параметры могут быть указаны в запросе скрытые разделов содержимого с <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>помощью <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>методов, <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> и.</span><span class="sxs-lookup"><span data-stu-id="29cda-266">A culture may also be specified within the prompt for discreet sections of content using the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, and <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> methods.</span></span> <span data-ttu-id="29cda-267">Язык и региональные параметры, заданные для части содержимого с помощью одного из описанных выше <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> методов, будут переопределять свойство, <xref:System.Speech.Synthesis.SpeechSynthesizer> когда оно действует, и будет пытаться выбрать установленный голосовой язык `culture` , который поддерживает указанный в параметр метода.</span><span class="sxs-lookup"><span data-stu-id="29cda-267">A culture specified for a portion of content using one of the above methods will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property while in effect, and the <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter of the method.</span></span>  
  
 <span data-ttu-id="29cda-268">Для правильного произношения слов на языке, заданном <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойством, необходимо установить подсистему синтеза речи (преобразование текста в речь или TTS), поддерживающую язык.</span><span class="sxs-lookup"><span data-stu-id="29cda-268">To correctly pronounce words in the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="29cda-269">Установленный модуль TTS называется голосовым.</span><span class="sxs-lookup"><span data-stu-id="29cda-269">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="29cda-270">Чтобы получить сведения о том, какие голоса установлены для конкретного языка и региональных параметров <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> , используйте метод.</span><span class="sxs-lookup"><span data-stu-id="29cda-270">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="29cda-271">Microsoft Windows и API System. Speech принимают все допустимые коды языковых стран в виде значений `culture`для.</span><span class="sxs-lookup"><span data-stu-id="29cda-271">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="29cda-272">Модули TTS, поставляемые с Windows 7, поддерживают следующие коды языков:</span><span class="sxs-lookup"><span data-stu-id="29cda-272">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="29cda-273">EN-US.</span><span class="sxs-lookup"><span data-stu-id="29cda-273">en-US.</span></span> <span data-ttu-id="29cda-274">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="29cda-274">English (United States)</span></span>  
  
-   <span data-ttu-id="29cda-275">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="29cda-275">zh-CN.</span></span> <span data-ttu-id="29cda-276">Китайский (Китай)</span><span class="sxs-lookup"><span data-stu-id="29cda-276">Chinese (China)</span></span>  
  
-   <span data-ttu-id="29cda-277">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="29cda-277">zh-TW.</span></span> <span data-ttu-id="29cda-278">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="29cda-278">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="29cda-279">Также разрешены двухбуквенный код языка, например "en".</span><span class="sxs-lookup"><span data-stu-id="29cda-279">Two-letter language codes such as "en" are also permitted.</span></span>  <span data-ttu-id="29cda-280">Полный список кодов языков см. в разделе [константы и строки идентификатора языка](https://msdn.microsoft.com/library/dd318693\(VS.85\).aspx) .</span><span class="sxs-lookup"><span data-stu-id="29cda-280">See [Language Identifier Constants and Strings](https://msdn.microsoft.com/library/dd318693\(VS.85\).aspx) for a comprehensive list of language codes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndParagraph">
      <MemberSignature Language="C#" Value="public void EndParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndParagraph();" />
      <MemberSignature Language="F#" Value="member this.EndParagraph : unit -&gt; unit" Usage="promptBuilder.EndParagraph " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29cda-281">Указывает конец абзаца в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-281">Specifies the end of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-282">Длинные запросы могут отображаться более похоже на речевое распознавание, если они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="29cda-282">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="29cda-283">Пример см. в разделе <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>.</span><span class="sxs-lookup"><span data-stu-id="29cda-283">See <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSentence">
      <MemberSignature Language="C#" Value="public void EndSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSentence();" />
      <MemberSignature Language="F#" Value="member this.EndSentence : unit -&gt; unit" Usage="promptBuilder.EndSentence " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29cda-284">Указывает конец предложения в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-284">Specifies the end of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-285">Длинные запросы могут отображаться более похоже на речевое распознавание, если они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="29cda-285">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="29cda-286">Пример см. в разделе <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>.</span><span class="sxs-lookup"><span data-stu-id="29cda-286">See <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndStyle">
      <MemberSignature Language="C#" Value="public void EndStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndStyle();" />
      <MemberSignature Language="F#" Value="member this.EndStyle : unit -&gt; unit" Usage="promptBuilder.EndStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29cda-287">Указывает конец стиля в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-287">Specifies the end of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-288"><xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> Метод останавливает текущий стиль речи.</span><span class="sxs-lookup"><span data-stu-id="29cda-288">The <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method stops the current speaking style.</span></span> <span data-ttu-id="29cda-289">Стиль речи вернется к параметру, который действовал до того, как <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> метод инициировал новый стиль речи.</span><span class="sxs-lookup"><span data-stu-id="29cda-289">The speaking style reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method initiated a new speaking style.</span></span> <span data-ttu-id="29cda-290">Пример см. в разделе <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>.</span><span class="sxs-lookup"><span data-stu-id="29cda-290">See <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndVoice">
      <MemberSignature Language="C#" Value="public void EndVoice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndVoice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndVoice" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndVoice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndVoice();" />
      <MemberSignature Language="F#" Value="member this.EndVoice : unit -&gt; unit" Usage="promptBuilder.EndVoice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29cda-291">Указывает конец использования голоса в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-291">Specifies the end of use of a voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-292"><xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> Метод останавливает использование текущего голоса для речевого вывода.</span><span class="sxs-lookup"><span data-stu-id="29cda-292">The <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> method stops the use of the current voice for speech output.</span></span> <span data-ttu-id="29cda-293">Голосовое значение возвращается к параметру, который был применен до того <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> , как метод инициировал новый голосовое действие.</span><span class="sxs-lookup"><span data-stu-id="29cda-293">The voice reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> method initiated a new voice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29cda-294">Получает значение, указывающее является ли <see cref="T:System.Speech.Synthesis.PromptBuilder" /> пустым.</span><span class="sxs-lookup"><span data-stu-id="29cda-294">Gets whether the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> is empty.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartParagraph">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29cda-295">Указывает начало абзаца в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и, при необходимости, указывает язык.</span><span class="sxs-lookup"><span data-stu-id="29cda-295">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-296">Длинные запросы могут отображаться более похоже на речевое распознавание, если они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="29cda-296">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph();" />
      <MemberSignature Language="F#" Value="member this.StartParagraph : unit -&gt; unit" Usage="promptBuilder.StartParagraph " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29cda-297">Указывает начало абзаца в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-297">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-298">Длинные запросы могут отображаться более похоже на речевое распознавание, если они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="29cda-298">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-299">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объект, добавляется содержимое и упорядочивается содержимое по абзацам и предложениям.</span><span class="sxs-lookup"><span data-stu-id="29cda-299">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartParagraph : System.Globalization.CultureInfo -&gt; unit" Usage="promptBuilder.StartParagraph culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="29cda-300">Предоставляет сведения об определенном языке и региональных параметрах, например языке, названии языка и региональных параметров, система письма, используемый календаря, и как форматирование даты и отсортировать строки.</span><span class="sxs-lookup"><span data-stu-id="29cda-300">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="29cda-301">Указывает начало абзаца в определенном языке и региональных параметров в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-301">Specifies the start of a paragraph in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-302">Длинные запросы могут отображаться более похоже на речевое распознавание, если они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="29cda-302">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="29cda-303">Параметр для абзаца может отличаться <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> от свойства <xref:System.Speech.Synthesis.PromptBuilder> объекта, содержащего его. `culture`</span><span class="sxs-lookup"><span data-stu-id="29cda-303">The `culture` parameter for a paragraph can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span> <span data-ttu-id="29cda-304">В действительности значение `culture` параметра будет <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> переопределять свойство.</span><span class="sxs-lookup"><span data-stu-id="29cda-304">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="29cda-305">Попытается выбрать установленный голос, который поддерживает язык, заданный `culture` параметром, чтобы проговаривать абзац. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="29cda-305">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the paragraph.</span></span> <span data-ttu-id="29cda-306">При обнаружении голоса с указанным языком и региональными параметрами будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="29cda-306">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="29cda-307">Если не удается найти голосовое значение с указанным языком и региональными параметрами, будет использоваться стандартный Voice.</span><span class="sxs-lookup"><span data-stu-id="29cda-307">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="29cda-308">Чтобы запретить использование голоса, заданного параметром <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, вызовите. <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-308">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>.</span></span>  
  
 <span data-ttu-id="29cda-309">Для правильного произношения слов на языке, указанном `culture` параметром, необходимо установить подсистему синтеза речи (преобразование текста в речь или TTS), поддерживающую язык.</span><span class="sxs-lookup"><span data-stu-id="29cda-309">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="29cda-310">Установленный модуль TTS называется голосовым.</span><span class="sxs-lookup"><span data-stu-id="29cda-310">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="29cda-311">Чтобы получить сведения о том, какие голоса установлены для конкретного языка и региональных параметров <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> , используйте метод.</span><span class="sxs-lookup"><span data-stu-id="29cda-311">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="29cda-312">Microsoft Windows и API System. Speech принимают все допустимые коды языковых стран в виде значений `culture`для.</span><span class="sxs-lookup"><span data-stu-id="29cda-312">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="29cda-313">Модули TTS, поставляемые с Windows 7, поддерживают следующие коды языков:</span><span class="sxs-lookup"><span data-stu-id="29cda-313">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="29cda-314">EN-US.</span><span class="sxs-lookup"><span data-stu-id="29cda-314">en-US.</span></span> <span data-ttu-id="29cda-315">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="29cda-315">English (United States)</span></span>  
  
-   <span data-ttu-id="29cda-316">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="29cda-316">zh-CN.</span></span> <span data-ttu-id="29cda-317">Китайский (Китай)</span><span class="sxs-lookup"><span data-stu-id="29cda-317">Chinese (China)</span></span>  
  
-   <span data-ttu-id="29cda-318">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="29cda-318">zh-TW.</span></span> <span data-ttu-id="29cda-319">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="29cda-319">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="29cda-320">Также разрешены двухбуквенный код языка, например "en".</span><span class="sxs-lookup"><span data-stu-id="29cda-320">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartSentence">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29cda-321">Указывает начало предложения в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и, при необходимости, указывает язык.</span><span class="sxs-lookup"><span data-stu-id="29cda-321">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-322">Длинные запросы могут отображаться более похоже на речевое распознавание, если они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="29cda-322">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence();" />
      <MemberSignature Language="F#" Value="member this.StartSentence : unit -&gt; unit" Usage="promptBuilder.StartSentence " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29cda-323">Указывает начало предложения в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-323">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-324">Длинные запросы могут отображаться более похоже на речевое распознавание, если они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="29cda-324">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-325">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объект, добавляется содержимое и упорядочивается содержимое по абзацам и предложениям.</span><span class="sxs-lookup"><span data-stu-id="29cda-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartSentence : System.Globalization.CultureInfo -&gt; unit" Usage="promptBuilder.StartSentence culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="29cda-326">Предоставляет сведения об определенном языке и региональных параметрах, например языке, названии языка и региональных параметров, система письма, используемый календаря, и как форматирование даты и отсортировать строки.</span><span class="sxs-lookup"><span data-stu-id="29cda-326">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="29cda-327">Указывает начало предложения в определенном языке и региональных параметров в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-327">Specifies the start of a sentence in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-328">Длинные запросы могут отображаться более похоже на речевое распознавание, если они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="29cda-328">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="29cda-329">Параметр для предложения может отличаться `culture` от параметра для абзаца, <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> содержащего предложение, <xref:System.Speech.Synthesis.PromptBuilder> или свойства объекта, содержащего эти предложения. `culture`</span><span class="sxs-lookup"><span data-stu-id="29cda-329">The `culture` parameter for a sentence can be different than the `culture` parameter for the paragraph that contains the sentence or the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains them.</span></span>  
  
 <span data-ttu-id="29cda-330">В действительности значение `culture` параметра будет <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> переопределять свойство и `culture` параметр для абзаца, содержащего предложение.</span><span class="sxs-lookup"><span data-stu-id="29cda-330">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property and the `culture` parameter for the paragraph that contains the sentence.</span></span> <span data-ttu-id="29cda-331">Будет предпринята попытка выбрать установленный голос, поддерживающий язык, `culture` указанный параметром, чтобы поговорить с предложением. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="29cda-331">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the sentence.</span></span> <span data-ttu-id="29cda-332">При обнаружении голоса с указанным языком и региональными параметрами будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="29cda-332">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="29cda-333">Если не удается найти голосовое значение с указанным языком и региональными параметрами, будет использоваться стандартный Voice.</span><span class="sxs-lookup"><span data-stu-id="29cda-333">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="29cda-334">Чтобы запретить использование голоса, заданного параметром <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, вызовите. <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-334">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>.</span></span>  
  
 <span data-ttu-id="29cda-335">Для правильного произношения слов на языке, указанном `culture` параметром, необходимо установить подсистему синтеза речи (преобразование текста в речь или TTS), поддерживающую язык.</span><span class="sxs-lookup"><span data-stu-id="29cda-335">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="29cda-336">Установленный модуль TTS называется голосовым.</span><span class="sxs-lookup"><span data-stu-id="29cda-336">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="29cda-337">Чтобы получить сведения о том, какие голоса установлены для конкретного языка и региональных параметров <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> , используйте метод.</span><span class="sxs-lookup"><span data-stu-id="29cda-337">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="29cda-338">Microsoft Windows и API System. Speech принимают все допустимые коды языковых стран в виде значений `culture`для.</span><span class="sxs-lookup"><span data-stu-id="29cda-338">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="29cda-339">Модули TTS, поставляемые с Windows 7, поддерживают следующие коды языков:</span><span class="sxs-lookup"><span data-stu-id="29cda-339">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="29cda-340">EN-US.</span><span class="sxs-lookup"><span data-stu-id="29cda-340">en-US.</span></span> <span data-ttu-id="29cda-341">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="29cda-341">English (United States)</span></span>  
  
-   <span data-ttu-id="29cda-342">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="29cda-342">zh-CN.</span></span> <span data-ttu-id="29cda-343">Китайский (Китай)</span><span class="sxs-lookup"><span data-stu-id="29cda-343">Chinese (China)</span></span>  
  
-   <span data-ttu-id="29cda-344">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="29cda-344">zh-TW.</span></span> <span data-ttu-id="29cda-345">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="29cda-345">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="29cda-346">Также разрешены двухбуквенный код языка, например "en".</span><span class="sxs-lookup"><span data-stu-id="29cda-346">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartStyle">
      <MemberSignature Language="C#" Value="public void StartStyle (System.Speech.Synthesis.PromptStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartStyle(class System.Speech.Synthesis.PromptStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartStyle (style As PromptStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartStyle(System::Speech::Synthesis::PromptStyle ^ style);" />
      <MemberSignature Language="F#" Value="member this.StartStyle : System.Speech.Synthesis.PromptStyle -&gt; unit" Usage="promptBuilder.StartStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Speech.Synthesis.PromptStyle" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="29cda-347">Стиль для запуска.</span><span class="sxs-lookup"><span data-stu-id="29cda-347">The style to start.</span></span></param>
        <summary><span data-ttu-id="29cda-348">Указывает начало стиля в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-348">Specifies the start of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-349">Метод принимает в <xref:System.Speech.Synthesis.PromptStyle> качестве аргумента объект. <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-349">The <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method takes a <xref:System.Speech.Synthesis.PromptStyle> object as its argument.</span></span> <span data-ttu-id="29cda-350">Вы можете использовать свойства <xref:System.Speech.Synthesis.PromptStyle> объекта, чтобы задать выделение, скорость речи и громкость (громкость), которые будут применяться к речевым выходам, когда стиль действует.</span><span class="sxs-lookup"><span data-stu-id="29cda-350">You can use the properties of the <xref:System.Speech.Synthesis.PromptStyle> object to set the emphasis, speaking rate, and volume (loudness) to apply to speech output while the style is in effect.</span></span> <span data-ttu-id="29cda-351">Чтобы прерывать использование текущего стиля, вызовите <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="29cda-351">To stop using the current style, call the <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method.</span></span>  
  
> [!NOTE]
> -   <span data-ttu-id="29cda-352">Модули синтеза речи в Windows в настоящее время не поддерживают параметр выделения.</span><span class="sxs-lookup"><span data-stu-id="29cda-352">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="29cda-353">Установка значений для параметра выделения не приведет к изменению в синтезированном речевом выводе.</span><span class="sxs-lookup"><span data-stu-id="29cda-353">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
> -   <span data-ttu-id="29cda-354">Параметр для <xref:System.Speech.Synthesis.PromptVolume> — это полный том, <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>который совпадает с. <xref:System.Speech.Synthesis.PromptVolume.Default></span><span class="sxs-lookup"><span data-stu-id="29cda-354">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="29cda-355">Другие параметры уменьшают объем речевого вывода относительно полного тома.</span><span class="sxs-lookup"><span data-stu-id="29cda-355">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-356">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объект и добавляются текстовые строки.</span><span class="sxs-lookup"><span data-stu-id="29cda-356">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="29cda-357">В примере <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> метод используется для указания скорости для добавляемой строки, которая перечисляет содержимое заказа.</span><span class="sxs-lookup"><span data-stu-id="29cda-357">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartVoice">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29cda-358">Указывает средству синтеза, что необходимо изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-358">Instructs the synthesizer to change the voice in a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-359">Речь представляет установленный модуль TTS.</span><span class="sxs-lookup"><span data-stu-id="29cda-359">A voice represents an installed TTS engine.</span></span> <span data-ttu-id="29cda-360">Используйте методы и <xref:System.Speech.Synthesis.VoiceInfo> класс, чтобы получить имена и атрибуты установленных голосов (TTS) текста, которые можно выбрать. <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-360">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="29cda-361">При вызове <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>приложения метод проверяет, что каждый из голосов, найденных в реестре, соответствует определенным минимальным критериям.</span><span class="sxs-lookup"><span data-stu-id="29cda-361">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="29cda-362">Для любого голоса, который не проходит <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> проверку, <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> устанавливает для `False`его свойства значение.</span><span class="sxs-lookup"><span data-stu-id="29cda-362">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="29cda-363">Приложение не может вызвать ни один из <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> методов голоса, свойство которого <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> имеет `False`значение.</span><span class="sxs-lookup"><span data-stu-id="29cda-363">An application cannot call any of the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods on a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="29cda-364">Как правило, приложения не устанавливают <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-364">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Globalization.CultureInfo -&gt; unit" Usage="promptBuilder.StartVoice culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="29cda-365">Предоставляет сведения об определенном языке и региональных параметрах, например языке, названии языка и региональных параметров, система письма, используемый календаря, и как форматирование даты и отсортировать строки.</span><span class="sxs-lookup"><span data-stu-id="29cda-365">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="29cda-366">Указывает средству синтеза, что необходимо изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />, и указывает необходимые для данного голоса языковые стандарты.</span><span class="sxs-lookup"><span data-stu-id="29cda-366">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the culture of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-367">Параметр для <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> может отличаться <xref:System.Speech.Synthesis.PromptBuilder>  от свойства объекта, содержащего его. <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> `culture`</span><span class="sxs-lookup"><span data-stu-id="29cda-367">The `culture` parameter for <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span>  <span data-ttu-id="29cda-368">В действительности значение `culture` параметра будет <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> переопределять свойство.</span><span class="sxs-lookup"><span data-stu-id="29cda-368">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="29cda-369">Будет пытаться выбрать установленный голос, поддерживающий язык, заданный `culture` параметром, чтобы поговорить с содержимым <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> , заключенным в и. <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="29cda-369">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the content enclosed by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span> <span data-ttu-id="29cda-370">При обнаружении голоса с указанным языком и региональными параметрами будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="29cda-370">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="29cda-371">Если не удается найти голосовое значение с указанным языком и региональными параметрами, будет использоваться стандартный Voice.</span><span class="sxs-lookup"><span data-stu-id="29cda-371">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="29cda-372">Чтобы запретить использование голоса, заданного параметром <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, вызовите. <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-372">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 <span data-ttu-id="29cda-373">Для правильного произношения слов на языке, указанном `culture` параметром, необходимо установить подсистему синтеза речи (преобразование текста в речь или TTS), поддерживающую язык.</span><span class="sxs-lookup"><span data-stu-id="29cda-373">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="29cda-374">Установленный модуль TTS называется голосовым.</span><span class="sxs-lookup"><span data-stu-id="29cda-374">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="29cda-375">Чтобы получить сведения о том, какие голоса установлены для конкретного языка и региональных параметров <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> , используйте метод.</span><span class="sxs-lookup"><span data-stu-id="29cda-375">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="29cda-376">Microsoft Windows и API System. Speech принимают все допустимые коды языковых стран в виде значений `culture`для.</span><span class="sxs-lookup"><span data-stu-id="29cda-376">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="29cda-377">Модули TTS, поставляемые с Windows 7, поддерживают следующие коды языков:</span><span class="sxs-lookup"><span data-stu-id="29cda-377">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="29cda-378">EN-US.</span><span class="sxs-lookup"><span data-stu-id="29cda-378">en-US.</span></span> <span data-ttu-id="29cda-379">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="29cda-379">English (United States)</span></span>  
  
-   <span data-ttu-id="29cda-380">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="29cda-380">zh-CN.</span></span> <span data-ttu-id="29cda-381">Китайский (Китай)</span><span class="sxs-lookup"><span data-stu-id="29cda-381">Chinese (China)</span></span>  
  
-   <span data-ttu-id="29cda-382">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="29cda-382">zh-TW.</span></span> <span data-ttu-id="29cda-383">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="29cda-383">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="29cda-384">Также разрешены двухбуквенный код языка, например "en".</span><span class="sxs-lookup"><span data-stu-id="29cda-384">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceGender -&gt; unit" Usage="promptBuilder.StartVoice gender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="29cda-385">Пол используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-385">The gender of the voice to use.</span></span></param>
        <summary><span data-ttu-id="29cda-386">Указывает средству синтеза, что необходимо изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />, и указывает пол владельца голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-386">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-387">Используйте методы и <xref:System.Speech.Synthesis.VoiceInfo> класс, чтобы получить имена и атрибуты установленных голосов (TTS) текста, которые можно выбрать. <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-387">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="29cda-388">Для отмены использования голоса, указанного <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> в вызове метода. <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-388">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceInfo voice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Speech.Synthesis.VoiceInfo voice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (voice As VoiceInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceInfo ^ voice);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceInfo -&gt; unit" Usage="promptBuilder.StartVoice voice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="voice" Type="System.Speech.Synthesis.VoiceInfo" />
      </Parameters>
      <Docs>
        <param name="voice"><span data-ttu-id="29cda-389">Критерии для используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-389">The criteria for the voice to use.</span></span></param>
        <summary><span data-ttu-id="29cda-390">Указывает средству синтеза, что необходимо изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />, и задает критерий для нового голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-390">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies criteria for the new voice.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-391">Используйте методы и <xref:System.Speech.Synthesis.VoiceInfo> класс, чтобы получить имена и атрибуты установленных голосов (TTS) текста, которые можно выбрать. <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-391">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="29cda-392">Для отмены использования голоса, указанного <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> в вызове метода. <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-392">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : string -&gt; unit" Usage="promptBuilder.StartVoice name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="29cda-393">Имя используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-393">The name of the voice to use.</span></span></param>
        <summary><span data-ttu-id="29cda-394">Указывает средству синтеза, что необходимо изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />, и указывает имя голоса, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="29cda-394">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the name of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-395">Чтобы получить сведения о том, какие голоса установлены, используйте один из <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> методов.</span><span class="sxs-lookup"><span data-stu-id="29cda-395">To get information about which voices are installed, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods.</span></span>  
  
 <span data-ttu-id="29cda-396">Для отмены использования голоса, указанного <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> в вызове метода. <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-396">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge -&gt; unit" Usage="promptBuilder.StartVoice (gender, age)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="29cda-397">Пол нового используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-397">The gender of the new voice to use.</span></span></param>
        <param name="age"><span data-ttu-id="29cda-398">Возраст используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-398">The age of the voice to use.</span></span></param>
        <summary><span data-ttu-id="29cda-399">Указывает средству синтеза, что необходимо изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />, и указывает пол и возраст нового голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-399">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender and the age of the new voice.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-400">Используйте методы и <xref:System.Speech.Synthesis.VoiceInfo> класс, чтобы получить имена и атрибуты установленных голосов (TTS) текста, которые можно выбрать. <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-400">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="29cda-401">Для отмены использования голоса, указанного <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> в вызове метода. <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-401">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int -&gt; unit" Usage="promptBuilder.StartVoice (gender, age, voiceAlternate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="29cda-402">Пол используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-402">The gender of the voice to use.</span></span></param>
        <param name="age"><span data-ttu-id="29cda-403">Возраст используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="29cda-403">The age of the voice to use.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="29cda-404">Целое число, которое задает предпочтительный голос, когда несколько голосов соответствуют параметрам <paramref name="gender" /> и <paramref name="age" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-404">An integer that specifies a preferred voice when more than one voice matches the <paramref name="gender" /> and <paramref name="age" /> parameters.</span></span></param>
        <summary><span data-ttu-id="29cda-405">Указывает средству синтеза, что необходимо изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />, и указывает пол, возраст владельца и предпочтительный голос, соответствующий указанным полу и возрасту.</span><span class="sxs-lookup"><span data-stu-id="29cda-405">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its gender, age, and a preferred voice that matches the specified gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-406">Подсистема синтеза речи подсчитывает найденные совпадения для указанных параметров и возвращает голос, когда значение счетчика равно значению `voiceAlternate` параметра.</span><span class="sxs-lookup"><span data-stu-id="29cda-406">A speech synthesis engine counts the matches it finds for the specified parameters, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="29cda-407">Используйте методы и <xref:System.Speech.Synthesis.VoiceInfo> класс, чтобы получить имена и атрибуты установленных голосов (TTS) текста, которые можно выбрать. <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-407">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="29cda-408">Для отмены использования голоса, указанного <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> в вызове метода. <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A></span><span class="sxs-lookup"><span data-stu-id="29cda-408">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberSignature Language="F#" Value="member this.ToXml : unit -&gt; string" Usage="promptBuilder.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29cda-409">Возвращает SSML, созданный из объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="29cda-409">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="29cda-410">Возвращает SSML, созданный из объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" /> как одна строка.</span><span class="sxs-lookup"><span data-stu-id="29cda-410">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object as a single line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29cda-411"><xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A> Метод не пытается отформатировать возвращаемый SSML каким бы то ни было.</span><span class="sxs-lookup"><span data-stu-id="29cda-411">The <xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A> method makes no attempt to format the returned SSML in any way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29cda-412">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объект, добавляется текст, а затем в консоль записывается SSML эквивалент запроса, прежде чем говорить о содержимом запроса.</span><span class="sxs-lookup"><span data-stu-id="29cda-412">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends text, and then writes the SSML equivalent of the prompt to the console before speaking the contents of the prompt.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Write the contents of the PromptBuilder object to the console as  
        // an SSML-compatible XML file.  
        string myXml = style.ToXml();  
        Console.WriteLine("This is the SSML equivalent of the PromptBuilder: \n\n" + myXml);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
