<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5ddb80a6d71816ce8f565903642ddd9938ac1b5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69145613" /></Metadata><TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SpeechSynthesizer = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="672cf-101">Предоставляет доступ к функциям установленного модуля синтеза речи.</span><span class="sxs-lookup"><span data-stu-id="672cf-101">Provides access to the functionality of an installed speech synthesis engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-102">При создании нового <xref:System.Speech.Synthesis.SpeechSynthesizer> объекта используется системный Voice по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="672cf-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="672cf-103">Чтобы настроить <xref:System.Speech.Synthesis.SpeechSynthesizer> для использования одного из установленных голосов для синтеза речи (преобразования текста в речь), <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> используйте метод или <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> .</span><span class="sxs-lookup"><span data-stu-id="672cf-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="672cf-104">Чтобы получить сведения о том, какие голоса установлены, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод <xref:System.Speech.Synthesis.VoiceInfo> и класс.</span><span class="sxs-lookup"><span data-stu-id="672cf-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="672cf-105">Этот класс также обеспечивает управление следующими аспектами синтеза речи:</span><span class="sxs-lookup"><span data-stu-id="672cf-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="672cf-106">Чтобы <xref:System.Speech.Synthesis.SpeechSynthesizer> настроить выходные данные для объекта, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>используйте методы, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> .</span><span class="sxs-lookup"><span data-stu-id="672cf-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="672cf-107">Чтобы создать <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>речь, используйте метод, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>или. <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="672cf-108">Может создавать речь из текста <xref:System.Speech.Synthesis.Prompt> , объекта или <xref:System.Speech.Synthesis.PromptBuilder> или из языка разметки [речи (SSML) версии 1,0](https://go.microsoft.com/fwlink/?LinkId=201763). <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="672cf-109">Чтобы приостановить и возобновить синтез речи, <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> методы и.</span><span class="sxs-lookup"><span data-stu-id="672cf-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="672cf-110">Чтобы добавить или удалить лексиконы, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> методы и. <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="672cf-111">В <xref:System.Speech.Synthesis.SpeechSynthesizer> можно использовать один или несколько лексиконов для указания произношения слов.</span><span class="sxs-lookup"><span data-stu-id="672cf-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="672cf-112">Чтобы изменить доставку речевого вывода, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> свойства и. <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="672cf-113"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>Компонент вызывает события при обнаружении в запросах определенных функций: (,, и). <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="672cf-114">Он также создает события, сообщающие о начале (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) и окончании<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>(), которые говорят об операциях, и о смене<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>речи ().</span><span class="sxs-lookup"><span data-stu-id="672cf-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="672cf-115">Всегда вызывайте метод <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="672cf-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="672cf-116">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Speech.Synthesis.SpeechSynthesizer> метод <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="672cf-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-117">Следующий пример является частью консольного приложения, которое инициализирует <xref:System.Speech.Synthesis.SpeechSynthesizer> объект и выступает в качестве строки.</span><span class="sxs-lookup"><span data-stu-id="672cf-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361644(v%3doffice.14)"><span data-ttu-id="672cf-118">Синтез речи</span><span class="sxs-lookup"><span data-stu-id="672cf-118">Speech Synthesis</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="672cf-119">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-119">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-120">При инициализации нового <xref:System.Speech.Synthesis.SpeechSynthesizer> экземпляра используется системный Voice по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="672cf-120">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="672cf-121">Чтобы настроить <xref:System.Speech.Synthesis.SpeechSynthesizer> для использования одного из установленных голосов для синтеза речи (преобразования текста в речь), <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> используйте метод или <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> .</span><span class="sxs-lookup"><span data-stu-id="672cf-121">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="672cf-122">Чтобы получить сведения о том, какие голоса установлены, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод <xref:System.Speech.Synthesis.VoiceInfo> и класс.</span><span class="sxs-lookup"><span data-stu-id="672cf-122">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="member this.AddLexicon : Uri * string -&gt; unit" Usage="speechSynthesizer.AddLexicon (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="672cf-123">Расположение сведений о лексиконе.</span><span class="sxs-lookup"><span data-stu-id="672cf-123">The location of the lexicon information.</span></span></param>
        <param name="mediaType"><span data-ttu-id="672cf-124">Тип носителя лексикона.</span><span class="sxs-lookup"><span data-stu-id="672cf-124">The media type of the lexicon.</span></span> <span data-ttu-id="672cf-125">Значения типов мультимедиа не учитывают регистр.</span><span class="sxs-lookup"><span data-stu-id="672cf-125">Media type values are not case sensitive.</span></span></param>
        <summary><span data-ttu-id="672cf-126">Добавляет лексикон в объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-126">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-127">Лексикон произношения — это набор слов или фраз вместе с их произношением, который состоит из букв и символов из поддерживаемого фонетического алфавита.</span><span class="sxs-lookup"><span data-stu-id="672cf-127">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="672cf-128">Вы можете использовать словарь, чтобы указать пользовательские произношения для специализированного словаря в приложении.</span><span class="sxs-lookup"><span data-stu-id="672cf-128">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="672cf-129">Произношение, указанное во внешнем файле лексики, имеет более высокий приоритет, чем произношение внутреннего лексикона или словаря синтезатора речи.</span><span class="sxs-lookup"><span data-stu-id="672cf-129">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="672cf-130">Тем не менее, произношение, заданное в тексте запросов <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, созданных с помощью любого из методов, или <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> , имеет приоритет над произношением, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>указанными в любом лексиконе.</span><span class="sxs-lookup"><span data-stu-id="672cf-130">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="672cf-131">Встроенные произношения применяются только к одному вхождению слова.</span><span class="sxs-lookup"><span data-stu-id="672cf-131">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="672cf-132">Дополнительные сведения см. в разделе [лексиконы и фонетические алфавиты](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) .</span><span class="sxs-lookup"><span data-stu-id="672cf-132">See [Lexicons and Phonetic Alphabets](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) for more information.</span></span>  
  
 <span data-ttu-id="672cf-133">К <xref:System.Speech.Synthesis.SpeechSynthesizer> объекту можно добавить несколько лексиконов. В настоящее время для `mediaType` параметра поддерживаются два значения:</span><span class="sxs-lookup"><span data-stu-id="672cf-133">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="672cf-134">Значение `application/pls+xml` указывает, что лексикон соответствует [спецификации озвученного лексикона (областей) версии 1,0](https://go.microsoft.com/fwlink/?LinkId=201766).</span><span class="sxs-lookup"><span data-stu-id="672cf-134">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="672cf-135">Это предпочтительный формат для использования.</span><span class="sxs-lookup"><span data-stu-id="672cf-135">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="672cf-136">Значение `application/vdn.ms-sapi-lex` указывает на то, что формат лексикона является несжатым лексиконом, который является форматом, разработанным корпорацией Майкрософт.</span><span class="sxs-lookup"><span data-stu-id="672cf-136">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="672cf-137">Это устаревший формат, поэтому рекомендуется использовать формат областей, описанный выше.</span><span class="sxs-lookup"><span data-stu-id="672cf-137">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-138">В следующем примере показан результат добавления и удаления лексикона, содержащего пользовательское произношение слова «Blue».</span><span class="sxs-lookup"><span data-stu-id="672cf-138">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="672cf-139">Этот словарь определяет фонетическое значение «Blue», например «блип».</span><span class="sxs-lookup"><span data-stu-id="672cf-139">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="672cf-140">Во время загрузки лексикона речевой синтезатор использует произношение, определенное в лексиконе.</span><span class="sxs-lookup"><span data-stu-id="672cf-140">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="672cf-141">Ниже приведено содержимое файла лексикона Blue. областей:</span><span class="sxs-lookup"><span data-stu-id="672cf-141">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberSignature Language="F#" Value="member this.BookmarkReached : EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " Usage="member this.BookmarkReached : System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-142">Возникает, когда <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> встречает закладку в запросе.</span><span class="sxs-lookup"><span data-stu-id="672cf-142">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-143"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>Вызывает это событие при обработке любого из методов,, или. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-143">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="672cf-144">Дополнительные сведения о данных, связанных с событием, <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="672cf-144">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="672cf-145">Закладки можно добавлять с помощью <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="672cf-145">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-146">В следующем примере создается запрос, включающий две закладки и отправляющий выходные данные в WAV-файл для воспроизведения.</span><span class="sxs-lookup"><span data-stu-id="672cf-146">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="672cf-147">Обработчик <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> события записывает имя закладки и ее расположение в потоке аудио при возникновении события в консоли.</span><span class="sxs-lookup"><span data-stu-id="672cf-147">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nighttime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="speechSynthesizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="672cf-148">Удаляет объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> и освобождает ресурсы, используемые во время сеанса.</span><span class="sxs-lookup"><span data-stu-id="672cf-148">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="speechSynthesizer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="672cf-149">Является резервным вариантом очистки ресурсов в событии на тот случай, если метод <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> не будет вызван.</span><span class="sxs-lookup"><span data-stu-id="672cf-149">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentlySpokenPrompt : unit -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.GetCurrentlySpokenPrompt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="672cf-150">Получает запрос, который указывает <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-150">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span></span></summary>
        <returns><span data-ttu-id="672cf-151">Возвращает запроса объект, который в данный момент говорится.</span><span class="sxs-lookup"><span data-stu-id="672cf-151">Returns the prompt object that is currently being spoken.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="672cf-152">Возвращает коллекцию голосов синтеза речи (текст в голос), которые в настоящее время установлены в системе.</span><span class="sxs-lookup"><span data-stu-id="672cf-152">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-153">При вызове <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>приложения метод проверяет, что каждый из голосов (обработчиков для преобразования текста в речь), найденный в реестре, соответствует определенным минимальным критериям.</span><span class="sxs-lookup"><span data-stu-id="672cf-153">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="672cf-154">Для любого голоса, который не проходит <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> проверку, <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> устанавливает для `False`его свойства значение.</span><span class="sxs-lookup"><span data-stu-id="672cf-154">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="672cf-155">Приложение не может выбрать голосовое значение <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> , свойство `False`которого равно.</span><span class="sxs-lookup"><span data-stu-id="672cf-155">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="672cf-156">Как правило, приложения не устанавливают <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-156">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="672cf-157">Возвращает все установленные голоса синтеза речи (текст в речь).</span><span class="sxs-lookup"><span data-stu-id="672cf-157">Returns all of the installed speech synthesis (text-to-speech) voices.</span></span></summary>
        <returns><span data-ttu-id="672cf-158">Возвращает доступную только для чтения коллекцию голосов в данный момент установленных в системе.</span><span class="sxs-lookup"><span data-stu-id="672cf-158">Returns a read-only collection of the voices currently installed on the system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-159">Речь — это подсистема для синтеза речи (преобразования текста в речь или TTS), установленная в системе.</span><span class="sxs-lookup"><span data-stu-id="672cf-159">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-160">Следующий пример является частью консольного приложения, которое инициализирует <xref:System.Speech.Synthesis.SpeechSynthesizer> объект и выводит на консоль список установленных голосов (обработчиков для синтеза речи) и демонстрирует сведения, доступные для каждого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-160">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : System.Globalization.CultureInfo -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="672cf-161">Языковой стандарт, который должен поддерживаться голосом.</span><span class="sxs-lookup"><span data-stu-id="672cf-161">The locale that the voice must support.</span></span></param>
        <summary><span data-ttu-id="672cf-162">Возвращает все установленные голоса синтеза речи (преобразования текста в речь), которые поддерживают указанный языковой стандарт.</span><span class="sxs-lookup"><span data-stu-id="672cf-162">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span></span></summary>
        <returns><span data-ttu-id="672cf-163">Возвращает доступную только для чтения коллекцию голосов в данный момент установленных в системе, которые поддерживают указанный языковой стандарт.</span><span class="sxs-lookup"><span data-stu-id="672cf-163">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-164">Если ни один из установленных голосов не поддерживает указанный языковой стандарт, этот метод возвращает пустую коллекцию.</span><span class="sxs-lookup"><span data-stu-id="672cf-164">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="672cf-165">Microsoft Windows и API System. Speech принимают все допустимые коды языковых стран.</span><span class="sxs-lookup"><span data-stu-id="672cf-165">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="672cf-166">Чтобы выполнить преобразование текста в речь с помощью языка, указанного в свойстве Culture, необходимо установить модуль синтеза речи, поддерживающий этот код языка и страны.</span><span class="sxs-lookup"><span data-stu-id="672cf-166">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="672cf-167">Модули синтеза речи, поставляемые вместе с Microsoft Windows 7, работают со следующими кодами языков:</span><span class="sxs-lookup"><span data-stu-id="672cf-167">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="672cf-168">EN-US.</span><span class="sxs-lookup"><span data-stu-id="672cf-168">en-US.</span></span> <span data-ttu-id="672cf-169">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="672cf-169">English (United States)</span></span>  
  
-   <span data-ttu-id="672cf-170">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="672cf-170">zh-CN.</span></span> <span data-ttu-id="672cf-171">Китайский (Китай)</span><span class="sxs-lookup"><span data-stu-id="672cf-171">Chinese (China)</span></span>  
  
-   <span data-ttu-id="672cf-172">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="672cf-172">zh-TW.</span></span> <span data-ttu-id="672cf-173">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="672cf-173">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="672cf-174">Также разрешены двухбуквенный код языка, например "en".</span><span class="sxs-lookup"><span data-stu-id="672cf-174">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-175">Следующий пример является частью консольного приложения, которое инициализирует <xref:System.Speech.Synthesis.SpeechSynthesizer> объект и выводит на консоль список установленных голосов, которые поддерживают языковой стандарт EN-US.</span><span class="sxs-lookup"><span data-stu-id="672cf-175">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="speechSynthesizer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="672cf-176">Приостанавливает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-176">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberSignature Language="F#" Value="member this.PhonemeReached : EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " Usage="member this.PhonemeReached : System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-177">Вызывается по достижении фонемы.</span><span class="sxs-lookup"><span data-stu-id="672cf-177">Raised when a phoneme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-178">Phoneme является базовым компонентом письменного языка, обычно буквой алфавита (или сочетанием двух букв), представляющей один или несколько отдельных звуков.</span><span class="sxs-lookup"><span data-stu-id="672cf-178">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="672cf-179">Например, буква "c" является phoneme, которая может показаться "s" в "Циндер", или как "k" в "Catch".</span><span class="sxs-lookup"><span data-stu-id="672cf-179">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="672cf-180">Написанное слово — это сборка фонемы.</span><span class="sxs-lookup"><span data-stu-id="672cf-180">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="672cf-181">Изменение phoneme в слове приведет к изменению его орфографии.</span><span class="sxs-lookup"><span data-stu-id="672cf-181">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="672cf-182"><xref:System.Speech.Synthesis.SpeechSynthesizer> Экземпляр<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> создает событие для каждой части слова, составляющего phoneme.</span><span class="sxs-lookup"><span data-stu-id="672cf-182">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="672cf-183">Например, для слова «Theme» будет создано три <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> события: один для «th», один для звука «e» и один для «m» звука (Me).</span><span class="sxs-lookup"><span data-stu-id="672cf-183">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="672cf-184">Пример и сведения о данных, связанных с событием, см. <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>в разделе.</span><span class="sxs-lookup"><span data-stu-id="672cf-184">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rate : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-185">Получает или задает скорость произношения объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-185">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="672cf-186">Возвращает скорость произношения объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, от -10 до 10.</span><span class="sxs-lookup"><span data-stu-id="672cf-186">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672cf-187">Следующий пример говорит о том, что для строки со скоростью речи задано значение-2.</span><span class="sxs-lookup"><span data-stu-id="672cf-187">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.RemoveLexicon : Uri -&gt; unit" Usage="speechSynthesizer.RemoveLexicon uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="672cf-188">Расположения документа лексикона.</span><span class="sxs-lookup"><span data-stu-id="672cf-188">The location of the lexicon document.</span></span></param>
        <summary><span data-ttu-id="672cf-189">Удаляет лексикон из объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-189">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-190">Пример см. в разделе <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="672cf-190">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="speechSynthesizer.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="672cf-191">Возобновляет объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> после того, как он был приостановлен.</span><span class="sxs-lookup"><span data-stu-id="672cf-191">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SelectVoice : string -&gt; unit" Usage="speechSynthesizer.SelectVoice name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="672cf-192">Имя голоса для выбора.</span><span class="sxs-lookup"><span data-stu-id="672cf-192">The name of the voice to select.</span></span></param>
        <summary><span data-ttu-id="672cf-193">Выберите конкретный голос по имени.</span><span class="sxs-lookup"><span data-stu-id="672cf-193">Selects a specific voice by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-194">Используйте метод и <xref:System.Speech.Synthesis.VoiceInfo> класс для получения имен установленных голосов (TTS) текста, которые можно выбрать. <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-194">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="672cf-195">Чтобы выбрать голосовое значение, передайте все содержимое <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> свойства в качестве аргумента <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="672cf-195">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="672cf-196">Объект выбирает первый установленный голоса, содержащийся `name` в <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> свойстве голоса. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="672cf-197">Выполняет сравнение подстроки с учетом регистра, чтобы определить, `name`соответствует ли голоса. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-197">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="672cf-198">При вызове <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>приложения метод проверяет, что каждый из голосов, найденных в реестре, соответствует определенным минимальным критериям.</span><span class="sxs-lookup"><span data-stu-id="672cf-198">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="672cf-199">Для любого голоса, который не проходит <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> проверку, <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> устанавливает для `False`его свойства значение.</span><span class="sxs-lookup"><span data-stu-id="672cf-199">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="672cf-200">Приложение не может выбрать голосовое значение <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> , свойство `False`которого равно.</span><span class="sxs-lookup"><span data-stu-id="672cf-200">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="672cf-201">Как правило, приложения не устанавливают <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-201">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="672cf-202">Чтобы выбрать голосовое значение по полу, возрасту или языку, используйте один <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> из методов.</span><span class="sxs-lookup"><span data-stu-id="672cf-202">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="672cf-203">Выбирает голос с определенными свойствами.</span><span class="sxs-lookup"><span data-stu-id="672cf-203">Selects a voice with specific characteristics.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-204">Используйте метод и <xref:System.Speech.Synthesis.VoiceInfo> класс для получения имен установленных голосов (TTS) текста, которые можно выбрать. <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-204">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="672cf-205"><xref:System.Speech.Synthesis.SpeechSynthesizer> Объект выбирает первый установленный голосовой, соответствующий указанным характеристикам.</span><span class="sxs-lookup"><span data-stu-id="672cf-205">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="672cf-206">При вызове <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>приложения метод проверяет, что каждый из голосов, найденных в реестре, соответствует определенным минимальным критериям.</span><span class="sxs-lookup"><span data-stu-id="672cf-206">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="672cf-207">Для любого голоса, который не проходит <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> проверку, <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> устанавливает для `False`его свойства значение.</span><span class="sxs-lookup"><span data-stu-id="672cf-207">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="672cf-208">Приложение не может выбрать голосовое значение <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> , свойство `False`которого равно.</span><span class="sxs-lookup"><span data-stu-id="672cf-208">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="672cf-209">Как правило, приложения не устанавливают <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-209">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="672cf-210">Чтобы выбрать голоса по имени, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-210">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints gender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="672cf-211">Пол выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-211">The gender of the voice to select.</span></span></param>
        <summary><span data-ttu-id="672cf-212">Выбирает голос с определенным полом.</span><span class="sxs-lookup"><span data-stu-id="672cf-212">Selects a voice with a specific gender.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-213">Используйте метод и <xref:System.Speech.Synthesis.VoiceInfo> класс для получения имен установленных голосов (TTS) текста, которые можно выбрать. <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-213">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="672cf-214">Объект выбирает первый установленный голосовой, <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> свойство которого соответствует `gender` параметру. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-214">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="672cf-215">При вызове <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>приложения метод проверяет, что каждый из голосов, найденных в реестре, соответствует определенным минимальным критериям.</span><span class="sxs-lookup"><span data-stu-id="672cf-215">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="672cf-216">Для любого голоса, который не проходит <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> проверку, <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> устанавливает для `False`его свойства значение.</span><span class="sxs-lookup"><span data-stu-id="672cf-216">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="672cf-217">Приложение не может выбрать голосовое значение <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> , свойство `False`которого равно.</span><span class="sxs-lookup"><span data-stu-id="672cf-217">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="672cf-218">Как правило, приложения не устанавливают <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-218">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="672cf-219">Чтобы выбрать голоса на основе других характеристик, см. другие <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="672cf-219">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="672cf-220">Чтобы выбрать голоса по имени, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-220">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="672cf-221">Пол выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-221">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="672cf-222">Возраст выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-222">The age of the voice to select.</span></span></param>
        <summary><span data-ttu-id="672cf-223">Выбирает голос с конкретным полом и возрастом.</span><span class="sxs-lookup"><span data-stu-id="672cf-223">Selects a voice with a specific gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-224">Используйте метод и <xref:System.Speech.Synthesis.VoiceInfo> класс для получения имен установленных голосов (TTS) текста, которые можно выбрать. <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-224">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="672cf-225"><xref:System.Speech.Synthesis.VoiceInfo.Age%2A> <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> `age` `gender` Объект выбирает первый установленный голосовой, свойства и которого соответствуют параметрам и. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-225">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="672cf-226">При вызове <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>приложения метод проверяет, что каждый из голосов, найденных в реестре, соответствует определенным минимальным критериям.</span><span class="sxs-lookup"><span data-stu-id="672cf-226">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="672cf-227">Для любого голоса, который не проходит <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> проверку, <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> устанавливает для `False`его свойства значение.</span><span class="sxs-lookup"><span data-stu-id="672cf-227">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="672cf-228">Приложение не может выбрать голосовое значение <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> , свойство `False`которого равно.</span><span class="sxs-lookup"><span data-stu-id="672cf-228">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="672cf-229">Как правило, приложения не устанавливают <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-229">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="672cf-230">Чтобы выбрать голоса на основе других характеристик, см. другие <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="672cf-230">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="672cf-231">Чтобы выбрать голоса по имени, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-231">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="672cf-232">Пол выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-232">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="672cf-233">Возраст выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-233">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="672cf-234">Позиция выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-234">The position of the voice to select.</span></span></param>
        <summary><span data-ttu-id="672cf-235">Выбирает голос с определенными полом и возрастом, в зависимости от позиции, в которой упорядочиваются голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-235">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-236">Используйте метод и <xref:System.Speech.Synthesis.VoiceInfo> класс для получения имен установленных голосов (TTS) текста, которые можно выбрать. <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-236">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="672cf-237"><xref:System.Speech.Synthesis.VoiceInfo.Age%2A> <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> `age` Объект находит установленные голоса, свойства и которых соответствуют `gender` параметрам и. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="672cf-238">Счетчик находит найденные совпадения и возвращает голосовое значение, если число `voiceAlternate` равно значению параметра. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-238">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="672cf-239">При вызове <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>приложения метод проверяет, что каждый из голосов, найденных в реестре, соответствует определенным минимальным критериям.</span><span class="sxs-lookup"><span data-stu-id="672cf-239">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="672cf-240">Для любого голоса, который не проходит <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> проверку, <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> устанавливает для `False`его свойства значение.</span><span class="sxs-lookup"><span data-stu-id="672cf-240">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="672cf-241">Приложение не может выбрать голосовое значение <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> , свойство `False`которого равно.</span><span class="sxs-lookup"><span data-stu-id="672cf-241">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="672cf-242">Как правило, приложения не устанавливают <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-242">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="672cf-243">Чтобы выбрать голоса на основе других характеристик, см. другие <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="672cf-243">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="672cf-244">Чтобы выбрать голоса по имени, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-244">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int * System.Globalization.CultureInfo -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="672cf-245">Пол выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-245">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="672cf-246">Возраст выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-246">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="672cf-247">Позиция выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-247">The position of the voice to select.</span></span></param>
        <param name="culture"><span data-ttu-id="672cf-248">Языковой стандарт выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-248">The locale of the voice to select.</span></span></param>
        <summary><span data-ttu-id="672cf-249">Выбирает голос с определенными полом, возрастом и Языковым стандартом, в зависимости от позиции, в которой упорядочиваются голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-249">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-250"><xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> `gender` `age`Объект находит голоса, свойства, и которых соответствуют параметрам, и `culture`. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="672cf-251">Счетчик находит найденные совпадения и возвращает голосовое значение, если число `voiceAlternate` равно значению параметра. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-251">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="672cf-252">Microsoft Windows и API System. Speech принимают все допустимые коды языковых стран.</span><span class="sxs-lookup"><span data-stu-id="672cf-252">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="672cf-253">Чтобы выполнить преобразование текста в речь с помощью языка, указанного в `culture` параметре, необходимо установить модуль синтеза речи, поддерживающий этот код языка и страны.</span><span class="sxs-lookup"><span data-stu-id="672cf-253">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="672cf-254">Модули синтеза речи, поставляемые вместе с Microsoft Windows 7, работают со следующими кодами языков:</span><span class="sxs-lookup"><span data-stu-id="672cf-254">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="672cf-255">EN-US.</span><span class="sxs-lookup"><span data-stu-id="672cf-255">en-US.</span></span> <span data-ttu-id="672cf-256">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="672cf-256">English (United States)</span></span>  
  
-   <span data-ttu-id="672cf-257">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="672cf-257">zh-CN.</span></span> <span data-ttu-id="672cf-258">Китайский (Китай)</span><span class="sxs-lookup"><span data-stu-id="672cf-258">Chinese (China)</span></span>  
  
-   <span data-ttu-id="672cf-259">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="672cf-259">zh-TW.</span></span> <span data-ttu-id="672cf-260">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="672cf-260">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="672cf-261">Также разрешены двухбуквенный код языка, например "en".</span><span class="sxs-lookup"><span data-stu-id="672cf-261">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="672cf-262">При вызове <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>приложения метод проверяет, что каждый из голосов, найденных в реестре, соответствует определенным минимальным критериям.</span><span class="sxs-lookup"><span data-stu-id="672cf-262">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="672cf-263">Для любого голоса, который не проходит <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> проверку, <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> устанавливает для `False`его свойства значение.</span><span class="sxs-lookup"><span data-stu-id="672cf-263">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="672cf-264">Приложение не может выбрать голосовое значение <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> , свойство `False`которого равно.</span><span class="sxs-lookup"><span data-stu-id="672cf-264">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="672cf-265">Как правило, приложения не устанавливают <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-265">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="672cf-266">Чтобы выбрать голоса на основе других характеристик, см. другие <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="672cf-266">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="672cf-267">Чтобы выбрать голоса по имени, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-267">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToAudioStream : System.IO.Stream * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToAudioStream (audioDestination, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="672cf-268">Поток, в который требуется добавить выходные данные синтеза.</span><span class="sxs-lookup"><span data-stu-id="672cf-268">The stream to which to append synthesis output.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="672cf-269">Формат для использования с выходными данными синтеза.</span><span class="sxs-lookup"><span data-stu-id="672cf-269">The format to use for the synthesis output.</span></span></param>
        <summary><span data-ttu-id="672cf-270">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для добавления выходных данных в аудиопоток.</span><span class="sxs-lookup"><span data-stu-id="672cf-270">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-271">Вызовите метод <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> , <xref:System.Speech.Synthesis.SpeechSynthesizer>чтобы освободить ссылку на поток.</span><span class="sxs-lookup"><span data-stu-id="672cf-271">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s  reference to the stream.</span></span>  
  
 <span data-ttu-id="672cf-272">Другие параметры конфигурации вывода см. в <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>разделе методы, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> .</span><span class="sxs-lookup"><span data-stu-id="672cf-272">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToDefaultAudioDevice : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToDefaultAudioDevice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="672cf-273">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для отправки выходных данных в аудиоустройство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="672cf-273">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-274">Вы можете использовать окно **звук** на **панели управления** Windows для настройки звукового устройства по умолчанию для компьютера.</span><span class="sxs-lookup"><span data-stu-id="672cf-274">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="672cf-275">Другие параметры конфигурации вывода см. в <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>разделе методы, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> .</span><span class="sxs-lookup"><span data-stu-id="672cf-275">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-276">В следующем примере синтезатор используется для заключения фразы в звуковые выходные данные по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="672cf-276">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToNull : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="672cf-277">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, чтобы не отправлять выходные данные из операций синтеза в устройство, файл или поток.</span><span class="sxs-lookup"><span data-stu-id="672cf-277">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-278">Используйте этот метод, чтобы освободить <xref:System.Speech.Synthesis.SpeechSynthesizer>ссылку на файл или поток.</span><span class="sxs-lookup"><span data-stu-id="672cf-278">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s reference to a file or stream.</span></span> <span data-ttu-id="672cf-279">Пример см. в разделе <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="672cf-279">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="672cf-280">Другие параметры конфигурации вывода см. в <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>разделе методы, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> .</span><span class="sxs-lookup"><span data-stu-id="672cf-280">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="672cf-281">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для добавления выходных данных в файла аудиоданных в формате WAV.</span><span class="sxs-lookup"><span data-stu-id="672cf-281">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-282">Чтобы освободить <xref:System.Speech.Synthesis.SpeechSynthesizer>ссылку на файл, <xref:System.Speech.Synthesis.SpeechSynthesizer>перенастройте выходные данные, например, вызвав <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="672cf-282">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="672cf-283">Другие параметры конфигурации вывода см. в <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>разделе методы, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> .</span><span class="sxs-lookup"><span data-stu-id="672cf-283">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="672cf-284">Путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="672cf-284">The path to the file.</span></span></param>
        <summary><span data-ttu-id="672cf-285">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для добавления выходных данных в файл, содержащий данные в формате WAV.</span><span class="sxs-lookup"><span data-stu-id="672cf-285">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-286">Чтобы настроить выходные данные и указать формат звука, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-286">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-287">В следующем примере экземпляр класса <xref:System.Media.SoundPlayer> используется для воспроизведения запроса, который был выведен в WAV-файл.</span><span class="sxs-lookup"><span data-stu-id="672cf-287">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="672cf-288">Поскольку вызов является асинхронным <xref:System.Media.SoundPlayer> , экземпляр создается (и <xref:System.Media.SoundPlayer.Play%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> вызывается метод) в обработчике события. <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-288">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile (path, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="672cf-289">Путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="672cf-289">The path to the file.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="672cf-290">Сведения об аудиоформате.</span><span class="sxs-lookup"><span data-stu-id="672cf-290">The audio format information.</span></span></param>
        <summary><span data-ttu-id="672cf-291">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для добавления выходных данных в файл с аудиоданными определенного формата.</span><span class="sxs-lookup"><span data-stu-id="672cf-291">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672cf-292">В следующем примере задается формат вывода синтеза речи и его отправка в WAV-файл.</span><span class="sxs-lookup"><span data-stu-id="672cf-292">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveStream : System.IO.Stream -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveStream audioDestination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="672cf-293">Поток, в который требуется добавить выходные данные синтеза.</span><span class="sxs-lookup"><span data-stu-id="672cf-293">The stream to which to append synthesis output.</span></span></param>
        <summary><span data-ttu-id="672cf-294">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для добавления выходных данных в поток содержащий данные в формате WAV.</span><span class="sxs-lookup"><span data-stu-id="672cf-294">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-295">Чтобы освободить <xref:System.Speech.Synthesis.SpeechSynthesizer>ссылку на поток, перенастройте выходные данные синтезатора, например, вызвав <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="672cf-295">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="672cf-296">Другие параметры конфигурации вывода см. в <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>разделе методы, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> .</span><span class="sxs-lookup"><span data-stu-id="672cf-296">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-297">В следующем примере в поток WAV выводится фраза.</span><span class="sxs-lookup"><span data-stu-id="672cf-297">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream streamAudio = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="672cf-298">Создает речевой вывод синхронно из строки, объекта <see cref="T:System.Speech.Synthesis.Prompt" /> или объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-298">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-299"><xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> Методы генерируют речь синхронно.</span><span class="sxs-lookup"><span data-stu-id="672cf-299">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="672cf-300">Методы не возвращают, пока содержимое <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> экземпляра не будет полностью обработано.</span><span class="sxs-lookup"><span data-stu-id="672cf-300">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="672cf-301">Это самый простой способ создания речи.</span><span class="sxs-lookup"><span data-stu-id="672cf-301">This is the simplest way to generate speech.</span></span> <span data-ttu-id="672cf-302">Однако, если приложение должно выполнять задачи во время диктовки, например выделение текста, анимацию рисования, элементы управления монитора или другие задачи, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> методы <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> или метод для асинхронного создания речи.</span><span class="sxs-lookup"><span data-stu-id="672cf-302">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="672cf-303">Во время вызова этого метода метод <xref:System.Speech.Synthesis.SpeechSynthesizer> может вызвать следующие события:</span><span class="sxs-lookup"><span data-stu-id="672cf-303">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="672cf-304"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="672cf-304"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="672cf-305">Возникает при изменении состояния речи синтезатора.</span><span class="sxs-lookup"><span data-stu-id="672cf-305">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="672cf-306"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="672cf-306"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="672cf-307">Возникает, когда синтезатор начинает создавать речь.</span><span class="sxs-lookup"><span data-stu-id="672cf-307">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="672cf-308"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-308"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="672cf-309">Создается каждый раз, когда синтезатор достигает буквы или сочетания букв, которые составляют скрытыеный звук речи на языке.</span><span class="sxs-lookup"><span data-stu-id="672cf-309">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="672cf-310"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="672cf-310"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="672cf-311">Порождается каждый раз, когда синтезатор завершает проговаривание слов.</span><span class="sxs-lookup"><span data-stu-id="672cf-311">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="672cf-312"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-312"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="672cf-313">При каждом выводе выходных данных необходимо изменить расположение рта или межмышцыических лиц, используемых для создания речи.</span><span class="sxs-lookup"><span data-stu-id="672cf-313">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="672cf-314"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-314"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="672cf-315">Возникает, когда синтезатор встречает закладку в командной строке.</span><span class="sxs-lookup"><span data-stu-id="672cf-315">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="672cf-316"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="672cf-316"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="672cf-317">Возникает при изменении голоса речи для синтезатора.</span><span class="sxs-lookup"><span data-stu-id="672cf-317">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="672cf-318">Не вызывает событие при обработке любого из методов. <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer> <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted></span><span class="sxs-lookup"><span data-stu-id="672cf-318">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.Speak prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="672cf-319">Содержимое для озвучки.</span><span class="sxs-lookup"><span data-stu-id="672cf-319">The content to speak.</span></span></param>
        <summary><span data-ttu-id="672cf-320">Синхронно произносит содержимое объекта <see cref="T:System.Speech.Synthesis.Prompt" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-320">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-321">Для асинхронного произношения содержимого <xref:System.Speech.Synthesis.Prompt> объекта используйте. <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-321">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-322">В следующем примере создается <xref:System.Speech.Synthesis.Prompt> объект из строки и объект передается в качестве аргумента <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-322">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.PromptBuilder -&gt; unit" Usage="speechSynthesizer.Speak promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="672cf-323">Содержимое для озвучки.</span><span class="sxs-lookup"><span data-stu-id="672cf-323">The content to speak.</span></span></param>
        <summary><span data-ttu-id="672cf-324">Синхронно произносит содержимое объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-324">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-325">Для асинхронного произношения содержимого <xref:System.Speech.Synthesis.PromptBuilder> объекта используйте. <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-325">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-326">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объект из строки и объект передается в качестве аргумента <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-326">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.Speak : string -&gt; unit" Usage="speechSynthesizer.Speak textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="672cf-327">Текст для озвучки.</span><span class="sxs-lookup"><span data-stu-id="672cf-327">The text to speak.</span></span></param>
        <summary><span data-ttu-id="672cf-328">Синхронно произносит содержимое строки.</span><span class="sxs-lookup"><span data-stu-id="672cf-328">Synchronously speaks the contents of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-329">Чтобы синхронно поговорить со строкой, содержащей разметку SSML, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-329">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="672cf-330">Для асинхронного произношения содержимого строки используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-330">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-331">Как показано в следующем примере, <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> метод предоставляет простейшие средства для синхронного создания речевого вывода.</span><span class="sxs-lookup"><span data-stu-id="672cf-331">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="672cf-332">Создает речевой вывод асинхронно из строки, объекта <see cref="T:System.Speech.Synthesis.Prompt" /> или объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-332">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-333">Методы <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> создают речь в асинхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="672cf-333">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="672cf-334">Методы немедленно возвращают, не дожидаясь завершения работы с содержимым <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> объекта.</span><span class="sxs-lookup"><span data-stu-id="672cf-334">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="672cf-335">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> , если приложение должно выполнять задачи во время диктовки, например выделение текста, анимацию рисования, элементы управления монитора или другие задачи.</span><span class="sxs-lookup"><span data-stu-id="672cf-335">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="672cf-336">Во время вызова этого метода метод <xref:System.Speech.Synthesis.SpeechSynthesizer> может вызвать следующие события:</span><span class="sxs-lookup"><span data-stu-id="672cf-336">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="672cf-337"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="672cf-337"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="672cf-338">Возникает при изменении состояния речи синтезатора.</span><span class="sxs-lookup"><span data-stu-id="672cf-338">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="672cf-339"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="672cf-339"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="672cf-340">Возникает, когда синтезатор начинает создавать речь.</span><span class="sxs-lookup"><span data-stu-id="672cf-340">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="672cf-341"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-341"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="672cf-342">Создается каждый раз, когда синтезатор достигает буквы или сочетания букв, которые составляют скрытыеный звук речи на языке.</span><span class="sxs-lookup"><span data-stu-id="672cf-342">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="672cf-343"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="672cf-343"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="672cf-344">Порождается каждый раз, когда синтезатор завершает проговаривание слов.</span><span class="sxs-lookup"><span data-stu-id="672cf-344">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="672cf-345"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-345"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="672cf-346">При каждом выводе выходных данных необходимо изменить расположение рта или межмышцыических лиц, используемых для создания речи.</span><span class="sxs-lookup"><span data-stu-id="672cf-346">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="672cf-347"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-347"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="672cf-348">Возникает, когда синтезатор встречает закладку в командной строке.</span><span class="sxs-lookup"><span data-stu-id="672cf-348">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="672cf-349"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="672cf-349"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="672cf-350">Возникает при изменении голоса речи для синтезатора.</span><span class="sxs-lookup"><span data-stu-id="672cf-350">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="672cf-351"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="672cf-351"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="672cf-352">Возникает, когда синтезатор завершает <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> операцию.</span><span class="sxs-lookup"><span data-stu-id="672cf-352">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="672cf-353">Если приложению не нужно выполнять задачи во время диктовки, можно использовать <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> методы <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> или метод для синхронного создания речи.</span><span class="sxs-lookup"><span data-stu-id="672cf-353">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsync prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="672cf-354">Содержимое для озвучки.</span><span class="sxs-lookup"><span data-stu-id="672cf-354">The content to speak.</span></span></param>
        <summary><span data-ttu-id="672cf-355">Асинхронно указывает содержимое объекта <see cref="T:System.Speech.Synthesis.Prompt" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-355">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-356">Можно отменить асинхронную диктовку запроса с <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> помощью <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> метода или.</span><span class="sxs-lookup"><span data-stu-id="672cf-356">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="672cf-357">Чтобы синхронно проговаривать содержимое <xref:System.Speech.Synthesis.Prompt> объекта, используйте. <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-357">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-358">В следующем примере создается <xref:System.Speech.Synthesis.Prompt> объект из строки и объект передается в качестве аргумента <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-358">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.PromptBuilder -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="672cf-359">Содержимое для озвучки.</span><span class="sxs-lookup"><span data-stu-id="672cf-359">The content to speak.</span></span></param>
        <summary><span data-ttu-id="672cf-360">Асинхронно указывает содержимое объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-360">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="672cf-361">Возвращает объект, в котором находится содержимое для произношения.</span><span class="sxs-lookup"><span data-stu-id="672cf-361">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-362">Чтобы синхронно проговаривать содержимое <xref:System.Speech.Synthesis.PromptBuilder> объекта, используйте. <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="672cf-362">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-363">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объект из строки и объект передается в качестве аргумента <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-363">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="672cf-364">Текст для озвучки.</span><span class="sxs-lookup"><span data-stu-id="672cf-364">The text to speak.</span></span></param>
        <summary><span data-ttu-id="672cf-365">Асинхронно указывает содержимое строки.</span><span class="sxs-lookup"><span data-stu-id="672cf-365">Asynchronously speaks the contents of a string.</span></span></summary>
        <returns><span data-ttu-id="672cf-366">Возвращает объект, в котором находится содержимое для произношения.</span><span class="sxs-lookup"><span data-stu-id="672cf-366">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-367">Для асинхронного произношения строки, содержащей разметку SSML, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-367">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="672cf-368">Чтобы синхронно проговаривать содержимое строки, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-368">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="672cf-369">Можно отменить асинхронную диктовку запроса с <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> помощью <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> метода или.</span><span class="sxs-lookup"><span data-stu-id="672cf-369">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-370">Как показано в следующем примере, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> метод предоставляет простейшие средства для асинхронного создания речевого вывода.</span><span class="sxs-lookup"><span data-stu-id="672cf-370">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancel : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancel prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="672cf-371">Содержимое, для которого нужно отменить операцию произношения.</span><span class="sxs-lookup"><span data-stu-id="672cf-371">The content for which to cancel a speak operation.</span></span></param>
        <summary><span data-ttu-id="672cf-372">Отменяет асинхронную операцию синтеза для запроса в очереди.</span><span class="sxs-lookup"><span data-stu-id="672cf-372">Cancels the asynchronous synthesis operation for a queued prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-373">Этот метод также можно использовать для отмены асинхронной операции произношения для следующих действий:</span><span class="sxs-lookup"><span data-stu-id="672cf-373">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="672cf-374">Содержимое <xref:System.String> объекта, заданного <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> методом.</span><span class="sxs-lookup"><span data-stu-id="672cf-374">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="672cf-375">Содержимое <xref:System.Speech.Synthesis.PromptBuilder> объекта, заданного <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> методом.</span><span class="sxs-lookup"><span data-stu-id="672cf-375">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="672cf-376">Содержимое <xref:System.String> содержащего SSML, заданное <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="672cf-376">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="672cf-377">При вызове <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>метода <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>система System. Speech создает <xref:System.Speech.Synthesis.Prompt> объект и заполняет его содержимым параметра метода и возвращает <xref:System.Speech.Synthesis.Prompt> объект.</span><span class="sxs-lookup"><span data-stu-id="672cf-377">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="672cf-378">Если вы сохранили <xref:System.Speech.Synthesis.Prompt>копию возвращенного объекта, можно передать ее в <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> , чтобы отменить содержимое <xref:System.String> речи, <xref:System.Speech.Synthesis.PromptBuilder> указанное в объекте или.</span><span class="sxs-lookup"><span data-stu-id="672cf-378">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancelAll : unit -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancelAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="672cf-379">Отменяет все асинхронные операции синтеза речи, в очереди.</span><span class="sxs-lookup"><span data-stu-id="672cf-379">Cancels all queued, asynchronous, speech synthesis operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672cf-380">В следующем примере показано использование <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> для отмены асинхронного диктовки запроса, чтобы можно было говорить о новом приглашении.</span><span class="sxs-lookup"><span data-stu-id="672cf-380">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="672cf-381">Обратите внимание <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> , что событие срабатывает <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> при отмене операции.</span><span class="sxs-lookup"><span data-stu-id="672cf-381">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberSignature Language="F#" Value="member this.SpeakCompleted : EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " Usage="member this.SpeakCompleted : System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-382">Возникает, когда <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> завершает воспроизводить запрос.</span><span class="sxs-lookup"><span data-stu-id="672cf-382">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-383">Вызывает событие после завершения любого <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> из методов или.<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-383">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="672cf-384">Класс не имеет свойств и не возвращает данные <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> из события. <xref:System.Speech.Synthesis.SpeakCompletedEventArgs></span><span class="sxs-lookup"><span data-stu-id="672cf-384">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="672cf-385">Он предоставляется, чтобы позволить авторам приложений создавать обработчики событий для <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> события.</span><span class="sxs-lookup"><span data-stu-id="672cf-385">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberSignature Language="F#" Value="member this.SpeakProgress : EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " Usage="member this.SpeakProgress : System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-386">Возникает после того, как <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> сообщает каждое отдельное слово запроса.</span><span class="sxs-lookup"><span data-stu-id="672cf-386">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-387"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>Вызывает это событие для каждого нового слова, которое оно говорит в запросе, используя любой из методов,, или. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-387">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="672cf-388">Пример и дополнительные сведения о данных, связанных с событием, см. <xref:System.Speech.Synthesis.SpeakProgressEventArgs>в разделе.</span><span class="sxs-lookup"><span data-stu-id="672cf-388">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsml : string -&gt; unit" Usage="speechSynthesizer.SpeakSsml textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="672cf-389">Строка SSML для озвучки.</span><span class="sxs-lookup"><span data-stu-id="672cf-389">The SSML string to speak.</span></span></param>
        <summary><span data-ttu-id="672cf-390">Синхронно произносит <see cref="T:System.String" />, содержащий разметку SSML.</span><span class="sxs-lookup"><span data-stu-id="672cf-390">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-391">Содержимое `textToSpeak` параметра должно `speak` включать элемент и должно соответствовать языку разметки [речи (SSML) версии 1,0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="672cf-391">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="672cf-392">Дополнительные сведения см. в разделе [Справочник по языку разметки речи](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="672cf-392">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="672cf-393">Для асинхронного произношения строки, содержащей разметку SSML, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-393">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="672cf-394">Можно использовать <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> для инициации синхронного диктовки строки, которая не содержит разметки SSML.</span><span class="sxs-lookup"><span data-stu-id="672cf-394">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="672cf-395">Во время вызова этого метода метод <xref:System.Speech.Synthesis.SpeechSynthesizer> может вызвать следующие события:</span><span class="sxs-lookup"><span data-stu-id="672cf-395">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="672cf-396"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="672cf-396"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="672cf-397">Возникает при изменении состояния речи синтезатора.</span><span class="sxs-lookup"><span data-stu-id="672cf-397">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="672cf-398"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="672cf-398"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="672cf-399">Возникает, когда синтезатор начинает создавать речь.</span><span class="sxs-lookup"><span data-stu-id="672cf-399">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="672cf-400"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-400"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="672cf-401">Создается каждый раз, когда синтезатор достигает буквы или сочетания букв, которые составляют скрытыеный звук речи на языке.</span><span class="sxs-lookup"><span data-stu-id="672cf-401">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="672cf-402"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="672cf-402"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="672cf-403">Порождается каждый раз, когда синтезатор завершает проговаривание слов.</span><span class="sxs-lookup"><span data-stu-id="672cf-403">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="672cf-404"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-404"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="672cf-405">При каждом выводе выходных данных необходимо изменить расположение рта или межмышцыических лиц, используемых для создания речи.</span><span class="sxs-lookup"><span data-stu-id="672cf-405">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="672cf-406"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-406"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="672cf-407">Возникает, когда синтезатор встречает закладку в командной строке.</span><span class="sxs-lookup"><span data-stu-id="672cf-407">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="672cf-408"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="672cf-408"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="672cf-409">Возникает при изменении голоса речи для синтезатора.</span><span class="sxs-lookup"><span data-stu-id="672cf-409">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="672cf-410">Не вызывает событие при обработке <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>метода. <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-410">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-411">В следующем примере дата 1/29/2009 подготавливается к просмотру в виде даты, в месяц, день, в порядке года.</span><span class="sxs-lookup"><span data-stu-id="672cf-411">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt synchronously.
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsmlAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakSsmlAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="672cf-412">Разметка SMML для разговора.</span><span class="sxs-lookup"><span data-stu-id="672cf-412">The SMML markup to speak.</span></span></param>
        <summary><span data-ttu-id="672cf-413">Асинхронно сообщает <see cref="T:System.String" />, содержащий разметку SSML.</span><span class="sxs-lookup"><span data-stu-id="672cf-413">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-414">Содержимое `textToSpeak` параметра должно `speak` включать элемент и должно соответствовать языку разметки [речи (SSML) версии 1,0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="672cf-414">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="672cf-415">Дополнительные сведения см. в разделе [Справочник по языку разметки речи](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="672cf-415">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="672cf-416">Чтобы синхронно поговорить со строкой, содержащей разметку SSML, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="672cf-416">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="672cf-417">Можно использовать <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> для инициации асинхронного диктовки строки, которая не содержит разметки SSML.</span><span class="sxs-lookup"><span data-stu-id="672cf-417">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="672cf-418">Во время вызова этого метода метод <xref:System.Speech.Synthesis.SpeechSynthesizer> может вызвать следующие события:</span><span class="sxs-lookup"><span data-stu-id="672cf-418">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="672cf-419"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="672cf-419"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="672cf-420">Возникает при изменении состояния речи синтезатора.</span><span class="sxs-lookup"><span data-stu-id="672cf-420">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="672cf-421"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="672cf-421"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="672cf-422">Возникает, когда синтезатор начинает создавать речь.</span><span class="sxs-lookup"><span data-stu-id="672cf-422">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="672cf-423"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-423"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="672cf-424">Создается каждый раз, когда синтезатор достигает буквы или сочетания букв, которые составляют скрытыеный звук речи на языке.</span><span class="sxs-lookup"><span data-stu-id="672cf-424">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="672cf-425"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="672cf-425"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="672cf-426">Порождается каждый раз, когда синтезатор завершает проговаривание слов.</span><span class="sxs-lookup"><span data-stu-id="672cf-426">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="672cf-427"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-427"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="672cf-428">При каждом выводе выходных данных необходимо изменить расположение рта или межмышцыических лиц, используемых для создания речи.</span><span class="sxs-lookup"><span data-stu-id="672cf-428">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="672cf-429"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="672cf-429"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="672cf-430">Возникает, когда синтезатор встречает закладку в командной строке.</span><span class="sxs-lookup"><span data-stu-id="672cf-430">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="672cf-431"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="672cf-431"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="672cf-432">Возникает при изменении голоса речи для синтезатора.</span><span class="sxs-lookup"><span data-stu-id="672cf-432">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="672cf-433"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="672cf-433"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="672cf-434">Возникает, когда синтезатор заканчивает обработку <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> операции.</span><span class="sxs-lookup"><span data-stu-id="672cf-434">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="672cf-435">Если приложению DOS не нужно выполнять задачи во время диктовки, можно использовать <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> метод или для синхронного создания речи.</span><span class="sxs-lookup"><span data-stu-id="672cf-435">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberSignature Language="F#" Value="member this.SpeakStarted : EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " Usage="member this.SpeakStarted : System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-436">Возникает, когда <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> начинает воспроизводить запрос.</span><span class="sxs-lookup"><span data-stu-id="672cf-436">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-437"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>Вызывает это событие при начале обработки запроса с помощью любого из методов,, или. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-437">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="672cf-438">Класс не имеет свойств и не возвращает данные <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> из события. <xref:System.Speech.Synthesis.SpeakStartedEventArgs></span><span class="sxs-lookup"><span data-stu-id="672cf-438">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="672cf-439">Он предоставляется, чтобы позволить авторам приложений создавать обработчики событий для <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> события.</span><span class="sxs-lookup"><span data-stu-id="672cf-439">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Speech.Synthesis.SynthesizerState" Usage="System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-440">Получает текущее состояние произношения объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-440">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="672cf-441">Возвращает текущее состояние произношения объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-441">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-442">Чтобы получить новое состояние <xref:System.Speech.Synthesis.SpeechSynthesizer> после изменения, <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> используйте свойство <xref:System.Speech.Synthesis.StateChangedEventArgs> класса.</span><span class="sxs-lookup"><span data-stu-id="672cf-442">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-443">В следующем примере показано состояние <xref:System.Speech.Synthesis.SpeechSynthesizer> до, во время и после диктовки запроса.</span><span class="sxs-lookup"><span data-stu-id="672cf-443">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " Usage="member this.StateChanged : System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-444">Возникает, когда меняется состояние <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-444">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-445">Вызывает это событие при изменении его речи <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A>. <xref:System.Speech.Synthesis.SpeechSynthesizer></span><span class="sxs-lookup"><span data-stu-id="672cf-445">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="672cf-446">Пример и дополнительные сведения о данных, связанных с событием, см. <xref:System.Speech.Synthesis.StateChangedEventArgs>в разделе.</span><span class="sxs-lookup"><span data-stu-id="672cf-446">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="672cf-447">Чтобы приостановить и возобновить синтез речи, <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> методы и.</span><span class="sxs-lookup"><span data-stu-id="672cf-447">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberSignature Language="F#" Value="member this.VisemeReached : EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " Usage="member this.VisemeReached : System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-448">Вызывается по достижении виземы.</span><span class="sxs-lookup"><span data-stu-id="672cf-448">Raised when a viseme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-449">Висеме — это базовая координата рот и лица, когда пронаунЦинг phoneme.</span><span class="sxs-lookup"><span data-stu-id="672cf-449">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="672cf-450">Висемес являются визуальными представлениями фонемы.</span><span class="sxs-lookup"><span data-stu-id="672cf-450">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="672cf-451">System. Speech поддерживает 21 висемес для английского языка (США), каждый из которых соответствует одному или нескольким фонемы.</span><span class="sxs-lookup"><span data-stu-id="672cf-451">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="672cf-452"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>события возникают при достижении нового phoneme, отличного от висеме предыдущего phoneme.</span><span class="sxs-lookup"><span data-stu-id="672cf-452"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="672cf-453">Поскольку некоторые висемес представляют более одного phoneme, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> событие не создается, если следующий phoneme соответствует тому же висеме, что и предыдущий phoneme.</span><span class="sxs-lookup"><span data-stu-id="672cf-453">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="672cf-454">Например, для произносимых слов «эта зона» <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> создается событие для «s» в «this» и «z» в «Zone».</span><span class="sxs-lookup"><span data-stu-id="672cf-454">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="672cf-455">Однако <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> событие для "z" в "Zone" не вызывается, так как оно соответствует тому же висеме, что и "s" в "this".</span><span class="sxs-lookup"><span data-stu-id="672cf-455">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="672cf-456">Ниже приведен список групп 21 SAPI фонемы и phoneme, соответствующих висеме на английском языке США.</span><span class="sxs-lookup"><span data-stu-id="672cf-456">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="672cf-457">висеме</span><span class="sxs-lookup"><span data-stu-id="672cf-457">Viseme</span></span>|<span data-ttu-id="672cf-458">Phoneme</span><span class="sxs-lookup"><span data-stu-id="672cf-458">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="672cf-459">0</span><span class="sxs-lookup"><span data-stu-id="672cf-459">0</span></span>|<span data-ttu-id="672cf-460">отключить</span><span class="sxs-lookup"><span data-stu-id="672cf-460">silence</span></span>|  
|<span data-ttu-id="672cf-461">1</span><span class="sxs-lookup"><span data-stu-id="672cf-461">1</span></span>|<span data-ttu-id="672cf-462">AE, AX, AH</span><span class="sxs-lookup"><span data-stu-id="672cf-462">ae, ax, ah</span></span>|  
|<span data-ttu-id="672cf-463">2</span><span class="sxs-lookup"><span data-stu-id="672cf-463">2</span></span>|<span data-ttu-id="672cf-464">aa</span><span class="sxs-lookup"><span data-stu-id="672cf-464">aa</span></span>|  
|<span data-ttu-id="672cf-465">3</span><span class="sxs-lookup"><span data-stu-id="672cf-465">3</span></span>|<span data-ttu-id="672cf-466">AO</span><span class="sxs-lookup"><span data-stu-id="672cf-466">ao</span></span>|  
|<span data-ttu-id="672cf-467">4</span><span class="sxs-lookup"><span data-stu-id="672cf-467">4</span></span>|<span data-ttu-id="672cf-468">клю, EH, вероятно</span><span class="sxs-lookup"><span data-stu-id="672cf-468">ey, eh, uh</span></span>|  
|<span data-ttu-id="672cf-469">5</span><span class="sxs-lookup"><span data-stu-id="672cf-469">5</span></span>|<span data-ttu-id="672cf-470">ER</span><span class="sxs-lookup"><span data-stu-id="672cf-470">er</span></span>|  
|<span data-ttu-id="672cf-471">6</span><span class="sxs-lookup"><span data-stu-id="672cf-471">6</span></span>|<span data-ttu-id="672cf-472">y, ий, IH, IX</span><span class="sxs-lookup"><span data-stu-id="672cf-472">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="672cf-473">7</span><span class="sxs-lookup"><span data-stu-id="672cf-473">7</span></span>|<span data-ttu-id="672cf-474">w, UW</span><span class="sxs-lookup"><span data-stu-id="672cf-474">w, uw</span></span>|  
|<span data-ttu-id="672cf-475">8</span><span class="sxs-lookup"><span data-stu-id="672cf-475">8</span></span>|<span data-ttu-id="672cf-476">разрешить</span><span class="sxs-lookup"><span data-stu-id="672cf-476">ow</span></span>|  
|<span data-ttu-id="672cf-477">9</span><span class="sxs-lookup"><span data-stu-id="672cf-477">9</span></span>|<span data-ttu-id="672cf-478">AW</span><span class="sxs-lookup"><span data-stu-id="672cf-478">aw</span></span>|  
|<span data-ttu-id="672cf-479">10</span><span class="sxs-lookup"><span data-stu-id="672cf-479">10</span></span>|<span data-ttu-id="672cf-480">Oy</span><span class="sxs-lookup"><span data-stu-id="672cf-480">oy</span></span>|  
|<span data-ttu-id="672cf-481">11</span><span class="sxs-lookup"><span data-stu-id="672cf-481">11</span></span>|<span data-ttu-id="672cf-482">гг</span><span class="sxs-lookup"><span data-stu-id="672cf-482">ay</span></span>|  
|<span data-ttu-id="672cf-483">12</span><span class="sxs-lookup"><span data-stu-id="672cf-483">12</span></span>|<span data-ttu-id="672cf-484">h</span><span class="sxs-lookup"><span data-stu-id="672cf-484">h</span></span>|  
|<span data-ttu-id="672cf-485">13</span><span class="sxs-lookup"><span data-stu-id="672cf-485">13</span></span>|<span data-ttu-id="672cf-486">процедура</span><span class="sxs-lookup"><span data-stu-id="672cf-486">r</span></span>|  
|<span data-ttu-id="672cf-487">14</span><span class="sxs-lookup"><span data-stu-id="672cf-487">14</span></span>|<span data-ttu-id="672cf-488">l</span><span class="sxs-lookup"><span data-stu-id="672cf-488">l</span></span>|  
|<span data-ttu-id="672cf-489">15</span><span class="sxs-lookup"><span data-stu-id="672cf-489">15</span></span>|<span data-ttu-id="672cf-490">s, z</span><span class="sxs-lookup"><span data-stu-id="672cf-490">s, z</span></span>|  
|<span data-ttu-id="672cf-491">16</span><span class="sxs-lookup"><span data-stu-id="672cf-491">16</span></span>|<span data-ttu-id="672cf-492">SH, CH, жх, zh</span><span class="sxs-lookup"><span data-stu-id="672cf-492">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="672cf-493">17</span><span class="sxs-lookup"><span data-stu-id="672cf-493">17</span></span>|<span data-ttu-id="672cf-494">TH, DH</span><span class="sxs-lookup"><span data-stu-id="672cf-494">th, dh</span></span>|  
|<span data-ttu-id="672cf-495">18</span><span class="sxs-lookup"><span data-stu-id="672cf-495">18</span></span>|<span data-ttu-id="672cf-496">f, v</span><span class="sxs-lookup"><span data-stu-id="672cf-496">f, v</span></span>|  
|<span data-ttu-id="672cf-497">19</span><span class="sxs-lookup"><span data-stu-id="672cf-497">19</span></span>|<span data-ttu-id="672cf-498">d, t, n</span><span class="sxs-lookup"><span data-stu-id="672cf-498">d, t, n</span></span>|  
|<span data-ttu-id="672cf-499">20</span><span class="sxs-lookup"><span data-stu-id="672cf-499">20</span></span>|<span data-ttu-id="672cf-500">k, g, NG</span><span class="sxs-lookup"><span data-stu-id="672cf-500">k, g, ng</span></span>|  
|<span data-ttu-id="672cf-501">21</span><span class="sxs-lookup"><span data-stu-id="672cf-501">21</span></span>|<span data-ttu-id="672cf-502">p, b, m</span><span class="sxs-lookup"><span data-stu-id="672cf-502">p, b, m</span></span>|  
  
 <span data-ttu-id="672cf-503">Дополнительные сведения о данных, связанных с `VisemeReached` событием, <xref:System.Speech.Synthesis.VisemeReachedEventArgs>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="672cf-503">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Voice : System.Speech.Synthesis.VoiceInfo" Usage="System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-504">Получает сведения о текущем голосе объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-504">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="672cf-505">Возвращает сведения о текущем голосе объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-505">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-506">При инициализации нового <xref:System.Speech.Synthesis.SpeechSynthesizer>используется системный Voice по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="672cf-506">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="672cf-507">Чтобы настроить <xref:System.Speech.Synthesis.SpeechSynthesizer> объект для использования одного из установленных голосов синтеза речи, <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> используйте метод или <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> .</span><span class="sxs-lookup"><span data-stu-id="672cf-507">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="672cf-508">Чтобы получить сведения о том, какие голоса установлены, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод <xref:System.Speech.Synthesis.VoiceInfo> и класс.</span><span class="sxs-lookup"><span data-stu-id="672cf-508">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672cf-509">В следующем примере инициализируется экземпляр <xref:System.Speech.Synthesis.SpeechSynthesizer> и получает сведения о текущем голоса.</span><span class="sxs-lookup"><span data-stu-id="672cf-509">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberSignature Language="F#" Value="member this.VoiceChange : EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " Usage="member this.VoiceChange : System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-510">Возникает, когда меняется голос <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-510">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672cf-511">Пример и сведения о данных, связанных с событием, см. <xref:System.Speech.Synthesis.VoiceChangeEventArgs>в разделе.</span><span class="sxs-lookup"><span data-stu-id="672cf-511">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="672cf-512"><xref:System.Speech.Synthesis.SpeechSynthesizer> Можно изменить голосовое значение, используемое с помощью любого <xref:System.Speech.Synthesis.PromptBuilder>из <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> методов или <xref:System.Speech.Synthesis.SpeechSynthesizer> <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> методов.</span><span class="sxs-lookup"><span data-stu-id="672cf-512">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="672cf-513">Получает или задает выходной объем объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="672cf-513">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="672cf-514">Возвращает громкость <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> от 0 до 100.</span><span class="sxs-lookup"><span data-stu-id="672cf-514">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672cf-515">В следующем примере задается громкость <xref:System.Speech.Synthesis.SpeechSynthesizer>звукового выхода для синтезированного голоса и файла WAV.</span><span class="sxs-lookup"><span data-stu-id="672cf-515">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
