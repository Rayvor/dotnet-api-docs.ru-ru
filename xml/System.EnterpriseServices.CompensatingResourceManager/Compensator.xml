<Type Name="Compensator" FullName="System.EnterpriseServices.CompensatingResourceManager.Compensator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e84c5e3ca6d661bb929bf2e81ac9eea241bb092e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70590225" /></Metadata><TypeSignature Language="C#" Value="public class Compensator : System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Compensator extends System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" />
  <TypeSignature Language="VB.NET" Value="Public Class Compensator&#xA;Inherits ServicedComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class Compensator : System::EnterpriseServices::ServicedComponent" />
  <TypeSignature Language="F#" Value="type Compensator = class&#xA;    inherit ServicedComponent" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EnterpriseServices.ServicedComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет базовый класс для всех компенсаторов CRM.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователь должен расширить этот объект, чтобы написать пользовательский компенсатор транзакций.  
  
 У компенсатора всегда должен быть открытый конструктор. в противном случае подсистема восстановления не сможет создать его.  
  
 Дополнительные сведения см. [в разделе инструкции. создание компенсирующих диспетчер ресурсов (CRM)](https://msdn.microsoft.com/library/0a8a024b-0be1-4519-a659-076577278029).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование этого класса.  
  
 [!code-cpp[EnterpriseServices_Crm#20](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#20)]
 [!code-csharp[EnterpriseServices_Crm#20](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#20)]
 [!code-vb[EnterpriseServices_Crm#20](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#20)]  
  
 Этот компенсатор используется следующим классом Worker.  
  
 [!code-cpp[EnterpriseServices_Crm#10](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#10)]
 [!code-csharp[EnterpriseServices_Crm#10](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#10)]
 [!code-vb[EnterpriseServices_Crm#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#10)]  
  
 В следующем примере кода демонстрируется клиент, который выполняет этот компенсатор и рабочую роль.  
  
 [!code-cpp[EnterpriseServices_Crm#30](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmclient.cpp#30)]
 [!code-csharp[EnterpriseServices_Crm#30](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmclient.cs#30)]
 [!code-vb[EnterpriseServices_Crm#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmclient.vb#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Compensator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Compensator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortRecord">
      <MemberSignature Language="C#" Value="public virtual bool AbortRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AbortRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbortRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AbortRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberSignature Language="F#" Value="abstract member AbortRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool&#xA;override this.AbortRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool" Usage="compensator.AbortRecord rec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">Доставляемая запись журнала.</param>
        <summary>Доставляет запись журнала в компенсатор CRM на этапе прерывания.</summary>
        <returns>Значение <see langword="true" />, если доставленную запись следует забыть; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется реализация этого метода.  
  
 [!code-cpp[EnterpriseServices_Crm#28](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#28)]
 [!code-csharp[EnterpriseServices_Crm#28](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#28)]
 [!code-vb[EnterpriseServices_Crm#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAbort">
      <MemberSignature Language="C#" Value="public virtual void BeginAbort (bool fRecovery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAbort(bool fRecovery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginAbort (fRecovery As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAbort(bool fRecovery);" />
      <MemberSignature Language="F#" Value="abstract member BeginAbort : bool -&gt; unit&#xA;override this.BeginAbort : bool -&gt; unit" Usage="compensator.BeginAbort fRecovery" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fRecovery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fRecovery">Принимает значение <see langword="true" /> для начала этапа прерывания, в противном случае — <see langword="false" />.</param>
        <summary>Уведомляет компенсатор CRM об этапе прерывания выполнения транзакции и о планируемой доставке записей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется реализация этого метода.  
  
 [!code-cpp[EnterpriseServices_Crm#27](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#27)]
 [!code-csharp[EnterpriseServices_Crm#27](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#27)]
 [!code-vb[EnterpriseServices_Crm#27](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCommit">
      <MemberSignature Language="C#" Value="public virtual void BeginCommit (bool fRecovery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginCommit(bool fRecovery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginCommit (fRecovery As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginCommit(bool fRecovery);" />
      <MemberSignature Language="F#" Value="abstract member BeginCommit : bool -&gt; unit&#xA;override this.BeginCommit : bool -&gt; unit" Usage="compensator.BeginCommit fRecovery" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fRecovery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fRecovery">Принимает значение <see langword="true" /> для начала этапа фиксирования, в противном случае — <see langword="false" />.</param>
        <summary>Уведомляет компенсатор CRM об этапе фиксирования выполнения транзакции и о планируемой доставке записей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется реализация этого метода.  
  
 [!code-cpp[EnterpriseServices_Crm#24](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#24)]
 [!code-csharp[EnterpriseServices_Crm#24](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#24)]
 [!code-vb[EnterpriseServices_Crm#24](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPrepare">
      <MemberSignature Language="C#" Value="public virtual void BeginPrepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginPrepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginPrepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginPrepare();" />
      <MemberSignature Language="F#" Value="abstract member BeginPrepare : unit -&gt; unit&#xA;override this.BeginPrepare : unit -&gt; unit" Usage="compensator.BeginPrepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Уведомляет компенсатор CRM об этапе подготовки выполнения транзакции и о планируемой доставке записей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется реализация этого метода.  
  
 [!code-cpp[EnterpriseServices_Crm#21](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#21)]
 [!code-csharp[EnterpriseServices_Crm#21](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#21)]
 [!code-vb[EnterpriseServices_Crm#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clerk">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clerk As Clerk" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::CompensatingResourceManager::Clerk ^ Clerk { System::EnterpriseServices::CompensatingResourceManager::Clerk ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clerk : System.EnterpriseServices.CompensatingResourceManager.Clerk" Usage="System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.CompensatingResourceManager.Clerk</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, предоставляющее объект <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> диспетчера CRM.</summary>
        <value>Объект <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitRecord">
      <MemberSignature Language="C#" Value="public virtual bool CommitRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommitRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CommitRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberSignature Language="F#" Value="abstract member CommitRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool&#xA;override this.CommitRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool" Usage="compensator.CommitRecord rec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">Пересылаемая запись журнала.</param>
        <summary>Срочно доставляет запись журнала на этапе фиксирования.</summary>
        <returns>Значение <see langword="true" />, если доставленную запись следует забыть; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется реализация этого метода.  
  
 [!code-cpp[EnterpriseServices_Crm#25](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#25)]
 [!code-csharp[EnterpriseServices_Crm#25](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#25)]
 [!code-vb[EnterpriseServices_Crm#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAbort">
      <MemberSignature Language="C#" Value="public virtual void EndAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAbort();" />
      <MemberSignature Language="F#" Value="abstract member EndAbort : unit -&gt; unit&#xA;override this.EndAbort : unit -&gt; unit" Usage="compensator.EndAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Уведомляет компенсатор CRM о получении всех записей журнала, доступных на этапе прерывания.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется реализация этого метода.  
  
 [!code-cpp[EnterpriseServices_Crm#29](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#29)]
 [!code-csharp[EnterpriseServices_Crm#29](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#29)]
 [!code-vb[EnterpriseServices_Crm#29](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCommit">
      <MemberSignature Language="C#" Value="public virtual void EndCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndCommit();" />
      <MemberSignature Language="F#" Value="abstract member EndCommit : unit -&gt; unit&#xA;override this.EndCommit : unit -&gt; unit" Usage="compensator.EndCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Уведомляет компенсатор CRM о доставке всех записей журнала, доступных на этапе фиксирования.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется реализация этого метода.  
  
 [!code-cpp[EnterpriseServices_Crm#26](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#26)]
 [!code-csharp[EnterpriseServices_Crm#26](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#26)]
 [!code-vb[EnterpriseServices_Crm#26](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPrepare">
      <MemberSignature Language="C#" Value="public virtual bool EndPrepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndPrepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndPrepare () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndPrepare();" />
      <MemberSignature Language="F#" Value="abstract member EndPrepare : unit -&gt; bool&#xA;override this.EndPrepare : unit -&gt; bool" Usage="compensator.EndPrepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Уведомляет компенсатор CRM о получении им всех записей журнала, доступных на этапе подготовки.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется реализация этого метода.  
  
 [!code-cpp[EnterpriseServices_Crm#23](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#23)]
 [!code-csharp[EnterpriseServices_Crm#23](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#23)]
 [!code-vb[EnterpriseServices_Crm#23](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareRecord">
      <MemberSignature Language="C#" Value="public virtual bool PrepareRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrepareRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrepareRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PrepareRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberSignature Language="F#" Value="abstract member PrepareRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool&#xA;override this.PrepareRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool" Usage="compensator.PrepareRecord rec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">Пересылаемая запись журнала.</param>
        <summary>Срочно доставляет запись журнала на этапе подготовки.</summary>
        <returns>Значение <see langword="true" />, если доставленную запись следует забыть; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется реализация этого метода.  
  
 [!code-cpp[EnterpriseServices_Crm#22](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#22)]
 [!code-csharp[EnterpriseServices_Crm#22](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#22)]
 [!code-vb[EnterpriseServices_Crm#22](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
