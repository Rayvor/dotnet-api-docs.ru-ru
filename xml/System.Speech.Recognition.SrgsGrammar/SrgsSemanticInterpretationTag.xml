<Type Name="SrgsSemanticInterpretationTag" FullName="System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d4a73edc047879a5478587d46c231e01b7d17a2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69231383" /></Metadata><TypeSignature Language="C#" Value="public class SrgsSemanticInterpretationTag : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsSemanticInterpretationTag extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsSemanticInterpretationTag&#xA;Inherits SrgsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsSemanticInterpretationTag : System::Speech::Recognition::SrgsGrammar::SrgsElement" />
  <TypeSignature Language="F#" Value="type SrgsSemanticInterpretationTag = class&#xA;    inherit SrgsElement" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="84ec6-101">Представляет тег, содержащий <see href="https://www.ecma-international.org/publications/standards/Ecma-327.htm">ECMAScript</see>, который запускается при сопоставлении правила.</span><span class="sxs-lookup"><span data-stu-id="84ec6-101">Represents a tag that contains <see href="https://www.ecma-international.org/publications/standards/Ecma-327.htm">ECMAScript</see> that is run when the rule is matched.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84ec6-102">Семантический формат по умолчанию для System. Speech соответствует семантической интерпретации W3C [для распознавания речи (СИСР) версии 1,0](https://go.microsoft.com/fwlink/?LinkId=201765), где для `tag` элементов, содержащих скрипт, используется `semantics/1.0`формат.</span><span class="sxs-lookup"><span data-stu-id="84ec6-102">The default semantic format for System.Speech conforms to the W3C [Semantic Interpretation for Speech Recognition (SISR) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201765), where the format for `tag` elements that contain script is `semantics/1.0`.</span></span> <span data-ttu-id="84ec6-103">Необходимо указать скрипт для <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> объектов, использующих этот формат.</span><span class="sxs-lookup"><span data-stu-id="84ec6-103">You must specify the script for <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> objects using this format.</span></span> <span data-ttu-id="84ec6-104">В синтаксисе `semantics/1.0`:</span><span class="sxs-lookup"><span data-stu-id="84ec6-104">In the syntax of `semantics/1.0`:</span></span>  
  
-   <span data-ttu-id="84ec6-105">Переменная правила содержащего его элемента идентифицируется по «out».</span><span class="sxs-lookup"><span data-stu-id="84ec6-105">The Rule Variable of the containing rule element is identified by "out".</span></span>  
  
-   <span data-ttu-id="84ec6-106">Имя объекта, имеющего доступ к переменной правила элементов правила за пределами содержащего его элемента Rule, определяется «Rules».</span><span class="sxs-lookup"><span data-stu-id="84ec6-106">The name of the object that has access to the Rule Variable of rule elements outside the containing rule element is identified by "rules".</span></span>  
  
-   <span data-ttu-id="84ec6-107">Результат последнего упоминаемого правила, соответствующего utterance, можно представить с помощью "Rules. Latest ()".</span><span class="sxs-lookup"><span data-stu-id="84ec6-107">The result from the latest referenced rule that matches the utterance can be represented by "rules.latest()".</span></span>  
  
 <span data-ttu-id="84ec6-108">Можно также связать семантическое значение с фразой в грамматике без использования скрипта с помощью <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> объекта.</span><span class="sxs-lookup"><span data-stu-id="84ec6-108">You can also associate a semantic value with a phrase in a grammar without using script, using the <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84ec6-109">В следующем примере создается грамматика для выбора городов для рейса.</span><span class="sxs-lookup"><span data-stu-id="84ec6-109">The following example creates a grammar for choosing the cities for a flight.</span></span> <span data-ttu-id="84ec6-110">В примере используется <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> для назначения семантического значения каждому городу, которое является кодом для аэропорта в городе.</span><span class="sxs-lookup"><span data-stu-id="84ec6-110">The example uses <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> to assign a semantic value to each city, which is the code for the city's airport.</span></span> <span data-ttu-id="84ec6-111">В примере также используется <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> для назначения отдельного семантического ключа для каждой из двух ссылок <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> , сделанных объектом, с `cityRef` именем в <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объект с `cities`именем.</span><span class="sxs-lookup"><span data-stu-id="84ec6-111">The example also uses <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> to assign a separate semantic key for each of the two references made by the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> object named `cityRef` to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object named `cities`.</span></span> <span data-ttu-id="84ec6-112">Семантические ключи определяют распознаваемый город как город отъезда или город прибытия для рейса.</span><span class="sxs-lookup"><span data-stu-id="84ec6-112">The semantic keys identify a recognized city as the departure city or the arrival city for the flight.</span></span> <span data-ttu-id="84ec6-113">Обработчик <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> события использует ключи для получения семантики из результата распознавания.</span><span class="sxs-lookup"><span data-stu-id="84ec6-113">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the keys to retrieve the semantics from the recognition result.</span></span>  
  
 <span data-ttu-id="84ec6-114">В примере кода «out» относится к переменной правила содержащего <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>.</span><span class="sxs-lookup"><span data-stu-id="84ec6-114">In the code example, "out" refers to the Rule Variable of the containing <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>.</span></span> <span data-ttu-id="84ec6-115">Выражение «out. Леавингфром "ссылается на свойство с именем `LeavingFrom` переменной правила в правиле с именем. `bookFlight`</span><span class="sxs-lookup"><span data-stu-id="84ec6-115">The expression "out.LeavingFrom" refers to the property named `LeavingFrom` of the Rule Variable on the rule named `bookFlight`.</span></span>  
  
 <span data-ttu-id="84ec6-116">Выражение "Rules. флигхтЦитиес" относится к переменной правила в правиле <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> , где имеет `flightCities`значение, а это цель ссылки на правило.</span><span class="sxs-lookup"><span data-stu-id="84ec6-116">The expression "rules.flightCities" refers to the Rule Variable on the rule whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> is `flightCities`, and which is the target of a rule reference.</span></span> <span data-ttu-id="84ec6-117">В примере выражение «out. Леавингфром = <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> Rules. флигхтЦитиес; "назначает значение из правила, которое является `flightCities` свойством с именем `LeavingFrom` переменной правила в правиле с именем `bookFlight`.</span><span class="sxs-lookup"><span data-stu-id="84ec6-117">In the example, the expression "out.LeavingFrom=rules.flightCities;" assigns the value from the rule whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> is `flightCities` to the property named `LeavingFrom` of the Rule Variable on the rule named `bookFlight`.</span></span> <span data-ttu-id="84ec6-118">Дополнительные сведения см. в разделе [содержимое семантических результатов](https://msdn.microsoft.com/library/622291af-615c-4a15-9014-2933aa3f89fe), ссылки на [имя правила грамматики](https://msdn.microsoft.com/library/0777e975-8665-4cc3-957b-752743cb1bb9)и [ссылки на правила грамматики](https://msdn.microsoft.com/library/dec3a809-9aa2-4139-893f-3a549ca1e03e) .</span><span class="sxs-lookup"><span data-stu-id="84ec6-118">See [Semantic Results Content](https://msdn.microsoft.com/library/622291af-615c-4a15-9014-2933aa3f89fe), [Grammar Rule Name Referencing](https://msdn.microsoft.com/library/0777e975-8665-4cc3-957b-752743cb1bb9), and [Grammar Rule Reference Referencing](https://msdn.microsoft.com/library/dec3a809-9aa2-4139-893f-3a549ca1e03e) for more information.</span></span>  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize a SpeechRecognitionEngine object.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Create a rule for the cities, assign a semantic value to each city.  
        SrgsRule cities = new SrgsRule("flightCities");  
        SrgsItem chi = new SrgsItem("Chicago");  
        chi.Add(new SrgsSemanticInterpretationTag("out = \"ORD\";"));  
        SrgsItem bos = new SrgsItem("Boston");  
        bos.Add(new SrgsSemanticInterpretationTag("out = \"BOS\";"));  
        SrgsItem mia = new SrgsItem("Miami");  
        mia.Add(new SrgsSemanticInterpretationTag("out = \"MIA\";"));  
        SrgsItem dal = new SrgsItem("Dallas");  
        dal.Add(new SrgsSemanticInterpretationTag("out = \"DFW\";"));  
  
        SrgsOneOf airports = new SrgsOneOf(chi, bos, mia, dal);  
        cities.Add(airports);  
        cities.Scope = SrgsRuleScope.Private;  
  
        // Create a rule reference to the rule for cities.  
        SrgsRuleRef cityRef = new SrgsRuleRef(cities);  
  
        // Create the root rule for the grammar.  
        SrgsRule bookFlight = new SrgsRule("flightBooker");  
        bookFlight.Add(new SrgsItem("I want to fly from"));  
        bookFlight.Add(cityRef);  
        bookFlight.Add(new SrgsSemanticInterpretationTag("out.LeavingFrom=rules.flightCities;"));  
        bookFlight.Add(new SrgsItem("to"));  
        bookFlight.Add(cityRef);  
        bookFlight.Add(new SrgsSemanticInterpretationTag("out.GoingTo=rules.flightCities;"));  
        bookFlight.Scope = SrgsRuleScope.Public;  
  
        // Initialize the SrgsDocument, set the root rule, add rules to the collection.  
        SrgsDocument itinerary = new SrgsDocument(bookFlight);  
        itinerary.Rules.Add(cities);  
  
        // Create a Grammar object and load it to the recognizer.  
        Grammar g = new Grammar(itinerary);  
        g.Name = ("City Chooser");  
        recognizer.LoadGrammarAsync(g);  
  
        // Configure recognizer input.                  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=  
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Write to the console the text and the semantics from the recognition result.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized: " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The departure city is: " + e.Result.Semantics["LeavingFrom"].Value);  
      Console.WriteLine("  The arrival city is: " + e.Result.Semantics["GoingTo"].Value);  
    }  
  }  
}  
  
```  
  
 <span data-ttu-id="84ec6-119">Ниже приведена XML-форма грамматики, созданной кодом из приведенного выше примера.</span><span class="sxs-lookup"><span data-stu-id="84ec6-119">The following is the XML form of the grammar generated by the code in the example above.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<grammar xml:lang="en-US" root="flightBooker" tag-format="semantics/1.0"   
version="1.0" xmlns="http://www.w3.org/2001/06/grammar">  
  
  <rule id="flightBooker" scope="public">  
    <item> I want to fly from </item>  
    <ruleref uri="#flightCities" />   
    <tag> out.LeavingFrom=rules.flightCities; </tag>  
    <item> to </item>  
    <ruleref uri="#flightCities" />   
    <tag> out.GoingTo=rules.flightCities; </tag>  
  </rule>  
  
  <rule id="flightCities" scope="private">  
    <one-of>  
      <item> Chicago <tag> out="ORD"; </tag></item>  
      <item> Boston <tag> out="BOS"; </tag></item>  
      <item> Miami <tag> out="MIA"; </tag></item>  
      <item> Dallas <tag> out="DFW"; </tag></item>  
    </one-of>  
  </rule>  
  
</grammar>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84ec6-120">Создает экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" />.</span><span class="sxs-lookup"><span data-stu-id="84ec6-120">Creates an instance of the <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsSemanticInterpretationTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsSemanticInterpretationTag();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84ec6-121">Создает экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" />.</span><span class="sxs-lookup"><span data-stu-id="84ec6-121">Creates an instance of the <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84ec6-122">Этот конструктор создает тег семантической интерпретации <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A> , свойство которого содержит пустую строку.</span><span class="sxs-lookup"><span data-stu-id="84ec6-122">This constructor creates a semantic interpretation tag whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A> property contains an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsSemanticInterpretationTag (string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsSemanticInterpretationTag(System::String ^ script);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag : string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag script" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="script"><span data-ttu-id="84ec6-123">Строка, содержащая [ECMAScript](https://www.ecma-international.org/publications/standards/Ecma-327.htm) для тега.</span><span class="sxs-lookup"><span data-stu-id="84ec6-123">A string that contains the [ECMAScript](https://www.ecma-international.org/publications/standards/Ecma-327.htm) for the tag.</span></span></param>
        <summary><span data-ttu-id="84ec6-124">Создает экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" />, указывая содержимое скрипта тега.</span><span class="sxs-lookup"><span data-stu-id="84ec6-124">Creates an instance of the <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" /> class, specifying the script contents of the tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84ec6-125">Этот конструктор создает тег семантической интерпретации <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A> , свойство которого установлено в `script`значение.</span><span class="sxs-lookup"><span data-stu-id="84ec6-125">This constructor creates a semantic interpretation tag whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A> property is set to the value in `script`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84ec6-126">Свойство <paramref name="script" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84ec6-126"><paramref name="script" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public string Script { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Script" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script" />
      <MemberSignature Language="VB.NET" Value="Public Property Script As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Script { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Script : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84ec6-127">Возвращает или задает <see href="https://www.ecma-international.org/publications/standards/Ecma-327.htm">ECMAScript</see> для тега.</span><span class="sxs-lookup"><span data-stu-id="84ec6-127">Gets or sets the <see href="https://www.ecma-international.org/publications/standards/Ecma-327.htm">ECMAScript</see> for the tag.</span></span></summary>
        <value><span data-ttu-id="84ec6-128">Строка, содержащая семантический скрипт интерпретации для тега.</span><span class="sxs-lookup"><span data-stu-id="84ec6-128">A string that contains the semantic interpretation script for the tag.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84ec6-129">Предпринимается попытка присвоить параметру **Script** значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84ec6-129">An attempt is made to set **Script** to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
