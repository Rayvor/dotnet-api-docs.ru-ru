<Type Name="SrgsRuleRef" FullName="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bfcfe0c575662a22f67274fce38aa1c8c26b66ee" /><Meta Name="ms.sourcegitcommit" Value="bfce49b3a0c0685f994313d2e44a7c70def1694a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/05/2019" /><Meta Name="ms.locfileid" Value="66690879" /></Metadata><TypeSignature Language="C#" Value="public class SrgsRuleRef : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsRuleRef extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsRuleRef&#xA;Inherits SrgsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsRuleRef : System::Speech::Recognition::SrgsGrammar::SrgsElement" />
  <TypeSignature Language="F#" Value="type SrgsRuleRef = class&#xA;    inherit SrgsElement" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет элемент грамматики, указывающий ссылку на правила.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> Класс особенно полезна, если вы хотите повторно использовать <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> элемент, содержимое которого уже были определены. Путем повторного использования существующих правил, можно более быстро создавать сложные грамматики.  
  
 Можно использовать один из конструкторов <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> класса к ссылке <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объекта или `rule` элемент, если действует следующее правило:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Объект находится в содержащей грамматики и значение его <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A> свойство <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Public> или <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Private>.  
  
-   `rule` Элемент находится в внешней грамматики и значение его `scope` атрибут `public`.  
  
-   `rule` Элемент находится в внешней грамматики, значение его `scope` атрибут `private`, и она объявлена как `root rule` из внешней грамматики.  
  
 Этот класс представляет `ruleref` элемент, определенный в World Wide Web Consortium (W3C) [спецификации грамматики распознавания речи (SRGS) версии 1.0](https://go.microsoft.com/fwlink/?LinkId=201761). Сведения о SRGS `ruleref` элемент, а также сведения о поддержке по System.Speech, см. в разделе [ruleref элемент](https://msdn.microsoft.com/library/56eb0031-4908-4788-83ab-7c5e19aa4ac0).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Создавать грамматики, с помощью SrgsGrammar</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (System.Speech.Recognition.SrgsGrammar.SrgsRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rule As SrgsRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(System::Speech::Recognition::SrgsGrammar::SrgsRule ^ rule);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : System.Speech.Recognition.SrgsGrammar.SrgsRule -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef rule" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rule" Type="System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект для ссылки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> и указывает правило для ссылки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает ссылку на правило для <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объект внутри содержащей грамматики. Чтобы создать ссылку на правило для `rule` элемент в файле внешней грамматики, использовать любой из следующих конструкторов:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29>  
  
   
  
## Examples  
 В следующем примере создается грамматику, которая распознает фразу «страны, который выиграл мира по футболу» следуют страны, который выиграл мира по футболу. После создания <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объект `winnerRule` и указав его идентификатор строки `WorldCupWinner`, пример добавляет строку «страны, который выиграл мира по футболу —» для правила. С помощью <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> объектов, затем создает список стран и регионов и список стран, Южной Америки и добавляет его соответствующее правило, каждый список `ruleEurope` или `ruleSAmerica`. Затем пример создает ссылок на правила для `ruleEurope` и `ruleSAmerica` и добавляет их в `WorldCupWinner` правило.  
  
```  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 Созданный грамматики имеет следующий вид.  
  
```  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England </item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> — <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Создавать грамматики, с помощью SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : Uri -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Расположение файла грамматики за пределами содержащей грамматики.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> и задает расположение внешнего файла грамматики, на который можно сослаться.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает ссылку на правило для внешнего файла грамматики. URI может также включать идентификатор правила для ссылки, например `http://www.contoso.com/ExternalGrammar.grxml#targetRule`.  Если `uri` не указывает идентификатор правила, правила ссылка указывает на корневое правило грамматики целевой объект. Чтобы создать ссылку на правило для <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объекта в пределах одной грамматики, использовать любой из следующих конструкторов:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
   
  
## Examples  
 В следующем примере создается грамматику для приложения, которое возвращает сведения о service bus списка выбора. Первый метод, `GrammarUrlForRoute`, принимает строку, которая указывает маршрут и добавляет его в строку, указав расположение грамматику. Это указывает конкретное правило в этом грамматики. Этот метод возвращает `Uri` для этого правила.  
  
 Второй метод, `CreateGrammarForRoute`, создает <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> элемент с именем `grammar` со ссылкой на правила, заданные `Uri` переданного ему по `GrammarUrlForRoute`. Обратите внимание на то, что переменная с именем _route является членом внешнего класса.  
  
```  
private Uri GrammarUrlForRoute(string route)  
{  
  return new Uri("http://localhost/MyBus/MyBusLocations.grxml#LocationsForRoute" + route);  
}  
  
private SrgsDocument CreateGrammarForRoute()  
{  
  SrgsDocument grammar = new SrgsDocument();  
  grammar.Mode = SrgsGrammarMode.Voice;  
  SrgsRule rule = new SrgsRule("LocationsForRoute" + _route);  
  SrgsRuleRef ruleref = new SrgsRuleRef(GrammarUrlForRoute(_route));  
  
  SrgsSemanticInterpretationTag tag = new SrgsSemanticInterpretationTag ("$.Location = $$");  
  
  rule.Elements.Add(ruleref);  
  rule.Elements.Add(tag);  
  grammar.Rules.Add(rule);  
  grammar.Root = rule;  
  return grammar;  
}  
```  
  
> [!NOTE]
>  Переменная с именем _`route` необъявленный и определено в предыдущем примере. Он должен быть объявлен как <xref:System.String> и содержать число маршрутов для маршрута шины прежде, чем в предыдущем примере компилируется и выполняется.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uri" /> — <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Создавать грамматики, с помощью SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (System.Speech.Recognition.SrgsGrammar.SrgsRule rule, string semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsRule rule, string semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rule As SrgsRule, semanticKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(System::Speech::Recognition::SrgsGrammar::SrgsRule ^ rule, System::String ^ semanticKey);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : System.Speech.Recognition.SrgsGrammar.SrgsRule * string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef (rule, semanticKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rule" Type="System.Speech.Recognition.SrgsGrammar.SrgsRule" />
        <Parameter Name="semanticKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rule">Объект для ссылки.</param>
        <param name="semanticKey">Семантический ключ.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> определяя правило, на которое необходимо создать ссылку, и строку, содержащую семантический ключ.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает ссылку на правило для <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объект внутри содержащей грамматики. Чтобы создать ссылку на правило для `rule` элемент в файле внешней грамматики, использовать любой из следующих конструкторов:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29>  
  
   
  
## Examples  
 В следующем примере создается грамматику для выбора городов рейса. В примере создается два <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> экземпляры, каждый из которых задает семантический ключ. Как правило, ссылки ориентироваться на одну версию <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объект, с именем `cities`, но Пометка результата распознавания находится из ссылки на правило с помощью различных семантический ключ. Семантический ключ идентифицирует распознанных city как города отправления "или" Город прибытия на самолет. Обработчик <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> событие использует ключи для получения значений семантику, созданных с помощью <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.%23ctor%2A> с результатом распознавания.  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize a SpeechRecognitionEngine object.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Build a rule with a list of cities, assign a semantic value to each city.  
        SrgsItem chi = new SrgsItem("Chicago");  
        chi.Add(new SrgsNameValueTag("ORD"));  
        SrgsItem bos = new SrgsItem("Boston");  
        bos.Add(new SrgsNameValueTag("BOS"));  
        SrgsItem mia = new SrgsItem("Miami");  
        mia.Add(new SrgsNameValueTag("MIA"));  
        SrgsItem dal = new SrgsItem("Dallas");  
        dal.Add(new SrgsNameValueTag("DFW"));  
  
        SrgsOneOf cities = new SrgsOneOf(new SrgsItem[] { chi, bos, mia, dal });  
        SrgsRule citiesRule = new SrgsRule("flightCities");  
        citiesRule.Add(cities);  
  
        // Build the root rule, add rule references to the cities rule.  
        SrgsRule flightBooker = new SrgsRule("bookFlight");  
        flightBooker.Add(new SrgsItem("I want to fly from"));  
        flightBooker.Add(new SrgsRuleRef(citiesRule, "departureCity"));  
        flightBooker.Add(new SrgsItem("to"));  
        flightBooker.Add(new SrgsRuleRef(citiesRule, "arrivalCity"));  
  
        // Build an SrgsDocument object from the flightBooker rule and add the cities rule.  
        SrgsDocument cityChooser = new SrgsDocument(flightBooker);  
        cityChooser.Rules.Add(citiesRule);  
  
        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  
        Grammar departArrive = new Grammar(cityChooser);  
        departArrive.Name = ("Cities Grammar");  
        recognizer.LoadGrammarAsync(departArrive);  
  
        // Configure recognizer input.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=  
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start asynchronous recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized: " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The departure city is: " + e.Result.Semantics["departureCity"].Value);  
      Console.WriteLine("  The destination city is: " + e.Result.Semantics["arrivalCity"].Value);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Создавать грамматики, с помощью SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (Uri uri, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(Uri ^ uri, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : Uri * string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef (uri, rule)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Расположение файла грамматики за пределами содержащей грамматики.</param>
        <param name="rule">Идентификатор правила, на которое существует ссылки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />, указывая расположение внешнего файла грамматики и идентификатор правила, на которые можно сослаться.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает ссылку на правило для `rule` элемент в файле внешней грамматики. Чтобы создать ссылку на правило для <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объекта в пределах одной грамматики, использовать любой из следующих конструкторов:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uri" /> — <see langword="null" />.  
  
 <paramref name="rule" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="rule" /> пуст.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Создавать грамматики, с помощью SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (System.Speech.Recognition.SrgsGrammar.SrgsRule rule, string semanticKey, string parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsRule rule, string semanticKey, string parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rule As SrgsRule, semanticKey As String, parameters As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(System::Speech::Recognition::SrgsGrammar::SrgsRule ^ rule, System::String ^ semanticKey, System::String ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : System.Speech.Recognition.SrgsGrammar.SrgsRule * string * string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef (rule, semanticKey, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rule" Type="System.Speech.Recognition.SrgsGrammar.SrgsRule" />
        <Parameter Name="semanticKey" Type="System.String" />
        <Parameter Name="parameters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rule">Объект для ссылки.</param>
        <param name="semanticKey">Семантический ключ.</param>
        <param name="parameters">Параметры инициализации для объекта <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />, указывая правило, на которое можно сослаться, псевдоним строки семантического словаря и параметры инициализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает ссылку на правило для <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объект внутри содержащей грамматики. Чтобы создать ссылку на правило для `rule` элемент в файле внешней грамматики, использовать любой из следующих конструкторов:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Создавать грамматики, с помощью SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (Uri uri, string rule, string semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string rule, string semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(Uri ^ uri, System::String ^ rule, System::String ^ semanticKey);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : Uri * string * string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef (uri, rule, semanticKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="rule" Type="System.String" />
        <Parameter Name="semanticKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Расположение файла грамматики за пределами содержащей грамматики.</param>
        <param name="rule">Идентификатор правила, на которое существует ссылки.</param>
        <param name="semanticKey">Строка псевдонима для смыслового словаря.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />, указывая расположение внешнего файла грамматики и идентификатор правила, а также псевдоним строки семантического словаря.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает ссылку на правило для `rule` элемент в файле внешней грамматики. Чтобы создать ссылку на правило для <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объекта в пределах одной грамматики, использовать любой из следующих конструкторов:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uri" /> — <see langword="null" />.  
  
 <paramref name="semanticKey" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="semanticKey" /> пуст.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Создавать грамматики, с помощью SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (Uri uri, string rule, string semanticKey, string parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string rule, string semanticKey, string parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(Uri ^ uri, System::String ^ rule, System::String ^ semanticKey, System::String ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : Uri * string * string * string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef (uri, rule, semanticKey, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="rule" Type="System.String" />
        <Parameter Name="semanticKey" Type="System.String" />
        <Parameter Name="parameters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Расположение файла грамматики за пределами содержащей грамматики.</param>
        <param name="rule">Идентификатор правила, на которое существует ссылки.</param>
        <param name="semanticKey">Семантический ключ.</param>
        <param name="parameters">Параметры инициализации для объекта <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />, указывая местоположение внешнего файла грамматики, идентификатор правила, псевдоним строки смыслового словаря и параметры инициализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает ссылку на правило для `rule` элемент в файле внешней грамматики. Чтобы создать ссылку на правило для <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> объекта в пределах одной грамматики, использовать любой из следующих конструкторов:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Создавать грамматики, с помощью SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName="Dictation">
      <MemberSignature Language="C#" Value="public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Dictation;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Dictation" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Dictation As SrgsRuleRef " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Speech::Recognition::SrgsGrammar::SrgsRuleRef ^ Dictation;" />
      <MemberSignature Language="F#" Value=" staticval mutable Dictation : System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет правило, которое может соответствовать вводу речи, как определено в разделе диктовки, связанном с данной грамматикой.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Garbage">
      <MemberSignature Language="C#" Value="public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Garbage;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Garbage" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Garbage As SrgsRuleRef " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Speech::Recognition::SrgsGrammar::SrgsRuleRef ^ Garbage;" />
      <MemberSignature Language="F#" Value=" staticval mutable Garbage : System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет правило, которое может соответствовать любой речи до следующего совпадения правила, следующего токена, либо до конца ввода речи.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MnemonicSpelling">
      <MemberSignature Language="C#" Value="public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef MnemonicSpelling;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Speech.Recognition.SrgsGrammar.SrgsRuleRef MnemonicSpelling" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MnemonicSpelling As SrgsRuleRef " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Speech::Recognition::SrgsGrammar::SrgsRuleRef ^ MnemonicSpelling;" />
      <MemberSignature Language="F#" Value=" staticval mutable MnemonicSpelling : System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, что речевой ввод может содержать произнесенные по буквам слова и что в этом случае произносимые буквы следует расценивать как целое слово.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Null" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As SrgsRuleRef " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Speech::Recognition::SrgsGrammar::SrgsRuleRef ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет правило, которое автоматически сопоставляется при отсутствии ввода какого-либо аудиосигнала.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public string Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Params" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Params { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : string" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает параметры инициализации для элемента <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />.</summary>
        <value>Параметры инициализации для элемента <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SemanticKey">
      <MemberSignature Language="C#" Value="public string SemanticKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SemanticKey" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SemanticKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SemanticKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SemanticKey : string" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку псевдонима для смыслового словаря.</summary>
        <value>Строка псевдонима для смыслового словаря.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает URI для правила, на которое ссылается данный элемент <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />.</summary>
        <value>Расположение правила, на которое указывает ссылка.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Void">
      <MemberSignature Language="C#" Value="public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Void;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Void" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Void As SrgsRuleRef " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Speech::Recognition::SrgsGrammar::SrgsRuleRef ^ Void;" />
      <MemberSignature Language="F#" Value=" staticval mutable Void : System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет правило, которое нельзя проговаривать. Вставка VOID в последовательность автоматически делает ее непроизносимой.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>