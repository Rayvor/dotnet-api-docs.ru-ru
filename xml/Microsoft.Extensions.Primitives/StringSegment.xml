<Type Name="StringSegment" FullName="Microsoft.Extensions.Primitives.StringSegment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6aae866b64cc6e86bfb5021975a80e5c12a5caa" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72410056" /></Metadata><TypeSignature Language="C#" Value="public struct StringSegment : IEquatable&lt;Microsoft.Extensions.Primitives.StringSegment&gt;, IEquatable&lt;string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit StringSegment extends System.ValueType implements class System.IEquatable`1&lt;string&gt;, class System.IEquatable`1&lt;valuetype Microsoft.Extensions.Primitives.StringSegment&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Primitives.StringSegment" />
  <TypeSignature Language="VB.NET" Value="Public Structure StringSegment&#xA;Implements IEquatable(Of String), IEquatable(Of StringSegment)" />
  <TypeSignature Language="C++ CLI" Value="public value class StringSegment : IEquatable&lt;Microsoft::Extensions::Primitives::StringSegment&gt;, IEquatable&lt;System::String ^&gt;" />
  <TypeSignature Language="F#" Value="type StringSegment = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Extensions.Primitives.StringSegment&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.String&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Оптимизированное представление подстроки.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringSegment (string buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringSegment(System::String ^ buffer);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Primitives.StringSegment : string -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="new Microsoft.Extensions.Primitives.StringSegment buffer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buffer">Исходный объект <see cref="T:System.String" />. <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> включает в себя весь <see cref="T:System.String" />.</param>
        <summary>Инициализирует экземпляр структуры <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringSegment (string buffer, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string buffer, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As String, offset As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringSegment(System::String ^ buffer, int offset, int length);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Primitives.StringSegment : string * int * int -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="new Microsoft.Extensions.Primitives.StringSegment (buffer, offset, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Исходный <see cref="T:System.String" />, используемый в качестве буфера.</param>
        <param name="offset">Смещение сегмента внутри <paramref name="buffer" />.</param>
        <param name="length">Длина сегмента.</param>
        <summary>Инициализирует экземпляр структуры <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> имеет значение <code>null</code>.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="offset" /> или <paramref name="length" /> меньше нуля либо значение <paramref name="offset" /> +
            <paramref name="length" /> больше числа знаков в <paramref name="buffer" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsMemory">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;char&gt; AsMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;char&gt; AsMemory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.AsMemory" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMemory () As ReadOnlyMemory(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory&lt;char&gt; AsMemory();" />
      <MemberSignature Language="F#" Value="member this.AsMemory : unit -&gt; ReadOnlyMemory&lt;char&gt;" Usage="stringSegment.AsMemory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает <see cref="T:System.ReadOnlyMemory`1" /> из текущего <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <returns><see cref="T:System.ReadOnlyMemory`1" /> из этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsSpan">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;char&gt; AsSpan ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlySpan`1&lt;char&gt; AsSpan() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.AsSpan" />
      <MemberSignature Language="VB.NET" Value="Public Function AsSpan () As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan&lt;char&gt; AsSpan();" />
      <MemberSignature Language="F#" Value="member this.AsSpan : unit -&gt; ReadOnlySpan&lt;char&gt;" Usage="stringSegment.AsSpan " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает <see cref="T:System.ReadOnlySpan`1" /> из текущего <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <returns><see cref="T:System.ReadOnlySpan`1" /> из этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public string Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Buffer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Buffer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : string" Usage="Microsoft.Extensions.Primitives.StringSegment.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает буфер <see cref="T:System.String" /> для этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (Microsoft.Extensions.Primitives.StringSegment a, Microsoft.Extensions.Primitives.StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype Microsoft.Extensions.Primitives.StringSegment a, valuetype Microsoft.Extensions.Primitives.StringSegment b, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Compare(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As StringSegment, b As StringSegment, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(Microsoft::Extensions::Primitives::StringSegment a, Microsoft::Extensions::Primitives::StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Compare : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment * StringComparison -&gt; int" Usage="Microsoft.Extensions.Primitives.StringSegment.Compare (a, b, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="b" Type="Microsoft.Extensions.Primitives.StringSegment" Index="1" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="a">Первый экземпляр <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> для сравнения.</param>
        <param name="b">Второй экземпляр <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> для сравнения.</param>
        <param name="comparisonType">Одно из значений перечисления, определяющее правила сравнения.</param>
        <summary>Сравнивает подстроки двух указанных объектов <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> с использованием заданных правил и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.
Значение является отрицательным, если <paramref name="a" /> меньше <paramref name="b" />, нулевым, если два сравниваемых значения равны, и положительным, если <paramref name="a" /> больше <paramref name="b" />.
.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Extensions.Primitives.StringSegment Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Microsoft.Extensions.Primitives.StringSegment Empty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Extensions.Primitives.StringSegment.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As StringSegment " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Extensions::Primitives::StringSegment Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Extensions.Primitives.StringSegment.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> для <see cref="F:System.String.Empty" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string text, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string text, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.EndsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (text As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ text, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string * StringComparison -&gt; bool" Usage="stringSegment.EndsWith (text, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="text">Объект <see cref="T:System.String" /> для сравнения.</param>
        <param name="comparisonType">Одно из значений перечисления, определяющее используемые при сравнении правила.</param>
        <summary>Проверяет, совпадает ли конец <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> с заданным <see cref="T:System.String" /> при сравнении с учетом заданного <paramref name="comparisonType" />.</summary>
        <returns><code>true</code> если <paramref name="text" /> соответствует концу этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; в противном случае — <code>false</code>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> имеет значение <code>null</code>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Extensions.Primitives.StringSegment other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.Extensions.Primitives.StringSegment other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::Extensions::Primitives::StringSegment other);" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="stringSegment.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="other">Объект, который требуется сравнить с данным объектом.</param>
        <summary>Указывает, эквивалентен ли текущий объект другому объекту того же типа.</summary>
        <returns><code>true</code> если текущий объект равен другому параметру; в противном случае — <code>false</code>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringSegment.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.Equals : string -&gt; bool" Usage="stringSegment.Equals text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Объект <see cref="T:System.String" />, с которым сравнивается текущий объект <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
        <summary>Проверяет, равен ли указанный <see cref="T:System.String" /> текущему <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <returns><code>true</code> если указанный <see cref="T:System.String" /> равен текущему <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; в противном случае — <code>false</code>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Extensions.Primitives.StringSegment other, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype Microsoft.Extensions.Primitives.StringSegment other, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As StringSegment, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(Microsoft::Extensions::Primitives::StringSegment other, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Extensions.Primitives.StringSegment * StringComparison -&gt; bool" Usage="stringSegment.Equals (other, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="other">Объект, который требуется сравнить с данным объектом.</param>
        <param name="comparisonType">Одно из значений перечисления, определяющее используемые при сравнении правила.</param>
        <summary>Указывает, эквивалентен ли текущий объект другому объекту того же типа.</summary>
        <returns><code>true</code> если текущий объект равен другому параметру; в противном случае — <code>false</code>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string text, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(string text, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (text As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::String ^ text, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * StringComparison -&gt; bool" Usage="stringSegment.Equals (text, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="text">Объект <see cref="T:System.String" />, с которым сравнивается текущий объект <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
        <param name="comparisonType">Одно из значений перечисления, определяющее используемые при сравнении правила.</param>
        <summary>Проверяет, равен ли указанный <see cref="T:System.String" /> текущему <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <returns><code>true</code> если указанный <see cref="T:System.String" /> равен текущему <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; в противном случае — <code>false</code>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> имеет значение <code>null</code>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (Microsoft.Extensions.Primitives.StringSegment a, Microsoft.Extensions.Primitives.StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype Microsoft.Extensions.Primitives.StringSegment a, valuetype Microsoft.Extensions.Primitives.StringSegment b, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As StringSegment, b As StringSegment, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(Microsoft::Extensions::Primitives::StringSegment a, Microsoft::Extensions::Primitives::StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Equals : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment * StringComparison -&gt; bool" Usage="Microsoft.Extensions.Primitives.StringSegment.Equals (a, b, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="b" Type="Microsoft.Extensions.Primitives.StringSegment" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="a">Первый экземпляр <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> для сравнения.</param>
        <param name="b">Второй экземпляр <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> для сравнения.</param>
        <param name="comparisonType">Одно из значений перечисления, определяющее правила сравнения.</param>
        <summary>Определяет, совпадают ли значения двух указанных объектов <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />. Параметр определяет язык и региональные параметры, учет регистра и правила сортировки, используемые при сравнении.</summary>
        <returns><code>true</code> если объекты равны; в противном случае — <code>false</code>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringSegment.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>Этот GetHashCode является дорогостоящим, так как он выделяет при каждом вызове.
Однако это необходимо для того, чтобы мы сохранили поведение (например, случайное хэширование хэш-кода), которое является строкой. GetHashCode имеет.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="Microsoft.Extensions.Primitives.StringSegment.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает сведения о том, содержит ли <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> допустимое значение.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (c As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char c);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char -&gt; int" Usage="stringSegment.IndexOf c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">Знак Юникода, который необходимо найти.</param>
        <summary>Возвращает отсчитываемый от нуля индекс первого вхождения символа <paramref name="c" /> в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <returns>Отсчитываемая от нуля позиция индекса параметра <paramref name="c" /> с начала <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />, если символ найден. Значение –1, если символ не найден.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char c, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char c, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (c As Char, start As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char c, int start);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int -&gt; int" Usage="stringSegment.IndexOf (c, start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">Знак Юникода, который необходимо найти.</param>
        <param name="start">Отсчитываемая от нуля позиция индекса, с которой начинается поиск.</param>
        <summary>Возвращает отсчитываемый от нуля индекс первого вхождения символа <paramref name="c" /> в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
Поиск начинается с <paramref name="start" />.</summary>
        <returns>Отсчитываемая от нуля позиция индекса параметра <paramref name="c" /> с начала <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />, если символ найден. Значение –1, если символ не найден.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="start" /> больше или равно <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> либо меньше нуля.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char c, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char c, int32 start, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (c As Char, start As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char c, int start, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int * int -&gt; int" Usage="stringSegment.IndexOf (c, start, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">Знак Юникода, который необходимо найти.</param>
        <param name="start">Отсчитываемая от нуля позиция индекса, с которой начинается поиск.</param>
        <param name="count">Количество символов для анализа.</param>
        <summary>Возвращает отсчитываемый от нуля индекс первого вхождения символа <paramref name="c" /> в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
Поиск начинается с <paramref name="start" />, при этом проверяется заданное количество позиций <paramref name="count" />.</summary>
        <returns>Отсчитываемая от нуля позиция индекса параметра <paramref name="c" /> с начала <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />, если символ найден. Значение –1, если символ не найден.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="start" /> или <paramref name="count" /> меньше нуля либо <paramref name="start" /> + <paramref name="count" /> больше <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] -&gt; int" Usage="stringSegment.IndexOfAny anyOf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="anyOf">Массив знаков Юникода, содержащий один или несколько искомых знаков.</param>
        <summary>Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода.</summary>
        <returns>Начинающееся с нуля значение индекса первого вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если не найден ни один знак из <paramref name="anyOf" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int -&gt; int" Usage="stringSegment.IndexOfAny (anyOf, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="anyOf">Массив знаков Юникода, содержащий один или несколько искомых знаков.</param>
        <param name="startIndex">Позиция, с которой начинается поиск.</param>
        <summary>Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода. Поиск начинается с указанной позиции знака.</summary>
        <returns>Начинающееся с нуля значение индекса первого вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если не найден ни один знак из <paramref name="anyOf" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="startIndex" /> больше или равно <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> либо меньше нуля.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int * int -&gt; int" Usage="stringSegment.IndexOfAny (anyOf, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="anyOf">Массив знаков Юникода, содержащий один или несколько искомых знаков.</param>
        <param name="startIndex">Позиция, с которой начинается поиск.</param>
        <param name="count">Количество позиций знаков для проверки.</param>
        <summary>Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода. Поиск начинается с указанной позиции знака; проверяется заданное количество позиций.</summary>
        <returns>Начинающееся с нуля значение индекса первого вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если не найден ни один знак из <paramref name="anyOf" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="anyOf" /> имеет значение <code>null</code>.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> или <paramref name="count" /> меньше нуля либо <paramref name="startIndex" /> + <paramref name="count" /> больше <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullOrEmpty">
      <MemberSignature Language="C#" Value="public static bool IsNullOrEmpty (Microsoft.Extensions.Primitives.StringSegment value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNullOrEmpty(valuetype Microsoft.Extensions.Primitives.StringSegment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IsNullOrEmpty(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNullOrEmpty (value As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNullOrEmpty(Microsoft::Extensions::Primitives::StringSegment value);" />
      <MemberSignature Language="F#" Value="static member IsNullOrEmpty : Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="Microsoft.Extensions.Primitives.StringSegment.IsNullOrEmpty value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> для проверки.</param>
        <summary>Указывает, действительно ли указанный <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> является значением null или пустой строкой.</summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="Microsoft.Extensions.Primitives.StringSegment.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="index">Смещение в <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></param>
        <summary>Возвращает <see cref="T:System.Char" /> в указанном положении в текущем <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <value>@No__t-0 в указанной позиции.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="index" /> больше или равно <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> либо меньше нуля.</exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.LastIndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char -&gt; int" Usage="stringSegment.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Знак Юникода, который необходимо найти.</param>
        <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода в пределах данного экземпляра.</summary>
        <returns>Отсчитываемое от нуля значение индекса значения, если этот знак найден; в противном случае значение –1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Microsoft.Extensions.Primitives.StringSegment.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает длину этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="Microsoft.Extensions.Primitives.StringSegment.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает смещение в буфере для этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.Extensions.Primitives.StringSegment left, Microsoft.Extensions.Primitives.StringSegment right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.Extensions.Primitives.StringSegment left, valuetype Microsoft.Extensions.Primitives.StringSegment right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Equality(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As StringSegment, right As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::Extensions::Primitives::StringSegment left, Microsoft::Extensions::Primitives::StringSegment right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="right" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="left">Первый <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> для сравнения или <code>null</code>.</param>
        <param name="right">Второй <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> для сравнения или <code>null</code>.</param>
        <summary>Проверяет, имеют ли два указанных <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> одинаковое значение.</summary>
        <returns><code>true</code> если значение <paramref name="left" /> совпадает со значением <paramref name="right" />; в противном случае — <code>false</code>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlyMemory&lt;char&gt; (Microsoft.Extensions.Primitives.StringSegment segment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlyMemory`1&lt;char&gt; op_Implicit(valuetype Microsoft.Extensions.Primitives.StringSegment segment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(Microsoft.Extensions.Primitives.StringSegment)~System.ReadOnlyMemory{System.Char}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (segment As StringSegment) As ReadOnlyMemory(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlyMemory&lt;char&gt;(Microsoft::Extensions::Primitives::StringSegment segment);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.Extensions.Primitives.StringSegment -&gt; ReadOnlyMemory&lt;char&gt;" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Implicit segment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segment" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="segment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlySpan&lt;char&gt; (Microsoft.Extensions.Primitives.StringSegment segment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlySpan`1&lt;char&gt; op_Implicit(valuetype Microsoft.Extensions.Primitives.StringSegment segment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(Microsoft.Extensions.Primitives.StringSegment)~System.ReadOnlySpan{System.Char}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (segment As StringSegment) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlySpan&lt;char&gt;(Microsoft::Extensions::Primitives::StringSegment segment);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.Extensions.Primitives.StringSegment -&gt; ReadOnlySpan&lt;char&gt;" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Implicit segment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segment" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="segment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.Extensions.Primitives.StringSegment (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Microsoft.Extensions.Primitives.StringSegment op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(System.String)~Microsoft.Extensions.Primitives.StringSegment" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::Extensions::Primitives::StringSegment(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.String" />, преобразуемый в <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
        <summary>Создает <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> из заданного <see cref="T:System.String" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.Extensions.Primitives.StringSegment left, Microsoft.Extensions.Primitives.StringSegment right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.Extensions.Primitives.StringSegment left, valuetype Microsoft.Extensions.Primitives.StringSegment right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Inequality(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As StringSegment, right As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::Extensions::Primitives::StringSegment left, Microsoft::Extensions::Primitives::StringSegment right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="right" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="left">Первый <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> для сравнения или <code>null</code>.</param>
        <param name="right">Второй <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> для сравнения или <code>null</code>.</param>
        <summary>Проверяет, имеют ли два указанных <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> разные значения.</summary>
        <returns><code>true</code> если значение <paramref name="left" /> отличается от значения <paramref name="right" />; в противном случае — <code>false</code>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringTokenizer Split (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringTokenizer Split(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Split(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (chars As Char()) As StringTokenizer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringTokenizer Split(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] -&gt; Microsoft.Extensions.Primitives.StringTokenizer" Usage="stringSegment.Split chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringTokenizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="chars">Массив символов, разделяющий подстроки в этой строке, пустой массив, не содержащий разделителей, или null.</param>
        <summary>Разбивает строку на элементы <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> в зависимости от символов в массиве.</summary>
        <returns><see cref="T:Microsoft.Extensions.Primitives.StringTokenizer" />, элементы которого содержат <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> из этого экземпляра, разделенные одним или несколькими символами из <paramref name="chars" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string text, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string text, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.StartsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (text As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ text, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string * StringComparison -&gt; bool" Usage="stringSegment.StartsWith (text, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="text">Объект <see cref="T:System.String" /> для сравнения.</param>
        <param name="comparisonType">Одно из значений перечисления, определяющее используемые при сравнении правила.</param>
        <summary>Проверяет, совпадает ли начало <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> с заданным <see cref="T:System.String" /> при сравнении с учетом заданного <paramref name="comparisonType" />.</summary>
        <returns><code>true</code> если <paramref name="text" /> соответствует началу этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; в противном случае — <code>false</code>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> имеет значение <code>null</code>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Subsegment">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Subsegment (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment Subsegment(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Subsegment(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subsegment (offset As Integer) As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment Subsegment(int offset);" />
      <MemberSignature Language="F#" Value="member this.Subsegment : int -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.Subsegment offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="offset">Отсчитываемая от нуля позиция первого знака подстроки в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
        <summary>Извлекает <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />, представляющий подстроку из этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
<see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> начинается с позиции, указанной в <paramref name="offset" />.</summary>
        <returns><see cref="T:Microsoft.Extensions.Primitives.StringSegment" />, начинающийся с <paramref name="offset" /> в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />, длина которого равна оставшейся части.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="offset" /> больше или равно <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> либо меньше нуля.</exception>
      </Docs>
    </Member>
    <Member MemberName="Subsegment">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Subsegment (int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment Subsegment(int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Subsegment(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subsegment (offset As Integer, length As Integer) As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment Subsegment(int offset, int length);" />
      <MemberSignature Language="F#" Value="member this.Subsegment : int * int -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.Subsegment (offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">Отсчитываемая от нуля позиция первого знака подстроки в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
        <param name="length">Число символов в подстроке.</param>
        <summary>Извлекает <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />, представляющий подстроку из этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
<see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> начинается с позиции, указанной в <paramref name="offset" />, и имеет указанную <paramref name="length" />.</summary>
        <returns><see cref="T:Microsoft.Extensions.Primitives.StringSegment" />, эквивалентный подстроке длиной <paramref name="length" />, которая начинается с <paramref name="offset" /> в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> или <paramref name="length" /> меньше нуля либо <paramref name="offset" /> + <paramref name="length" /> больше <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Substring(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (offset As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int offset);" />
      <MemberSignature Language="F#" Value="member this.Substring : int -&gt; string" Usage="stringSegment.Substring offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="offset">Отсчитываемая от нуля позиция первого знака подстроки в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
        <summary>Извлекает подстроку из этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
Подстрока начинается с позиции, указанной в <paramref name="offset" />, и имеет длину оставшейся части.</summary>
        <returns><see cref="T:System.String" />, эквивалентный подстроке длиной в оставшуюся часть, которая начинается с <paramref name="offset" /> в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="offset" /> больше или равно <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> либо меньше нуля.</exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Substring(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int offset, int length);" />
      <MemberSignature Language="F#" Value="member this.Substring : int * int -&gt; string" Usage="stringSegment.Substring (offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">Отсчитываемая от нуля позиция первого знака подстроки в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
        <param name="length">Число символов в подстроке.</param>
        <summary>Извлекает подстроку из этого <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
Подстрока начинается с позиции, указанной в <paramref name="offset" />, и имеет указанную <paramref name="length" />.</summary>
        <returns><see cref="T:System.String" />, эквивалентный подстроке длиной <paramref name="length" />, которая начинается с <paramref name="offset" /> в этом <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> или <paramref name="length" /> меньше нуля либо <paramref name="offset" /> + <paramref name="length" /> больше <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringSegment.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает <see cref="T:System.String" />, представленный этим <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />, или <code>String.Empty</code> если <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> не содержит значение.</summary>
        <returns><see cref="T:System.String" />, представленный этим <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />, или <code>String.Empty</code> если <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> не содержит значение.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Trim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment Trim() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Trim" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim () As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment Trim();" />
      <MemberSignature Language="F#" Value="member this.Trim : unit -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.Trim " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все начальные и конечные пробелы.</summary>
        <returns>Усеченный <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment TrimEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment TrimEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.TrimEnd" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEnd () As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment TrimEnd();" />
      <MemberSignature Language="F#" Value="member this.TrimEnd : unit -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.TrimEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все конечные пробелы.</summary>
        <returns>Усеченный <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment TrimStart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment TrimStart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.TrimStart" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimStart () As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment TrimStart();" />
      <MemberSignature Language="F#" Value="member this.TrimStart : unit -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.TrimStart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все начальные пробелы.</summary>
        <returns>Усеченный <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="Microsoft.Extensions.Primitives.StringSegment.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение этого сегмента в виде <see cref="T:System.String" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
