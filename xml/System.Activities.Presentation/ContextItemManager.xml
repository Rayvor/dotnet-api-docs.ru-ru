<Type Name="ContextItemManager" FullName="System.Activities.Presentation.ContextItemManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce225e2af620a8abf1cbcfd804986dfab2f2d443" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69306822" /></Metadata><TypeSignature Language="C#" Value="public abstract class ContextItemManager : System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.ContextItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContextItemManager extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.ContextItem&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ContextItemManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ContextItemManager&#xA;Implements IEnumerable(Of ContextItem)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextItemManager abstract : System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::ContextItem ^&gt;" />
  <TypeSignature Language="F#" Value="type ContextItemManager = class&#xA;    interface seq&lt;ContextItem&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.ContextItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0cd89-101">Представляет класс, поддерживающий набор элементов контекста, опубликованных в контексте редактирования конструктора.</span><span class="sxs-lookup"><span data-stu-id="0cd89-101">Represents a class that maintains a set of context items published into the designer editing context.</span></span> <span data-ttu-id="0cd89-102">Это абстрактный класс.</span><span class="sxs-lookup"><span data-stu-id="0cd89-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd89-103">Каждый <xref:System.Activities.Presentation.ContextItem>, содержащийся в <xref:System.Activities.Presentation.ContextItemManager>, представляет часть переходного состояния в <xref:System.Activities.Presentation.WorkflowDesigner>.</span><span class="sxs-lookup"><span data-stu-id="0cd89-103">Each <xref:System.Activities.Presentation.ContextItem> contained in the <xref:System.Activities.Presentation.ContextItemManager> represents a piece of transient state in a <xref:System.Activities.Presentation.WorkflowDesigner>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContextItemManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ContextItemManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cd89-104">Инициализирует новый экземпляр класса <see cref="T:System.Activities.Presentation.ContextItemManager" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-104">Initiates a new instance of the <see cref="T:System.Activities.Presentation.ContextItemManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (Type itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Type itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Contains(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (itemType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Contains(Type ^ itemType);" />
      <MemberSignature Language="F#" Value="abstract member Contains : Type -&gt; bool" Usage="contextItemManager.Contains itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0cd89-105">Тип элемента, наличие которого проверяется.</span><span class="sxs-lookup"><span data-stu-id="0cd89-105">The type of item to check for.</span></span></param>
        <summary><span data-ttu-id="0cd89-106">Если переопределяется в производном классе, возвращает значение, указывающее, содержит ли диспетчер элементов элемент указанного типа.</span><span class="sxs-lookup"><span data-stu-id="0cd89-106">When overridden in a derived class, returns a value that indicates whether the item manager contains an item of the specified type.</span></span></summary>
        <returns><span data-ttu-id="0cd89-107">Имеет значение <see langword="true" />, если контекст содержит экземпляр указанного типа элемента; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-107"><see langword="true" /> if the context contains an instance of the specified item type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cd89-108">Свойство <paramref name="itemType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-108"><paramref name="itemType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TItemType&gt;">
      <MemberSignature Language="C#" Value="public bool Contains&lt;TItemType&gt; () where TItemType : System.Activities.Presentation.ContextItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains&lt;(class System.Activities.Presentation.ContextItem) TItemType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Contains``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains(Of TItemType As ContextItem) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TItemType&gt;&#xA; where TItemType : System::Activities::Presentation::ContextItem bool Contains();" />
      <MemberSignature Language="F#" Value="member this.Contains : unit -&gt; bool (requires 'ItemType :&gt; System.Activities.Presentation.ContextItem)" Usage="contextItemManager.Contains " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TItemType">
          <Constraints>
            <BaseTypeName>System.Activities.Presentation.ContextItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TItemType"><span data-ttu-id="0cd89-109">Тип элемента, наличие которого проверяется.</span><span class="sxs-lookup"><span data-stu-id="0cd89-109">The type of item to check for.</span></span></typeparam>
        <summary><span data-ttu-id="0cd89-110">Возвращает значение, указывающее, содержит ли диспетчер элементов элемент указанного типа.</span><span class="sxs-lookup"><span data-stu-id="0cd89-110">Returns a value that indicates whether the item manager contains an item of the specified type.</span></span></summary>
        <returns><span data-ttu-id="0cd89-111">Имеет значение <see langword="true" />, если контекст содержит экземпляр указанного типа элемента; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-111"><see langword="true" /> if the context contains an instance of the specified item type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd89-112">Этот универсальный метод вызывает абстрактный метод <xref:System.Activities.Presentation.ContextItemManager.Contains%2A>, необходимый, чтобы данный метод обеспечивал функции проверки типа.</span><span class="sxs-lookup"><span data-stu-id="0cd89-112">This generic method invokes the abstract <xref:System.Activities.Presentation.ContextItemManager.Contains%2A> method, which must be implemented for this method to provide the type checking functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.ContextItem&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Activities.Presentation.ContextItem&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of ContextItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Activities::Presentation::ContextItem ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.ContextItem&gt;" Usage="contextItemManager.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.ContextItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cd89-113">Если переопределяется в производном классе, перечисляет элементы контекста в контексте редактирования.</span><span class="sxs-lookup"><span data-stu-id="0cd89-113">When overridden in a derived class, enumerates the context items in the editing context.</span></span> <span data-ttu-id="0cd89-114">Такое перечисление включает предыдущие уровни, за исключением случаев, когда перечислитель достигает изолированного уровня.</span><span class="sxs-lookup"><span data-stu-id="0cd89-114">This enumeration includes prior layers unless the enumerator hits an isolated layer.</span></span></summary>
        <returns><span data-ttu-id="0cd89-115">Возвращает <see cref="T:System.Collections.Generic.IEnumerator`1" />, который содержит перечисление элементов контекста.</span><span class="sxs-lookup"><span data-stu-id="0cd89-115">Returns <see cref="T:System.Collections.Generic.IEnumerator`1" />, which contains an enumeration of context items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="protected static object GetTarget (Delegate callback);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetTarget(class System.Delegate callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.GetTarget(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTarget (callback As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Object ^ GetTarget(Delegate ^ callback);" />
      <MemberSignature Language="F#" Value="static member GetTarget : Delegate -&gt; obj" Usage="System.Activities.Presentation.ContextItemManager.GetTarget callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="0cd89-116">Обратный вызов для нужного целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="0cd89-116">The callback for the desired target.</span></span></param>
        <summary><span data-ttu-id="0cd89-117">Представляет вспомогательный метод, который возвращает целевой объект для делегата.</span><span class="sxs-lookup"><span data-stu-id="0cd89-117">Represents a helper method that returns the target object for a delegate.</span></span> <span data-ttu-id="0cd89-118">Если делегат создан в качестве прокси-сервера для универсального делегата, этот метод возвращает исходный объект, а не прокси-сервер.</span><span class="sxs-lookup"><span data-stu-id="0cd89-118">If the delegate was created to proxy a generic delegate, this method returns the original object, not the proxy.</span></span></summary>
        <returns><span data-ttu-id="0cd89-119">Возвращает <see cref="T:System.Object" />, содержащий целевой объект обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="0cd89-119">Returns <see cref="T:System.Object" />, which contains the target object of the callback.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cd89-120">Свойство <paramref name="callback" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-120"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.ContextItem GetValue (Type itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.ContextItem GetValue(class System.Type itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.GetValue(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (itemType As Type) As ContextItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::ContextItem ^ GetValue(Type ^ itemType);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : Type -&gt; System.Activities.Presentation.ContextItem" Usage="contextItemManager.GetValue itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ContextItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0cd89-121">Тип возвращаемого элемента.</span><span class="sxs-lookup"><span data-stu-id="0cd89-121">The type of item to return.</span></span></param>
        <summary><span data-ttu-id="0cd89-122">Если экземпляр службы переопределен в производном классе, то возвращается экземпляр типа запрашиваемого элемента.</span><span class="sxs-lookup"><span data-stu-id="0cd89-122">When overridden in a derived class, returns an instance of the requested item type.</span></span> <span data-ttu-id="0cd89-123">Если нет элемента контекста заданного типа, создается пустой элемент.</span><span class="sxs-lookup"><span data-stu-id="0cd89-123">If there is no context item with the given type, an empty item will be created.</span></span></summary>
        <returns><span data-ttu-id="0cd89-124">Возвращает <see cref="T:System.Activities.Presentation.ContextItem" />, который содержит элемент контекста запрошенного типа.</span><span class="sxs-lookup"><span data-stu-id="0cd89-124">Returns <see cref="T:System.Activities.Presentation.ContextItem" />, which contains a context item of the requested type.</span></span> <span data-ttu-id="0cd89-125">Если в контексте этого типа нет ни одного элемента, создается элемент по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0cd89-125">If there is no item in the context for this type, a default one is created.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cd89-126">Свойство <paramref name="itemType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-126"><paramref name="itemType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;TItemType&gt;">
      <MemberSignature Language="C#" Value="public TItemType GetValue&lt;TItemType&gt; () where TItemType : System.Activities.Presentation.ContextItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TItemType GetValue&lt;(class System.Activities.Presentation.ContextItem) TItemType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.GetValue``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue(Of TItemType As ContextItem) () As TItemType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TItemType&gt;&#xA; where TItemType : System::Activities::Presentation::ContextItem TItemType GetValue();" />
      <MemberSignature Language="F#" Value="member this.GetValue : unit -&gt; 'ItemType (requires 'ItemType :&gt; System.Activities.Presentation.ContextItem)" Usage="contextItemManager.GetValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItemType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TItemType">
          <Constraints>
            <BaseTypeName>System.Activities.Presentation.ContextItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TItemType"><span data-ttu-id="0cd89-127">Тип возвращаемого элемента.</span><span class="sxs-lookup"><span data-stu-id="0cd89-127">The type of item to return.</span></span></typeparam>
        <summary><span data-ttu-id="0cd89-128">Возвращает экземпляр типа запрашиваемого элемента.</span><span class="sxs-lookup"><span data-stu-id="0cd89-128">Returns an instance of the requested item type.</span></span> <span data-ttu-id="0cd89-129">Если нет элемента контекста заданного типа, создается пустой элемент.</span><span class="sxs-lookup"><span data-stu-id="0cd89-129">If there is no context item with the given type, an empty item will be created.</span></span></summary>
        <returns><span data-ttu-id="0cd89-130">Возвращает <see cref="T:System.Activities.Presentation.ContextItem" />, который содержит элемент контекста запрошенного типа.</span><span class="sxs-lookup"><span data-stu-id="0cd89-130">Returns <see cref="T:System.Activities.Presentation.ContextItem" />, which contains a context item of the requested type.</span></span> <span data-ttu-id="0cd89-131">Если в контексте этого типа нет ни одного элемента, создается элемент по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0cd89-131">If there is no item in the context for this type, a default one is created.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd89-132">Этот универсальный метод вызывает абстрактный метод <xref:System.Activities.Presentation.ContextItemManager.GetValue%2A>, необходимый, чтобы данный метод обеспечивал функции получения типа.</span><span class="sxs-lookup"><span data-stu-id="0cd89-132">This generic method invokes the abstract <xref:System.Activities.Presentation.ContextItemManager.GetValue%2A> method, which must be implemented for this method to provide the get type functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyItemChanged">
      <MemberSignature Language="C#" Value="protected static void NotifyItemChanged (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.ContextItem item, System.Activities.Presentation.ContextItem previousItem);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void NotifyItemChanged(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.ContextItem item, class System.Activities.Presentation.ContextItem previousItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.NotifyItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem,System.Activities.Presentation.ContextItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub NotifyItemChanged (context As EditingContext, item As ContextItem, previousItem As ContextItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void NotifyItemChanged(System::Activities::Presentation::EditingContext ^ context, System::Activities::Presentation::ContextItem ^ item, System::Activities::Presentation::ContextItem ^ previousItem);" />
      <MemberSignature Language="F#" Value="static member NotifyItemChanged : System.Activities.Presentation.EditingContext * System.Activities.Presentation.ContextItem * System.Activities.Presentation.ContextItem -&gt; unit" Usage="System.Activities.Presentation.ContextItemManager.NotifyItemChanged (context, item, previousItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="item" Type="System.Activities.Presentation.ContextItem" />
        <Parameter Name="previousItem" Type="System.Activities.Presentation.ContextItem" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0cd89-133">Используемый объект <see cref="T:System.Activities.Presentation.EditingContext" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-133">The <see cref="T:System.Activities.Presentation.EditingContext" /> in use.</span></span></param>
        <param name="item"><span data-ttu-id="0cd89-134">Новый объект <see cref="T:System.Activities.Presentation.ContextItem" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-134">The new <see cref="T:System.Activities.Presentation.ContextItem" />.</span></span></param>
        <param name="previousItem"><span data-ttu-id="0cd89-135">Предыдущая функция <see cref="T:System.Activities.Presentation.ContextItem" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-135">The previous <see cref="T:System.Activities.Presentation.ContextItem" />.</span></span></param>
        <summary><span data-ttu-id="0cd89-136">Представляет вспомогательный метод, который вызывает защищенный метод <see cref="M:System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-136">Represents a helper method that invokes the protected <see cref="M:System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cd89-137">Значение параметра <paramref name="context" />, <paramref name="item" /> или <paramref name="previousItem" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-137"><paramref name="context" />, <paramref name="item" />, or <paramref name="previousItem" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveCallback">
      <MemberSignature Language="C#" Value="protected static Delegate RemoveCallback (Delegate existing, Delegate toRemove);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Delegate RemoveCallback(class System.Delegate existing, class System.Delegate toRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.RemoveCallback(System.Delegate,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RemoveCallback (existing As Delegate, toRemove As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Delegate ^ RemoveCallback(Delegate ^ existing, Delegate ^ toRemove);" />
      <MemberSignature Language="F#" Value="static member RemoveCallback : Delegate * Delegate -&gt; Delegate" Usage="System.Activities.Presentation.ContextItemManager.RemoveCallback (existing, toRemove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existing" Type="System.Delegate" />
        <Parameter Name="toRemove" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="existing"><span data-ttu-id="0cd89-138">Существующий делегат.</span><span class="sxs-lookup"><span data-stu-id="0cd89-138">The existing delegate.</span></span></param>
        <param name="toRemove"><span data-ttu-id="0cd89-139">Делегат, который должен быть удален из <paramref name="existing" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-139">The delegate to be removed from <paramref name="existing" />.</span></span></param>
        <summary><span data-ttu-id="0cd89-140">Представляет вспомогательный метод, который выполняет операции удаления делегатов и распаковки делегатов, являющихся прокси-серверами для универсальных обратных вызовов.</span><span class="sxs-lookup"><span data-stu-id="0cd89-140">Represents a helper method that performs delegate removals and that unwraps delegates that are proxies to generic callbacks.</span></span></summary>
        <returns><span data-ttu-id="0cd89-141">Возвращает <see cref="T:System.Delegate" /> с новым делегатом, который должен быть назначен <paramref name="existing" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-141">Returns <see cref="T:System.Delegate" />, which contains the new delegate that should be assigned to <paramref name="existing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd89-142">Используйте этот метод при реализации метода <xref:System.Activities.Presentation.ContextItemManager.Unsubscribe%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cd89-142">Use this method in your implementations of the <xref:System.Activities.Presentation.ContextItemManager.Unsubscribe%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (System.Activities.Presentation.ContextItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(class System.Activities.Presentation.ContextItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.SetValue(System.Activities.Presentation.ContextItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetValue (value As ContextItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Activities::Presentation::ContextItem ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : System.Activities.Presentation.ContextItem -&gt; unit" Usage="contextItemManager.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Activities.Presentation.ContextItem" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0cd89-143">Значение, устанавливаемое в <see cref="T:System.Activities.Presentation.ContextItem" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-143">The value to set into the <see cref="T:System.Activities.Presentation.ContextItem" />.</span></span></param>
        <summary><span data-ttu-id="0cd89-144">При переопределении в производном классе задает указанное значение для элемента контекста.</span><span class="sxs-lookup"><span data-stu-id="0cd89-144">When overridden in a derived class, sets a context item to the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd89-145">Не передавать `null` значение.</span><span class="sxs-lookup"><span data-stu-id="0cd89-145">Do not pass a `null` value.</span></span> <span data-ttu-id="0cd89-146">Чтобы задать <xref:System.Activities.Presentation.ContextItem> пустое значение, создайте экземпляр элемента с помощью конструктора без параметров.</span><span class="sxs-lookup"><span data-stu-id="0cd89-146">To set a <xref:System.Activities.Presentation.ContextItem> to an empty value, create an instance of the item using a parameterless constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public abstract void Subscribe (Type contextItemType, System.Activities.Presentation.SubscribeContextCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe(class System.Type contextItemType, class System.Activities.Presentation.SubscribeContextCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Subscribe (contextItemType As Type, callback As SubscribeContextCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Subscribe(Type ^ contextItemType, System::Activities::Presentation::SubscribeContextCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : Type * System.Activities.Presentation.SubscribeContextCallback -&gt; unit" Usage="contextItemManager.Subscribe (contextItemType, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextItemType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeContextCallback" />
      </Parameters>
      <Docs>
        <param name="contextItemType"><span data-ttu-id="0cd89-147">Тип элемента, на который необходимо подписаться.</span><span class="sxs-lookup"><span data-stu-id="0cd89-147">The type of item you want to subscribe to.</span></span></param>
        <param name="callback"><span data-ttu-id="0cd89-148"><see cref="T:System.Activities.Presentation.SubscribeContextCallback" />, который вызывается при изменении <paramref name="contextItemType" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-148">The <see cref="T:System.Activities.Presentation.SubscribeContextCallback" /> that is invoked when <paramref name="contextItemType" /> changes.</span></span></param>
        <summary><span data-ttu-id="0cd89-149">Если переопределяется в производном классе, добавляет обратный вызов события, которое вызывается в случае изменения элемента указанного типа.</span><span class="sxs-lookup"><span data-stu-id="0cd89-149">When overridden in a derived class, adds an event callback that is invoked when a context item of the specified item type changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cd89-150">Параметр <paramref name="contextItemType" /> или <paramref name="callback" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-150"><paramref name="contextItemType" /> or <paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Subscribe&lt;TContextItemType&gt;">
      <MemberSignature Language="C#" Value="public void Subscribe&lt;TContextItemType&gt; (System.Activities.Presentation.SubscribeContextCallback&lt;TContextItemType&gt; callback) where TContextItemType : System.Activities.Presentation.ContextItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Subscribe&lt;(class System.Activities.Presentation.ContextItem) TContextItemType&gt;(class System.Activities.Presentation.SubscribeContextCallback`1&lt;!!TContextItemType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Subscribe``1(System.Activities.Presentation.SubscribeContextCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Subscribe(Of TContextItemType As ContextItem) (callback As SubscribeContextCallback(Of TContextItemType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContextItemType&gt;&#xA; where TContextItemType : System::Activities::Presentation::ContextItem void Subscribe(System::Activities::Presentation::SubscribeContextCallback&lt;TContextItemType&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Subscribe : System.Activities.Presentation.SubscribeContextCallback&lt;'ContextItemType (requires 'ContextItemType :&gt; System.Activities.Presentation.ContextItem)&gt; -&gt; unit (requires 'ContextItemType :&gt; System.Activities.Presentation.ContextItem)" Usage="contextItemManager.Subscribe callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContextItemType">
          <Constraints>
            <BaseTypeName>System.Activities.Presentation.ContextItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeContextCallback&lt;TContextItemType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContextItemType"><span data-ttu-id="0cd89-151">Тип элемента, на который необходимо подписаться.</span><span class="sxs-lookup"><span data-stu-id="0cd89-151">The type of item you want to subscribe to.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="0cd89-152"><see cref="T:System.Activities.Presentation.SubscribeContextCallback`1" />, который вызывается при изменении <paramref name="contextItemType" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-152">A <see cref="T:System.Activities.Presentation.SubscribeContextCallback`1" /> that is invoked when <paramref name="contextItemType" /> changes.</span></span></param>
        <summary><span data-ttu-id="0cd89-153">Добавляет обратный вызов события, который вызывается при изменении элемента контекста указанного типа.</span><span class="sxs-lookup"><span data-stu-id="0cd89-153">Adds an event callback that is invoked when a context item of the specified item type changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cd89-154">Значение параметра <paramref name="contextItemType" /> или <paramref name="callback" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-154"><paramref name="contextItemType" /> or <paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cd89-155">Перечисляет элементы контекста в контексте редактирования.</span><span class="sxs-lookup"><span data-stu-id="0cd89-155">Enumerates the context items in the editing context.</span></span></summary>
        <returns><span data-ttu-id="0cd89-156">Возвращает <see cref="T:System.Collections.IEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-156">Returns <see cref="T:System.Collections.IEnumerator" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public abstract void Unsubscribe (Type contextItemType, System.Activities.Presentation.SubscribeContextCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe(class System.Type contextItemType, class System.Activities.Presentation.SubscribeContextCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unsubscribe (contextItemType As Type, callback As SubscribeContextCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unsubscribe(Type ^ contextItemType, System::Activities::Presentation::SubscribeContextCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Unsubscribe : Type * System.Activities.Presentation.SubscribeContextCallback -&gt; unit" Usage="contextItemManager.Unsubscribe (contextItemType, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextItemType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeContextCallback" />
      </Parameters>
      <Docs>
        <param name="contextItemType"><span data-ttu-id="0cd89-157">Тип элемента контекста, из которого необходимо удалить обратный вызов.</span><span class="sxs-lookup"><span data-stu-id="0cd89-157">The type of context item to remove the callback from.</span></span></param>
        <param name="callback"><span data-ttu-id="0cd89-158">Объект <see cref="T:System.Activities.Presentation.SubscribeContextCallback" /> для удаления.</span><span class="sxs-lookup"><span data-stu-id="0cd89-158">The <see cref="T:System.Activities.Presentation.SubscribeContextCallback" /> to remove.</span></span></param>
        <summary><span data-ttu-id="0cd89-159">При переопределении в производном классе удаляет подписку.</span><span class="sxs-lookup"><span data-stu-id="0cd89-159">When overridden in a derived class, removes a subscription.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cd89-160">Свойство <paramref name="callback" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-160"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe&lt;TContextItemType&gt;">
      <MemberSignature Language="C#" Value="public void Unsubscribe&lt;TContextItemType&gt; (System.Activities.Presentation.SubscribeContextCallback&lt;TContextItemType&gt; callback) where TContextItemType : System.Activities.Presentation.ContextItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unsubscribe&lt;(class System.Activities.Presentation.ContextItem) TContextItemType&gt;(class System.Activities.Presentation.SubscribeContextCallback`1&lt;!!TContextItemType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Unsubscribe``1(System.Activities.Presentation.SubscribeContextCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unsubscribe(Of TContextItemType As ContextItem) (callback As SubscribeContextCallback(Of TContextItemType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContextItemType&gt;&#xA; where TContextItemType : System::Activities::Presentation::ContextItem void Unsubscribe(System::Activities::Presentation::SubscribeContextCallback&lt;TContextItemType&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Unsubscribe : System.Activities.Presentation.SubscribeContextCallback&lt;'ContextItemType (requires 'ContextItemType :&gt; System.Activities.Presentation.ContextItem)&gt; -&gt; unit (requires 'ContextItemType :&gt; System.Activities.Presentation.ContextItem)" Usage="contextItemManager.Unsubscribe callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContextItemType">
          <Constraints>
            <BaseTypeName>System.Activities.Presentation.ContextItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeContextCallback&lt;TContextItemType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContextItemType"><span data-ttu-id="0cd89-161">Тип элемента контекста, из которого необходимо удалить обратный вызов.</span><span class="sxs-lookup"><span data-stu-id="0cd89-161">The type of context item to remove the callback from.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="0cd89-162">Объект <see cref="T:System.Activities.Presentation.SubscribeContextCallback`1" /> для удаления.</span><span class="sxs-lookup"><span data-stu-id="0cd89-162">The <see cref="T:System.Activities.Presentation.SubscribeContextCallback`1" /> to remove.</span></span></param>
        <summary><span data-ttu-id="0cd89-163">Удаляет подписку.</span><span class="sxs-lookup"><span data-stu-id="0cd89-163">Removes a subscription.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cd89-164">Свойство <paramref name="callback" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cd89-164"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
