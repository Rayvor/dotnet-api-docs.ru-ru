<Type Name="IModalService" FullName="System.Activities.Presentation.IModalService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="061fc6b0c053efbe3c836de4cea4f0b6ea65697e" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63924226" /></Metadata><TypeSignature Language="C#" Value="public interface IModalService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IModalService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.IModalService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IModalService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IModalService" />
  <TypeSignature Language="F#" Value="type IModalService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Позволяет уведомлять ведущее приложение об открытом модальном диалоговом окне.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Некоторые приложения, в которых размещаются конструкторы, должны получать уведомление об открытии модального диалогового окна. Примером такого приложения является Visual Studio. Интерфейс <xref:System.Activities.Presentation.IModalService> позволяет передавать текущее модальное состояние.  
  
 Конструктор рабочих процессов Windows вызывает метод <xref:System.Activities.Presentation.IModalService.SetModalState%2A>. Когда `isModal` параметр имеет значение `true`, узел получает уведомление, что отображается модальное диалоговое окно.  
  
 Эта функция необязательна. Ее не нужно использовать, если ведущему приложению не требуются сведения о модальном состоянии.  
  
 В текущей реализации, если вызывается окно сообщения Windows Presentation Foundation (WPF) (который является модальным диалоговым окном) <xref:System.Activities.Presentation.IModalService.SetModalState%2A> не вызывается. Если эти сведения требуются ведущему приложению, необходимо создать другое решение.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetModalState">
      <MemberSignature Language="C#" Value="public void SetModalState (bool isModal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetModalState(bool isModal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.IModalService.SetModalState(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModalState (isModal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModalState(bool isModal);" />
      <MemberSignature Language="F#" Value="abstract member SetModalState : bool -&gt; unit" Usage="iModalService.SetModalState isModal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isModal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isModal">Если задано значение <see langword="true" />, то открыто модальное диалоговое окно.</param>
        <summary>Уведомляет ведущее приложение об открытом модальном диалоговом окне.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>