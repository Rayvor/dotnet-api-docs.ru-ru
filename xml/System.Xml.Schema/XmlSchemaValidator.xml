<Type Name="XmlSchemaValidator" FullName="System.Xml.Schema.XmlSchemaValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc12cfc523da976a78abb9032b92b71add9d9d02" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70422210" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlSchemaValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaValidator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaValidator sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaValidator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет обработчик проверки схемы языка XSD. Класс <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> не поддерживает наследование.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> - Не используйте схемы из неизвестных или ненадежных источников или расположений. Это приведет к нарушению безопасности кода.
> - Схемы XML (включая встроенные схемы) по сути уязвимы для атак типа "отказ в обслуживании"; не принимайте их в недоверенных сценариях.
> - Сообщения об ошибках и исключения проверки схемы могут представлять конфиденциальные сведения о модели содержимого или пути URI в файл схемы. Будьте внимательны, чтобы не предоставлять эти сведения ненадежным вызывающим объектам.
  
 Класс <xref:System.Xml.Schema.XmlSchemaValidator> предоставляет эффективный, высокопроизводительный механизм для принудительной проверки XML-данных по схемам XML. Например, класс <xref:System.Xml.Schema.XmlSchemaValidator> позволяет проверять информационный набор XML локально, без сериализации в виде XML-документа, а затем повторно выполнить синтаксический анализ с помощью проверяющего модуля чтения XML. <xref:System.Xml.Schema.XmlSchemaValidator> Класс также можно использовать для создания обработчиков проверки по сравнению с пользовательскими источниками данных XML или как способ создания проверки модуля записи XML.  
  
 Дополнительные сведения о <xref:System.Xml.Schema.XmlSchemaValidator> классе см. в разделе [XmlSchemaValidator push-уведомления](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md) .  
  
> [!IMPORTANT]
> Флаги <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> проверки и объекта не заданы по умолчанию. <xref:System.Xml.Schema.XmlSchemaValidator>  <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> Кроме того, <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> свойство <xref:System.Xml.Schema.XmlSchemaValidator> объекта по умолчанию `null` имеет значение. В результате внешние схемы, упоминаемые в элементах include, Imports или redefine, по умолчанию не разрешаются.   
  
## Examples  
 В следующем примере выполняется проверка `contosoBooks.xml` файла на `contosoBooks.xsd` соответствие схеме. Класс <xref:System.Xml.Serialization.XmlSerializer> в примере используется для десериализации файла `contosoBooks.xml` и передачи значений узлов методам класса <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 В примере в качестве входных данных используется файл `contosoBooks.xml`.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 В примере также в качестве входных данных используется `contosoBooks.xsd`.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="https://msdn.microsoft.com/library/911d4460-dd91-4958-85b2-2ca3299f9ec6">Принудительная проверка с помощью XmlSchemaValidator</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.IXmlNamespaceResolver namespaceResolver, valuetype System.Xml.Schema.XmlSchemaValidationFlags validationFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable, schemas As XmlSchemaSet, namespaceResolver As IXmlNamespaceResolver, validationFlags As XmlSchemaValidationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaValidator(System::Xml::XmlNameTable ^ nameTable, System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::IXmlNamespaceResolver ^ namespaceResolver, System::Xml::Schema::XmlSchemaValidationFlags validationFlags);" />
      <MemberSignature Language="F#" Value="new System.Xml.Schema.XmlSchemaValidator : System.Xml.XmlNameTable * System.Xml.Schema.XmlSchemaSet * System.Xml.IXmlNamespaceResolver * System.Xml.Schema.XmlSchemaValidationFlags -&gt; System.Xml.Schema.XmlSchemaValidator" Usage="new System.Xml.Schema.XmlSchemaValidator (nameTable, schemas, namespaceResolver, validationFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
        <Parameter Name="validationFlags" Type="System.Xml.Schema.XmlSchemaValidationFlags" />
      </Parameters>
      <Docs>
        <param name="nameTable">Объект <see cref="T:System.Xml.XmlNameTable" />, содержащий имена элемента и атрибута в виде отдельных строк.</param>
        <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий схемы языка XSD, использующиеся для проверки.</param>
        <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, который используется для определения пространств имен, обнаруженных при проверке.</param>
        <param name="validationFlags">Значение <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />, указывающее параметры проверки схемы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> конструктора.  
  
-   Содержимое <xref:System.Xml.Schema.XmlSchemaSet> параметра копируется во внутренний <xref:System.Xml.Schema.XmlSchemaSet> <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> объект при установке или задании параметров проверки. <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> В результате изменения во входном <xref:System.Xml.Schema.XmlSchemaSet> объекте во время проверки не влияют на результат проверки.  
  
-   Если указанный <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> параметр не скомпилирован, вызывается его метод. <xref:System.Xml.Schema.XmlSchemaSet>  
  
-   Параметр особенно важен для проверки `xs:QName` типов. <xref:System.Xml.IXmlNamespaceResolver> Класс не копирует пространства имен в области из объекта, <xref:System.Xml.IXmlNamespaceResolver> а вместо этого содержит ссылку на него. <xref:System.Xml.Schema.XmlSchemaValidator> Это позволяет добавлять новые пространства имен в <xref:System.Xml.IXmlNamespaceResolver> объект во время процесса проверки.  
  
> [!IMPORTANT]
>  Флаги <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> проверки и объекта не заданы по умолчанию. <xref:System.Xml.Schema.XmlSchemaValidator>  <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> Кроме того, <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> свойство <xref:System.Xml.Schema.XmlSchemaValidator> объекта по умолчанию `null` имеет значение. В результате внешние схемы, упоминаемые в элементах include, Imports или redefine, по умолчанию не разрешаются.  
  
   
  
## Examples  
 Пример <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> конструктора см. в разделе Справочник по <xref:System.Xml.Schema.XmlSchemaValidator> классам.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException">Ошибка при компиляции схем в параметре <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaSet" />
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="AddSchema">
      <MemberSignature Language="C#" Value="public void AddSchema (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSchema(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSchema (schema As XmlSchema)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSchema(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.AddSchema : System.Xml.Schema.XmlSchema -&gt; unit" Usage="xmlSchemaValidator.AddSchema schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" /> для добавления к набору схем, используемых для проверки.</param>
        <summary>Добавляет схему языка XSD к набору схем, используемых для проверки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> метода.  
  
-   <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> Метод можно использовать для имитации воздействия встроенной схемы XML в проверяемый XML-документ.  
  
-   Целевое пространство имен параметра <xref:System.Xml.Schema.XmlSchema> не может соответствовать пространству имен элемента или атрибута, уже обнаруженного объектом <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
-   <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> Если параметр <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> проверки не установлен, метод не выполняет никаких действий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Указанный параметр <see cref="T:System.Xml.Schema.XmlSchema" /> является <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Конечное пространство имен параметра <see cref="T:System.Xml.Schema.XmlSchema" /> совпадает с пространством имен элемента или атрибута, уже обнаруженным объектом <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException">Параметр <see cref="T:System.Xml.Schema.XmlSchema" /> является недопустимым.</exception>
        <altmember cref="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
        <altmember cref="T:System.Xml.Schema.XmlSchema" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="EndValidation">
      <MemberSignature Language="C#" Value="public void EndValidation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndValidation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndValidation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndValidation();" />
      <MemberSignature Language="F#" Value="member this.EndValidation : unit -&gt; unit" Usage="xmlSchemaValidator.EndValidation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Завершает проверку и проверяет ограничения идентификации для всего документа XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод завершает проверку и проверяет ограничения идентификации для всего XML-документа, <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> если задан параметр проверки. <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">В документе XML обнаружена ошибка ограничения идентификации.</exception>
        <altmember cref="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetExpectedAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpectedAttributes () As XmlSchemaAttribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Xml::Schema::XmlSchemaAttribute ^&gt; ^ GetExpectedAttributes();" />
      <MemberSignature Language="F#" Value="member this.GetExpectedAttributes : unit -&gt; System.Xml.Schema.XmlSchemaAttribute[]" Usage="xmlSchemaValidator.GetExpectedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaAttribute[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает указанные атрибуты для текущего контекста элемента.</summary>
        <returns>Массив объектов <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> или пустой массив, если отсутствуют указанные атрибуты.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> метода.  
  
-   Если метод вызывается сразу после метода, возвращаются все атрибуты, которые могут появиться в XML-документе. <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A>  
  
-   Если метод вызывается после одного или нескольких вызовов <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> метода, возвращаются атрибуты, которые еще не были проверены для текущего элемента. <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpectedParticles">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpectedParticles () As XmlSchemaParticle()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Xml::Schema::XmlSchemaParticle ^&gt; ^ GetExpectedParticles();" />
      <MemberSignature Language="F#" Value="member this.GetExpectedParticles : unit -&gt; System.Xml.Schema.XmlSchemaParticle[]" Usage="xmlSchemaValidator.GetExpectedParticles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaParticle[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает указанные примитивы в текущий контекст элемента.</summary>
        <returns>Массив объектов <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> или пустой массив, если отсутствуют указанные примитивы.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Допустимыми примитивами, возвращаемыми методом <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A>, являются экземпляры классов <xref:System.Xml.Schema.XmlSchemaElement> и <xref:System.Xml.Schema.XmlSchemaAny>.  
  
 Если компоновщиком модели содержимого является `xs:sequence`, возвращается только следующий примитив последовательности. Если компоновщиком модели содержимого является `xs:all` или `xs:choice`, возвращаются все допустимые примитивы, которые могут следовать в текущем контекстном элементе.  
  
 Например, в следующей схеме XSD и XML-документе после проверки элемента `book` текущим контекстным элементом является элемент `book`. Метод <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> возвращает массив, который содержит один объект <xref:System.Xml.Schema.XmlSchemaElement>, представляющий элемент `title`. Если контекстом проверки является элемент `title`, метод <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> возвращает пустой массив. Если метод <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> вызывается после проверки элемента `title`, но перед проверкой элемента `description`, он возвращает массив, который содержит один объект <xref:System.Xml.Schema.XmlSchemaElement>, представляющий элемент `description`. Если метод <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> вызывается после проверки элемента `description`, он возвращает массив, который содержит один объект <xref:System.Xml.Schema.XmlSchemaAny>, представляющий символ-шаблон.  
  
```vb  
Dim reader As XmlReader =  XmlReader.Create("input.xml")   
  
Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()   
schemaSet.Add(Nothing, "schema.xsd")  
Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)   
  
Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)  
validator.Initialize()  
  
validator.ValidateElement("book", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
  
validator.ValidateElement("title", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
validator.ValidateEndElement(Nothing)  
  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
  
validator.ValidateElement("description", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateEndElement(Nothing)  
  
For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()  
    Console.WriteLine(particle.GetType())  
Next  
  
validator.ValidateElement("namespace", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateEndElement(Nothing)  
  
validator.ValidateEndElement(Nothing)  
```  
  
```csharp  
XmlReader reader = XmlReader.Create("input.xml");  
  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "schema.xsd");  
XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);  
  
XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  
validator.Initialize();  
  
validator.ValidateElement("book", "", null);  
  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
  
validator.ValidateElement("title", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
validator.ValidateEndElement(null);  
  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
  
validator.ValidateElement("description", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateEndElement(null);  
  
foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())  
{  
    Console.WriteLine(particle.GetType());  
}  
  
validator.ValidateElement("namespace", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateEndElement(null);  
  
validator.ValidateEndElement(null);  
```  
  
 Этот пример принимает в качестве входных данных следующий XML.  
  
 `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">`  
  
 `<xs:element name="book">`  
  
 `<xs:complexType>`  
  
 `<xs:sequence>`  
  
 `<xs:element name="title" type="xs:string" />`  
  
 `<xs:element name="description" type="xs:string" />`  
  
 `<xs:any processContents ="lax"/>`  
  
 `</xs:sequence>`  
  
 `</xs:complexType>`  
  
 `</xs:element>`  
  
 `</xs:schema>`  
  
 Этот пример принимает в качестве входных данных следующую схему XSD.  
  
 `<book>`  
  
 `<title>My Book</title>`  
  
 `<description>My Book's Description</description>`  
  
 `<namespace>System.Xml.Schema</namespace>`  
  
 `</book>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaParticle" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaElement" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAny" />
      </Docs>
    </Member>
    <Member MemberName="GetUnspecifiedDefaultAttributes">
      <MemberSignature Language="C#" Value="public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetUnspecifiedDefaultAttributes(class System.Collections.ArrayList defaultAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetUnspecifiedDefaultAttributes (defaultAttributes As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetUnspecifiedDefaultAttributes(System::Collections::ArrayList ^ defaultAttributes);" />
      <MemberSignature Language="F#" Value="member this.GetUnspecifiedDefaultAttributes : System.Collections.ArrayList -&gt; unit" Usage="xmlSchemaValidator.GetUnspecifiedDefaultAttributes defaultAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultAttributes" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="defaultAttributes"><see cref="T:System.Collections.ArrayList" /> для заполнения объектами <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> для любых атрибутов, которые не были обнаружены во время проверки в контексте элемента.</param>
        <summary>Проверяет ограничения идентификации в атрибутах по умолчанию и заполняет указанный список <see cref="T:System.Collections.ArrayList" /> объектами <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> для любых атрибутов со значениями по умолчанию, которые до этого не прошли проверку при помощи метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> в контексте элемента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод должен вызываться после проверки всех атрибутов текущего элемента <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> с помощью метода. <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> Метод <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> необходимо использовать для определения атрибутов по умолчанию, которые должны быть вставлены в проверяемый XML-документ.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует состояние объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberSignature Language="F#" Value="member this.Initialize : unit -&gt; unit" Usage="xmlSchemaValidator.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициализирует состояние объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод допустим только в том случае, если он вызывается сразу после <xref:System.Xml.Schema.XmlSchemaValidator> создания объекта <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>или после вызова. <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>  
  
   
  
## Examples  
 В следующем примере выполняется проверка `contosoBooks.xml` файла на `contosoBooks.xsd` соответствие схеме. Класс <xref:System.Xml.Serialization.XmlSerializer> в примере используется для десериализации файла `contosoBooks.xml` и передачи значений узлов методам класса <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 В примере в качестве входных данных используется файл `contosoBooks.xml`.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 В примере также в качестве входных данных используется `contosoBooks.xsd`.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Вызов метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> является допустимым только сразу после формирования объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> или после вызова <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(class System.Xml.Schema.XmlSchemaObject partialValidationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (partialValidationType As XmlSchemaObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Xml::Schema::XmlSchemaObject ^ partialValidationType);" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.Xml.Schema.XmlSchemaObject -&gt; unit" Usage="xmlSchemaValidator.Initialize partialValidationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialValidationType" Type="System.Xml.Schema.XmlSchemaObject" />
      </Parameters>
      <Docs>
        <param name="partialValidationType">Объекты <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> или <see cref="T:System.Xml.Schema.XmlSchemaType" />, используемые для инициализации контекста проверки объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> для частичной проверки.</param>
        <summary>Инициализирует состояние объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> при помощи <see cref="T:System.Xml.Schema.XmlSchemaObject" />, указанного для частичной проверки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>, принимающий в качестве параметра <xref:System.Xml.Schema.XmlSchemaObject>, инициализирует начальное состояние объекта <xref:System.Xml.Schema.XmlSchemaValidator> для частичной проверки.  
  
   
  
## Examples  
 В следующем примере объект <xref:System.Xml.Schema.XmlSchemaObject> инициализируется для частичной проверки с помощью метода <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>. Элемент схемы `orderNumber` передается путем выбора <xref:System.Xml.XmlQualifiedName> в коллекции <xref:System.Xml.Schema.XmlSchemaObjectTable>, возвращаемой свойством <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> объекта <xref:System.Xml.Schema.XmlSchemaSet>. Затем объект <xref:System.Xml.Schema.XmlSchemaValidator> проверяет этот элемент.  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add(Nothing, "schema.xsd")  
schemaSet.Compile()  
Dim nameTable As NameTable = New NameTable()  
Dim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
  
Dim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  
validator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName("orderNumber")))  
  
validator.ValidateElement("orderNumber", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateText("123")  
validator.ValidateEndElement(Nothing)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "schema.xsd");  
schemaSet.Compile();  
NameTable nameTable = new NameTable();  
XmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  
  
XmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  
validator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName("orderNumber")]);  
  
validator.ValidateElement("orderNumber", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateText("123");  
validator.ValidateEndElement(null);  
```  
  
 Этот пример принимает в качестве входных данных следующую схему XML.  
  
 `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">`  
  
 `<xs:element name="orderNumber" type="xs:int" />`  
  
 `</xs:schema>`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Вызов метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> является допустимым только сразу после формирования объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> или после вызова <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <see cref="T:System.Xml.Schema.XmlSchemaObject" /> не является объектом <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> или <see cref="T:System.Xml.Schema.XmlSchemaType" />.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <see cref="T:System.Xml.Schema.XmlSchemaObject" /> не может иметь значения <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaObject" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaElement" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaType" />
      </Docs>
    </Member>
    <Member MemberName="LineInfoProvider">
      <MemberSignature Language="C#" Value="public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.IXmlLineInfo LineInfoProvider" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property LineInfoProvider As IXmlLineInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::IXmlLineInfo ^ LineInfoProvider { System::Xml::IXmlLineInfo ^ get(); void set(System::Xml::IXmlLineInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineInfoProvider : System.Xml.IXmlLineInfo with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.LineInfoProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.IXmlLineInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает сведения о номерах строк для проверяемого XML-узла.</summary>
        <value>Объект <see cref="T:System.Xml.IXmlLineInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Сведения о строке выводятся <xref:System.Xml.Schema.XmlSchemaValidationException> любым исключением, возникшим в процессе проверки.  
  
-   Объект по <xref:System.Xml.IXmlLineInfo> умолчанию, <xref:System.Xml.IXmlLineInfo.LineNumber%2A> возвращаемый <xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A> свойством, возвращает значение <xref:System.Xml.IXmlLineInfo.LinePosition%2A> 0 для свойств и.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <Member MemberName="SkipToEndElement">
      <MemberSignature Language="C#" Value="public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToEndElement (schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.SkipToEndElement : System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.SkipToEndElement schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, чьи свойства задаются при пропуске проверки содержимого текущего элемента. Этот параметр может иметь значение <see langword="null" />.</param>
        <summary>Пропускает проверку содержимого текущего элемента и подготавливает объект <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> для проверки содержимого в контексте родительского элемента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> метода.  
  
-   Метод пропускает проверку содержимого текущего элемента и подготавливает <xref:System.Xml.Schema.XmlSchemaValidator> объект для проверки содержимого в контексте родительского элемента; он эквивалентен пропуску проверки для всех дочерних элементов текущего элемента, а затем <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> вызов метода.  
  
-   Если содержимое текущего элемента успешно пропущено, <xref:System.Xml.Schema.XmlSchemaInfo> свойство объекта (если указано) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> имеет значение <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.  
  
> [!NOTE]
>  В пропущенном содержимом не сообщается об ошибках проверки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />. Например, <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает исходный URI для проверяемого XML-узла.</summary>
        <value>Объект <see cref="T:System.Uri" />, предоставляющий исходный URI для проверяемого XML-узла. По умолчанию это <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Универсальный код ресурса (URI) сообщается любым <xref:System.Xml.Schema.XmlSchemaValidationException> исключением, возникшим в процессе проверки.  
  
-   Если свойство не задано, имя файла XML-документа находится <xref:System.String.Empty> в сообщениях об ошибках проверки. <xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Проверяет атрибут в текущем контексте элемента.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateAttribute">
      <MemberSignature Language="C#" Value="public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateAttribute(string localName, string namespaceUri, string attributeValue, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAttribute (localName As String, namespaceUri As String, attributeValue As String, schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateAttribute(System::String ^ localName, System::String ^ namespaceUri, System::String ^ attributeValue, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateAttribute : string * string * string * System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateAttribute (localName, namespaceUri, attributeValue, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">Локальное имя атрибута, которое нужно проверить.</param>
        <param name="namespaceUri">Пространство имен URI атрибута, которое нужно проверить.</param>
        <param name="attributeValue">Значение атрибута, которое нужно проверить.</param>
        <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке атрибута. Этот параметр может иметь значение <see langword="null" />.</param>
        <summary>Проверяет имя атрибута, пространство имен URI и значение текущего контекста элемента.</summary>
        <returns>Проверенное значение атрибута.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> метода.  
  
-   Метод должен вызываться после проверки всех атрибутов текущего элемента <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> с помощью метода. <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>  
  
-   Если объект передан <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> в метод, <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> метод проверяет атрибут на <xref:System.Xml.Schema.XmlSchemaAttribute> соответствие объекту. <xref:System.Xml.Schema.XmlSchemaAttribute>  
  
-   Если атрибут успешно проверен в контексте текущего <xref:System.Xml.Schema.XmlSchemaInfo> элемента, свойства объекта (если заданы) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>и <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> задаются с результатами проверки.  
  
   
  
## Examples  
 В следующем примере выполняется проверка `contosoBooks.xml` файла на `contosoBooks.xsd` соответствие схеме. Класс <xref:System.Xml.Serialization.XmlSerializer> в примере используется для десериализации файла `contosoBooks.xml` и передачи значений узлов методам класса <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 В примере в качестве входных данных используется файл `contosoBooks.xml`.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 В примере также в качестве входных данных используется `contosoBooks.xsd`.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимый атрибут в текущем контексте элемента.</exception>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateAttribute">
      <MemberSignature Language="C#" Value="public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateAttribute(string localName, string namespaceUri, class System.Xml.Schema.XmlValueGetter attributeValue, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAttribute (localName As String, namespaceUri As String, attributeValue As XmlValueGetter, schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateAttribute(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlValueGetter ^ attributeValue, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateAttribute : string * string * System.Xml.Schema.XmlValueGetter * System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateAttribute (localName, namespaceUri, attributeValue, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.Xml.Schema.XmlValueGetter" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">Локальное имя атрибута, которое нужно проверить.</param>
        <param name="namespaceUri">Пространство имен URI атрибута, которое нужно проверить.</param>
        <param name="attributeValue"><see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />, используемый для передачи значения атрибута в качестве типа CLR, совместимого с типом языка XSD атрибута.</param>
        <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке атрибута. Данный параметр может принимать значение <see langword="null" />.</param>
        <summary>Проверяет имя атрибута, пространство имен URI и значение текущего контекста элемента.</summary>
        <returns>Проверенное значение атрибута.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> метода.  
  
-   Метод должен вызываться после проверки всех атрибутов текущего элемента <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> с помощью метода. <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>  
  
-   Если объект передан <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> в метод, <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> метод проверяет атрибут на <xref:System.Xml.Schema.XmlSchemaAttribute> соответствие объекту. <xref:System.Xml.Schema.XmlSchemaAttribute>  
  
-   Если атрибут успешно проверен в контексте текущего <xref:System.Xml.Schema.XmlSchemaInfo> элемента, свойства объекта (если заданы) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>и <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> задаются с результатами проверки.  
  
   
  
## Examples  
 В следующем примере выполняется проверка `contosoBooks.xml` файла на `contosoBooks.xsd` соответствие схеме. Класс <xref:System.Xml.Serialization.XmlSerializer> в примере используется для десериализации файла `contosoBooks.xml` и передачи значений узлов методам класса <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 В примере в качестве входных данных используется файл `contosoBooks.xml`.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 В примере также в качестве входных данных используется `contosoBooks.xsd`.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимый атрибут в текущем контексте элемента.</exception>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Проверяет элемент в текущем контексте.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateElement(string localName, string namespaceUri, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateElement (localName As String, namespaceUri As String, schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateElement(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateElement : string * string * System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.ValidateElement (localName, namespaceUri, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">Локальное имя элемента, которое нужно проверить.</param>
        <param name="namespaceUri">Пространство имен URI элемента, которое нужно проверить.</param>
        <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке имени элемента. Этот параметр может иметь значение <see langword="null" />.</param>
        <summary>Проверяет элемент в текущем контексте.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> метода.  
  
-   Если имя <xref:System.Xml.Schema.XmlSchemaInfo> элемента успешно проверено в текущем контексте, то свойства объекта (если заданы) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>и <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> задаются с результатами проверки.  
  
-   Если имя элемента или какой-либо из его атрибутов <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> является недопустимым для <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>текущего контекста, свойство имеет значение; в <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> противном случае свойство <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>имеет значение.  
  
   
  
## Examples  
 В следующем примере выполняется проверка `contosoBooks.xml` файла на `contosoBooks.xsd` соответствие схеме. Класс <xref:System.Xml.Serialization.XmlSerializer> в примере используется для десериализации файла `contosoBooks.xml` и передачи значений узлов методам класса <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 В примере в качестве входных данных используется файл `contosoBooks.xml`.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 В примере также в качестве входных данных используется `contosoBooks.xsd`.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое имя элемента в текущем контексте.</exception>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateElement(string localName, string namespaceUri, class System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateElement (localName As String, namespaceUri As String, schemaInfo As XmlSchemaInfo, xsiType As String, xsiNil As String, xsiSchemaLocation As String, xsiNoNamespaceSchemaLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateElement(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo, System::String ^ xsiType, System::String ^ xsiNil, System::String ^ xsiSchemaLocation, System::String ^ xsiNoNamespaceSchemaLocation);" />
      <MemberSignature Language="F#" Value="member this.ValidateElement : string * string * System.Xml.Schema.XmlSchemaInfo * string * string * string * string -&gt; unit" Usage="xmlSchemaValidator.ValidateElement (localName, namespaceUri, schemaInfo, xsiType, xsiNil, xsiSchemaLocation, xsiNoNamespaceSchemaLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
        <Parameter Name="xsiType" Type="System.String" />
        <Parameter Name="xsiNil" Type="System.String" />
        <Parameter Name="xsiSchemaLocation" Type="System.String" />
        <Parameter Name="xsiNoNamespaceSchemaLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Локальное имя элемента, которое нужно проверить.</param>
        <param name="namespaceUri">Пространство имен URI элемента, которое нужно проверить.</param>
        <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке имени элемента. Этот параметр может иметь значение <see langword="null" />.</param>
        <param name="xsiType">Значение атрибута <c>xsi:Type</c> элемента. Этот параметр может иметь значение <see langword="null" />.</param>
        <param name="xsiNil">Значение атрибута <c>xsi:Nil</c> элемента. Этот параметр может иметь значение <see langword="null" />.</param>
        <param name="xsiSchemaLocation">Значение атрибута <c>xsi:SchemaLocation</c> элемента. Этот параметр может иметь значение <see langword="null" />.</param>
        <param name="xsiNoNamespaceSchemaLocation">Значение атрибута <c>xsi:NoNamespaceSchemaLocation</c> элемента. Этот параметр может иметь значение <see langword="null" />.</param>
        <summary>Проверяет элемент в текущем контексте с указанными знамениями атрибутов <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c> и <c>xsi:NoNamespaceSchemaLocation</c>.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> метода.  
  
-   Если имя <xref:System.Xml.Schema.XmlSchemaInfo> элемента успешно проверено в текущем контексте, то свойства объекта (если заданы) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>и <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> задаются с результатами проверки.  
  
-   Если имя элемента или любого из его атрибутов в текущем контексте <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> недопустимы, свойство имеет <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>значение; в противном случае <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> свойство имеет значение <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.  
  
-   Если значение не было передано в качестве параметра <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> в конструктор, `xsi:SchemaLocation` а `xsi:NoNamespaceSchemaLocation` значения атрибутов не учитываются. <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое имя элемента в текущем контексте.</exception>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEndElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Проверяет, является ли текстовое содержимое элемента допустимым относительно типа данных для элементов с простым содержимым, а также проверяет, является ли содержимое текущего элемента достаточным для элементов со сложным содержимым.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEndElement">
      <MemberSignature Language="C#" Value="public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateEndElement (schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndElement : System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateEndElement schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке элемента. Этот параметр может иметь значение <see langword="null" />.</param>
        <summary>Проверяет, является ли текстовое содержимое элемента допустимым относительно типа данных для элементов с простым содержимым, а также проверяет, является ли содержимое текущего элемента достаточным для элементов со сложным содержимым.</summary>
        <returns>Проанализированное типизированное текстовое значение элемента, если содержимое элемента является простым.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> метода.  
  
-   Для элементов с простым содержимым <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> метод проверяет, является ли текстовое содержимое элемента допустимым в соответствии с его типом данных и возвращает проанализированное типизированное значение. Текстовое содержимое элемента получается из результатов предыдущих вызовов <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.  
  
-   Для элементов со сложным содержимым <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> метод проверяет, завершено ли содержимое текущего элемента.  
  
-   Если элемент имеет значение по умолчанию, значение, возвращаемое <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> методом, является значением по умолчанию для элемента.  
  
-   Если объект был создан <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> со значением в <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> качестве параметра, метод проверяет правила ограничения Identity (если таковые имеются), применимые к элементу. <xref:System.Xml.Schema.XmlSchemaValidator>  
  
-   Если элемент успешно прошел проверку <xref:System.Xml.Schema.XmlSchemaInfo> в текущем контексте, свойства объекта (если заданы) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>и <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> задаются с результатами проверки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое содержимое элемента.</exception>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEndElement">
      <MemberSignature Language="C#" Value="public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateEndElement (schemaInfo As XmlSchemaInfo, typedValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo, System::Object ^ typedValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndElement : System.Xml.Schema.XmlSchemaInfo * obj -&gt; obj" Usage="xmlSchemaValidator.ValidateEndElement (schemaInfo, typedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
        <Parameter Name="typedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке текстового содержимого элемента. Этот параметр может иметь значение <see langword="null" />.</param>
        <param name="typedValue">Типизированное текстовое содержимое элемента.</param>
        <summary>Проверяет, является ли текстовое содержимое указанного элемента допустимым для его типа данных.</summary>
        <returns>Проанализированное типизированное простое содержимое элемента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Если выполняется проверка на `xs:key`соответствие ограничениям удостоверения, `xs:unique` `xs:keyref`или, не используйте <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> перегрузку метода. Вместо этого вызовите <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> метод и передайте ему значение элемента. Затем вызовите <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> перегрузку метода, <xref:System.Xml.Schema.XmlSchemaInfo> которая принимает в качестве аргумента, чтобы убедиться, что текстовое содержимое элемента является допустимым в соответствии с его типом данных.  
  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> метода.  
  
-   Для элементов с простым содержимым <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType> метод проверяет, является ли текстовое содержимое элемента допустимым в соответствии с его типом данных и возвращает проанализированное типизированное значение. Текстовое содержимое элемента получается из типизированного содержимого, переданного в качестве параметра.  
  
-   Если вызовы <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> метода были выполнены ранее <xref:System.InvalidOperationException> , создается исключение.  
  
-   Если элемент имеет сложное содержимое, <xref:System.InvalidOperationException> возникает исключение.  
  
-   Если объект был создан <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> со значением в <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> качестве параметра, метод проверяет правила ограничения Identity (если таковые имеются), применимые к элементу. <xref:System.Xml.Schema.XmlSchemaValidator>  
  
-   Если элемент успешно прошел проверку <xref:System.Xml.Schema.XmlSchemaInfo> в текущем контексте, свойства объекта (если заданы) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>и <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> задаются с результатами проверки.  
  
   
  
## Examples  
 В следующем примере выполняется проверка `contosoBooks.xml` файла на `contosoBooks.xsd` соответствие схеме. Класс <xref:System.Xml.Serialization.XmlSerializer> в примере используется для десериализации файла `contosoBooks.xml` и передачи значений узлов методам класса <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 В примере в качестве входных данных используется файл `contosoBooks.xml`.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 В примере также в качестве входных данных используется `contosoBooks.xsd`.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое текстовое содержимое элемента.</exception>
        <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> не был вызван в правильной последовательности (например, если метод <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> вызывается после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), а вызов метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> уже производился раньше или элемент имеет сложное содержимое.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр типизированного текстового содержимого не может принимать значение <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEndOfAttributes">
      <MemberSignature Language="C#" Value="public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEndOfAttributes(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEndOfAttributes (schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEndOfAttributes(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndOfAttributes : System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.ValidateEndOfAttributes schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке на наличие в элементе всех необходимых атрибутов. Этот параметр может иметь значение <see langword="null" />.</param>
        <summary>Проверяет наличие всех необходимых атрибутов в контексте элемента и подготавливает объект <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> для проверки содержимого дочернего элемента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> метода.  
  
-   Метод всегда должен вызываться раньше  <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> .  <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>  
  
-   Перед продолжением проверки содержимого элемента необходимо вызвать метод. <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A>  
  
-   Если имеются все необходимые атрибуты в контексте элемента, <xref:System.Xml.Schema.XmlSchemaInfo> свойство объекта (если оно указано) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> имеет значение <xref:System.Xml.Schema.XmlSchemaValidity.Valid>.  
  
   
  
## Examples  
 В следующем примере выполняется проверка `contosoBooks.xml` файла на `contosoBooks.xsd` соответствие схеме. Класс <xref:System.Xml.Serialization.XmlSerializer> в примере используется для десериализации файла `contosoBooks.xml` и передачи значений узлов методам класса <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 В примере в качестве входных данных используется файл `contosoBooks.xml`.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 В примере также в качестве входных данных используется `contosoBooks.xsd`.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">В текущем контексте элемента отсутствует один или несколько необходимых атрибутов.</exception>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />. Например, <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateText">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Проверяет, разрешен ли текст в контексте текущего элемента и накапливает текст для проверки, если текущий элемент имеет простое содержимое.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public void ValidateText (string elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateText(string elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateText (elementValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateText(System::String ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateText : string -&gt; unit" Usage="xmlSchemaValidator.ValidateText elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementValue">Текстовая <see langword="string" />, которую нужно проверить в контексте текущего элемента.</param>
        <summary>Проверяет, является ли указанная текстовая <see langword="string" /> допустимой для контекста текущего элемента, и собирает текст для проверки, если текущий элемент имеет простое содержимое.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> метода.  
  
-   Если элемент имеет простое содержимое, указанный текст `string` объединяется при каждом вызове <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> метода до тех пор, <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> пока не будет вызван метод. При вызове <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> метода проверяется весь текст.  
  
-   Если элемент имеет сложное содержимое, сцепление текста не происходит.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Указанная текстовая <see langword="string" /> является недопустимой для контекста текущего элемента.</exception>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <exception cref="T:System.ArgumentNullException">Текстовый параметр <see langword="string" /> не может принимать значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateText(class System.Xml.Schema.XmlValueGetter elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateText (elementValue As XmlValueGetter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateText(System::Xml::Schema::XmlValueGetter ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateText : System.Xml.Schema.XmlValueGetter -&gt; unit" Usage="xmlSchemaValidator.ValidateText elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.Xml.Schema.XmlValueGetter" />
      </Parameters>
      <Docs>
        <param name="elementValue"><see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />, используемый для передачи текстового значения в качестве типа CLR, совместимого с типом языка XSD атрибута.</param>
        <summary>Проверяет, является ли текст, возвращенный при помощи указанного объекта <see cref="T:System.Xml.Schema.XmlValueGetter" />, допустимым в контексте текущего элемента, и собирает текст для проверки, если текущий элемент имеет простое содержимое.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведены важные замечания, которые следует учитывать при использовании <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> метода.  
  
-   Если элемент имеет простое содержимое, указанный текст `string` объединяется при каждом вызове <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> метода до тех пор, <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> пока не будет вызван метод. При вызове <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> метода проверяется весь текст.  
  
-   Если элемент имеет сложное содержимое, сцепление текста не происходит.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Указанная текстовая <see langword="string" /> является недопустимой для контекста текущего элемента.</exception>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <exception cref="T:System.ArgumentNullException">Текстовый параметр <see langword="string" /> не может принимать значение <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateWhitespace">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Проверяет, является ли пустое пространство допустимым для контекста текущего элемента, и собирает пустое пространство для проверки его содержимого, если текущий элемент имеет простое содержимое.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateWhitespace">
      <MemberSignature Language="C#" Value="public void ValidateWhitespace (string elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWhitespace(string elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateWhitespace (elementValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateWhitespace(System::String ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateWhitespace : string -&gt; unit" Usage="xmlSchemaValidator.ValidateWhitespace elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementValue">Пустое пространство <see langword="string" />, которое нужно проверить в контексте текущего элемента.</param>
        <summary>Проверяет, является ли пустое пространство в указанной <see langword="string" /> допустимым для контекста текущего элемента, и собирает пустое пространство для проверки, если текущий элемент имеет простое содержимое.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое пустое пространство в текущем контексте элемента.</exception>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateWhitespace">
      <MemberSignature Language="C#" Value="public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWhitespace(class System.Xml.Schema.XmlValueGetter elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateWhitespace (elementValue As XmlValueGetter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateWhitespace(System::Xml::Schema::XmlValueGetter ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateWhitespace : System.Xml.Schema.XmlValueGetter -&gt; unit" Usage="xmlSchemaValidator.ValidateWhitespace elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.Xml.Schema.XmlValueGetter" />
      </Parameters>
      <Docs>
        <param name="elementValue"><see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />, используемый для передачи значения пробела в качестве типа CLR, совместимого с типом языка XSD атрибута.</param>
        <summary>Проверяет, является ли пустое пространство, возвращенное при помощи указанного объекта <see cref="T:System.Xml.Schema.XmlValueGetter" />, допустимым для контекста текущего элемента, и собирает пустое пространство для проверки, если текущий элемент имеет простое содержимое.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое пустое пространство в текущем контексте элемента.</exception>
        <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xml.Schema.ValidationEventHandler" />, который получает предупреждения и ошибки, возникшие при проверке схемы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Xml.Schema.XmlSeverityType> значение <xref:System.Xml.Schema.ValidationEventHandler> не указано <xref:System.Xml.Schema.XmlSchemaValidationException> , вызывается исключение для всех <xref:System.Xml.Schema.XmlSeverityType.Error>ошибок проверки схемы со значением. Исключение не создается для предупреждений о проверке <xref:System.Xml.Schema.XmlSeverityType> со значением  <xref:System.Xml.Schema.XmlSeverityType.Warning> .  <xref:System.Xml.Schema.XmlSchemaValidationException>  
  
   
  
## Examples  
 В следующем примере выполняется проверка `contosoBooks.xml` файла на `contosoBooks.xsd` соответствие схеме. Класс <xref:System.Xml.Serialization.XmlSerializer> в примере используется для десериализации файла `contosoBooks.xml` и передачи значений узлов методам класса <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 В примере в качестве входных данных используется файл `contosoBooks.xml`.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 В примере также в качестве входных данных используется `contosoBooks.xsd`.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventSender">
      <MemberSignature Language="C#" Value="public object ValidationEventSender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ValidationEventSender" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationEventSender As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ValidationEventSender { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationEventSender : obj with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.ValidationEventSender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект, переданный в качестве отправителя объекта события проверки.</summary>
        <value><see cref="T:System.Object" />; по умолчанию это объект <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Пример события проверки см. в <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> описании события.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Schema.XmlSchemaValidator.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения элементов <c>xs:import</c> и <c>xs:include</c>, а также атрибутов <c>xsi:schemaLocation</c> и <c>xsi:noNamespaceSchemaLocation</c>.</summary>
        <value>Объект <see cref="T:System.Xml.XmlResolver" />; по умолчанию это объект <see cref="T:System.Xml.XmlUrlResolver" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Флаги <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> проверки и объекта не заданы по умолчанию. <xref:System.Xml.Schema.XmlSchemaValidator>  <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> Кроме того, <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> свойство <xref:System.Xml.Schema.XmlSchemaValidator> объекта по умолчанию `null` имеет значение. В результате внешние схемы, упоминаемые в элементах include, Imports или redefine, по умолчанию не разрешаются.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlResolver" />
      </Docs>
    </Member>
  </Members>
</Type>
