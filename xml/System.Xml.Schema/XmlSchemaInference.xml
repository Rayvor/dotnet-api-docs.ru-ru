<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d440fc4a8c97eac63b5cbe2bc248d008853f8715" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75180556" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaInference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет схему языка объявления схем XML (XSD — XML Schema Definition Language) на основе документа XML. Класс <see cref="T:System.Xml.Schema.XmlSchemaInference" /> не поддерживает наследование.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   Не используйте схемы из неизвестных или ненадежных источников или расположений. Это приведет к нарушению безопасности кода.  
> -   Схемы XML (включая встроенные схемы) по сути уязвимы для атак типа "отказ в обслуживании"; не принимайте их в недоверенных сценариях.  
> -   Сообщения об ошибках и исключения проверки схемы могут представлять конфиденциальные сведения о модели содержимого или пути URI в файл схемы. Будьте внимательны, чтобы не предоставлять эти сведения ненадежным вызывающим объектам.  
  
 Класс <xref:System.Xml.Schema.XmlSchemaInference> в пространстве имен <xref:System.Xml.Schema?displayProperty=nameWithType> позволяет вывести схему языка определения схемы XML (XSD) из структуры XML-документа. Класс <xref:System.Xml.Schema.XmlSchemaInference> выводит схему XML, которая может проверять XML-документ.  
  
 Класс <xref:System.Xml.Schema.XmlSchemaInference> поддерживает стандарты W3C для XML и схем XML. Его можно использовать для определения новой схемы или уточнения существующей схемы.  
  
   
  
## Examples  
 В этом примере в качестве входных данных используется XML-файл и создается схема, которая может проверить XML-код примера.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Ниже приведен входной XML-файл.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Ниже приведена схема, выводимая из XML-документа.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет схему языка определения схем XML (XSD) на основе заданного документа XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema instanceDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Объект <see cref="T:System.Xml.XmlReader" />, содержащий документ XML, на основе которого будет определяться схема.</param>
        <summary>Определяет схему языка определения схем XML (XSD) на основе документа XML, содержащегося в указанном объекте <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий определенные схемы.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> выводит одну или несколько схем консорциума W3C (XSD) из экземпляра XML-документа, содержащегося в указанном объекте <xref:System.Xml.XmlReader>. Если XML-документ содержит элементы и атрибуты из нескольких пространств имен, создается несколько схем: по одному для каждого пространства имен, используемого в документе. Основная схема — это схема, которая может проверять весь XML-документ, и его целевое пространство имен совпадает с пространством имен элемента документа XML-документа.  
  
 Ниже приведены важные замечания, которые следует учитывать при использовании метода <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>.  
  
-   Метод <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> пропускает любые атрибуты `xsi:type`, `xsi:schemaLocation`или `xsi:noNamespaceSchemaLocation` в XML-документе.  
  
-   Если объект <xref:System.Xml.XmlReader> типизирован, сведения о типе, которые он содержит, игнорируются.  
  
-   Если объект <xref:System.Xml.XmlReader> расположен на элементе, который не является корневым элементом XML-документа, то схема выводится только для этого элемента. Если объект <xref:System.Xml.XmlReader> не позиционирован на элементе, метод <xref:System.Xml.XmlReader.Read%2A> вызывается в параметре <xref:System.Xml.XmlReader> до тех пор, пока не будет обнаружен элемент (например, если <xref:System.Xml.XmlReader.NodeType%2A> <xref:System.Xml.XmlNodeType.Element>). На этом этапе процесс вывода начинается с этого элемента. Если элемент не встречается до конца документа, выдается <xref:System.ArgumentException>.  
  
   
  
## Examples  
 В этом примере в качестве входных данных используется XML-файл и создается схема, которая может проверить XML-код примера.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Ниже приведен входной XML-файл.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Ниже приведена схема, выводимая из XML-документа.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Документ XML не является правильно сформированным.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на корневом узле или на элементе. Во время процесса выведения схемы происходит ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader * System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema (instanceDocument, schemas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Объект <see cref="T:System.Xml.XmlReader" />, содержащий документ XML, на основе которого будет определяться схема.</param>
        <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий существующую схему, которая используется для уточнения определяемой схемы.</param>
        <summary>Определяет схему языка определения схем XML (XSD) на основе документа XML, содержащегося в заданном объекте <see cref="T:System.Xml.XmlReader" />, а также уточняет определенную схему, используя существующую схему из объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />, заданную для того же целевого пространства имен.</summary>
        <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий определенные схемы.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> выводит одну или несколько схем консорциума W3C (XSD) из экземпляра XML-документа, содержащегося в указанном объекте <xref:System.Xml.XmlReader>. Если XML-документ содержит элементы и атрибуты из нескольких пространств имен, создается несколько схем: по одному для каждого пространства имен, используемого в документе. Основная схема — это схема, которая может проверять весь XML-документ, и его целевое пространство имен совпадает с пространством имен элемента документа XML-документа.  
  
 Ниже приведены важные замечания, которые следует учитывать при использовании метода <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>.  
  
-   Метод <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> пропускает любые атрибуты `xsi:type`, `xsi:schemaLocation`или `xsi:noNamespaceSchemaLocation` в XML-документе.  
  
-   Если объект <xref:System.Xml.XmlReader> типизирован, сведения о типе, которые он содержит, игнорируются.  
  
-   Если объект <xref:System.Xml.XmlReader> расположен на элементе, который не является корневым элементом XML-документа, то схема выводится только для этого элемента. Если объект <xref:System.Xml.XmlReader> не позиционирован на элементе, метод <xref:System.Xml.XmlReader.Read%2A> вызывается в параметре <xref:System.Xml.XmlReader> до тех пор, пока не будет обнаружен элемент (например, если <xref:System.Xml.XmlReader.NodeType%2A> <xref:System.Xml.XmlNodeType.Element>). На этом этапе процесс вывода начинается с этого элемента. Если элемент не встречается до конца документа, выдается <xref:System.ArgumentException>.  
  
-   Если объект <xref:System.Xml.Schema.XmlSchemaSet> передается в качестве параметра, а элемент, на котором размещается объект <xref:System.Xml.XmlReader>, определяется в одной из схем в <xref:System.Xml.Schema.XmlSchemaSet>, выводимая схема используется для уточнения существующей схемы в параметре <xref:System.Xml.Schema.XmlSchemaSet> с тем же целевым пространством имен. в противном случае для пространства имен выводится новая схема.  
  
   
  
## Examples  
 Следующий пример кода принимает XML-документ 1 в качестве входных данных и формирует схему, которая может проверить XML-документ 1. Затем пример кода принимает XML-документ 2 и подбирает схему, созданную из документа XML 1, на основе изменений, найденных в XML-документе 2.  
  
 Ниже приведен XML-документ 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 Ниже приведен XML-документ 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 В следующем примере кода определяется схема из первого XML-документа, содержащегося в `reader`, а затем выполняется уточнение выводимой схемы изменений, найденных во втором XML-документе, который содержится в `reader1`. В примере кода используется первый перегруженный метод <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> для определения схемы, а второй перегруженный метод <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> для уточнения существующей схемы в объекте <xref:System.Xml.Schema.XmlSchemaSet>.  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 Следующая схема представляет собой схему, выводимую из XML-документа 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 Следующая схема представляет собой уточненную версию схемы выше, основанную на XML-документе 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Документ XML не является правильно сформированным.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на корневом узле или на элементе. Во время процесса выведения схемы происходит ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.Occurrence : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />, влияющее на объявления вхождения схем, определяемые на основе документа XML.</summary>
        <value>Объект <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если для свойства <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> задано значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, то в XML-документе будут обнаружены элементы первого времени, а объявление схемы выводится как `minOccurs="1"`. При обнаружении атрибутов объявление схемы выводится как `use="required"`.  
  
 Если свойство <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> имеет значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, объявления схемы элемента выводятся как `minOccurs="0"`, а объявления схемы атрибутов выводятся как `use="optional"`.  
  
 Значение свойства <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> по умолчанию — <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 В этом примере показано, как свойство <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> влияет на событие. Пример кода выводит вхождение из XML-файла двумя разными способами: нестрогим и ограниченным. Ниже приведен пример XML-файла.  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 В следующем примере кода предписывает классу <xref:System.Xml.Schema.XmlSchemaInference> явно определить вхождение элементов и атрибутов.  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 Так как для свойства <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> было задано значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, была создана следующая схема.  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 В приведенном выше примере кода, если свойству <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> не присвоено значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, класс <xref:System.Xml.Schema.XmlSchemaInference> будет по умолчанию иметь <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> и создал следующую схему.  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInference : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />, влияющее на способ определения типов на основе обрабатываемого документа XML.</summary>
        <value>Объект <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> имеет значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, то выводимый тип элементов и атрибутов в XML-документе с простым содержимым всегда будет `xs:string`. Если свойство <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> имеет значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, выводятся более конкретные типы, такие как `xs:date`, `xs:decimal`, `xs:unsignedByte`и т. д.  
  
 Значение свойства <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> по умолчанию — <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 В этом примере показано, как свойство <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> влияет на вывод типа. В примере кода типы из XML-файла выводятся двумя разными способами: нестрогими и ограниченными. Ниже приведен пример XML-файла.  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 В следующем примере кода предписывает классу <xref:System.Xml.Schema.XmlSchemaInference> определить `xs:string` для элементов и атрибутов с простым содержимым.  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 Так как для свойства <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> было задано значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, была создана следующая схема.  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 В приведенном выше примере кода, если свойству <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> не присвоено значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, класс <xref:System.Xml.Schema.XmlSchemaInference> будет по умолчанию иметь <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> и создал следующую схему.  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
