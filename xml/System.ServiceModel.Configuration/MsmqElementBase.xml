<Type Name="MsmqElementBase" FullName="System.ServiceModel.Configuration.MsmqElementBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="212a3a402f1557d1b32d26c459b16c79343ce18c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69240558" /></Metadata><TypeSignature Language="C#" Value="public abstract class MsmqElementBase : System.ServiceModel.Configuration.TransportElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MsmqElementBase extends System.ServiceModel.Configuration.TransportElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.MsmqElementBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MsmqElementBase&#xA;Inherits TransportElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqElementBase abstract : System::ServiceModel::Configuration::TransportElement" />
  <TypeSignature Language="F#" Value="type MsmqElementBase = class&#xA;    inherit TransportElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.TransportElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет базовый класс, члены которого являются общими для классов <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" /> и <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqElementBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MsmqElementBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqElementBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyConfiguration(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyConfiguration(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberSignature Language="F#" Value="override this.ApplyConfiguration : System.ServiceModel.Channels.BindingElement -&gt; unit" Usage="msmqElementBase.ApplyConfiguration bindingElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement">Элемент привязки, содержащий параметры, которые необходимо применить.</param>
        <summary>Применяет параметры данного элемента привязки к указанному элементу привязки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.ServiceModel.Configuration.ServiceModelExtensionElement from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFrom (from As ServiceModelExtensionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFrom(System::ServiceModel::Configuration::ServiceModelExtensionElement ^ from);" />
      <MemberSignature Language="F#" Value="override this.CopyFrom : System.ServiceModel.Configuration.ServiceModelExtensionElement -&gt; unit" Usage="msmqElementBase.CopyFrom from" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.ServiceModel.Configuration.ServiceModelExtensionElement" />
      </Parameters>
      <Docs>
        <param name="from">Элемент <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />, в котором содержатся копируемые значения.</param>
        <summary>Копирует параметры из указанного элемента <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> в данный элемент привязки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDeadLetterQueue">
      <MemberSignature Language="C#" Value="public Uri CustomDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomDeadLetterQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CustomDeadLetterQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomDeadLetterQueue : Uri with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customDeadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает универсальный код ресурса (URI) со сведениями о расположении очереди недоставленных сообщений для каждого приложения; в этой очереди размещаются просроченные сообщения либо сообщения, которые не удалось передать или доставить.</summary>
        <value>Свойство <see cref="T:System.Uri" />, в котором указывается расположение очереди недоставленных сообщений для каждого приложения. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Очередь недоставленных сообщений — это очередь в диспетчере очередей отправляющего приложения, в которой находятся недоставленные просроченные сообщения.  
  
 Универсальный код ресурса (URI), определяемый свойством <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A>, должен использовать схему net.msmq.  
  
 Если свойству <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> присвоено значение <xref:System.ServiceModel.DeadLetterQueue.None> или <xref:System.ServiceModel.DeadLetterQueue.System>, свойству <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> необходимо присвоить значение `null`. Если значение свойства <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> отличается от значения `null`, свойству <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> необходимо присвоить значение <xref:System.ServiceModel.DeadLetterQueue.Custom>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterQueue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.DeadLetterQueue DeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterQueue As DeadLetterQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::DeadLetterQueue DeadLetterQueue { System::ServiceModel::DeadLetterQueue get(); void set(System::ServiceModel::DeadLetterQueue value); };" />
      <MemberSignature Language="F#" Value="member this.DeadLetterQueue : System.ServiceModel.DeadLetterQueue with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("deadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.DeadLetterQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение перечисления, указывающее тип используемой очереди недоставленных сообщений.</summary>
        <value>Значение перечисления <see cref="T:System.ServiceModel.DeadLetterQueue" />, указывающее тип используемой очереди недоставленных сообщений.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Очередь недоставленных сообщений — это очередь в диспетчере очередей отправляющего приложения, в которой находятся недоставленные просроченные сообщения. Перечисление для очереди недоставленных сообщений определяет тип используемой очереди недоставленных сообщений. Возможные значения:  
  
-   None: очередь недоставленных сообщений не используется. Таким образом, при сбое доставки сообщения запись об этом событии не помещается в очередь недоставленных сообщений. Это значение по умолчанию, если свойству <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> присвоено значение `false`.  
  
-   System: для хранения сообщений, которые не удалось доставить, будет использоваться системная очередь недоставленных сообщений. В службе очередей сообщений (известной также как MSMQ) есть системная очередь недоставленных транзакционных сообщений и системная очередь недоставленных нетранзакционных сообщений. Эти очереди предназначены для записи сообщений, которые не удалось доставить из очередей транзакционных и нетранзакционных сообщений. Это значение по умолчанию, если свойству <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> присвоено значение `true`.  
  
-   Custom: для записи сообщений, которые не удалось доставить, используется очередь, указанная в свойстве <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A>.  
  
 Ниже перечислены возможные причины, по которым сообщение может не дойти до принимающего приложения.  
  
-   Транзакционное сообщение было помещено в очередь нетранзакционных сообщений.  
  
-   Нетранзакционное сообщение было помещено в очередь транзакционных сообщений.  
  
-   В очередь, принимающую только сообщения, которые прошли проверку подлинности, отправлено сообщение, не прошедшее проверку подлинности.  
  
-   В очередь, принимающую только зашифрованные сообщения, отправлено незашифрованное сообщение.  
  
-   Срок действия сообщения истек до того, как оно было доставлено получателю.  
  
-   При получении сообщения была превышена квота хранилища сообщений на конечном компьютере или квота хранилища очереди назначения, либо не хватило пространства памяти на конечном компьютере.  
  
-   Отправитель не обладает правами доступа, необходимыми, чтобы поместить сообщение в очередь назначения.  
  
-   Цифровая сигнатура сообщения недействительна.  
  
-   Диспетчеру очереди назначения не удалось расшифровать зашифрованное сообщение.  
  
-   Очередь назначения была очищена или удалена до извлечения сообщения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Durable">
      <MemberSignature Language="C#" Value="public bool Durable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Durable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.Durable" />
      <MemberSignature Language="VB.NET" Value="Public Property Durable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Durable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Durable : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.Durable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("durable", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, устойчивыми или неустойчивыми являются сообщения, обрабатываемые этой привязкой.</summary>
        <value>Значение <see langword="true" />, если сообщения, обрабатываемые этой привязкой, являются устойчивыми; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Постоянное сообщение сохраняется после сбоя диспетчера очередей, а переменное сообщение — нет. Неустойчивые сообщения используются, если приложения допускают случайные потери сообщений.  
  
 Если свойству <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> присвоено значение `true`, сообщения должны быть устойчивыми.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactlyOnce">
      <MemberSignature Language="C#" Value="public bool ExactlyOnce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExactlyOnce" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce" />
      <MemberSignature Language="VB.NET" Value="Public Property ExactlyOnce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExactlyOnce { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExactlyOnce : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("exactlyOnce", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает логическое значение, указывающее, доставляются ли сообщения, обрабатываемые этой привязкой, только один раз.</summary>
        <value>Значение <see langword="true" />, если сообщения, обрабатываемые этой привязкой, будут доставляться только один раз; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сообщение может быть отправлено с гарантией или без нее. Гарантия позволяет приложению обеспечить достижение отправленным сообщением очереди полученных сообщений, а если этого не произошло, приложение может определить этот факт, считав данные из очереди недоставленных сообщений.  
  
 Отправляемые сообщения, свойству <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> которых присвоено значение `true`, должны помещаться только в очередь транзакционных сообщений.  
  
 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>, если задано `true`значение, то указывает, что очередь сообщений (также называемая MSMQ) гарантирует, что отправленное сообщение будет доставлено в очередь принимающего сообщения только один раз, и в случае сбоя доставки сообщение будет отправлено в очередь недоставленных сообщений.  
  
 Для сообщений, которым требуется, чтобы свойство <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> имело значение `false`, свойству <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> по умолчанию присваивается значение `null`.  
  
 Для сообщений, которые <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> должны иметь `true`значение, <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> свойство по умолчанию имеет транзакционную системную очередь недоставленных сообщений в очереди.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected internal override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeFrom(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberSignature Language="F#" Value="override this.InitializeFrom : System.ServiceModel.Channels.BindingElement -&gt; unit" Usage="msmqElementBase.InitializeFrom bindingElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement">Элемент привязки с параметрами, которые будут использоваться для инициализации данного элемента привязки.</param>
        <summary>Инициализирует данный элемент привязки содержимым указанного элемента привязки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCycles">
      <MemberSignature Language="C#" Value="public int MaxRetryCycles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCycles" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRetryCycles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRetryCycles { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRetryCycles : int with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxRetryCycles", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает максимальное количество циклов повторных попыток доставки сообщения принимающему приложению.</summary>
        <value>Целое число, указывающее максимальное количество циклов повторных попыток доставки сообщения приложению. Значение по умолчанию — 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В одном цикле повторений выполняется попытка доставить сообщение приложению заданное число раз. Число предпринимаемых попыток задается свойством <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A>. Если сообщение не удается доставить приложению после выполнения максимального количества попыток, оно помещается в очередь повторного выполнения. В дальнейшем сообщение возвращается из очереди повторного выполнения в очередь приложения для повторной попытки доставки приложению. Это действие выполняется после задержки, указанной в свойстве <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>. Свойство <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> определяет число циклов повторных попыток, в ходе которых приложение пытается доставить сообщение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MsmqTransportSecurity">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.MsmqTransportSecurityElement MsmqTransportSecurity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.MsmqTransportSecurityElement MsmqTransportSecurity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MsmqTransportSecurity As MsmqTransportSecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::MsmqTransportSecurityElement ^ MsmqTransportSecurity { System::ServiceModel::Configuration::MsmqTransportSecurityElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MsmqTransportSecurity : System.ServiceModel.Configuration.MsmqTransportSecurityElement" Usage="System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("msmqTransportSecurity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.MsmqTransportSecurityElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" />, в котором инкапсулированы параметры безопасности транспорта для привязки.</summary>
        <value>Экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" />, в котором инкапсулированы параметры безопасности транспорта для привязки.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.ServiceModel.Configuration.MsmqElementBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
        <value>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации привязки.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveContextEnabled : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("receiveContextEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, включен ли контекст получения для обработки сообщений в очередях.</summary>
        <value>Значение <see langword="true" />, если включен контекст получения для обработки сообщений в очередях; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это так `true`, служба может "Просмотреть" сообщение в очереди, чтобы начать его обработку, и, если что-то пойдет не так и исключение будет создано, оно останется в очереди. Службы также могут "блокировать" сообщения для повторной обработки в более поздний момент времени. Объект ReceiveContext предоставляет механизм для «завершения» сообщения после обработки, чтобы его можно было удалить из очереди. Сообщения больше не считываются и не переписываются в очереди по сети, а отдельные сообщения не переносятся между разными экземплярами службы во время обработки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveErrorHandling">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveErrorHandling As ReceiveErrorHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReceiveErrorHandling ReceiveErrorHandling { System::ServiceModel::ReceiveErrorHandling get(); void set(System::ServiceModel::ReceiveErrorHandling value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveErrorHandling : System.ServiceModel.ReceiveErrorHandling with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveErrorHandling", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение перечисления, указывающее, каким образом будут обрабатываться подозрительные сообщения и сообщения, которые не удалось доставить.</summary>
        <value>Значение <see cref="T:System.ServiceModel.ReceiveErrorHandling" />, указывающее, каким образом будут обрабатываться подозрительные сообщения и сообщения, которые не удалось доставить.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если этому свойству задано значение <xref:System.ServiceModel.ReceiveErrorHandling.Fault>, происходит сбой прослушивателя каналов, трассируется и создается исключение <xref:System.ServiceModel.ProtocolException> (являющееся программой-оболочкой для исключения <xref:System.ServiceModel.MsmqPoisonMessageException>). Сообщение, которое привело к вызову исключения, останется в очереди; его необходимо удалить вручную. Исключение <xref:System.ServiceModel.MsmqPoisonMessageException> содержит свойство <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A>, с помощью которого можно выявлять сообщения, вызвавшие ошибку, и вручную удалять такие сообщения из очереди подозрительных сообщений.  
  
 Если этому свойству присвоено значение <xref:System.ServiceModel.ReceiveErrorHandling.Drop>, сообщение, которое привело к вызову исключения, просто сбрасывается.  
  
 Если этому свойству присвоено значение <xref:System.ServiceModel.ReceiveErrorHandling.Reject>, клиенту отправляется уведомление о недоставке, а сообщение, которое привело к вызову исключения, удаляется из очереди подозрительных сообщений. Этот параметр доступен только в очереди сообщений (также известной как MSMQ) 4.0.  
  
 Если этому свойству присвоено значение <xref:System.ServiceModel.ReceiveErrorHandling.Move>, сообщение, которое привело к вызову исключения, перемещается во вложенную очередь для окончательного хранения подозрительных сообщений. Этот параметр доступен только в очереди сообщений 4.0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRetryCount">
      <MemberSignature Language="C#" Value="public int ReceiveRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveRetryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveRetryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveRetryCount : int with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveRetryCount", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает максимальное число попыток отправки сообщения диспетчером очереди, после которого сообщение помещается в очередь повторного выполнения.</summary>
        <value>32-разрядное целое число со знаком, в котором указывается максимальное число попыток отправки сообщения диспетчером очереди, после которого сообщение помещается в очередь повторного выполнения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если выполнено максимальное количество попыток доставки, а сообщение не было получено приложением, сообщение помещается в очередь повторного выполнения для повторной доставки через некоторое время. Время до повторного помещения сообщения в очередь отправки указывается в свойстве <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>. Если число повторных попыток достигает значения <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A>, то либо сообщение помещается в очередь подозрительных сообщений, либо отправителю отсылается уведомление о том, что сообщение не может быть доставлено.  
  
 Дополнительные сведения см. в разделах <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> и <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCycleDelay">
      <MemberSignature Language="C#" Value="public TimeSpan RetryCycleDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryCycleDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCycleDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RetryCycleDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RetryCycleDelay : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("retryCycleDelay", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее временную задержку между циклами повторения при попытке доставить сообщение, которое не удалось доставить немедленно.</summary>
        <value>Значение <see cref="T:System.TimeSpan" />, задающее промежуток времени ожидания до начала следующего цикла попыток доставки сообщения принимающему приложению. Значение по умолчанию — "00:10:00".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В одном цикле повторений попытка доставить сообщение принимающему приложению выполняется заданное число раз. Число выполняемых попыток определяется свойством <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A>. Если приложению не удается получить сообщение после выполнения заданного количества немедленных повторных попыток, сообщение помещается в очередь повторного выполнения. В дальнейшем сообщение возвращается из очереди повторного выполнения в очередь приложения для повторной попытки доставки приложению. Это действие выполняется после задержки, указанной в свойстве <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>. Число циклов повторных попыток задается <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> свойством.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToLive { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToLive : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeToLive", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает промежуток времени, определяющий срок нахождения сообщений в очереди до того момента, когда они становятся просроченными.</summary>
        <value>Значение <see cref="T:System.TimeSpan" />, указывающее срок нахождения сообщений в очереди до того момента, когда они становятся просроченными. Значение по умолчанию — один день (01:00:00:00).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойству <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> присваивается значение, гарантирующее, что критические по времени сообщения не будут просрочены до их обработки принимающими приложениями. Сообщение в очереди, которое не поступает в принимающее приложение в пределах заданного интервала времени, считается устаревшим. Просроченные сообщения отправляются в специальную очередь, называемую очередью недоставленных сообщений. Расположение очереди недоставленных сообщений указывается в свойстве <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> или определяется соответствующим значением по умолчанию на основании гарантий.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMsmqTracing">
      <MemberSignature Language="C#" Value="public bool UseMsmqTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMsmqTracing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMsmqTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMsmqTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMsmqTracing : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useMsmqTracing", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает логическое значение, указывающее, следует ли включить трассировку сообщений, обрабатываемых этой привязкой.</summary>
        <value>Значение <see langword="true" />, если должна выполняться трассировка сообщений, обрабатываемых данной привязкой; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если трассировка включена, каждый раз, когда сообщение передается с компьютера со службой очередей сообщений (MSMQ) или поступает на компьютер с этой службой, создаются сообщения-отчеты, которые затем отправляются в очередь отчетов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSourceJournal">
      <MemberSignature Language="C#" Value="public bool UseSourceJournal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSourceJournal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSourceJournal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSourceJournal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSourceJournal : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useSourceJournal", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает логическое значение, указывающее, должны ли сохраняться в очереди журнала источника копии сообщений, обрабатываемых этой привязкой.</summary>
        <value>Значение <see langword="true" />, если копии сообщений, обрабатываемых этой привязкой, должны сохраняться в очереди журнала источника; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения в очереди, которым необходимо вести учет сообщений, покинувших очередь исходящих сообщений компьютера, могут копировать сообщения в очередь журнала. После того как сообщение покинуло очередь исходящих сообщений, и появилось подтверждение приема сообщения конечным компьютером, в очереди системного журнала компьютера-отправителя сохраняется копия сообщения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan ValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ValidityDuration : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("validityDuration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее время ожидания соединения при работе с каналами, поставленными в очередь.</summary>
        <value>Время ожидания соединения при использовании с каналами в очереди.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Если в ходе транзакции для сообщения истекает срок <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A>, то любая транзакция, используемая для его обработки, будет прервана вместе с экземпляром рабочего процесса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
