<Type Name="MessageLoggingElement" FullName="System.ServiceModel.Configuration.MessageLoggingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e958e35acfeae4176bbb0dbce33b3dac9753db54" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69240830" /></Metadata><TypeSignature Language="C#" Value="public sealed class MessageLoggingElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MessageLoggingElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.MessageLoggingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MessageLoggingElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageLoggingElement sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type MessageLoggingElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2125b-101">Представляет XML-элемент, который определяет параметры ведения журнала сообщений для Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="2125b-101">Represents an XML element that defines the settings for the message-logging capabilities of Windows Communication Foundation (WCF).</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1d06a7e6-9633-4a12-8c5d-123adbbc19c5"><span data-ttu-id="2125b-102">&lt;мессажелоггинг&gt;</span><span class="sxs-lookup"><span data-stu-id="2125b-102">&lt;messageLogging&gt;</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageLoggingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MessageLoggingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageLoggingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2125b-103">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MessageLoggingElement" />.</span><span class="sxs-lookup"><span data-stu-id="2125b-103">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MessageLoggingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filters">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.XPathMessageFilterElementCollection Filters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.XPathMessageFilterElementCollection Filters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.Filters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filters As XPathMessageFilterElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::XPathMessageFilterElementCollection ^ Filters { System::ServiceModel::Configuration::XPathMessageFilterElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filters : System.ServiceModel.Configuration.XPathMessageFilterElementCollection" Usage="System.ServiceModel.Configuration.MessageLoggingElement.Filters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filters", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.XPathMessageFilterElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2125b-104">Возвращает объекты XPathFilter, используемые для ведения журнала сообщений.</span><span class="sxs-lookup"><span data-stu-id="2125b-104">Gets the XPathFilter objects that are used for message logging.</span></span></summary>
        <value><span data-ttu-id="2125b-105">Коллекция объектов XPathFilter, используемых для ведения журнала сообщений.</span><span class="sxs-lookup"><span data-stu-id="2125b-105">A collection of XPathFilter objects that are used for message logging.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2125b-106">Фильтры сообщений применяются на уровне службы и транспорта.</span><span class="sxs-lookup"><span data-stu-id="2125b-106">Message filters are applied at the service and transport level.</span></span> <span data-ttu-id="2125b-107">Если в файле конфигурации определены один или несколько фильтров, в журнал записываются только сообщения, соответствующие хотя бы одному из фильтров.</span><span class="sxs-lookup"><span data-stu-id="2125b-107">When one or more filters are defined, only messages that match at least one of the filters are logged.</span></span> <span data-ttu-id="2125b-108">Если фильтры не заданы, в журнал записываются все сообщения.</span><span class="sxs-lookup"><span data-stu-id="2125b-108">If no filter is defined, all messages pass through.</span></span>  
  
 <span data-ttu-id="2125b-109">Фильтры поддерживают полный синтаксис XPath и применяются в том порядке, в котором они записаны в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="2125b-109">Filters support the full XPath syntax, and are applied in the order they appear in the configuration file.</span></span> <span data-ttu-id="2125b-110">Синтаксически неверные фильтры вызывают исключения конфигурации.</span><span class="sxs-lookup"><span data-stu-id="2125b-110">A syntactically incorrect filter results in a configuration exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2125b-111">В следующем примере показано, как настроить фильтр для записи только сообщений с разделом заголовка SOAP.</span><span class="sxs-lookup"><span data-stu-id="2125b-111">The following is an example in configuring a filter that records only messages that have a SOAP Header section.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogEntireMessage">
      <MemberSignature Language="C#" Value="public bool LogEntireMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogEntireMessage" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property LogEntireMessage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogEntireMessage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LogEntireMessage : bool with get, set" Usage="System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logEntireMessage", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2125b-112">Возвращает или задает логическое значение, указывающее, заносится ли в журнал сообщение целиком (текст и заголовок сообщения).</span><span class="sxs-lookup"><span data-stu-id="2125b-112">Gets or sets a value that specifies whether the entire message (message header and body) is logged.</span></span></summary>
        <value><span data-ttu-id="2125b-113">Значение <see langword="true" />, если в журнал записывается все сообщение (заголовок и текст); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2125b-113"><see langword="true" /> if the entire message (message header and body) is logged; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2125b-114">Значением по умолчанию является <see langword="false" />, означающее, что в журнал заносится только заголовок сообщения.</span><span class="sxs-lookup"><span data-stu-id="2125b-114">The default is <see langword="false" />, which means that only the message header is logged.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2125b-115">Действие этого параметра распространяется на все уровни ведения журнала сообщений (службы, транспорта и неправильных сообщений).</span><span class="sxs-lookup"><span data-stu-id="2125b-115">This setting affects all message logging levels (service, transport, and malformed).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogKnownPii">
      <MemberSignature Language="C#" Value="public bool LogKnownPii { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogKnownPii" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii" />
      <MemberSignature Language="VB.NET" Value="Public Property LogKnownPii As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogKnownPii { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LogKnownPii : bool with get, set" Usage="System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("logKnownPii", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2125b-116">Возвращает или задает значение, указывающее, занесен ли в журнал известный идентификатор Pii.</span><span class="sxs-lookup"><span data-stu-id="2125b-116">Gets or sets a value that indicates whether the known Pii identifier is logged.</span></span></summary>
        <value><span data-ttu-id="2125b-117">Значение <see langword="true" />, если известный идентификатор Pii занесен в журнал, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2125b-117"><see langword="true" /> if the known Pii is logged; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMalformedMessages">
      <MemberSignature Language="C#" Value="public bool LogMalformedMessages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogMalformedMessages" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMalformedMessages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogMalformedMessages { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LogMalformedMessages : bool with get, set" Usage="System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logMalformedMessages", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2125b-118">Возвращает или задает значение, указывающее, заносятся ли в журнал неверно сформированные сообщения.</span><span class="sxs-lookup"><span data-stu-id="2125b-118">Gets or sets a value that specifies whether malformed messages are logged.</span></span></summary>
        <value><span data-ttu-id="2125b-119">Значение <see langword="true" />, если неверно сформированные сообщения заносятся в журнал; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2125b-119"><see langword="true" /> if malformed messages are logged; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2125b-120">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2125b-120">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMessagesAtServiceLevel">
      <MemberSignature Language="C#" Value="public bool LogMessagesAtServiceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogMessagesAtServiceLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMessagesAtServiceLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogMessagesAtServiceLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LogMessagesAtServiceLevel : bool with get, set" Usage="System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logMessagesAtServiceLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2125b-121">Возвращает или задает значение, указывающее, выполняется ли трассировка сообщений на уровне службы (перед шифрованием и преобразованиями, связанными с транспортом).</span><span class="sxs-lookup"><span data-stu-id="2125b-121">Gets or sets a value that specifies whether messages are traced at the service level (before encryption and transport-related transforms).</span></span></summary>
        <value><span data-ttu-id="2125b-122">Значение <see langword="true" />, если трассировка сообщений выполняется на уровне службы (перед шифрованием и преобразованиями, связанными с транспортом); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2125b-122"><see langword="true" /> if messages are traced at the service level (before encryption and transport-related transforms); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2125b-123">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2125b-123">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMessagesAtTransportLevel">
      <MemberSignature Language="C#" Value="public bool LogMessagesAtTransportLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogMessagesAtTransportLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMessagesAtTransportLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogMessagesAtTransportLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LogMessagesAtTransportLevel : bool with get, set" Usage="System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logMessagesAtTransportLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2125b-124">Возвращает или задает значение, указывающее, выполняется ли трассировка сообщений на уровне транспорта.</span><span class="sxs-lookup"><span data-stu-id="2125b-124">Gets or sets a value that specifies whether messages are traced at the transport level.</span></span></summary>
        <value><span data-ttu-id="2125b-125">Значение <see langword="true" />, если трассировка сообщений выполняется на уровне транспорта; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2125b-125"><see langword="true" /> if messages are traced at the transport level; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2125b-126">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2125b-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2125b-127">Применяются все фильтры, указанные в файле конфигурации, и трассируются только те сообщения, которые соответствуют данным фильтрам.</span><span class="sxs-lookup"><span data-stu-id="2125b-127">Any filters specified in the configuration file are applied, and only messages that match the filters are traced.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxMessagesToLog">
      <MemberSignature Language="C#" Value="public int MaxMessagesToLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxMessagesToLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxMessagesToLog As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxMessagesToLog { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxMessagesToLog : int with get, set" Usage="System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxMessagesToLog", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2125b-128">Возвращает или задает значение, указывающее максимальное количество записываемых в журнал сообщений.</span><span class="sxs-lookup"><span data-stu-id="2125b-128">Gets or sets a value that specifies the maximum number of messages to log.</span></span></summary>
        <value><span data-ttu-id="2125b-129">Максимальное количество записываемых в журнал сообщений.</span><span class="sxs-lookup"><span data-stu-id="2125b-129">The maximum number of messages to log.</span></span> <span data-ttu-id="2125b-130">Значение по умолчанию — 1000.</span><span class="sxs-lookup"><span data-stu-id="2125b-130">The default is 1000.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSizeOfMessageToLog">
      <MemberSignature Language="C#" Value="public int MaxSizeOfMessageToLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSizeOfMessageToLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxSizeOfMessageToLog As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxSizeOfMessageToLog { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxSizeOfMessageToLog : int with get, set" Usage="System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxSizeOfMessageToLog", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2125b-131">Возвращает или задает значение, указывающее максимальный размер (в байтах) записываемого в журнал сообщения.</span><span class="sxs-lookup"><span data-stu-id="2125b-131">Gets or sets a value that specifies the maximum size, in bytes, of a message to log.</span></span></summary>
        <value><span data-ttu-id="2125b-132">Максимальный размер (в байтах) записываемого в журнал сообщения.</span><span class="sxs-lookup"><span data-stu-id="2125b-132">The maximum size, in bytes, of a message to log.</span></span> <span data-ttu-id="2125b-133">Сообщения, размер которых превышает данное ограничение, в журнал не заносятся.</span><span class="sxs-lookup"><span data-stu-id="2125b-133">Messages larger than the limit are not logged.</span></span> <span data-ttu-id="2125b-134">Действие этого параметра распространяется на все уровни трассировки.</span><span class="sxs-lookup"><span data-stu-id="2125b-134">This setting affects all trace levels.</span></span> <span data-ttu-id="2125b-135">Значение по умолчанию — "Int32.MaxValue".</span><span class="sxs-lookup"><span data-stu-id="2125b-135">The default is Int32.MaxValue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.ServiceModel.Configuration.MessageLoggingElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
