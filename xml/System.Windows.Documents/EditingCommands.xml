<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e548e08b556eb3bea554b24d86bbc3a1cc4dbe43" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69208816" /></Metadata><TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6f755-101">Предоставляет стандартный набор команд изменения.</span><span class="sxs-lookup"><span data-stu-id="6f755-101">Provides a standard set of editing related commands.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-102">В следующей таблице показаны команды редактирования и связанные с ними жесты клавиш по умолчанию (с именами ключей <xref:System.Windows.Input.Key> из <xref:System.Windows.Input.ModifierKeys> перечислений и).</span><span class="sxs-lookup"><span data-stu-id="6f755-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="6f755-103">Команда редактирования</span><span class="sxs-lookup"><span data-stu-id="6f755-103">Editing command</span></span>|<span data-ttu-id="6f755-104">Жест клавиши по умолчанию</span><span class="sxs-lookup"><span data-stu-id="6f755-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="6f755-105">нет жеста клавиши по умолчанию</span><span class="sxs-lookup"><span data-stu-id="6f755-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="6f755-106">нет жеста клавиши по умолчанию</span><span class="sxs-lookup"><span data-stu-id="6f755-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="6f755-107">Команды перемещения курсора и расширение выбора команды разделяют общий набор жестов клавиш по умолчанию. общее различие заключается в добавлении <xref:System.Windows.Input.ModifierKeys.Shift> ключа для различения команд выбора из команд перемещения курсора.</span><span class="sxs-lookup"><span data-stu-id="6f755-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="6f755-108">Например, <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> команда имеет <xref:System.Windows.Input.ModifierKeys.Shift> <xref:System.Windows.Input.Key.Left>жест клавиши по умолчанию, а соответствующая <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> команда имеет клавишу + <xref:System.Windows.Input.Key.Left>по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6f755-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="6f755-109">В общем случае определения команд, предоставляемые <xref:System.Windows.Documents.EditingCommands> классом, не используют параметры команды `parameter` (параметр, ожидаемый <xref:System.Windows.Input.ICommand.Execute%2A> методом).</span><span class="sxs-lookup"><span data-stu-id="6f755-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="6f755-110">Дополнительные сведения о командах и командах см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6f755-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f755-111">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-112">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-113">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-114">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-115">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-116">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-117">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-118">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-119">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />, которая запрашивает, чтобы текущий абзац или выборка абзацев выравнивались по центру.</span><span class="sxs-lookup"><span data-stu-id="6f755-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span></span></summary>
        <value><span data-ttu-id="6f755-120">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-120">The requested command.</span></span>  <span data-ttu-id="6f755-121">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="E" /></span><span class="sxs-lookup"><span data-stu-id="6f755-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-122">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="6f755-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6f755-123">Если эта команда вызывается для частичного выделения содержимого в абзаце (включая пустое выделение, в котором курсор находится внутри абзаца), запрошенный результат применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="6f755-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6f755-124">Если эта команда вызывается для выделения, охватывающего несколько абзацев, то этот результат применяется ко всему содержимому каждого абзаца, участвующего в выборе.</span><span class="sxs-lookup"><span data-stu-id="6f755-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="6f755-125">На следующем рисунке показан пример содержимого с выравниванием по центру.</span><span class="sxs-lookup"><span data-stu-id="6f755-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="6f755-126">![Снимок экрана Значение свойства TextAlign для снимка центра]:(~/add/media/flowdoc-textalign-center.png " Свойство TextAlign для значения Center")</span><span class="sxs-lookup"><span data-stu-id="6f755-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="6f755-127">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-128">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-129">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-130">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-131">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-132">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-133">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-134">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-135">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-136">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-137">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />, которая запрашивает выравнивание данного абзаца или выборки абзацев.</span><span class="sxs-lookup"><span data-stu-id="6f755-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span></span></summary>
        <value><span data-ttu-id="6f755-138">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-138">The requested command.</span></span>  <span data-ttu-id="6f755-139">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="J" /></span><span class="sxs-lookup"><span data-stu-id="6f755-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-140">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="6f755-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6f755-141">Если эта команда вызывается для частичного выделения содержимого в абзаце (включая пустое выделение, в котором курсор находится внутри абзаца), запрошенный результат применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="6f755-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6f755-142">Если эта команда вызывается для выделения, охватывающего несколько абзацев, то этот результат применяется ко всем абзацам в выделенном фрагменте.</span><span class="sxs-lookup"><span data-stu-id="6f755-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="6f755-143">Когда содержимое выравнивается по ширине, интервал по горизонтали в каждой строке содержимого корректируется таким образом, чтобы выровненные линии были одинаковыми или близкими к ширине.</span><span class="sxs-lookup"><span data-stu-id="6f755-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="6f755-144">Обычно содержимое выравнивается для создания гладких краев на сторонах содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="6f755-145">Так как часто бывает короче остальных, последняя строка в абзаце может остаться невыровненной после вызова этой команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="6f755-146">На следующем рисунке показано невыровненное (выровненное по левому краю) содержимое.</span><span class="sxs-lookup"><span data-stu-id="6f755-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="6f755-147">![Снимок экрана Содержимое не выровнено](~/add/media/content-unjustified.png "на снимке экрана: Содержимое не выровнено")</span><span class="sxs-lookup"><span data-stu-id="6f755-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="6f755-148">На следующем рисунке показано то же содержимое после выравнивания.</span><span class="sxs-lookup"><span data-stu-id="6f755-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="6f755-149">![Снимок экрана: текст, выровненный по ширине содержимого] (~/add/media/content-justified.png "Снимок экрана: текст, выровненный по ширине содержимого")</span><span class="sxs-lookup"><span data-stu-id="6f755-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="6f755-150">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-151">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-152">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-153">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-154">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-155">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-156">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-157">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-158">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-159">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-160">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-161">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />, которая запрашивает выравнивание по левому краю выборки содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span></span></summary>
        <value><span data-ttu-id="6f755-162">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-162">The requested command.</span></span>  <span data-ttu-id="6f755-163">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="L" /></span><span class="sxs-lookup"><span data-stu-id="6f755-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-164">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="6f755-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6f755-165">Если эта команда вызывается для частичного выделения содержимого в абзаце (включая пустое выделение, в котором курсор находится внутри абзаца), запрошенный результат применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="6f755-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6f755-166">Если эта команда вызывается для выделения, охватывающего несколько абзацев, то этот результат применяется ко всему содержимому каждого абзаца, участвующего в выборе.</span><span class="sxs-lookup"><span data-stu-id="6f755-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="6f755-167">На следующем рисунке показан пример содержимого, выданного по левому краю.</span><span class="sxs-lookup"><span data-stu-id="6f755-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="6f755-168">![Снимок экрана Значение свойства TextAlign для левого](~/add/media/flowdoc-textalign-left.png "снимка экрана: TextAlign значение свойства Left")</span><span class="sxs-lookup"><span data-stu-id="6f755-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="6f755-169">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-170">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-171">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-172">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-173">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-174">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-175">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-176">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-177">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-178">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-179">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-180">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" />, которая запрашивает выравнивание по правому краю выборки содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span></span></summary>
        <value><span data-ttu-id="6f755-181">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-181">The requested command.</span></span>  <span data-ttu-id="6f755-182">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="R" /></span><span class="sxs-lookup"><span data-stu-id="6f755-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-183">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="6f755-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6f755-184">Если эта команда вызывается для частичного выделения содержимого в абзаце (включая пустое выделение, в котором курсор находится внутри абзаца), запрошенный результат применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="6f755-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6f755-185">Если эта команда вызывается для выделения, охватывающего несколько абзацев, то этот результат применяется ко всему содержимому каждого абзаца, участвующего в выборе.</span><span class="sxs-lookup"><span data-stu-id="6f755-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="6f755-186">На следующем рисунке показан пример содержимого, выходящего по правому краю.</span><span class="sxs-lookup"><span data-stu-id="6f755-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="6f755-187">![Снимок экрана Значение TextAlign правильного](~/add/media/flowdoc-textalign-right.png "снимка экрана: TextAlign значение справа")</span><span class="sxs-lookup"><span data-stu-id="6f755-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="6f755-188">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-189">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-190">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-191">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-192">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-193">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-194">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-195">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-196">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-197">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-198">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-199">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.Backspace" />, которая запрашивает нажатие клавиши "backspace" в текущей позиции или в отношении текущей выборки.</span><span class="sxs-lookup"><span data-stu-id="6f755-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="6f755-200">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-200">The requested command.</span></span>  <span data-ttu-id="6f755-201">Знаком клавиши по умолчанию для данной команды является <see langword="Backspace" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-201">The default key gesture for this command is <see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-202">При вызове для пустого выделения эта команда удаляет разделитель символов или абзаца непосредственно перед курсором.</span><span class="sxs-lookup"><span data-stu-id="6f755-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="6f755-203">При вызове для непустого выделения эта команда удаляет выбранный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="6f755-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="6f755-204">Эта команда оставляет все форматирование из удаленного выделения для содержимого, которое сразу же вставляется в то же расположение после вызова этой команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="6f755-205">Сравните с <xref:System.Windows.Documents.EditingCommands.Delete%2A> командой, которая не удерживает предыдущее форматирование.</span><span class="sxs-lookup"><span data-stu-id="6f755-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="6f755-206">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-207">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-208">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-209">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-210">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-211">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-212">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-213">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-214">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-215">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-216">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-217">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />, которая запрашивает исправление любой орфографической ошибки в слове в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="6f755-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span></span></summary>
        <value><span data-ttu-id="6f755-218">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-218">The requested command.</span></span>  <span data-ttu-id="6f755-219">Для данной команды отсутствует знак клавиши по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6f755-219">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-220">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-221">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-222">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />, которая запрашивает уменьшение размера шрифта для текущей выборки на 1 пкт.</span><span class="sxs-lookup"><span data-stu-id="6f755-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span></span></summary>
        <value><span data-ttu-id="6f755-223">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-223">The requested command.</span></span>  <span data-ttu-id="6f755-224">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="OemOpenBrackets" /></span><span class="sxs-lookup"><span data-stu-id="6f755-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-225">Если эта команда вызывается для пустого выделения, в котором курсор находится внутри слова, выбор автоматически расширяется, чтобы применить команду ко всему слову.</span><span class="sxs-lookup"><span data-stu-id="6f755-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="6f755-226">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-227">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-228">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-229">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-230">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-231">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-232">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-233">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-234">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-235">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-236">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-237">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />, которая запрашивает уменьшение отступа для текущего абзаца на одну позицию табуляции.</span><span class="sxs-lookup"><span data-stu-id="6f755-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="6f755-238">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-238">The requested command.</span></span>  <span data-ttu-id="6f755-239">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Shift" /> + <see langword="T" /></span><span class="sxs-lookup"><span data-stu-id="6f755-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-240">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-241">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6f755-242">Эта команда не влияет на текстовый элемент, если <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> свойство текстового элемента не имеет `true`значение.</span><span class="sxs-lookup"><span data-stu-id="6f755-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-243">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-244">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-245">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-246">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-247">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-248">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-249">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-250">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-251">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-252">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.Delete" />, которая запрашивает удаление текущей выборки.</span><span class="sxs-lookup"><span data-stu-id="6f755-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span></span></summary>
        <value><span data-ttu-id="6f755-253">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-253">The requested command.</span></span>  <span data-ttu-id="6f755-254">Знаком клавиши по умолчанию для данной команды является <see langword="Delete" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-254">The default key gesture for this command is <see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-255">Эта команда отменяет все форматирование из удаленного выделения.</span><span class="sxs-lookup"><span data-stu-id="6f755-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="6f755-256">Сравните с <xref:System.Windows.Documents.EditingCommands.Backspace%2A> командой, которая оставляет все форматирование из удаленного выделения для содержимого, которое сразу же вставляется в то же место после вызова этой команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="6f755-257">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-258">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-259">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-260">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-261">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-262">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-263">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-264">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-265">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-266">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-267">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-268">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />, которая запрашивает удаление следующего слова (относительно текущей позиции).</span><span class="sxs-lookup"><span data-stu-id="6f755-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="6f755-269">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-269">The requested command.</span></span>  <span data-ttu-id="6f755-270">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Delete" /></span><span class="sxs-lookup"><span data-stu-id="6f755-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-271">Если курсор находится внутри слова, то оставшаяся часть слова между текущей позицией и концом слова удаляется.</span><span class="sxs-lookup"><span data-stu-id="6f755-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="6f755-272">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-273">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-274">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-275">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-276">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-277">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-278">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-279">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-280">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-281">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-282">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-283">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />, которая запрашивает удаление предыдущего слова (относительно текущей позиции).</span><span class="sxs-lookup"><span data-stu-id="6f755-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="6f755-284">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-284">The requested command.</span></span>  <span data-ttu-id="6f755-285">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Backspace" /></span><span class="sxs-lookup"><span data-stu-id="6f755-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-286">Если курсор находится внутри слова, то оставшаяся часть слова между текущей позицией и началом слова удаляется.</span><span class="sxs-lookup"><span data-stu-id="6f755-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="6f755-287">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-288">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-289">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-290">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-291">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-292">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-293">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-294">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-295">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-296">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-297">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-298">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />, которая запрашивает вставку разрыва строки в текущей позиции или в отношении текущей выборки.</span><span class="sxs-lookup"><span data-stu-id="6f755-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="6f755-299">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-299">The requested command.</span></span>  <span data-ttu-id="6f755-300">Жестом клавиши по умолчанию для этой <see langword="Shift" />команды является. + <see langword="Enter" /></span><span class="sxs-lookup"><span data-stu-id="6f755-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-301">Для редакторов, поддерживающих содержимое нефиксированного формата, например <xref:System.Windows.Controls.RichTextBox>, эта команда <xref:System.Windows.Documents.LineBreak> приводит к вставке элемента в текущую точку.</span><span class="sxs-lookup"><span data-stu-id="6f755-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="6f755-302">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-303">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox> и. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="6f755-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-304">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-305">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-306">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-307">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-308">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-309">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-310">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-311">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-312">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-313">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />, которая запрашивает вставку разрыва абзаца в текущей позиции или в отношении текущей выборки.</span><span class="sxs-lookup"><span data-stu-id="6f755-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="6f755-314">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-314">The requested command.</span></span>  <span data-ttu-id="6f755-315">Знаком клавиши по умолчанию для данной команды является <see langword="Enter" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-315">The default key gesture for this command is <see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-316">Эта команда эквивалентна пользователю, нажимая клавишу ВВОД.</span><span class="sxs-lookup"><span data-stu-id="6f755-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="6f755-317">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-318">Эта команда изначально <xref:System.Windows.Controls.RichTextBox> поддерживается и <xref:System.Windows.Controls.TextBox> (если <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> свойство имеет `true`значение).</span><span class="sxs-lookup"><span data-stu-id="6f755-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6f755-319">Эта команда не влияет на текстовый элемент, если <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> свойство текстового элемента не имеет `true`значение.</span><span class="sxs-lookup"><span data-stu-id="6f755-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-320">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-321">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-322">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-323">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-324">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-325">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-326">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-327">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-328">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-329">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />, которая запрашивает игнорирование любых орфографических ошибок в словах в текущей позиции или в текущей выборке.</span><span class="sxs-lookup"><span data-stu-id="6f755-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span></span></summary>
        <value><span data-ttu-id="6f755-330">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-330">The requested command.</span></span>  <span data-ttu-id="6f755-331">Для данной команды отсутствует знак клавиши по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6f755-331">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-332">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-333">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-334">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />, которая запрашивает увеличения размера шрифта для текущей выборки на 1 пкт.</span><span class="sxs-lookup"><span data-stu-id="6f755-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span></span></summary>
        <value><span data-ttu-id="6f755-335">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-335">The requested command.</span></span>  <span data-ttu-id="6f755-336">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="OemCloseBrackets" /></span><span class="sxs-lookup"><span data-stu-id="6f755-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-337">Если эта команда вызывается для пустого выделения, где курсор находится внутри слова, выбор расширяется для применения команды ко всему слову.</span><span class="sxs-lookup"><span data-stu-id="6f755-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="6f755-338">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-339">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-340">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-341">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-342">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-343">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-344">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-345">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-346">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-347">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-348">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-349">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />, которая запрашивает увеличение отступа для текущего абзаца на одну позицию табуляции.</span><span class="sxs-lookup"><span data-stu-id="6f755-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="6f755-350">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-350">The requested command.</span></span>  <span data-ttu-id="6f755-351">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="T" /></span><span class="sxs-lookup"><span data-stu-id="6f755-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-352">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-353">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6f755-354">Эта команда не влияет на текстовый элемент, если <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> свойство текстового элемента не имеет `true`значение.</span><span class="sxs-lookup"><span data-stu-id="6f755-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-355">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-356">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-357">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-358">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-359">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-360">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-361">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-362">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-363">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-364">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />, которая запрашивает переход курсора вниз на одну строку.</span><span class="sxs-lookup"><span data-stu-id="6f755-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span></span></summary>
        <value><span data-ttu-id="6f755-365">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-365">The requested command.</span></span>  <span data-ttu-id="6f755-366">Знаком клавиши по умолчанию для данной команды является <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-366">The default key gesture for this command is <see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-367">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-368">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox> и. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="6f755-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-369">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-370">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-371">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-372">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-373">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-374">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-375">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-376">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-377">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-378">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />, которая запрашивает переход курсора вниз на одну страницу.</span><span class="sxs-lookup"><span data-stu-id="6f755-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span></span></summary>
        <value><span data-ttu-id="6f755-379">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-379">The requested command.</span></span>  <span data-ttu-id="6f755-380">Знаком клавиши по умолчанию для данной команды является <see langword="PageDown" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-380">The default key gesture for this command is <see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-381">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-382">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox> и. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="6f755-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-383">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-384">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-385">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-386">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-387">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-388">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-389">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-390">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-391">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-392">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />, которая запрашивает переход курсора вниз на один абзац.</span><span class="sxs-lookup"><span data-stu-id="6f755-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="6f755-393">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-393">The requested command.</span></span>  <span data-ttu-id="6f755-394">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Down" /></span><span class="sxs-lookup"><span data-stu-id="6f755-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-395">Эта команда размещает курсор в начале следующего абзаца.</span><span class="sxs-lookup"><span data-stu-id="6f755-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="6f755-396">Эта команда ведет себя так же <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> , как при вызове <xref:System.Windows.Controls.TextBox>для.</span><span class="sxs-lookup"><span data-stu-id="6f755-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="6f755-397">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-398">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox> и. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="6f755-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-399">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-400">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-401">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-402">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-403">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-404">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-405">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-406">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-407">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-408">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />, которая запрашивает переход курсора влево на один символ.</span><span class="sxs-lookup"><span data-stu-id="6f755-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span></span></summary>
        <value><span data-ttu-id="6f755-409">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-409">The requested command.</span></span>  <span data-ttu-id="6f755-410">Знаком клавиши по умолчанию для данной команды является <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-410">The default key gesture for this command is <see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-411">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-412">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-413">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-414">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-415">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-416">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-417">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-418">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-419">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-420">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-421">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-422">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />, которая запрашивает переход курсора влево на одно слово.</span><span class="sxs-lookup"><span data-stu-id="6f755-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span></span></summary>
        <value><span data-ttu-id="6f755-423">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-423">The requested command.</span></span>  <span data-ttu-id="6f755-424">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Left" /></span><span class="sxs-lookup"><span data-stu-id="6f755-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-425">Если курсор находится внутри слова, эта команда перемещает курсор в начало этого слова.</span><span class="sxs-lookup"><span data-stu-id="6f755-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="6f755-426">В противном случае эта команда перемещает курсор в начало предыдущего слова.</span><span class="sxs-lookup"><span data-stu-id="6f755-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="6f755-427">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-428">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-429">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-430">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-431">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-432">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-433">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-434">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-435">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-436">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-437">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-438">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />, которая запрашивает переход курсора вправо на один символ.</span><span class="sxs-lookup"><span data-stu-id="6f755-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span></span></summary>
        <value><span data-ttu-id="6f755-439">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-439">The requested command.</span></span>  <span data-ttu-id="6f755-440">Знаком клавиши по умолчанию для данной команды является <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-440">The default key gesture for this command is <see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-441">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-442">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-443">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-444">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-445">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-446">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-447">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-448">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-449">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-450">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-451">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-452">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />, которая запрашивает переход курсора вправо на одно слово.</span><span class="sxs-lookup"><span data-stu-id="6f755-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span></span></summary>
        <value><span data-ttu-id="6f755-453">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-453">The requested command.</span></span>  <span data-ttu-id="6f755-454">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Right" /></span><span class="sxs-lookup"><span data-stu-id="6f755-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-455">Если курсор находится внутри слова, эта команда перемещает курсор в конец этого слова.</span><span class="sxs-lookup"><span data-stu-id="6f755-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="6f755-456">В противном случае эта команда перемещает курсор в начало следующего слова.</span><span class="sxs-lookup"><span data-stu-id="6f755-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="6f755-457">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-458">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-459">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-460">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-461">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-462">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-463">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-464">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-465">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-466">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-467">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-468">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />, которая запрашивает перемещение курсора в конец содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span></span></summary>
        <value><span data-ttu-id="6f755-469">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-469">The requested command.</span></span>  <span data-ttu-id="6f755-470">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="End" /></span><span class="sxs-lookup"><span data-stu-id="6f755-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-471">*Текстовый контейнер* — это элемент, который формирует конечную границу для содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="6f755-472"><xref:System.Windows.Controls.TextBlock>и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="6f755-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="6f755-473">Содержимое, которое совместно содержится в контейнере текста, называется документом. \*\*</span><span class="sxs-lookup"><span data-stu-id="6f755-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="6f755-474">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-475">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-476">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-477">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-478">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-479">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-480">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-481">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-482">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-483">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-484">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-485">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />, которая запрашивает перемещение курсора в начало содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="6f755-486">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-486">The requested command.</span></span>  <span data-ttu-id="6f755-487">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Home" /></span><span class="sxs-lookup"><span data-stu-id="6f755-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-488">*Текстовый контейнер* — это элемент, который формирует конечную границу для содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="6f755-489"><xref:System.Windows.Controls.TextBlock>и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="6f755-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="6f755-490">Содержимое, которое совместно содержится в контейнере текста, называется документом. \*\*</span><span class="sxs-lookup"><span data-stu-id="6f755-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="6f755-491">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-492">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-493">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-494">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-495">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-496">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-497">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-498">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-499">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-500">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-501">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-502">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />, которая запрашивает перемещение курсора в конец текущей строки.</span><span class="sxs-lookup"><span data-stu-id="6f755-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="6f755-503">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-503">The requested command.</span></span>  <span data-ttu-id="6f755-504">Знаком клавиши по умолчанию для данной команды является <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-504">The default key gesture for this command is <see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-505">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-506">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-507">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-508">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-509">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-510">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-511">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-512">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-513">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-514">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-515">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-516">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />, которая запрашивает перемещение курсора в начало текущей строки.</span><span class="sxs-lookup"><span data-stu-id="6f755-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="6f755-517">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-517">The requested command.</span></span>  <span data-ttu-id="6f755-518">Знаком клавиши по умолчанию для данной команды является <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-518">The default key gesture for this command is <see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-519">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-520">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-521">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-522">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-523">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-524">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-525">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-526">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-527">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-528">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-529">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-530">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />, которая запрашивает переход курсора вверх на одну строку.</span><span class="sxs-lookup"><span data-stu-id="6f755-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span></span></summary>
        <value><span data-ttu-id="6f755-531">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-531">The requested command.</span></span>  <span data-ttu-id="6f755-532">Знаком клавиши по умолчанию для данной команды является <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-532">The default key gesture for this command is <see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-533">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-534">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox> и. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="6f755-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-535">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-536">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-537">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-538">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-539">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-540">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-541">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-542">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-543">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-544">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />, которая запрашивает переход курсора вверх на одну страницу.</span><span class="sxs-lookup"><span data-stu-id="6f755-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span></span></summary>
        <value><span data-ttu-id="6f755-545">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-545">The requested command.</span></span>  <span data-ttu-id="6f755-546">Знаком клавиши по умолчанию для данной команды является <see langword="PageUp" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-546">The default key gesture for this command is <see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-547">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-548">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox> и. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="6f755-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-549">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-550">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-551">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-552">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-553">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-554">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-555">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-556">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-557">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-558">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />, которая запрашивает переход курсора вверх на один абзац.</span><span class="sxs-lookup"><span data-stu-id="6f755-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="6f755-559">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-559">The requested command.</span></span>  <span data-ttu-id="6f755-560">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Up" /></span><span class="sxs-lookup"><span data-stu-id="6f755-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-561">Эта команда размещает курсор в начале следующего абзаца.</span><span class="sxs-lookup"><span data-stu-id="6f755-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="6f755-562">Эта команда ведет себя так же <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> , как при вызове <xref:System.Windows.Controls.TextBox>для.</span><span class="sxs-lookup"><span data-stu-id="6f755-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="6f755-563">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-564">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox> и. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="6f755-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-565">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-566">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-567">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-568">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-569">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-570">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-571">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-572">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-573">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-574">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />, которая запрашивает расширение текущей выборки на одну строку вниз.</span><span class="sxs-lookup"><span data-stu-id="6f755-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span></span></summary>
        <value><span data-ttu-id="6f755-575">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-575">The requested command.</span></span>  <span data-ttu-id="6f755-576">Жестом клавиши по умолчанию для этой <see langword="Shift" />команды является. + <see langword="Down" /></span><span class="sxs-lookup"><span data-stu-id="6f755-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-577">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-578">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-579">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-580">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-581">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-582">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-583">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-584">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-585">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-586">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-587">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-588">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />, которая запрашивает расширение текущей выборки на одну страницу вниз.</span><span class="sxs-lookup"><span data-stu-id="6f755-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span></span></summary>
        <value><span data-ttu-id="6f755-589">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-589">The requested command.</span></span>  <span data-ttu-id="6f755-590">Жестом клавиши по умолчанию для этой <see langword="Shift" />команды является. + <see langword="PageDown" /></span><span class="sxs-lookup"><span data-stu-id="6f755-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-591">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-592">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-593">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-594">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-595">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-596">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-597">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-598">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-599">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-600">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-601">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-602">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />, которая запрашивает расширение текущей выборки на один абзац вниз.</span><span class="sxs-lookup"><span data-stu-id="6f755-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="6f755-603">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-603">The requested command.</span></span>  <span data-ttu-id="6f755-604">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Shift" /> + <see langword="Down" /></span><span class="sxs-lookup"><span data-stu-id="6f755-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-605">Эта команда расширяет выделенный фрагмент до начала следующего абзаца.</span><span class="sxs-lookup"><span data-stu-id="6f755-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="6f755-606">В противном случае эта команда расширяет выбор до конца текущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="6f755-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="6f755-607">Расширенное выделение включает разрыв абзаца, обозначающий конец абзаца.</span><span class="sxs-lookup"><span data-stu-id="6f755-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="6f755-608">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-609">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-610">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-611">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-612">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-613">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-614">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-615">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-616">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-617">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-618">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-619">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />, которая запрашивает расширение текущей выборки на один символ влево.</span><span class="sxs-lookup"><span data-stu-id="6f755-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span></span></summary>
        <value><span data-ttu-id="6f755-620">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-620">The requested command.</span></span>  <span data-ttu-id="6f755-621">Жестом клавиши по умолчанию для этой <see langword="Shift" />команды является. + <see langword="Left" /></span><span class="sxs-lookup"><span data-stu-id="6f755-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-622">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-623">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-624">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-625">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-626">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-627">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-628">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-629">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-630">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-631">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-632">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-633">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />, которая запрашивает расширение текущей выборки на одно слово влево.</span><span class="sxs-lookup"><span data-stu-id="6f755-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span></span></summary>
        <value><span data-ttu-id="6f755-634">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-634">The requested command.</span></span>  <span data-ttu-id="6f755-635">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Shift" /> + <see langword="Left" /></span><span class="sxs-lookup"><span data-stu-id="6f755-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-636">Если курсор находится внутри слова, эта команда расширяет выделение до начала этого слова.</span><span class="sxs-lookup"><span data-stu-id="6f755-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="6f755-637">В противном случае эта команда расширяет выбор до начала предыдущего слова.</span><span class="sxs-lookup"><span data-stu-id="6f755-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="6f755-638">Расширенное выделение не включает в себя разделитель слов.</span><span class="sxs-lookup"><span data-stu-id="6f755-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="6f755-639">Сравните с <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, который включает разделитель слов в развернутом выделенном фрагменте.</span><span class="sxs-lookup"><span data-stu-id="6f755-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="6f755-640">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-641">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-642">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-643">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-644">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-645">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-646">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-647">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-648">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-649">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-650">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-651">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />, которая запрашивает расширение текущей выборки на один символ вправо.</span><span class="sxs-lookup"><span data-stu-id="6f755-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span></span></summary>
        <value><span data-ttu-id="6f755-652">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-652">The requested command.</span></span>  <span data-ttu-id="6f755-653">Жестом клавиши по умолчанию для этой <see langword="Shift" />команды является. + <see langword="Right" /></span><span class="sxs-lookup"><span data-stu-id="6f755-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-654">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-655">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-656">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-657">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-658">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-659">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-660">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-661">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-662">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-663">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-664">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-665">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />, которая запрашивает расширение текущей выборки на одно слово вправо.</span><span class="sxs-lookup"><span data-stu-id="6f755-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span></span></summary>
        <value><span data-ttu-id="6f755-666">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-666">The requested command.</span></span>  <span data-ttu-id="6f755-667">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Shift" /> + <see langword="Right" /></span><span class="sxs-lookup"><span data-stu-id="6f755-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-668">Если курсор находится внутри слова, эта команда расширяет выделение до конца этого слова.</span><span class="sxs-lookup"><span data-stu-id="6f755-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="6f755-669">В противном случае эта команда расширяет выделение до конца следующего слова.</span><span class="sxs-lookup"><span data-stu-id="6f755-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="6f755-670">Расширенное выделение включает в себя разделитель слов.</span><span class="sxs-lookup"><span data-stu-id="6f755-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="6f755-671">Сравните с <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> тем, что не включает разделитель слов в развернутом фрагменте.</span><span class="sxs-lookup"><span data-stu-id="6f755-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="6f755-672">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-673">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-674">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-675">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-676">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-677">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-678">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-679">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-680">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-681">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-682">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-683">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />, которая запрашивает расширение текущей выборки в конец содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span></span></summary>
        <value><span data-ttu-id="6f755-684">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-684">The requested command.</span></span>  <span data-ttu-id="6f755-685">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Shift" /> + <see langword="End" /></span><span class="sxs-lookup"><span data-stu-id="6f755-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-686">*Текстовый контейнер* — это элемент, который формирует конечную границу для содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="6f755-687"><xref:System.Windows.Controls.TextBlock>и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="6f755-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="6f755-688">Содержимое, которое совместно содержится в контейнере текста, называется документом. \*\*</span><span class="sxs-lookup"><span data-stu-id="6f755-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="6f755-689">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-690">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-691">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-692">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-693">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-694">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-695">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-696">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-697">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-698">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-699">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-700">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />, которая запрашивает расширение текущей выборки в начало содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="6f755-701">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-701">The requested command.</span></span>  <span data-ttu-id="6f755-702">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Shift" /> + <see langword="Home" /></span><span class="sxs-lookup"><span data-stu-id="6f755-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-703">*Текстовый контейнер* — это элемент, который формирует конечную границу для содержимого.</span><span class="sxs-lookup"><span data-stu-id="6f755-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="6f755-704"><xref:System.Windows.Controls.TextBlock>и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="6f755-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="6f755-705">Содержимое, которое совместно содержится в контейнере текста, называется документом. \*\*</span><span class="sxs-lookup"><span data-stu-id="6f755-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="6f755-706">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-707">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-708">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-709">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-710">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-711">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-712">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-713">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-714">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-715">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-716">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-717">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />, которая запрашивает расширение текущей выборки в конец текущей строки.</span><span class="sxs-lookup"><span data-stu-id="6f755-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="6f755-718">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-718">The requested command.</span></span>  <span data-ttu-id="6f755-719">Жестом клавиши по умолчанию для этой <see langword="Shift" />команды является. + <see langword="End" /></span><span class="sxs-lookup"><span data-stu-id="6f755-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-720">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-721">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-722">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-723">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-724">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-725">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-726">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-727">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-728">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-729">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-730">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-731">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />, которая запрашивает расширение текущей выборки в начало текущей строки.</span><span class="sxs-lookup"><span data-stu-id="6f755-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="6f755-732">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-732">The requested command.</span></span>  <span data-ttu-id="6f755-733">Жестом клавиши по умолчанию для этой <see langword="Shift" />команды является. + <see langword="Home" /></span><span class="sxs-lookup"><span data-stu-id="6f755-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-734">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-735">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-736">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-737">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-738">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-739">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-740">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-741">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-742">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-743">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-744">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-745">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />, которая запрашивает расширение текущей выборки на одну строку вверх.</span><span class="sxs-lookup"><span data-stu-id="6f755-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span></span></summary>
        <value><span data-ttu-id="6f755-746">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-746">The requested command.</span></span>  <span data-ttu-id="6f755-747">Жестом клавиши по умолчанию для этой <see langword="Shift" />команды является. + <see langword="Up" /></span><span class="sxs-lookup"><span data-stu-id="6f755-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-748">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-749">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-750">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-751">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-752">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-753">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-754">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-755">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-756">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-757">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-758">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-759">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />, которая запрашивает расширение текущей выборки на одну страницу вверх.</span><span class="sxs-lookup"><span data-stu-id="6f755-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span></span></summary>
        <value><span data-ttu-id="6f755-760">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-760">The requested command.</span></span>  <span data-ttu-id="6f755-761">Жестом клавиши по умолчанию для этой <see langword="Shift" />команды является. + <see langword="PageUp" /></span><span class="sxs-lookup"><span data-stu-id="6f755-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-762">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-763">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-764">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-765">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-766">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-767">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-768">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-769">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-770">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-771">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-772">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-773">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />, которая запрашивает расширение текущей выборки на один абзац вверх.</span><span class="sxs-lookup"><span data-stu-id="6f755-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="6f755-774">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-774">The requested command.</span></span>  <span data-ttu-id="6f755-775">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Shift" /> + <see langword="Up" /></span><span class="sxs-lookup"><span data-stu-id="6f755-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-776">Если курсор находится в начале абзаца, эта команда расширяет выделенный фрагмент до начала предыдущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="6f755-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="6f755-777">В противном случае эта команда расширяет выделенный фрагмент до начала текущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="6f755-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="6f755-778">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-779">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-780">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-781">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-782">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-783">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-784">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-785">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-786">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-787">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-788">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-789">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span></span></summary>
        <value><span data-ttu-id="6f755-790">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-790">The requested command.</span></span>  <span data-ttu-id="6f755-791">Жестом клавиши по умолчанию для этой <see langword="Shift" />команды является. + <see langword="Tab" /></span><span class="sxs-lookup"><span data-stu-id="6f755-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-792">Поведение этой команды зависит от текущего выбора.</span><span class="sxs-lookup"><span data-stu-id="6f755-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="6f755-793">Если выделение не пусто, эта команда эквивалентна <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="6f755-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="6f755-794">Если курсор находится в ячейке таблицы (представленной <xref:System.Windows.Documents.TableCell> элементом), эта команда перемещает курсор в предыдущую ячейку.</span><span class="sxs-lookup"><span data-stu-id="6f755-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="6f755-795">В противном случае в текущей позиции вставляется символ табуляции.</span><span class="sxs-lookup"><span data-stu-id="6f755-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="6f755-796">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-797">Эта команда изначально <xref:System.Windows.Controls.RichTextBox> поддерживается и <xref:System.Windows.Controls.TextBox> (если <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> свойство имеет `true`значение).</span><span class="sxs-lookup"><span data-stu-id="6f755-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-798">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-799">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-800">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-801">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-802">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-803">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-804">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-805">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-806">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-807">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.TabForward" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span></span></summary>
        <value><span data-ttu-id="6f755-808">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-808">The requested command.</span></span>  <span data-ttu-id="6f755-809">Знаком клавиши по умолчанию для данной команды является <see langword="Tab" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-809">The default key gesture for this command is <see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-810">Поведение этой команды зависит от текущего выбора.</span><span class="sxs-lookup"><span data-stu-id="6f755-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="6f755-811">Если выделение не пусто или если выделение пусто, а текущая курсор находится в начале абзаца, эта команда эквивалентна <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="6f755-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="6f755-812">Если курсор находится в ячейке таблицы (представленной <xref:System.Windows.Documents.TableCell> элементом), эта команда перемещает курсор в следующую ячейку.</span><span class="sxs-lookup"><span data-stu-id="6f755-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="6f755-813">Если курсор находится в последней ячейке таблицы, эта команда вызывает добавление новой строки в таблицу с курсором, расположенным в первой ячейке новой строки.</span><span class="sxs-lookup"><span data-stu-id="6f755-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="6f755-814">В противном случае в текущей позиции вставляется символ табуляции.</span><span class="sxs-lookup"><span data-stu-id="6f755-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="6f755-815">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-816">Эта команда изначально <xref:System.Windows.Controls.RichTextBox> поддерживается и <xref:System.Windows.Controls.TextBox> (если <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> свойство имеет `true`значение).</span><span class="sxs-lookup"><span data-stu-id="6f755-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-817">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-818">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-819">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-820">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-821">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-822">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-823">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-824">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-825">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-826">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />, которая запрашивает, чтобы форматирование <see cref="T:System.Windows.Documents.Bold" /> переключилось на текущую выборку.</span><span class="sxs-lookup"><span data-stu-id="6f755-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="6f755-827">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-827">The requested command.</span></span>  <span data-ttu-id="6f755-828">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="B" /></span><span class="sxs-lookup"><span data-stu-id="6f755-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-829">Если объект <xref:System.Windows.FontWeight> для текущего выделения находится в диапазоне от <xref:System.Windows.FontWeights.Thin%2A> до <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> то применяется к текущему выделению.</span><span class="sxs-lookup"><span data-stu-id="6f755-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="6f755-830"><xref:System.Windows.FontWeights.Normal%2A> В противном случае применяется.</span><span class="sxs-lookup"><span data-stu-id="6f755-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="6f755-831">Сравнительный список <xref:System.Windows.FontWeight> значений см. в разделе <xref:System.Windows.FontWeights>.</span><span class="sxs-lookup"><span data-stu-id="6f755-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="6f755-832">Если выделение пусто и курсор находится внутри слова, выделение расширяется и включает слово целиком.</span><span class="sxs-lookup"><span data-stu-id="6f755-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="6f755-833">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-834">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-835">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-836">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-837">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-838">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-839">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-840">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-841">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-842">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-843">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-844">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" />, которая запрашивает переключение форматирования маркированного списка на текущую выборку.</span><span class="sxs-lookup"><span data-stu-id="6f755-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="6f755-845">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-845">The requested command.</span></span>  <span data-ttu-id="6f755-846">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Shift" /> + <see langword="L" /></span><span class="sxs-lookup"><span data-stu-id="6f755-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-847">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="6f755-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6f755-848">Если эта команда вызывается для частичного выделения содержимого в абзаце (включая пустое выделение, в котором курсор находится внутри абзаца), запрошенный результат применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="6f755-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6f755-849">Если эта команда вызывается для выделения, охватывающего несколько абзацев, то этот результат применяется ко всему содержимому каждого абзаца, участвующего в выборе.</span><span class="sxs-lookup"><span data-stu-id="6f755-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="6f755-850">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-851">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-852">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-853">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-854">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-855">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-856">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-857">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-858">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-859">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-860">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-861">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" />, которая переключает режимы вставки и замены.</span><span class="sxs-lookup"><span data-stu-id="6f755-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span></span></summary>
        <value><span data-ttu-id="6f755-862">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-862">The requested command.</span></span>  <span data-ttu-id="6f755-863">Знаком клавиши по умолчанию для данной команды является <see langword="Insert" />.</span><span class="sxs-lookup"><span data-stu-id="6f755-863">The default key gesture for this command is <see langword="Insert" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-864">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-865">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-866">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-867">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-868">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-869">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-870">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-871">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-872">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-873">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-874">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-875">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />, которая запрашивает, чтобы форматирование <see cref="T:System.Windows.Documents.Italic" /> переключилось на текущую выборку.</span><span class="sxs-lookup"><span data-stu-id="6f755-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="6f755-876">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-876">The requested command.</span></span>  <span data-ttu-id="6f755-877">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="I" /></span><span class="sxs-lookup"><span data-stu-id="6f755-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-878">Если для текущего выделения задано <xref:System.Windows.FontStyles.Normal%2A>значение, <xref:System.Windows.FontStyles.Italic%2A> применяется к текущему выделению. <xref:System.Windows.FontStyle></span><span class="sxs-lookup"><span data-stu-id="6f755-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="6f755-879"><xref:System.Windows.FontStyles.Normal%2A> В противном случае применяется.</span><span class="sxs-lookup"><span data-stu-id="6f755-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="6f755-880">Если выделение пусто и курсор находится внутри слова, выделение расширяется и включает слово целиком.</span><span class="sxs-lookup"><span data-stu-id="6f755-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="6f755-881">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-882">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-883">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-884">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-885">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-886">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-887">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-888">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-889">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-890">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-891">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-892">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />, которая запрашивает переключение форматирования упорядоченного списка (также называемый нумерованным списком) на текущую выборку.</span><span class="sxs-lookup"><span data-stu-id="6f755-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="6f755-893">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-893">The requested command.</span></span>  <span data-ttu-id="6f755-894">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Shift" /> + <see langword="N" /></span><span class="sxs-lookup"><span data-stu-id="6f755-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-895">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="6f755-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6f755-896">Если эта команда вызывается для частичного выделения содержимого в абзаце (включая пустое выделение, в котором курсор находится внутри абзаца), запрошенный результат применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="6f755-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6f755-897">Если эта команда вызывается для выделения, охватывающего несколько абзацев, то этот результат применяется ко всему содержимому каждого абзаца, участвующего в выборе.</span><span class="sxs-lookup"><span data-stu-id="6f755-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="6f755-898">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-899">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-900">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-901">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-902">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-903">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-904">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-905">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-906">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-907">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-908">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-909">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />, которая запрашивает, чтобы форматирование нижнего индекса переключилось на текущую выборку.</span><span class="sxs-lookup"><span data-stu-id="6f755-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="6f755-910">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-910">The requested command.</span></span>  <span data-ttu-id="6f755-911">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="OemPlus" /></span><span class="sxs-lookup"><span data-stu-id="6f755-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-912">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-913">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-914">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-915">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-916">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-917">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-918">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-919">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-920">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-921">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-922">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />, которая запрашивает, чтобы форматирование верхнего индекса переключилось на текущую выборку.</span><span class="sxs-lookup"><span data-stu-id="6f755-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="6f755-923">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-923">The requested command.</span></span>  <span data-ttu-id="6f755-924">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="Shift" /> + <see langword="OemPlus" /></span><span class="sxs-lookup"><span data-stu-id="6f755-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-925">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-926">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-927">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-928">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-929">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-930">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-931">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-932">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-933">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-934">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f755-935">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />, которая запрашивает, чтобы форматирование <see cref="T:System.Windows.Documents.Underline" /> переключилось на текущую выборку.</span><span class="sxs-lookup"><span data-stu-id="6f755-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="6f755-936">Запрошенная команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-936">The requested command.</span></span>  <span data-ttu-id="6f755-937">Жестом клавиши по умолчанию для этой <see langword="Ctrl" />команды является. + <see langword="U" /></span><span class="sxs-lookup"><span data-stu-id="6f755-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f755-938">Если выделение пусто и курсор находится внутри слова, выделение расширяется и включает слово целиком.</span><span class="sxs-lookup"><span data-stu-id="6f755-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="6f755-939">Фактическая реализация, которая реагирует на эту команду, не обязательно должна быть реализована для любого объекта. во многих случаях реализация, отвечающая на команду, отвечает за средство записи приложения.</span><span class="sxs-lookup"><span data-stu-id="6f755-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6f755-940">Эта команда изначально поддерживается в <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6f755-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6f755-941">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="6f755-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f755-942">В следующем примере показано, как вызвать команду редактирования для объекта, который поддерживает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6f755-943">В этом примере в <xref:System.Windows.Controls.RichTextBox> качестве целевого объекта команды выступает.</span><span class="sxs-lookup"><span data-stu-id="6f755-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6f755-944">Обратите <xref:System.Windows.Controls.RichTextBox> внимание, <xref:System.Windows.IInputElement> что реализует интерфейс ( <xref:System.Windows.FrameworkElement>наследуется от) и включает встроенную поддержку многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6f755-945">Первым аргументом для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметр команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6f755-946">Большинство команд редактирования игнорируют параметр команды. в общем случае этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="6f755-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6f755-947">Второй аргумент задает объект, на который будет направляться команда.</span><span class="sxs-lookup"><span data-stu-id="6f755-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6f755-948">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейс и включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="6f755-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6f755-949">Как правило, команда игнорируется при вызове для объекта, который не обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="6f755-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>
