<Type Name="Block" FullName="System.Windows.Documents.Block">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9c5899314260572e1a964d7122f8c877fdc21df" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70457040" /></Metadata><TypeSignature Language="C#" Value="public abstract class Block : System.Windows.Documents.TextElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Block extends System.Windows.Documents.TextElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Block" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Block&#xA;Inherits TextElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Block abstract : System::Windows::Documents::TextElement" />
  <TypeSignature Language="F#" Value="type Block = class&#xA;    inherit TextElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.TextElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Абстрактный класс, служащий базовым для всех элементов содержимого потока потоков на уровне блоков.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элементы, наследуемые <xref:System.Windows.Documents.Block> от класса (например <xref:System.Windows.Documents.Section>,), можно использовать для группирования элементов в общем родительском объекте или для применения общих атрибутов к группе. По сути, это похоже на то, как вы можете использовать \<тег div > в [!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)].  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.Run" />
    <altmember cref="T:System.Windows.Documents.Span" />
    <altmember cref="T:System.Windows.Documents.InlineUIContainer" />
    <altmember cref="T:System.Windows.Documents.Floater" />
    <altmember cref="T:System.Windows.Documents.Figure" />
    <altmember cref="T:System.Windows.Documents.LineBreak" />
    <altmember cref="T:System.Windows.Documents.FlowDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Block ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Block();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует значения базового класса <see cref="T:System.Windows.Documents.Block" /> при вызове из производного класса.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Documents.Block.BorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает кисть <see cref="T:System.Windows.Media.Brush" />, используемую при отрисовке границы элемента.</summary>
        <value>Кисть, используемая для применения к границе элемента. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблицу образцов, в которых показаны доступные стандартные цвета кисти, см. в разделе <xref:System.Windows.Media.Brushes>.  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.BorderBrushProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 В следующем примере показано, <xref:System.Windows.Documents.Block.BorderBrush%2A> как задать атрибут <xref:System.Windows.Documents.Block> элемента (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 На следующем рисунке показано, как отображается предыдущий пример.  
  
 ![Снимок экрана: синий,&#47;1 4inch рамка вокруг блока] (~/add/media/block-borders.png "Снимок экрана: синий, 1/4inch рамка вокруг блока")  
  
 В следующем примере показано, как задать <xref:System.Windows.Documents.Block.BorderBrush%2A> свойство программным способом.  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.BorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.BorderBrush" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.BorderThickness : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.Block.BorderThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает толщину границы для элемента.</summary>
        <value>Структура <see cref="T:System.Windows.Thickness" />, которая указывает применяемую толщину границы в аппаратно-независимых пикселях. Значение по умолчанию — единая нулевая толщина (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *униформсиккнесс*  
 Строковое представление одиночного <xref:System.Double> значения, которое применяется единообразно ко всем четырем измерениям толщины.  Например, значение `"10"` эквивалентно `"10,10,10,10"`значению.  Неполное значение измеряется в аппаратно-независимых пикселях. Строки не должны явно включать десятичные разделители.  
  
 *индепендентсиккнесс*  
 Строковое представление четырех упорядоченных <xref:System.Double> значений, соответствующих независимым измерениям толщины для левого, верхнего, правого и нижнего границ в указанном порядке.  Четыре значения должны быть разделены запятыми; пробелы не допускаются.  Например, «5, 10, 15, 20» выдает 5 точек границы слева от содержимого, 10 пикселей границы над содержимым, 15 пикселей границы справа от содержимого и 20 пикселей границы под содержимым.  
  
 *куалифиедуниформсиккнесс*  
 Значение, описываемое параметром *униформсиккнесс* , за которым следует один из следующих описателей `in`единиц измерения: `px`,.  
  
 `px`(по умолчанию)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`— дюймы; 1in = = 96 пикселей  
  
 Например, `"1in"` обеспечивает однородную границу в 1 дюйм во всех направлениях.  
  
 *куалифиединдепендентсиккнесс*  
 Значение, описываемое *индепендентсиккнесс*, с каждым независимым значением, за которым следует один из следующих спецификаторов `in`единиц измерения: `px`,.  
  
 `px`(по умолчанию)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`— дюймы; 1in = = 96 пикселей  
  
 Например, `"1.5in,0.8in,1.5in,0.8in"`.  Описатели единиц измерения могут быть смешанными или опущенными в одном или нескольких значениях.  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.BorderThicknessProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 В следующем примере показано, <xref:System.Windows.Documents.Block.BorderThickness%2A> как задать атрибут <xref:System.Windows.Documents.Block> элемента (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 На следующем рисунке показано, как отображается предыдущий пример.  
  
 ![Снимок экрана: синий,&#47;1 4inch рамка вокруг блока] (~/add/media/block-borders.png "Снимок экрана: синий, 1/4inch рамка вокруг блока")  
  
 В следующем примере показано, как задать <xref:System.Windows.Documents.Block.BorderThickness%2A> свойство программным способом.  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderThicknessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.BorderThicknessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.BorderThickness" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakColumnBefore">
      <MemberSignature Language="C#" Value="public bool BreakColumnBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakColumnBefore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BreakColumnBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakColumnBefore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakColumnBefore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BreakColumnBefore : bool with get, set" Usage="System.Windows.Documents.Block.BreakColumnBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли автоматически вставлять разрыв столбца перед данным элементом в случаях, когда этот элемент участвует в представлении на основе столбцов.</summary>
        <value><see langword="true" /> для автоматической вставки разрыва столбца перед этим элементом; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BreakColumnBefore"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.BreakColumnBeforeProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BreakPageBefore" />
      </Docs>
    </Member>
    <Member MemberName="BreakColumnBeforeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BreakColumnBeforeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BreakColumnBeforeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BreakColumnBeforeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BreakColumnBeforeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BreakColumnBeforeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BreakColumnBeforeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.BreakColumnBeforeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakPageBefore">
      <MemberSignature Language="C#" Value="public bool BreakPageBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakPageBefore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BreakPageBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakPageBefore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakPageBefore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BreakPageBefore : bool with get, set" Usage="System.Windows.Documents.Block.BreakPageBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли автоматически вставлять разрыв страницы перед данным элементом.</summary>
        <value><see langword="true" /> для автоматической вставки разрыва страницы перед этим элементом; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BreakPageBefore"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.BreakColumnBeforeProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BreakColumnBefore" />
      </Docs>
    </Member>
    <Member MemberName="BreakPageBeforeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BreakPageBeforeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BreakPageBeforeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BreakPageBeforeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BreakPageBeforeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BreakPageBeforeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BreakPageBeforeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.BreakPageBeforeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.BreakPageBefore" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFloaters">
      <MemberSignature Language="C#" Value="public System.Windows.WrapDirection ClearFloaters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WrapDirection ClearFloaters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.ClearFloaters" />
      <MemberSignature Language="VB.NET" Value="Public Property ClearFloaters As WrapDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WrapDirection ClearFloaters { System::Windows::WrapDirection get(); void set(System::Windows::WrapDirection value); };" />
      <MemberSignature Language="F#" Value="member this.ClearFloaters : System.Windows.WrapDirection with get, set" Usage="System.Windows.Documents.Block.ClearFloaters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WrapDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает направление размещения всех элементов <see cref="T:System.Windows.Documents.Floater" />, содержащихся в элементе <see cref="T:System.Windows.Documents.Block" />.</summary>
        <value>Одно из значений <see cref="T:System.Windows.WrapDirection" />, определяющий направление отделения элементов <see cref="T:System.Windows.Documents.Floater" /> от другого содержимого элемента <see cref="T:System.Windows.Documents.Block" />. По умолчанию используется значение <see cref="F:System.Windows.WrapDirection.None" />, указывающее, что элементы Floater должны отображаться на своем месте.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство влияет на способ расположения содержимого <xref:System.Windows.Documents.Block> в и предназначен для того, чтобы предотвратить <xref:System.Windows.Documents.Floater> перегрузку <xref:System.Windows.Documents.Block> элементов содержимого элемента. <xref:System.Windows.Documents.Block.ClearFloaters%2A>  Указание направления для этого свойства приводит к перемещению плавающих средств в едином направлении в пределах <xref:System.Windows.Documents.Block> содержимого.  Плавающие числа не перемещаются за пределы родительского <xref:System.Windows.Documents.Block>элемента.  
  
<a name="dependencyPropertyInfo_ClearFloaters"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.ClearFloatersProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFloatersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClearFloatersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClearFloatersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.ClearFloatersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClearFloatersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClearFloatersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClearFloatersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.ClearFloatersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.ClearFloaters" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.Documents.Block.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает относительное направление потока содержимого в элементе <see cref="T:System.Windows.Documents.Block" />.</summary>
        <value>Одно из значений <see cref="T:System.Windows.FlowDirection" />, задающее относительное направление потока. Значение по умолчанию — <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При получении данного свойства возвращается текущее эффективное направления потока.  Установка данного свойства вызывает повторную заливку содержимого элемента <xref:System.Windows.Documents.Block> в указанном направлении.  
  
 Направление потока содержимого обычно соответствует направлению потока присущей для представляемого языка.  Иврит и арабский — примеры языков, которые естественным образом направлены справа налево.  На английском, немецком и русском языках представлены примеры языков, которые естественным образом направлены слева направо.  
  
> [!NOTE]
>  **Значение этого свойства не изменяется автоматически в соответствии с языком, используемым операционной системой. Если необходимо использовать другое значение, отличное**от**n по умолчанию** <xref:System.Windows.FlowDirection.LeftToRight> **, необходимо указать его самостоятельно.**  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.FlowDirectionProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>|  
  
   
  
## Examples  
 В следующем примере показано, <xref:System.Windows.Documents.Block.FlowDirection%2A> как задать атрибут <xref:System.Windows.Documents.Block> элемента (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_flowdirectionxaml)]  
  
 В следующем примере показано, как задать <xref:System.Windows.Documents.Block.FlowDirection%2A> свойство программным способом.  
  
 [!code-csharp[BlockSnippets#_Block_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_flowdirection)]
 [!code-vb[BlockSnippets#_Block_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_flowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FlowDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.FlowDirection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsHyphenationEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsHyphenationEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsHyphenationEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsHyphenationEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsHyphenationEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Documents.Block.GetIsHyphenationEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, из которого требуется извлечь значение свойства <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" />.</param>
        <summary>Возвращает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> для указанного объекта зависимости.</summary>
        <returns>Текущее значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> для заданного объекта зависимости.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineHeight">
      <MemberSignature Language="C#" Value="public static double GetLineHeight (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetLineHeight(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLineHeight (element As DependencyObject) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetLineHeight(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetLineHeight : System.Windows.DependencyObject -&gt; double" Usage="System.Windows.Documents.Block.GetLineHeight element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, из которого требуется извлечь значение свойства <see cref="P:System.Windows.Documents.Block.LineHeight" />.</param>
        <summary>Возвращает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineHeight" /> для указанного объекта зависимости.</summary>
        <returns>Текущее значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineHeight" /> для заданного объекта зависимости.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineStackingStrategy">
      <MemberSignature Language="C#" Value="public static System.Windows.LineStackingStrategy GetLineStackingStrategy (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.LineStackingStrategy GetLineStackingStrategy(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLineStackingStrategy (element As DependencyObject) As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::LineStackingStrategy GetLineStackingStrategy(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetLineStackingStrategy : System.Windows.DependencyObject -&gt; System.Windows.LineStackingStrategy" Usage="System.Windows.Documents.Block.GetLineStackingStrategy element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, для которого требуется получить значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" />.</param>
        <summary>Возвращает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> для указанного объекта зависимости.</summary>
        <returns>Текущее значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> для заданного объекта зависимости.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextAlignment">
      <MemberSignature Language="C#" Value="public static System.Windows.TextAlignment GetTextAlignment (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.TextAlignment GetTextAlignment(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextAlignment (element As DependencyObject) As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::TextAlignment GetTextAlignment(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTextAlignment : System.Windows.DependencyObject -&gt; System.Windows.TextAlignment" Usage="System.Windows.Documents.Block.GetTextAlignment element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, из которого требуется извлечь значение свойства <see cref="P:System.Windows.Documents.Block.TextAlignment" />.</param>
        <summary>Возвращает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.TextAlignment" /> для указанного объекта зависимости.</summary>
        <returns>Текущее значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.TextAlignment" /> для заданного объекта зависимости.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public bool IsHyphenationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHyphenationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.IsHyphenationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHyphenationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHyphenationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHyphenationEnabled : bool with get, set" Usage="System.Windows.Documents.Block.IsHyphenationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, включена или отключена функция автоматического переноса слов.</summary>
        <value><see langword="true" />, если функция автоматического переноса слов включена; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функция автоматического переноса слов позволяет <xref:System.Windows.Documents.Block> элементу автоматически разбивать слова и расставлять их в зависимости от текущих условий макета.  Это позволяет начать работу с длинными словами на одной строке и продолжить выполнение этой процедуры, что позволяет добиться более равномерного распределения пробелов в выровненном тексте.  Слова разбиваются и переносятся в соответствии с стандартными правилами грамматики.  
  
<a name="dependencyPropertyInfo_IsHyphenationEnabled"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.IsHyphenationEnabledProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 В следующем примере показано, <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> как задать атрибут <xref:System.Windows.Documents.Block> элемента.  
  
 [!code-xaml[BlockSnippets#_Block_HyphenateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_hyphenatexaml)]  
  
 На следующем рисунке показано, как отображается предыдущий пример.  
  
 ![Снимок экрана: включен перенос в FlowDocument] (~/add/media/flowdoc-hyphenenabled.png "Снимок экрана: включен перенос в FlowDocument")  
  
 На следующем рисунке показано, как отображается один и тот же пример с параметром <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> = `false`по умолчанию.  
  
 ![Снимок экрана: FlowDocument с отключенными дефисами] (~/add/media/flowdoc-hyphendisabled.png "Снимок экрана: FlowDocument с отключенными дефисами")  
  
 В следующем примере показано, как задать <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> свойство программным способом.  
  
 [!code-csharp[BlockSnippets#_Block_Hyphenate](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_hyphenate)]
 [!code-vb[BlockSnippets#_Block_Hyphenate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_hyphenate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHyphenationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHyphenationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.IsHyphenationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHyphenationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHyphenationEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHyphenationEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.IsHyphenationEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Documents.Block.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает высоту каждой строки содержимого.</summary>
        <value>Высота каждой строки в аппаратно-независимых пикселях в диапазоне от 0,0034 до 160 000 либо значение <see cref="F:System.Double.NaN" /> для автоматического определения высоты. Значение по умолчанию — <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Double.NaN?displayProperty=nameWithType> (эквивалентное `Auto`значению атрибута) указывает, что высота строки определяется автоматически на основе текущих характеристик шрифта.  
  
 Изменение этого значения не приводит к изменению высоты связанного текста; Вместо этого изменяется высота строки, содержащей текст. Чтобы изменить размер текста, используйте <xref:System.Windows.Documents.FlowDocument.FontSize%2A> свойство.  
  
 В дополнение к этому свойству компоновка строк в элементе <xref:System.Windows.Documents.Block> зависит от его <xref:System.Windows.Documents.Block.LineStackingStrategy%2A> свойства.  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *double*  
 <xref:System.Double>  
  
 Строковое представление <xref:System.Double> значения, равного или больше 0,0034, но равное или меньше 160000. Неполное значение измеряется в аппаратно-независимых пикселях. Строки не должны явно включать десятичные разделители.  
  
 *куалифиеддаубле*  
 Значение *типа Double* `Auto`, как описано выше (за исключением), за которым следует один из следующих спецификаторов единиц `in`: `cm` `px`, `pt`,,.  
  
 `px`(по умолчанию)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`— дюймы; 1in = = 96 пикселей  
  
 `cm`— сантиметры; 1cm = = (96/2,54) px  
  
 `pt`является точкой; выбрано 1pt = = (96/72) px  
  
 Авто  
 Указывает, что высота строки определяется автоматически на основе текущих характеристик шрифта.  Эквивалентно значению <xref:System.Double.NaN?displayProperty=nameWithType>свойства.  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.LineHeightProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 В следующем примере показано, <xref:System.Windows.Documents.Block.LineHeight%2A> как задать атрибут <xref:System.Windows.Documents.Block> элемента.  
  
 [!code-xaml[BlockSnippets#_Block_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 На следующем рисунке показано, как отображается предыдущий пример.  
  
 ![Снимок экрана: FlowDocument LineHeight] (~/add/media/flowdocument-lineheight.png "Снимок экрана: FlowDocument LineHeight")  
  
 На следующем рисунке показано, как отображаются <xref:System.Windows.Documents.FlowDocument> те же данные с <xref:System.Windows.Documents.FlowDocument.LineHeight%2A> = <xref:System.Double.NaN?displayProperty=nameWithType>параметром по умолчанию.  
  
 ![Снимок экрана: FlowDocument LineHeight по умолчанию] (~/add/media/flowdocument-lineheightdefault.png "Снимок экрана: FlowDocument LineHeight по умолчанию")  
  
 В следующем примере показано, как задать <xref:System.Windows.Documents.Block.LineHeight%2A> свойство программным способом.  
  
 [!code-csharp[BlockSnippets#_Block_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets#_Block_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Для <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> задано значение, не являющееся положительным.</exception>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.LineHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.LineHeight" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberSignature Language="F#" Value="member this.LineStackingStrategy : System.Windows.LineStackingStrategy with get, set" Usage="System.Windows.Documents.Block.LineStackingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, как определяется поле строки для каждой строки текста в элементе содержимого потока.</summary>
        <value>Одно из значений <see cref="T:System.Windows.LineStackingStrategy" />, указывающих, как определяется поле строки для каждой строки текста в элементе содержимого потока. Значение по умолчанию — <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство зависимостей также имеет присоединенные свойства. В [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]среде используется `<object Block.LineStackingStrategy="value".../>`, где *Object* — это объектный элемент (обычно элемент Flow), содержащийся в <xref:System.Windows.Documents.Block> производном <xref:System.Windows.LineStackingStrategy> классе, а *value* — строковое значение перечисления. В коде использование присоединенного свойства поддерживается <xref:System.Windows.Documents.Block.GetLineStackingStrategy%2A> методами и. <xref:System.Windows.Documents.Block.SetLineStackingStrategy%2A> Использование присоединенного свойства не является распространенным.  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.LineStackingStrategyProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> свойство, чтобы определить, как создаются поля строк для текстовых строк. <xref:System.Windows.Controls.TextBlock> Первый <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.LineStackingStrategy.BlockLineHeight>имеет значение , <xref:System.Windows.LineStackingStrategy.MaxHeight>  а второй <xref:System.Windows.Controls.TextBlock> имеет значение. <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A>  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 На следующем рисунке показан результат предыдущего кода.  
  
 ![Снимок экрана: сравнение значений линестаккингстратеги] (~/add/media/flow-linestackingstrategy.gif "Снимок экрана: сравнение значений линестаккингстратеги")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineStackingStrategyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.LineStackingStrategyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.Block.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает толщину поля для элемента.</summary>
        <value>Структура <see cref="T:System.Windows.Thickness" />, которая указывает применяемое значение поля в аппаратно-независимых пикселях. Значение по умолчанию — единая нулевая толщина (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Block.Margin%2A>— это буферное пространство, находящееся вне области содержимого элемента, между краями области содержимого элемента и краями родительского элемента.  Сравните с <xref:System.Windows.Documents.Block.Padding%2A>, который является буферным пространством, находящимся внутри области содержимого элемента, между содержимым элемента и внутренним ребром элемента.  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object Margin="uniformThickness"/>  
- or -  
<object Margin="independentThickness"/>  
- or -  
<object Margin="qualifiedUniformThickness"/>  
- or -  
<object Margin="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *униформсиккнесс*  
 Строковое представление одиночного <xref:System.Double> значения, которое применяется единообразно ко всем четырем измерениям толщины.  Например, значение `"10"` эквивалентно `"10,10,10,10"`значению.  Неполное значение измеряется в аппаратно-независимых пикселях. Строки не должны явно включать десятичные разделители.  
  
 *индепендентсиккнесс*  
 Строковое представление четырех упорядоченных <xref:System.Double> значений, соответствующих независимым измерениям толщины для левого, верхнего, правого и нижнего границ в указанном порядке.  Четыре значения должны быть разделены запятыми; пробелы не допускаются.  Например, "5, 10, 15, 20" приводит к погрешности в 5 пикселей слева от содержимого, 10 пикселей поля над содержимым, 15 пикселей поля справа от содержимого и 20 пикселей поля под содержимым.  
  
 *куалифиедуниформсиккнесс*  
 Значение, описываемое параметром *униформсиккнесс* , за которым следует один из следующих описателей `in`единиц измерения: `px`,.  
  
 `px`(по умолчанию)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`— дюймы; 1in = = 96 пикселей  
  
 Например, `"1in"` предоставляет единое поле шириной в 1 дюйм во всех направлениях.  
  
 *куалифиединдепендентсиккнесс*  
 Значение, описываемое *индепендентсиккнесс*, с каждым независимым значением, за которым следует один из следующих спецификаторов `in`единиц измерения: `px`,.  
  
 `px`(по умолчанию)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`— дюймы; 1in = = 96 пикселей  
  
 Например, `"1.5in,0.8in,1.5in,0.8in"`.  Описатели единиц измерения могут быть смешанными или опущенными в одном или нескольких значениях.  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.MarginProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 В следующем примере показано, <xref:System.Windows.Documents.Block.Margin%2A> как задать атрибут <xref:System.Windows.Documents.Block> элемента (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 На следующем рисунке показано, как отображается предыдущий пример.  Для иллюстрации используются преувеличенныхные толщины и цвета.  
  
 ![Снимок экрана: абзацы с заполнением и полями] (~/add/media/block-marginpadding.png "Снимок экрана: абзацы с заполнением и полями")  
  
 В следующем примере показано, как задать <xref:System.Windows.Documents.Block.Margin%2A> свойство программным способом.  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.Padding" />
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.MarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.Margin" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextBlock">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Block NextBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Block NextBlock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.NextBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextBlock As Block" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Block ^ NextBlock { System::Windows::Documents::Block ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextBlock : System.Windows.Documents.Block" Usage="System.Windows.Documents.Block.NextBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Block</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает сестринский элемент <see cref="T:System.Windows.Documents.Block" />, непосредственно следующий за текущим элементом <see cref="T:System.Windows.Documents.Block" />.</summary>
        <value>Сестринский элемент <see cref="T:System.Windows.Documents.Block" />, непосредственно следующий за текущим элементом <see cref="T:System.Windows.Documents.Block" />, или значение <see langword="null" />, если такого элемента не существует.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.Block.PreviousBlock" />
        <altmember cref="P:System.Windows.Documents.Block.SiblingBlocks" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.Block.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает толщину заполнения для элемента.</summary>
        <value>Структура <see cref="T:System.Windows.Thickness" />, которая задает применяемое значение ширины внутренних полей в аппаратно-независимых точках. Значение по умолчанию — единая нулевая толщина (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Block.Padding%2A>— это буферное пространство, которое попадает внутрь области содержимого элемента между содержимым элемента и внутренней границей элемента.  Сравните с <xref:System.Windows.Documents.Block.Margin%2A>, который является буферным пространством, находящимся за пределами области содержимого элемента, между краями области содержимого элемента и краями родительского элемента.  
  
<a name="xamlAttributeUsage_Padding"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *униформсиккнесс*  
 Строковое представление одиночного <xref:System.Double> значения, которое применяется единообразно ко всем четырем измерениям толщины.  Например, значение `"10"` эквивалентно `"10,10,10,10"`значению.  Неполное значение измеряется в аппаратно-независимых пикселях. Строки не должны явно включать десятичные разделители.  
  
 *индепендентсиккнесс*  
 Строковое представление четырех упорядоченных <xref:System.Double> значений, соответствующих независимым измерениям толщины для левого, верхнего, правого и нижнего границ в указанном порядке.  Четыре значения должны быть разделены запятыми; пробелы не допускаются.  Например, "5, 10, 15, 20" приводит к последующим 5 пикселам заполнения слева от содержимого, 10 пикселов заполнения над содержимым, 15 пикселей заполнения справа от содержимого и 20 пикселей отступа под содержимым.  
  
 *куалифиедуниформсиккнесс*  
 Значение, описываемое параметром *униформсиккнесс* , за которым следует один из следующих описателей `in`единиц измерения: `px`,.  
  
 `px`(по умолчанию)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`— дюймы; 1in = = 96 пикселей  
  
 Например, `"1in"` обеспечивает однородное заполнение на 1 дюйм во всех направлениях.  
  
 *куалифиединдепендентсиккнесс*  
 Значение, описываемое *индепендентсиккнесс*, с каждым независимым значением, за которым следует один из следующих спецификаторов `in`единиц измерения: `px`,.  
  
 `px`(по умолчанию)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`— дюймы; 1in = = 96 пикселей  
  
 Например, `"1.5in,0.8in,1.5in,0.8in"`.  Описатели единиц измерения могут быть смешанными или опущенными в одном или нескольких значениях.  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.PaddingProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 В следующем примере показано, <xref:System.Windows.Documents.Block.Padding%2A> как задать атрибут <xref:System.Windows.Documents.Block> элемента (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 На следующем рисунке показано, как отображается предыдущий пример.  Для иллюстрации используются преувеличенныхные толщины и цвета.  
  
 ![Снимок экрана: абзацы с заполнением и полями] (~/add/media/block-marginpadding.png "Снимок экрана: абзацы с заполнением и полями")  
  
 В следующем примере показано, как задать <xref:System.Windows.Documents.Block.Padding%2A> свойство программным способом.  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.Margin" />
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PaddingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.PaddingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.Padding" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousBlock">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Block PreviousBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Block PreviousBlock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.PreviousBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousBlock As Block" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Block ^ PreviousBlock { System::Windows::Documents::Block ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousBlock : System.Windows.Documents.Block" Usage="System.Windows.Documents.Block.PreviousBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Block</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает сестринский элемент <see cref="T:System.Windows.Documents.Block" />, непосредственно предшествующий текущему элементу <see cref="T:System.Windows.Documents.Block" />.</summary>
        <value>Сестринский элемент <see cref="T:System.Windows.Documents.Block" />, непосредственно предшествующий текущему элементу <see cref="T:System.Windows.Documents.Block" />, или значение <see langword="null" />, если такого элемента не существует.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.Block.NextBlock" />
        <altmember cref="P:System.Windows.Documents.Block.SiblingBlocks" />
      </Docs>
    </Member>
    <Member MemberName="SetIsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsHyphenationEnabled (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsHyphenationEnabled(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsHyphenationEnabled (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsHyphenationEnabled(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsHyphenationEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Documents.Block.SetIsHyphenationEnabled (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, для которого нужно установить значение свойства <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" />.</param>
        <param name="value">Новое значение для установки свойства.</param>
        <summary>Задает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> для указанного объекта зависимости.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetLineHeight">
      <MemberSignature Language="C#" Value="public static void SetLineHeight (System.Windows.DependencyObject element, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLineHeight(class System.Windows.DependencyObject element, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLineHeight (element As DependencyObject, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLineHeight(System::Windows::DependencyObject ^ element, double value);" />
      <MemberSignature Language="F#" Value="static member SetLineHeight : System.Windows.DependencyObject * double -&gt; unit" Usage="System.Windows.Documents.Block.SetLineHeight (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, для которого нужно установить значение свойства <see cref="P:System.Windows.Documents.Block.LineHeight" />.</param>
        <param name="value">Новое значение для установки свойства.</param>
        <summary>Задает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineHeight" /> для указанного объекта зависимости.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> является отрицательным значением.</exception>
        <altmember cref="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetLineStackingStrategy">
      <MemberSignature Language="C#" Value="public static void SetLineStackingStrategy (System.Windows.DependencyObject element, System.Windows.LineStackingStrategy value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLineStackingStrategy(class System.Windows.DependencyObject element, valuetype System.Windows.LineStackingStrategy value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLineStackingStrategy (element As DependencyObject, value As LineStackingStrategy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLineStackingStrategy(System::Windows::DependencyObject ^ element, System::Windows::LineStackingStrategy value);" />
      <MemberSignature Language="F#" Value="static member SetLineStackingStrategy : System.Windows.DependencyObject * System.Windows.LineStackingStrategy -&gt; unit" Usage="System.Windows.Documents.Block.SetLineStackingStrategy (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.LineStackingStrategy" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, для которого нужно установить значение свойства <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" />.</param>
        <param name="value">Новое значение для установки свойства.</param>
        <summary>Задает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> для указанного объекта зависимости.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetTextAlignment">
      <MemberSignature Language="C#" Value="public static void SetTextAlignment (System.Windows.DependencyObject element, System.Windows.TextAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTextAlignment(class System.Windows.DependencyObject element, valuetype System.Windows.TextAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTextAlignment (element As DependencyObject, value As TextAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTextAlignment(System::Windows::DependencyObject ^ element, System::Windows::TextAlignment value);" />
      <MemberSignature Language="F#" Value="static member SetTextAlignment : System.Windows.DependencyObject * System.Windows.TextAlignment -&gt; unit" Usage="System.Windows.Documents.Block.SetTextAlignment (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.TextAlignment" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, для которого нужно установить значение свойства <see cref="P:System.Windows.Documents.Block.TextAlignment" />.</param>
        <param name="value">Новое значение для установки свойства.</param>
        <summary>Задает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.TextAlignment" /> для указанного объекта зависимости.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Documents.Block.GetTextAlignment%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SiblingBlocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection SiblingBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection SiblingBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.SiblingBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SiblingBlocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ SiblingBlocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SiblingBlocks : System.Windows.Documents.BlockCollection" Usage="System.Windows.Documents.Block.SiblingBlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию элементов <see cref="T:System.Windows.Documents.Block" />, которые являются сестринскими по отношению к текущему элементу <see cref="T:System.Windows.Documents.Block" />.</summary>
        <value>Коллекция <see cref="T:System.Windows.Documents.BlockCollection" /> дочерних элементов <see cref="T:System.Windows.Documents.Block" />, непосредственно размещенных в родительском элементе текущего элемента <see cref="T:System.Windows.Documents.Block" />, или значение <see langword="null" />, если текущий элемент <see cref="T:System.Windows.Documents.Block" /> не имеет родительского элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Documents.BlockCollection> , возвращаемый этим свойством <xref:System.Windows.Documents.Block> , включает элемент, через который осуществляется доступ к коллекции; то есть элемент, которому принадлежит это свойство, считается собственным элементом того же уровня для создания коллекции одноуровневых элементов.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.NextBlock" />
        <altmember cref="P:System.Windows.Documents.Block.PreviousBlock" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Documents.Block.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает способ горизонтального выравнивания текстового содержимого.</summary>
        <value>Одно из значений <see cref="T:System.Windows.TextAlignment" />, определяющее нужное выравнивание. Значение по умолчанию — <see cref="F:System.Windows.TextAlignment.Left" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.TextAlignmentProperty>|  
|Свойства метаданных, для которых задано значение`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 В следующем примере показано, <xref:System.Windows.Documents.Block.TextAlignment%2A> как задать атрибут <xref:System.Windows.Documents.Block> элемента.  
  
 [!code-xaml[BlockSnippets#_Block_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 На следующем рисунке показано, как предыдущий пример визуализируется с <xref:System.Windows.TextAlignment.Left> выравниванием текста (по умолчанию).  
  
 ![Снимок экрана: значение свойства TextAlign слева] (~/add/media/flowdoc-textalign-left.png "Снимок экрана: значение свойства TextAlign слева")  
  
 На следующем рисунке показано, как тот же самый пример визуализируется с <xref:System.Windows.TextAlignment.Right> выравниванием текста.  
  
 ![Снимок экрана: значение TextAlign справа] (~/add/media/flowdoc-textalign-right.png "Снимок экрана: значение TextAlign справа")  
  
 На следующем рисунке показано, как тот же самый пример визуализируется с <xref:System.Windows.TextAlignment.Center> выравниванием текста.  
  
 ![Снимок экрана: значение свойства TextAlign центра] (~/add/media/flowdoc-textalign-center.png "Снимок экрана: значение свойства TextAlign центра")  
  
 В следующем примере показано, как задать <xref:System.Windows.Documents.Block.TextAlignment%2A> свойство программным способом.  
  
 [!code-csharp[BlockSnippets#_Block_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets#_Block_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.TextAlignment" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
