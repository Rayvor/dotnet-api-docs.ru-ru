<Type Name="PartBuilder" FullName="System.ComponentModel.Composition.Registration.PartBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0942f43c4e2248c5e4cd0c7ab5ca8fd753cfb08b" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63905432" /></Metadata><TypeSignature Language="C#" Value="public class PartBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PartBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Registration.PartBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PartBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PartBuilder" />
  <TypeSignature Language="F#" Value="type PartBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3afde-101">Представляет правило для декорирования набора соответствующих типов с помощью атрибутов Managed Extensibility Framework (MEF).</span><span class="sxs-lookup"><span data-stu-id="3afde-101">Represents a rule for decorating a set of matching types with Managed Extensibility Framework (MEF) attributes.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddMetadata">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3afde-102">Добавляет метаданные в соответствующие типы.</span><span class="sxs-lookup"><span data-stu-id="3afde-102">Adds metadata to the matching types.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder AddMetadata (string name, Func&lt;Type,object&gt; itemFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder AddMetadata(string name, class System.Func`2&lt;class System.Type, object&gt; itemFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadata (name As String, itemFunc As Func(Of Type, Object)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ AddMetadata(System::String ^ name, Func&lt;Type ^, System::Object ^&gt; ^ itemFunc);" />
      <MemberSignature Language="F#" Value="member this.AddMetadata : string * Func&lt;Type, obj&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.AddMetadata (name, itemFunc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="itemFunc" Type="System.Func&lt;System.Type,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3afde-103">Ключ метаданных.</span><span class="sxs-lookup"><span data-stu-id="3afde-103">The metadata key.</span></span></param>
        <param name="itemFunc"><span data-ttu-id="3afde-104">Функция, которая возвращает значение метаданных в ответ на тип цели.</span><span class="sxs-lookup"><span data-stu-id="3afde-104">A function that returns the metadata value, given the target type.</span></span></param>
        <summary><span data-ttu-id="3afde-105">Добавляет метаданные в соответствующие типы.</span><span class="sxs-lookup"><span data-stu-id="3afde-105">Adds metadata to the matching types.</span></span></summary>
        <returns><span data-ttu-id="3afde-106">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-106">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder AddMetadata (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder AddMetadata(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadata (name As String, value As Object) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ AddMetadata(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddMetadata : string * obj -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.AddMetadata (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3afde-107">Ключ метаданных.</span><span class="sxs-lookup"><span data-stu-id="3afde-107">The metadata key.</span></span></param>
        <param name="value"><span data-ttu-id="3afde-108">Значение метаданных.</span><span class="sxs-lookup"><span data-stu-id="3afde-108">The metadata value.</span></span></param>
        <summary><span data-ttu-id="3afde-109">Добавляет метаданные в соответствующие типы.</span><span class="sxs-lookup"><span data-stu-id="3afde-109">Adds metadata to the matching types.</span></span></summary>
        <returns><span data-ttu-id="3afde-110">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-110">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Export">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3afde-111">Указывает, что соответствующие типы должны быть экспортированы.</span><span class="sxs-lookup"><span data-stu-id="3afde-111">Specifies that matching types should be exported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder Export ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder Export() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
      <MemberSignature Language="VB.NET" Value="Public Function Export () As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ Export();" />
      <MemberSignature Language="F#" Value="member this.Export : unit -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.Export " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3afde-112">Указывает, что соответствующие типы должны быть экспортированы.</span><span class="sxs-lookup"><span data-stu-id="3afde-112">Specifies that matching types should be exported.</span></span></summary>
        <returns><span data-ttu-id="3afde-113">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-113">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder Export (Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder Export(class System.Action`1&lt;class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (exportConfiguration As Action(Of ExportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ Export(Action&lt;System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberSignature Language="F#" Value="member this.Export : Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.Export exportConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="exportConfiguration"><span data-ttu-id="3afde-114">Объект, содержащий сведения о конфигурации экспорта.</span><span class="sxs-lookup"><span data-stu-id="3afde-114">An object that contains configuration information about the export.</span></span> <span data-ttu-id="3afde-115">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-115">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3afde-116">Указывает, что необходимо экспортировать соответствующие типы, и предоставляет информацию о конфигурации для результирующих экспортируемых данных.</span><span class="sxs-lookup"><span data-stu-id="3afde-116">Specifies that matching types should be exported, and provides configuration information for the resulting exports.</span></span></summary>
        <returns><span data-ttu-id="3afde-117">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-117">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder Export&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder Export&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Export(Of T) () As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ Export();" />
      <MemberSignature Language="F#" Value="member this.Export : unit -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.Export " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="3afde-118">Тип контракта.</span><span class="sxs-lookup"><span data-stu-id="3afde-118">The type of contract.</span></span></typeparam>
        <summary><span data-ttu-id="3afde-119">Указывает, что соответствующие типы необходимо экспортировать с помощью указанного типа контракта.</span><span class="sxs-lookup"><span data-stu-id="3afde-119">Specifies that matching types should be exported by using the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="3afde-120">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-120">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder Export&lt;T&gt; (Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder Export&lt;T&gt;(class System.Action`1&lt;class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function Export(Of T) (exportConfiguration As Action(Of ExportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ Export(Action&lt;System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberSignature Language="F#" Value="member this.Export : Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.Export exportConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="3afde-121">Тип контракта.</span><span class="sxs-lookup"><span data-stu-id="3afde-121">The type of contract.</span></span></typeparam>
        <param name="exportConfiguration"><span data-ttu-id="3afde-122">Объект, содержащий сведения о конфигурации экспорта.</span><span class="sxs-lookup"><span data-stu-id="3afde-122">An object that contains configuration information about the export.</span></span> <span data-ttu-id="3afde-123">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-123">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3afde-124">Указывает, что соответствующие типы необходимо экспортировать с использованием указанного типа контракта, и предоставляет информацию о конфигурации для результирующих экспортируемых данных.</span><span class="sxs-lookup"><span data-stu-id="3afde-124">Specifies that matching types should be exported by using the specified contract type, and provides configuration information for the resulting exports.</span></span></summary>
        <returns><span data-ttu-id="3afde-125">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-125">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportInterfaces">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3afde-126">Задает набор интерфейсов, который должен быть экспортирован, для соответствующих типов.</span><span class="sxs-lookup"><span data-stu-id="3afde-126">Specifies a set of interfaces that should be exported on the matching types.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces () As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportInterfaces();" />
      <MemberSignature Language="F#" Value="member this.ExportInterfaces : unit -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ExportInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3afde-127">Указывает, что все интерфейсы соответствующих типов должны быть экспортированы.</span><span class="sxs-lookup"><span data-stu-id="3afde-127">Specifies that all the interfaces of the matching types should be exported.</span></span></summary>
        <returns><span data-ttu-id="3afde-128">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-128">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces (Predicate&lt;Type&gt; interfaceFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces(class System.Predicate`1&lt;class System.Type&gt; interfaceFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces (interfaceFilter As Predicate(Of Type)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportInterfaces(Predicate&lt;Type ^&gt; ^ interfaceFilter);" />
      <MemberSignature Language="F#" Value="member this.ExportInterfaces : Predicate&lt;Type&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ExportInterfaces interfaceFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceFilter" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="interfaceFilter"><span data-ttu-id="3afde-129">Предикат, указывающий набор интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="3afde-129">A predicate that specifies a set of interfaces.</span></span></param>
        <summary><span data-ttu-id="3afde-130">Задает набор интерфейсов соответствующих типов, который должен быть экспортирован.</span><span class="sxs-lookup"><span data-stu-id="3afde-130">Specifies a set of interfaces on the matching types that should be exported.</span></span></summary>
        <returns><span data-ttu-id="3afde-131">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-131">The current object, to allow chaining.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3afde-132">Этот метод не будет экспортировать <xref:System.IDisposable> или <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> объектов.</span><span class="sxs-lookup"><span data-stu-id="3afde-132">This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-133"><paramref name="interfaceFilter" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-133"><paramref name="interfaceFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces (Predicate&lt;Type&gt; interfaceFilter, Action&lt;Type,System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces(class System.Predicate`1&lt;class System.Type&gt; interfaceFilter, class System.Action`2&lt;class System.Type, class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces (interfaceFilter As Predicate(Of Type), exportConfiguration As Action(Of Type, ExportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportInterfaces(Predicate&lt;Type ^&gt; ^ interfaceFilter, Action&lt;Type ^, System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberSignature Language="F#" Value="member this.ExportInterfaces : Predicate&lt;Type&gt; * Action&lt;Type, System.ComponentModel.Composition.Registration.ExportBuilder&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ExportInterfaces (interfaceFilter, exportConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceFilter" Type="System.Predicate&lt;System.Type&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Type,System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="interfaceFilter"><span data-ttu-id="3afde-134">Предикат, указывающий набор интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="3afde-134">A predicate that specifies a set of interfaces.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="3afde-135">Объект, содержащий сведения о конфигурации экспорта.</span><span class="sxs-lookup"><span data-stu-id="3afde-135">An object that contains configuration information about the export.</span></span> <span data-ttu-id="3afde-136">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-136">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3afde-137">Задает набор интерфейсов соответствующих типов, который должен быть экспортирован, и предоставляет информацию о конфигурации для результирующих экспортируемых данных.</span><span class="sxs-lookup"><span data-stu-id="3afde-137">Specifies a set of interfaces on the matching types that should be exported, and provides configuration information for the resulting exports.</span></span></summary>
        <returns><span data-ttu-id="3afde-138">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-138">The current object, to allow chaining.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3afde-139">Этот метод не будет экспортировать <xref:System.IDisposable> или <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> объектов.</span><span class="sxs-lookup"><span data-stu-id="3afde-139">This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-140"><paramref name="interfaceFilter" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-140"><paramref name="interfaceFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3afde-141">Задает набор свойств соответствующих типов, который должен быть экспортирован.</span><span class="sxs-lookup"><span data-stu-id="3afde-141">Specifies a set of properties on the matching types that should be exported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties (propertyFilter As Predicate(Of PropertyInfo)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="member this.ExportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ExportProperties propertyFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="3afde-142">Предикат, указывающий набор свойств.</span><span class="sxs-lookup"><span data-stu-id="3afde-142">A predicate that specifies a set of properties.</span></span></param>
        <summary><span data-ttu-id="3afde-143">Задает набор свойств, который должен быть экспортирован, для соответствующих типов.</span><span class="sxs-lookup"><span data-stu-id="3afde-143">Specifies a set of properties that should be exported on the matching types.</span></span></summary>
        <returns><span data-ttu-id="3afde-144">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-144">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-145">Свойство <paramref name="propertyFilter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-145"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties (propertyFilter As Predicate(Of PropertyInfo), exportConfiguration As Action(Of PropertyInfo, ExportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberSignature Language="F#" Value="member this.ExportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; * Action&lt;System.Reflection.PropertyInfo, System.ComponentModel.Composition.Registration.ExportBuilder&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ExportProperties (propertyFilter, exportConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="3afde-146">Предикат, указывающий набор свойств.</span><span class="sxs-lookup"><span data-stu-id="3afde-146">A predicate that specifies a set of properties.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="3afde-147">Объект, содержащий сведения о конфигурации экспорта.</span><span class="sxs-lookup"><span data-stu-id="3afde-147">An object that contains configuration information about the export.</span></span> <span data-ttu-id="3afde-148">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-148">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3afde-149">Задает набор свойств соответствующих типов, который должен быть экспортирован, и предоставляет информацию о конфигурации для этих экспортируемых данных.</span><span class="sxs-lookup"><span data-stu-id="3afde-149">Specifies a set of properties on the matching types that should be exported, and provides configuration information for those exports.</span></span></summary>
        <returns><span data-ttu-id="3afde-150">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-150">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-151">Свойство <paramref name="propertyFilter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-151"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="member this.ExportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ExportProperties propertyFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="3afde-152">Тип контракта.</span><span class="sxs-lookup"><span data-stu-id="3afde-152">The type of contract.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="3afde-153">Предикат, указывающий набор свойств.</span><span class="sxs-lookup"><span data-stu-id="3afde-153">A predicate that specifies a set of properties.</span></span></param>
        <summary><span data-ttu-id="3afde-154">Задает набор свойств для соответствующих типов, которые должны быть экспортированы с помощью указанного типа контракта.</span><span class="sxs-lookup"><span data-stu-id="3afde-154">Specifies a set of properties on the matching types that should be exported, by using the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="3afde-155">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-155">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-156">Свойство <paramref name="propertyFilter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-156"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo), exportConfiguration As Action(Of PropertyInfo, ExportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberSignature Language="F#" Value="member this.ExportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; * Action&lt;System.Reflection.PropertyInfo, System.ComponentModel.Composition.Registration.ExportBuilder&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ExportProperties (propertyFilter, exportConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="3afde-157">Тип контракта.</span><span class="sxs-lookup"><span data-stu-id="3afde-157">The type of contract.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="3afde-158">Предикат, указывающий набор свойств.</span><span class="sxs-lookup"><span data-stu-id="3afde-158">A predicate that specifies a set of properties.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="3afde-159">Объект, содержащий сведения о конфигурации экспорта.</span><span class="sxs-lookup"><span data-stu-id="3afde-159">An object that contains configuration information about the export.</span></span> <span data-ttu-id="3afde-160">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-160">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3afde-161">Задает набор свойств соответствующих типов, который должен быть экспортирован с использованием указанного типа контракта, и предоставляет информацию о конфигурации для результирующих экспортируемых данных.</span><span class="sxs-lookup"><span data-stu-id="3afde-161">Specifies a set of properties on the matching types that should be exported by using the specified contract type, and provides configuration information for the resulting exports.</span></span></summary>
        <returns><span data-ttu-id="3afde-162">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-162">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-163">Свойство <paramref name="propertyFilter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-163"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3afde-164">Задает набор свойств соответствующих типов, который должен быть импортирован.</span><span class="sxs-lookup"><span data-stu-id="3afde-164">Specifies a set of properties on the matching types that should be imported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ImportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties (propertyFilter As Predicate(Of PropertyInfo)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="member this.ImportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ImportProperties propertyFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="3afde-165">Предикат, указывающий набор свойств.</span><span class="sxs-lookup"><span data-stu-id="3afde-165">A predicate that specifies a set of properties.</span></span></param>
        <summary><span data-ttu-id="3afde-166">Задает набор свойств соответствующих типов, который должен быть импортирован.</span><span class="sxs-lookup"><span data-stu-id="3afde-166">Specifies a set of properties on the matching types that should be imported.</span></span></summary>
        <returns><span data-ttu-id="3afde-167">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-167">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-168">Свойство <paramref name="propertyFilter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-168"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ImportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties (propertyFilter As Predicate(Of PropertyInfo), importConfiguration As Action(Of PropertyInfo, ImportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::ComponentModel::Composition::Registration::ImportBuilder ^&gt; ^ importConfiguration);" />
      <MemberSignature Language="F#" Value="member this.ImportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; * Action&lt;System.Reflection.PropertyInfo, System.ComponentModel.Composition.Registration.ImportBuilder&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ImportProperties (propertyFilter, importConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="3afde-169">Предикат, указывающий набор свойств.</span><span class="sxs-lookup"><span data-stu-id="3afde-169">A predicate that specifies a set of properties.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="3afde-170">Объект, содержащий сведения о конфигурации импорта.</span><span class="sxs-lookup"><span data-stu-id="3afde-170">An object that contains configuration information about the import.</span></span> <span data-ttu-id="3afde-171">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-171">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3afde-172">Задает набор свойств соответствующих типов, которые необходимо пометить как импортированные, и предоставляет информацию о конфигурации для результирующих импортированных данных.</span><span class="sxs-lookup"><span data-stu-id="3afde-172">Specifies a set of properties on the matching types that should be marked as imports, and provides configuration information for the resulting imports.</span></span></summary>
        <returns><span data-ttu-id="3afde-173">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-173">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-174">Свойство <paramref name="propertyFilter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-174"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ImportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="member this.ImportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ImportProperties propertyFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="3afde-175">Тип контракта.</span><span class="sxs-lookup"><span data-stu-id="3afde-175">The type of contract.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="3afde-176">Предикат, указывающий набор свойств.</span><span class="sxs-lookup"><span data-stu-id="3afde-176">A predicate that specifies a set of properties.</span></span></param>
        <summary><span data-ttu-id="3afde-177">Задает набор свойств для соответствующих типов, которые необходимо пометить как импортированные с помощью указанного типа контракта.</span><span class="sxs-lookup"><span data-stu-id="3afde-177">Specifies a set of properties on the matching types that should be marked as imports using the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="3afde-178">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-178">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-179">Свойство <paramref name="propertyFilter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-179"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ImportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo), importConfiguration As Action(Of PropertyInfo, ImportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::ComponentModel::Composition::Registration::ImportBuilder ^&gt; ^ importConfiguration);" />
      <MemberSignature Language="F#" Value="member this.ImportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; * Action&lt;System.Reflection.PropertyInfo, System.ComponentModel.Composition.Registration.ImportBuilder&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.ImportProperties (propertyFilter, importConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="3afde-180">Тип контракта.</span><span class="sxs-lookup"><span data-stu-id="3afde-180">The type of contract.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="3afde-181">Предикат, указывающий набор свойств.</span><span class="sxs-lookup"><span data-stu-id="3afde-181">A predicate that specifies a set of properties.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="3afde-182">Объект, содержащий сведения о конфигурации импорта.</span><span class="sxs-lookup"><span data-stu-id="3afde-182">An object that contains configuration information about the import.</span></span> <span data-ttu-id="3afde-183">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-183">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3afde-184">Задает набор свойств соответствующих типов, которые необходимо пометить как импортированные с использованием указанного типа контракта, и предоставляет информацию о конфигурации для результирующих импортируемых данных.</span><span class="sxs-lookup"><span data-stu-id="3afde-184">Specifies a set of properties on the matching types that should be marked as imports by using the specified contract type, and provides configuration information for the resulting imports.</span></span></summary>
        <returns><span data-ttu-id="3afde-185">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-185">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-186">Свойство <paramref name="propertyFilter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-186"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectConstructor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3afde-187">Определяет конструктор, который соответствующие типы должны использовать в качестве импортирующего конструктора.</span><span class="sxs-lookup"><span data-stu-id="3afde-187">Specifies the constructor that matching types should use as an importing constructor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor (Func&lt;System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo&gt; constructorFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor(class System.Func`2&lt;class System.Reflection.ConstructorInfo[], class System.Reflection.ConstructorInfo&gt; constructorFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorFilter As Func(Of ConstructorInfo(), ConstructorInfo)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ SelectConstructor(Func&lt;cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^, System::Reflection::ConstructorInfo ^&gt; ^ constructorFilter);" />
      <MemberSignature Language="F#" Value="member this.SelectConstructor : Func&lt;System.Reflection.ConstructorInfo[], System.Reflection.ConstructorInfo&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.SelectConstructor constructorFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorFilter" Type="System.Func&lt;System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorFilter"><span data-ttu-id="3afde-188">Функция, которая выбирает один конструктор из набора конструкторов.</span><span class="sxs-lookup"><span data-stu-id="3afde-188">A function that chooses one constructor from a set of constructors.</span></span></param>
        <summary><span data-ttu-id="3afde-189">Определяет конструктор, который соответствующие типы должны использовать в качестве импортирующего конструктора.</span><span class="sxs-lookup"><span data-stu-id="3afde-189">Specifies the constructor that matching types should use as an importing constructor.</span></span></summary>
        <returns><span data-ttu-id="3afde-190">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-190">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-191">Свойство <paramref name="constructorFilter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-191"><paramref name="constructorFilter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3afde-192"><paramref name="constructorFilter" /> возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-192"><paramref name="constructorFilter" /> returns <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3afde-193"><paramref name="constructorFilter" /> возвращает конструктор, который не связан с типом цели.</span><span class="sxs-lookup"><span data-stu-id="3afde-193"><paramref name="constructorFilter" /> returns a constructor that is not associated with the target type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor (Func&lt;System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo&gt; constructorFilter, Action&lt;System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor(class System.Func`2&lt;class System.Reflection.ConstructorInfo[], class System.Reflection.ConstructorInfo&gt; constructorFilter, class System.Action`2&lt;class System.Reflection.ParameterInfo, class System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorFilter As Func(Of ConstructorInfo(), ConstructorInfo), importConfiguration As Action(Of ParameterInfo, ImportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ SelectConstructor(Func&lt;cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^, System::Reflection::ConstructorInfo ^&gt; ^ constructorFilter, Action&lt;System::Reflection::ParameterInfo ^, System::ComponentModel::Composition::Registration::ImportBuilder ^&gt; ^ importConfiguration);" />
      <MemberSignature Language="F#" Value="member this.SelectConstructor : Func&lt;System.Reflection.ConstructorInfo[], System.Reflection.ConstructorInfo&gt; * Action&lt;System.Reflection.ParameterInfo, System.ComponentModel.Composition.Registration.ImportBuilder&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.SelectConstructor (constructorFilter, importConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorFilter" Type="System.Func&lt;System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorFilter"><span data-ttu-id="3afde-194">Функция, которая выбирает один конструктор из набора конструкторов.</span><span class="sxs-lookup"><span data-stu-id="3afde-194">A function that chooses one constructor from a set of constructors.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="3afde-195">Объект, содержащий сведения о конфигурации импортирующего конструктора.</span><span class="sxs-lookup"><span data-stu-id="3afde-195">An object that contains configuration information for the importing constructor.</span></span> <span data-ttu-id="3afde-196">Значение по умолчанию: <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-196">The default is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3afde-197">Задает конструктор, который соответствующие типы должны использовать в качестве импортирующего конструктора, и предоставляет информацию о конфигурации для результирующих импортированных данных.</span><span class="sxs-lookup"><span data-stu-id="3afde-197">Specifies the constructor that matching types should use as an importing constructor, and provides configuration information for the resulting import.</span></span></summary>
        <returns><span data-ttu-id="3afde-198">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-198">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3afde-199">Свойство <paramref name="constructorFilter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-199"><paramref name="constructorFilter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3afde-200"><paramref name="constructorFilter" /> возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3afde-200"><paramref name="constructorFilter" /> returns <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3afde-201"><paramref name="constructorFilter" /> возвращает конструктор, который не связан с типом цели.</span><span class="sxs-lookup"><span data-stu-id="3afde-201"><paramref name="constructorFilter" /> returns a constructor that is not associated with the target type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder SetCreationPolicy (System.ComponentModel.Composition.CreationPolicy creationPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder SetCreationPolicy(valuetype System.ComponentModel.Composition.CreationPolicy creationPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ SetCreationPolicy(System::ComponentModel::Composition::CreationPolicy creationPolicy);" />
      <MemberSignature Language="F#" Value="member this.SetCreationPolicy : System.ComponentModel.Composition.CreationPolicy -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="partBuilder.SetCreationPolicy creationPolicy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
      </Parameters>
      <Docs>
        <param name="creationPolicy"><span data-ttu-id="3afde-202">Политика создания.</span><span class="sxs-lookup"><span data-stu-id="3afde-202">The creation policy.</span></span></param>
        <summary><span data-ttu-id="3afde-203">Указывает политику создания для соответствующих типов.</span><span class="sxs-lookup"><span data-stu-id="3afde-203">Specifies the creation policy for matching types.</span></span></summary>
        <returns><span data-ttu-id="3afde-204">Текущий объект для разрешения построения цепочки.</span><span class="sxs-lookup"><span data-stu-id="3afde-204">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>