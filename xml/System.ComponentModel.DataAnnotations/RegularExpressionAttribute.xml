<Type Name="RegularExpressionAttribute" FullName="System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ac6098a6a83d4775991a9870cf223434e7010a6" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75149525" /></Metadata><TypeSignature Language="C#" Value="public class RegularExpressionAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionAttribute extends System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionAttribute&#xA;Inherits ValidationAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionAttribute : System::ComponentModel::DataAnnotations::ValidationAttribute" />
  <TypeSignature Language="F#" Value="type RegularExpressionAttribute = class&#xA;    inherit ValidationAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.DataAnnotations.ValidationAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1">
      <AttributeName>System.AttributeUsage</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="10028-101">Указывает, что значение поля данных в платформе динамических данных ASP.NET должно соответствовать заданному регулярному выражению.</span><span class="sxs-lookup"><span data-stu-id="10028-101">Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10028-102">Атрибут Регуларекспрессионаттрибуте применяется к свойству, если необходимо проверить значения для свойства в регулярном выражении.</span><span class="sxs-lookup"><span data-stu-id="10028-102">You apply the RegularExpressionAttribute attribute to a property when you need to validate values for the property against a regular expression.</span></span> <span data-ttu-id="10028-103">Регулярное выражение позволяет указать очень точный формат допустимых значений.</span><span class="sxs-lookup"><span data-stu-id="10028-103">The regular expression enables you to specify very precisely the format of valid values.</span></span> <span data-ttu-id="10028-104">Свойство pattern содержит регулярное выражение. Если значение свойства равно null или является пустой строкой (""), значение автоматически пройдет проверку атрибута Регуларекспрессионаттрибуте.</span><span class="sxs-lookup"><span data-stu-id="10028-104">The Pattern property contains the regular expression.If the value of the property is null or an empty string (""), the value automatically passes validation for the RegularExpressionAttribute attribute.</span></span> <span data-ttu-id="10028-105">Чтобы проверить, что значение не `null` или является пустой строкой, используйте атрибут **RequiredAttribute** .</span><span class="sxs-lookup"><span data-stu-id="10028-105">To validate that the value is not `null` or an empty string, use the **RequiredAttribute** attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10028-106">В следующем примере показано, как использовать атрибут <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> для проверки полей данных FirstName и LastName.</span><span class="sxs-lookup"><span data-stu-id="10028-106">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to validate the FirstName and LastName data fields.</span></span> <span data-ttu-id="10028-107">Регулярное выражение допускает до 40 символов в верхнем и нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="10028-107">The regular expression allows up to 40 uppercase and lowercase characters.</span></span> <span data-ttu-id="10028-108">В этом примере выполняются следующие задачи.</span><span class="sxs-lookup"><span data-stu-id="10028-108">The example performs the following tasks:</span></span>  
  
-   <span data-ttu-id="10028-109">Реализует разделяемый класс метаданных и связанный класс метаданных.</span><span class="sxs-lookup"><span data-stu-id="10028-109">Implements a metadata partial class and the associated metadata class.</span></span>  
  
-   <span data-ttu-id="10028-110">В связанном классе метаданных применяет атрибут <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> к полям данных FirstName и LastName, указывая шаблон и пользовательские сообщения об ошибках.</span><span class="sxs-lookup"><span data-stu-id="10028-110">In the associated metadata class, applies the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to the FirstName and LastName data fields, specifying the pattern and custom error messages.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionAttribute (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionAttribute(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute : string -&gt; System.ComponentModel.DataAnnotations.RegularExpressionAttribute" Usage="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="10028-111">Регулярное выражение, используемое для проверки значения поля данных.</span><span class="sxs-lookup"><span data-stu-id="10028-111">The regular expression that is used to validate the data field value.</span></span></param>
        <summary><span data-ttu-id="10028-112">Инициализация нового экземпляра класса <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="10028-112">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10028-113">В следующем примере показано, как применить <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> к полю данных.</span><span class="sxs-lookup"><span data-stu-id="10028-113">The following example shows how to apply the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> to a data field.</span></span> <span data-ttu-id="10028-114">Если проверка завершается неудачно, код в примере отображает сообщение об ошибке проверки, предоставленное платформа динамических данных.</span><span class="sxs-lookup"><span data-stu-id="10028-114">If validation fails, the code in the example displays the validation error message that is provided by Dynamic Data.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="10028-115">Свойство <paramref name="pattern" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="10028-115"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FormatErrorMessage">
      <MemberSignature Language="C#" Value="public override string FormatErrorMessage (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string FormatErrorMessage(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FormatErrorMessage (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ FormatErrorMessage(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.FormatErrorMessage : string -&gt; string" Usage="regularExpressionAttribute.FormatErrorMessage name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="10028-116">Имя поля, ставшего причиной сбоя при проверке.</span><span class="sxs-lookup"><span data-stu-id="10028-116">The name of the field that caused the validation failure.</span></span></param>
        <summary><span data-ttu-id="10028-117">Форматирует сообщение об ошибке, отображаемое, если во время проверки регулярного выражения произойдет сбой.</span><span class="sxs-lookup"><span data-stu-id="10028-117">Formats the error message to display if the regular expression validation fails.</span></span></summary>
        <returns><span data-ttu-id="10028-118">Форматированное сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="10028-118">The formatted error message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10028-119"><xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> создает сообщение об ошибке, используя имя поля данных, вызвавшего сбой проверки.</span><span class="sxs-lookup"><span data-stu-id="10028-119">The <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> creates the error message by using the name of the data field that caused the validation failure.</span></span> <span data-ttu-id="10028-120">Этот метод можно переопределить в настраиваемых атрибутах проверки, чтобы настроить способ создания ошибок или создать более сложное сообщение, содержащее параметры, которые оцениваются во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="10028-120">You can override this method in custom validation attributes to customize how errors are created or to provide a more complex message that contains parameters that you evaluate at run time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="10028-121">Текущий атрибут некорректен.</span><span class="sxs-lookup"><span data-stu-id="10028-121">The current attribute is ill-formed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="10028-122"><see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> представляет собой недопустимое регулярное выражение.</span><span class="sxs-lookup"><span data-stu-id="10028-122">The <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> is not a valid regular expression.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.IsValid : obj -&gt; bool" Usage="regularExpressionAttribute.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="10028-123">Значение поля данных, которое нужно проверить.</span><span class="sxs-lookup"><span data-stu-id="10028-123">The data field value to validate.</span></span></param>
        <summary><span data-ttu-id="10028-124">Проверяет, соответствует ли введенное пользователем значение шаблону регулярного выражения.</span><span class="sxs-lookup"><span data-stu-id="10028-124">Checks whether the value entered by the user matches the regular expression pattern.</span></span></summary>
        <returns><span data-ttu-id="10028-125">Значение <see langword="true" />, если проверка прошла успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="10028-125"><see langword="true" /> if validation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="10028-126">Это переопределение выполняет определенное регулярное выражение, совпадающее с `value` полем.</span><span class="sxs-lookup"><span data-stu-id="10028-126">This override performs the specific regular expression matching of `value` field.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="10028-127">Значения поля данных не соответствует шаблону регулярного выражения.</span><span class="sxs-lookup"><span data-stu-id="10028-127">The data field value did not match the regular expression pattern.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="10028-128">Текущий атрибут некорректен.</span><span class="sxs-lookup"><span data-stu-id="10028-128">The current attribute is ill-formed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="10028-129"><see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> представляет собой недопустимое регулярное выражение.</span><span class="sxs-lookup"><span data-stu-id="10028-129"><see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> is not a valid regular expression.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeoutInMilliseconds">
      <MemberSignature Language="C#" Value="public int MatchTimeoutInMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchTimeoutInMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeoutInMilliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MatchTimeoutInMilliseconds { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeoutInMilliseconds : int with get, set" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10028-130">Возвращает или задает количество времени в миллисекундах для выполнения одной операции сопоставления до истечения времени ожидания операции.</span><span class="sxs-lookup"><span data-stu-id="10028-130">Gets or sets the amount of time in milliseconds to execute a single matching operation before the operation times out.</span></span></summary>
        <value><span data-ttu-id="10028-131">Количество времени в миллисекундах для выполнения одной операции сопоставления.</span><span class="sxs-lookup"><span data-stu-id="10028-131">The amount of time in milliseconds to execute a single matching operation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10028-132">Получает шаблон регулярного выражения.</span><span class="sxs-lookup"><span data-stu-id="10028-132">Gets the regular expression pattern.</span></span></summary>
        <value><span data-ttu-id="10028-133">Шаблон для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="10028-133">The pattern to match.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
