<Type Name="EncoderExceptionFallbackBuffer" FullName="System.Text.EncoderExceptionFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be43b8f7787e60e24d16ba0477e0b59efecb43c2" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70695206" /></Metadata><TypeSignature Language="C#" Value="public sealed class EncoderExceptionFallbackBuffer : System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderExceptionFallbackBuffer extends System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderExceptionFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderExceptionFallbackBuffer&#xA;Inherits EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderExceptionFallbackBuffer sealed : System::Text::EncoderFallbackBuffer" />
  <TypeSignature Language="F#" Value="type EncoderExceptionFallbackBuffer = class&#xA;    inherit EncoderFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallbackBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1fde5-101">Создает исключение <see cref="T:System.Text.EncoderFallbackException" />, когда входной символ не может быть преобразован в закодированную выходную последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="1fde5-101">Throws <see cref="T:System.Text.EncoderFallbackException" /> when an input character cannot be converted to an encoded output byte sequence.</span></span> <span data-ttu-id="1fde5-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="1fde5-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fde5-103">Распространенной причиной сбоя операции кодирования или декодирования является то, что базовый класс кодирования не предоставляет сопоставление между символом и эквивалентной последовательностью байтов.</span><span class="sxs-lookup"><span data-stu-id="1fde5-103">A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</span></span> <span data-ttu-id="1fde5-104">Если входной символ не может быть преобразован в выходную последовательность байтов, операция кодирования вызывает <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> метод, который создает исключение. <xref:System.Text.EncoderFallbackException></span><span class="sxs-lookup"><span data-stu-id="1fde5-104">If the input character cannot be converted to an output byte sequence, the encoding operation calls the <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> method, which throws <xref:System.Text.EncoderFallbackException>.</span></span>  
  
 <span data-ttu-id="1fde5-105">Класс, представляющий буфер данных, используемый в операции кодирования, является базовым классом <xref:System.Text.EncoderExceptionFallbackBuffer> для класса. <xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1fde5-105">The <xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType> class, which represents a data buffer used in an encoding operation, is the base class for the <xref:System.Text.EncoderExceptionFallbackBuffer> class.</span></span> <span data-ttu-id="1fde5-106">Однако вместо буфера <xref:System.Text.EncoderExceptionFallbackBuffer> данных класс представляет стандартное поведение, при котором исключение возникает при сбое операции кодирования.</span><span class="sxs-lookup"><span data-stu-id="1fde5-106">However, instead of a data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer> class represents a standard behavior wherein an exception is thrown if an encoding operation fails.</span></span> <span data-ttu-id="1fde5-107">Фактический буфер данных не существует, и члены, предназначенные для работы с таким буфером, не выполняют никаких значительных действий.</span><span class="sxs-lookup"><span data-stu-id="1fde5-107">No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderExceptionFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderExceptionFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fde5-108">Инициализирует новый экземпляр класса <see cref="T:System.Text.EncoderExceptionFallbackBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="1fde5-108">Initializes a new instance of the <see cref="T:System.Text.EncoderExceptionFallbackBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1fde5-109">Создает исключение, так как входной символ не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="1fde5-109">Throws an exception because the input character cannot be encoded.</span></span> <span data-ttu-id="1fde5-110">Номинальное возвращаемое значение не используется.</span><span class="sxs-lookup"><span data-stu-id="1fde5-110">The nominal return value is not used.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * int -&gt; bool" Usage="encoderExceptionFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown"><span data-ttu-id="1fde5-111">Входной символ.</span><span class="sxs-lookup"><span data-stu-id="1fde5-111">An input character.</span></span></param>
        <param name="index"><span data-ttu-id="1fde5-112">Позиция индекса символа во входном буфере.</span><span class="sxs-lookup"><span data-stu-id="1fde5-112">The index position of the character in the input buffer.</span></span></param>
        <summary><span data-ttu-id="1fde5-113">Создает исключение, так как входной символ не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="1fde5-113">Throws an exception because the input character cannot be encoded.</span></span> <span data-ttu-id="1fde5-114">Параметра указывает значение и позицию индекса символа, который не может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="1fde5-114">Parameters specify the value and index position of the character that cannot be converted.</span></span></summary>
        <returns><span data-ttu-id="1fde5-115">Отсутствует.</span><span class="sxs-lookup"><span data-stu-id="1fde5-115">None.</span></span> <span data-ttu-id="1fde5-116">Значение не возвращается, так как метод <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" /> всегда создает исключение.</span><span class="sxs-lookup"><span data-stu-id="1fde5-116">No value is returned because the <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" /> method always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fde5-117">Методы <xref:System.Text.Encoding.GetBytes%2A> и <xref:System.Text.Encoder.Convert%2A> вызывают <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>  , если во входных данных обнаружен неизвестный символ.</span><span class="sxs-lookup"><span data-stu-id="1fde5-117">The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Encoder.Convert%2A> methods call <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> if they encounter an unknown character in their input.</span></span> <span data-ttu-id="1fde5-118">В ответе <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> всегда создается <xref:System.Text.EncoderFallbackException>исключение.</span><span class="sxs-lookup"><span data-stu-id="1fde5-118">In response, <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> always throws <xref:System.Text.EncoderFallbackException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="1fde5-119">Параметр <paramref name="charUnknown" /> не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="1fde5-119"><paramref name="charUnknown" /> cannot be encoded.</span></span> <span data-ttu-id="1fde5-120">Этот метод всегда создает исключение, сообщающее значение параметров <paramref name="charUnknown" /> и <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="1fde5-120">This method always throws an exception that reports the value of the <paramref name="charUnknown" /> and <paramref name="index" /> parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * char * int -&gt; bool" Usage="encoderExceptionFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh"><span data-ttu-id="1fde5-121">Старший символ-заместитель входной пары.</span><span class="sxs-lookup"><span data-stu-id="1fde5-121">The high surrogate of the input pair.</span></span></param>
        <param name="charUnknownLow"><span data-ttu-id="1fde5-122">Младший символ-заместитель входной пары.</span><span class="sxs-lookup"><span data-stu-id="1fde5-122">The low surrogate of the input pair.</span></span></param>
        <param name="index"><span data-ttu-id="1fde5-123">Позиция индекса суррогатной пары во входном буфере.</span><span class="sxs-lookup"><span data-stu-id="1fde5-123">The index position of the surrogate pair in the input buffer.</span></span></param>
        <summary><span data-ttu-id="1fde5-124">Создает исключение, так как входной символ не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="1fde5-124">Throws an exception because the input character cannot be encoded.</span></span> <span data-ttu-id="1fde5-125">Параметры указывают значение и позицию индекса суррогатной пары во входной последовательности, и номинальное возвращаемое значение не используется.</span><span class="sxs-lookup"><span data-stu-id="1fde5-125">Parameters specify the value and index position of the surrogate pair in the input, and the nominal return value is not used.</span></span></summary>
        <returns><span data-ttu-id="1fde5-126">Отсутствует.</span><span class="sxs-lookup"><span data-stu-id="1fde5-126">None.</span></span> <span data-ttu-id="1fde5-127">Значение не возвращается, так как метод <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" /> всегда создает исключение.</span><span class="sxs-lookup"><span data-stu-id="1fde5-127">No value is returned because the <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" /> method always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fde5-128">Методы <xref:System.Text.Encoding.GetBytes%2A> и <xref:System.Text.Encoder.Convert%2A> вызывают <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>  , если они обнаруживают суррогатную пару во входных данных.</span><span class="sxs-lookup"><span data-stu-id="1fde5-128">The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Encoder.Convert%2A> methods call <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="1fde5-129">В ответе <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> всегда создает исключение.</span><span class="sxs-lookup"><span data-stu-id="1fde5-129">In response, <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="1fde5-130">Характер, представленный <paramref name="charUnknownHigh" /> и <paramref name="charUnknownLow" />, не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="1fde5-130">The character represented by <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" /> cannot be encoded.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1fde5-131">Значение параметра <paramref name="charUnknownHigh" /> или <paramref name="charUnknownLow" /> является недопустимым.</span><span class="sxs-lookup"><span data-stu-id="1fde5-131">Either <paramref name="charUnknownHigh" /> or <paramref name="charUnknownLow" /> is invalid.</span></span> <span data-ttu-id="1fde5-132">Значение параметра <paramref name="charUnknownHigh" /> находится за пределами диапазона от U+D800 до U+DBFF включительно или значение параметра <paramref name="charUnknownLow" /> находится за пределами диапазона от U+DC00 до U+DFFF включительно.</span><span class="sxs-lookup"><span data-stu-id="1fde5-132"><paramref name="charUnknownHigh" /> is not between U+D800 and U+DBFF, inclusive, or <paramref name="charUnknownLow" /> is not between U+DC00 and U+DFFF, inclusive.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public override char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetNextChar();" />
      <MemberSignature Language="F#" Value="override this.GetNextChar : unit -&gt; char" Usage="encoderExceptionFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fde5-133">Извлекает следующий символ в резервном буфере исключения.</span><span class="sxs-lookup"><span data-stu-id="1fde5-133">Retrieves the next character in the exception fallback buffer.</span></span></summary>
        <returns><span data-ttu-id="1fde5-134">Возвращаемое значение всегда является символом NULL кодировки Юникод (U+0000).</span><span class="sxs-lookup"><span data-stu-id="1fde5-134">The return value is always the Unicode character, NULL (U+0000).</span></span>  
  
 <span data-ttu-id="1fde5-135">Возвращаемое значение определено, хотя оно не изменяется, так как этот метод реализовывает абстрактный метод.</span><span class="sxs-lookup"><span data-stu-id="1fde5-135">A return value is defined, although it is unchanging, because this method implements an abstract method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fde5-136">Поскольку <xref:System.Text.EncoderExceptionFallbackBuffer> не содержит фактических буферов данных исключений <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A> , метод всегда возвращает символ NULL в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="1fde5-136">Because <xref:System.Text.EncoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A> method always returns the Unicode NULL character.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public override bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MovePrevious();" />
      <MemberSignature Language="F#" Value="override this.MovePrevious : unit -&gt; bool" Usage="encoderExceptionFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fde5-137">Приводит к тому, что следующий вызов метода <see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" /> получает доступ к позиции символа в буфере данных, предшествующей текущей позиции символа.</span><span class="sxs-lookup"><span data-stu-id="1fde5-137">Causes the next call to the <see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" /> method to access the exception data buffer character position that is prior to the current position.</span></span></summary>
        <returns><span data-ttu-id="1fde5-138">Возвращаемое значение всегда равно <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1fde5-138">The return value is always <see langword="false" />.</span></span>  
  
<span data-ttu-id="1fde5-139">Возвращаемое значение определено, хотя оно не изменяется, так как этот метод реализовывает абстрактный метод.</span><span class="sxs-lookup"><span data-stu-id="1fde5-139">A return value is defined, although it is unchanging, because this method implements an abstract method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fde5-140">Поскольку <xref:System.Text.EncoderExceptionFallbackBuffer> не имеет фактического буфера данных исключений, <xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A> метод всегда возвращает `false`значение.</span><span class="sxs-lookup"><span data-stu-id="1fde5-140">Because <xref:System.Text.EncoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A> method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public override int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderExceptionFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderExceptionFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fde5-141">Получает количество символов в текущем объекте <see cref="T:System.Text.EncoderExceptionFallbackBuffer" />, которые нужно обработать.</span><span class="sxs-lookup"><span data-stu-id="1fde5-141">Gets the number of characters in the current <see cref="T:System.Text.EncoderExceptionFallbackBuffer" /> object that remain to be processed.</span></span></summary>
        <value><span data-ttu-id="1fde5-142">Возвращаемое значение всегда равно нулю.</span><span class="sxs-lookup"><span data-stu-id="1fde5-142">The return value is always zero.</span></span>  
  
 <span data-ttu-id="1fde5-143">Возвращаемое значение определено, хотя оно не изменяется, так как этот метод реализовывает абстрактный метод.</span><span class="sxs-lookup"><span data-stu-id="1fde5-143">A return value is defined, although it is unchanging, because this method implements an abstract method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fde5-144">Поскольку <xref:System.Text.EncoderExceptionFallbackBuffer> не имеет фактического буфера данных исключений <xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A> , свойство всегда возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="1fde5-144">Because <xref:System.Text.EncoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A> property always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
