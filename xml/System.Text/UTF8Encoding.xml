<Type Name="UTF8Encoding" FullName="System.Text.UTF8Encoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7088d553aa894e006add89f8658de26841fe5002" /><Meta Name="ms.sourcegitcommit" Value="08fc3691deb7adaf0dfd751b9d9d0b23a3d3a7b8" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/09/2019" /><Meta Name="ms.locfileid" Value="68901367" /></Metadata><TypeSignature Language="C#" Value="public class UTF8Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UTF8Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF8Encoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UTF8Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF8Encoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF8Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="21d1f-101">Представляет кодировку символов Юникода в формате UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-101">Represents a UTF-8 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-102">Кодирование - это процесс преобразования набора символов Юникода в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="21d1f-103">Декодирование — это процесс преобразования последовательности закодированных байтов в набор символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="21d1f-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="21d1f-104">UTF-8 — это Кодировка Юникода, которая представляет каждую кодовую точку как последовательность из одного до четырех байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-104">UTF-8 is a Unicode encoding that represents each code point as a sequence of one to four bytes.</span></span> <span data-ttu-id="21d1f-105">В отличие от кодировок UTF-16 и UTF-32, кодировка UTF-8 не требует "порядок следования байтов"; схема кодировки одинакова независимо от того, имеет ли процессор обратный порядок байтов или прямой порядок байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-105">Unlike the UTF-16 and UTF-32 encodings, the UTF-8 encoding does not require "endianness"; the encoding scheme is the same regardless of whether the processor is big-endian or little-endian.</span></span> <span data-ttu-id="21d1f-106"><xref:System.Text.UTF8Encoding>соответствует кодовой странице Windows 65001.</span><span class="sxs-lookup"><span data-stu-id="21d1f-106"><xref:System.Text.UTF8Encoding> corresponds to the Windows code page 65001.</span></span> <span data-ttu-id="21d1f-107">Дополнительные сведения о утфс и других кодировках <xref:System.Text>, поддерживаемых, см. в разделе кодировка [символов в .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="21d1f-107">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="21d1f-108">Создать экземпляр <xref:System.Text.UTF8Encoding> объекта можно несколькими способами, в зависимости от того, нужно ли ему предоставить метку порядка байтов (BOM) и следует ли включить обнаружение ошибок.</span><span class="sxs-lookup"><span data-stu-id="21d1f-108">You can instantiate a <xref:System.Text.UTF8Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM) and whether you want to enable error detection.</span></span> <span data-ttu-id="21d1f-109">В следующей таблице перечислены конструкторы и <xref:System.Text.Encoding> свойство, <xref:System.Text.UTF8Encoding> возвращающие объект.</span><span class="sxs-lookup"><span data-stu-id="21d1f-109">The following table lists the constructors and the <xref:System.Text.Encoding> property that return a <xref:System.Text.UTF8Encoding> object.</span></span>  
  
|<span data-ttu-id="21d1f-110">Член</span><span class="sxs-lookup"><span data-stu-id="21d1f-110">Member</span></span>|<span data-ttu-id="21d1f-111">BOM</span><span class="sxs-lookup"><span data-stu-id="21d1f-111">BOM</span></span>|<span data-ttu-id="21d1f-112">Обнаружение ошибок</span><span class="sxs-lookup"><span data-stu-id="21d1f-112">Error detection</span></span>|  
|------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>|<span data-ttu-id="21d1f-113">Да</span><span class="sxs-lookup"><span data-stu-id="21d1f-113">Yes</span></span>|<span data-ttu-id="21d1f-114">Нет (замена резервного варианта)</span><span class="sxs-lookup"><span data-stu-id="21d1f-114">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="21d1f-115">Нет</span><span class="sxs-lookup"><span data-stu-id="21d1f-115">No</span></span>|<span data-ttu-id="21d1f-116">Нет (замена резервного варианта)</span><span class="sxs-lookup"><span data-stu-id="21d1f-116">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="21d1f-117">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="21d1f-117">Configurable</span></span>|<span data-ttu-id="21d1f-118">Нет (замена резервного варианта)</span><span class="sxs-lookup"><span data-stu-id="21d1f-118">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="21d1f-119">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="21d1f-119">Configurable</span></span>|<span data-ttu-id="21d1f-120">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="21d1f-120">Configurable</span></span>|  
  
 <span data-ttu-id="21d1f-121">Метод определяет, сколько байт приводит к кодированию набора символов Юникода, <xref:System.Text.UTF8Encoding.GetBytes%2A> и метод выполняет фактическую кодировку. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-121">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF8Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="21d1f-122">Аналогичным образом <xref:System.Text.UTF8Encoding.GetCharCount%2A> , метод определяет, сколько символов приводит к декодированию последовательности байтов, <xref:System.Text.UTF8Encoding.GetChars%2A> а методы и <xref:System.Text.UTF8Encoding.GetString%2A> выполняют фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="21d1f-122">Likewise, the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF8Encoding.GetChars%2A> and <xref:System.Text.UTF8Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="21d1f-123">Для кодировщика или декодера, который может сохранять сведения о состоянии при кодировании или декодировании данных, охватывающих несколько блоков (например, строку 1 000 000 символов, закодированную в сегментах 100 000), используйте <xref:System.Text.UTF8Encoding.GetEncoder%2A> свойства и. <xref:System.Text.UTF8Encoding.GetDecoder%2A> содержани.</span><span class="sxs-lookup"><span data-stu-id="21d1f-123">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF8Encoding.GetEncoder%2A> and <xref:System.Text.UTF8Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="21d1f-124">При необходимости <xref:System.Text.UTF8Encoding> объект предоставляет метку порядка байтов (BOM), которая представляет собой массив байтов, которые можно предварять началом потока байтов, полученного в результате процесса кодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-124">Optionally, the <xref:System.Text.UTF8Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the beginning of the byte stream that results from the encoding process.</span></span> <span data-ttu-id="21d1f-125">Если поток байтов в кодировке UTF-8 предшествует метке порядка байтов (BOM), он помогает декодеру определить порядок байтов и формат преобразования или кодировку UTF.</span><span class="sxs-lookup"><span data-stu-id="21d1f-125">If a UTF-8 encoded byte stream is prefaced with a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="21d1f-126">Однако обратите внимание, что стандарт Юникод не требует и не рекомендует СПЕЦИФИКАЦИю в потоках, закодированных в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-126">Note, however, that the Unicode Standard neither requires nor recommends a BOM in UTF-8 encoded streams.</span></span> <span data-ttu-id="21d1f-127">Дополнительные сведения о порядке байтов и метке порядка байтов см. в стандарте Юникода на [домашней странице Юникода](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="21d1f-127">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="21d1f-128">Если кодировщик настроен для предоставления спецификации, его можно извлечь, вызвав <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод. в противном случае метод возвращает пустой массив.</span><span class="sxs-lookup"><span data-stu-id="21d1f-128">If the encoder is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="21d1f-129">Обратите внимание, что, <xref:System.Text.UTF8Encoding> даже если объект настроен для поддержки спецификации, необходимо включить спецификацию в начало закодированного потока байтов. методы <xref:System.Text.UTF8Encoding> кодирования класса не делают это автоматически.</span><span class="sxs-lookup"><span data-stu-id="21d1f-129">Note that, even if a <xref:System.Text.UTF8Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF8Encoding> class do not do this automatically.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="21d1f-130">Чтобы включить обнаружение ошибок и сделать экземпляр класса более безопасным, необходимо вызвать <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> конструктор и `throwOnInvalidBytes` присвоить параметру `true`значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-130">To enable error detection and to make the class instance more secure, you should call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor and set the `throwOnInvalidBytes` parameter to `true`.</span></span> <span data-ttu-id="21d1f-131">Если обнаружение ошибок включено, метод, который обнаруживает недопустимую последовательность символов или байтов, вызывает <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-131">With error detection enabled, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-132">Без обнаружения ошибок исключение не создается, а недопустимая последовательность обычно игнорируется.</span><span class="sxs-lookup"><span data-stu-id="21d1f-132">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21d1f-133">Состояние объекта в кодировке UTF-8 не сохраняется, если объект сериализуется и десериализуется с использованием разных версий .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="21d1f-133">The state of a UTF-8 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-134">В следующем примере <xref:System.Text.UTF8Encoding> объект используется для кодирования строки символов Юникода и сохранения их в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-134">The following example uses a <xref:System.Text.UTF8Encoding> object to encode a string of Unicode characters and store them in a byte array.</span></span> <span data-ttu-id="21d1f-135">Строка в Юникоде содержит два символа: PI (U + 03A0) и Сигма (U + 03A3), которые выходят за пределы диапазона символов ASCII.</span><span class="sxs-lookup"><span data-stu-id="21d1f-135">The Unicode string includes two characters, Pi (U+03A0) and Sigma (U+03A3), that are outside the ASCII character range.</span></span> <span data-ttu-id="21d1f-136">Когда закодированный массив байтов декодируется обратно в строку, символы PI и Сигма все еще существуют.</span><span class="sxs-lookup"><span data-stu-id="21d1f-136">When the encoded byte array is decoded back to a string, the Pi and Sigma characters are still present.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UTF8Encoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="21d1f-137">В следующем примере используется та же строка, что и в предыдущем примере, за исключением того, что она записывает закодированные байты в файл и добавляет префикс в байтовый поток с меткой порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="21d1f-137">The following example uses the same string as the previous example, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="21d1f-138">Затем он считывает файл двумя способами: как текстовый файл с помощью <xref:System.IO.StreamReader> объекта, а также как двоичный файл.</span><span class="sxs-lookup"><span data-stu-id="21d1f-138">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="21d1f-139">Как и следовало бы ожидания, ни одна из строк для чтения не включает СПЕЦИФИКАЦИю.</span><span class="sxs-lookup"><span data-stu-id="21d1f-139">As you would expect, neither newly-read string includes the BOM.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UTF8Encoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="21d1f-140">Общие сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="21d1f-140">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21d1f-141">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21d1f-142">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-142">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-143">Этот конструктор создает экземпляр, который не предоставляет метку порядка байтов Юникода и не создает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="21d1f-143">This constructor creates an instance that does not provide a Unicode byte order mark and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="21d1f-144">По соображениям безопасности рекомендуется включить обнаружение ошибок, вызвав конструктор с `throwOnInvalidBytes` параметром и задав для `true`него значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-144">For security reasons, we recommend that you enable error detection by calling a constructor with a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-145">В следующем примере создается новый <xref:System.Text.UTF8Encoding> экземпляр и отображается его имя.</span><span class="sxs-lookup"><span data-stu-id="21d1f-145">The following example creates a new <xref:System.Text.UTF8Encoding> instance and displays its name.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding encoderShouldEmitUTF8Identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier"><span data-ttu-id="21d1f-146">Значение <see langword="true" /> указывает, что метод <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> возвращает метку порядка байтов Юникода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-146"><see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="21d1f-147">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-147">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span> <span data-ttu-id="21d1f-148">Параметр указывает, нужно ли предоставлять метку порядка байтов Юникода.</span><span class="sxs-lookup"><span data-stu-id="21d1f-148">A parameter specifies whether to provide a Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-149">Этот конструктор создает экземпляр, который не создает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="21d1f-149">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="21d1f-150">По соображениям безопасности следует включить обнаружение ошибок, вызвав конструктор, который включает `throwOnInvalidBytes` параметр и присвоить ему `true`значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-150">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
 <span data-ttu-id="21d1f-151">Параметр управляет операцией <xref:System.Text.UTF8Encoding.GetPreamble%2A>метода. `encoderShouldEmitUTF8Identifier`</span><span class="sxs-lookup"><span data-stu-id="21d1f-151">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="21d1f-152">Если `true`значение равно, метод возвращает массив байтов, содержащий метку порядка байтов Юникода (BOM) в формате UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-152">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="21d1f-153">Если `false`значение равно, возвращается массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="21d1f-153">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="21d1f-154">Однако если `encoderShouldEmitUTF8Identifier` присвоить параметру `true` значение <xref:System.Text.UTF8Encoding.GetBytes%2A> , то метод не будет добавлять префикс к спецификации в начале массива <xref:System.Text.UTF8Encoding.GetByteCount%2A> байтов, а также не повлечет за собой включение в метод значения числа байтов в спецификации в числе байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-154">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-155">В следующем примере создается новый <xref:System.Text.UTF8Encoding> экземпляр и указывается, что <xref:System.Text.UTF8Encoding.GetPreamble%2A> методу следует подавать префикс метки порядка байтов Юникода.</span><span class="sxs-lookup"><span data-stu-id="21d1f-155">The following example creates a new <xref:System.Text.UTF8Encoding> instance and specifies that a Unicode byte order mark prefix should be emitted by the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="21d1f-156">Затем <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод возвращает префикс метки порядка байтов Юникода.</span><span class="sxs-lookup"><span data-stu-id="21d1f-156">The <xref:System.Text.UTF8Encoding.GetPreamble%2A> method then returns the Unicode byte order mark prefix.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CPP/ctor-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CS/ctor-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/VB/ctor-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool * bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding (encoderShouldEmitUTF8Identifier, throwOnInvalidBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier"><span data-ttu-id="21d1f-157">Значение <see langword="true" /> указывает, что метод <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> должен возвращать метку порядка байтов Юникода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-157"><see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidBytes"><span data-ttu-id="21d1f-158">Значение <see langword="true" /> указывает, что следует создавать исключение при обнаружении недопустимой кодировки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-158"><see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="21d1f-159">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-159">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span> <span data-ttu-id="21d1f-160">Параметры указывают, должна ли предоставляться метка порядка байтов Юникода и следует ли создавать исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="21d1f-160">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-161">Параметр управляет операцией <xref:System.Text.UTF8Encoding.GetPreamble%2A>метода. `encoderShouldEmitUTF8Identifier`</span><span class="sxs-lookup"><span data-stu-id="21d1f-161">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="21d1f-162">Если `true`значение равно, метод возвращает массив байтов, содержащий метку порядка байтов Юникода (BOM) в формате UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-162">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="21d1f-163">Если `false`значение равно, возвращается массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="21d1f-163">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="21d1f-164">Однако если `encoderShouldEmitUTF8Identifier` присвоить параметру `true` значение <xref:System.Text.UTF8Encoding.GetBytes%2A> , то метод не будет добавлять префикс к спецификации в начале массива <xref:System.Text.UTF8Encoding.GetByteCount%2A> байтов, а также не повлечет за собой включение в метод значения числа байтов в спецификации в числе байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-164">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="21d1f-165">Если `throwOnInvalidBytes` имеет `true`значение, метод, который обнаруживает <xref:System.ArgumentException?displayProperty=nameWithType> недопустимую последовательность байтов, вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-165">If `throwOnInvalidBytes` is `true`, a method that detects an invalid byte sequence throws an <xref:System.ArgumentException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="21d1f-166">В противном случае метод не создает исключение, а недопустимая последовательность игнорируется.</span><span class="sxs-lookup"><span data-stu-id="21d1f-166">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="21d1f-167">По соображениям безопасности следует включить обнаружение ошибок, вызвав конструктор, который включает `throwOnInvalidBytes` параметр и присвоив этому `true`параметру значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-167">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting that parameter to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-168">В следующем примере создается новый <xref:System.Text.UTF8Encoding> экземпляр, указывающий <xref:System.Text.UTF8Encoding.GetPreamble%2A> , что метод не должен выдавать префикс метки порядка байтов Юникода, и при обнаружении недопустимой кодировки должно быть выдано исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-168">The following example creates a new <xref:System.Text.UTF8Encoding> instance, specifying that the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method should not emit a Unicode byte order mark prefix, and an exception should be thrown when an invalid encoding is detected.</span></span> <span data-ttu-id="21d1f-169">Поведение этого конструктора сравнивается с конструктором по умолчанию <xref:System.Text.UTF8Encoding.%23ctor> , который не создает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="21d1f-169">The behavior of this constructor is compared to the default <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not throw an exception when an invalid encoding is detected.</span></span> <span data-ttu-id="21d1f-170">Два <xref:System.Text.UTF8Encoding> экземпляра кодируются массив символов, который содержит два старших суррогата (u + D801 и U + D802) в строке, что является недействительной последовательностью символов; старший суррогат всегда должен следовать за младшим суррогатом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-170">The two <xref:System.Text.UTF8Encoding> instances encode a character array that contains two high surrogates (U+D801 and U+D802) in a row, which is an invalid character sequence; a high surrogate should always be followed by a low surrogate.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF8Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21d1f-171">Объект для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="21d1f-171">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="21d1f-172">Определяет, равен ли заданный объект текущему объекту <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-172">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="21d1f-173">Значение <see langword="true" />, если <paramref name="value" /> является экземпляром класса <see cref="T:System.Text.UTF8Encoding" /> и равен текущему объекту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-173"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-174">Два <xref:System.Text.UTF8Encoding> объекта считаются равными, если выполняются все перечисленные ниже условия.</span><span class="sxs-lookup"><span data-stu-id="21d1f-174">Two <xref:System.Text.UTF8Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="21d1f-175">Оба объекта предоставляют метку порядка следования байтов или и то, и другое.</span><span class="sxs-lookup"><span data-stu-id="21d1f-175">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="21d1f-176">Оба объекта используют один и тот же откат кодировщика.</span><span class="sxs-lookup"><span data-stu-id="21d1f-176">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="21d1f-177">Оба объекта используют один и тот же откат декодера.</span><span class="sxs-lookup"><span data-stu-id="21d1f-177">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-178">В следующем примере <xref:System.Text.UTF8Encoding.Equals%2A> метод используется для проверки того, равен ли <xref:System.Text.UTF8Encoding> текущий объект другому <xref:System.Text.UTF8Encoding> объекту.</span><span class="sxs-lookup"><span data-stu-id="21d1f-178">The following example uses the <xref:System.Text.UTF8Encoding.Equals%2A> method to test whether the current <xref:System.Text.UTF8Encoding> object is equal to a different <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="21d1f-179">Создаются <xref:System.Text.UTF8Encoding> и сравниваются четыре объекта, результаты сравнения отображаются.</span><span class="sxs-lookup"><span data-stu-id="21d1f-179">Four <xref:System.Text.UTF8Encoding> objects are created and compared and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CPP/equals-object.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CS/equals-object.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/VB/equals-object.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21d1f-180">Подсчитывает количество байтов, полученных при кодировании набора символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-180">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="uTF8Encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="21d1f-181">Диапазон, содержащий кодируемый набор символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-181">The span that contains the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="21d1f-182">Вычисляет количество байтов, полученных при кодировании указанного диапазона символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-182">Calculates the number of bytes produced by encoding the specified character span.</span></span></summary>
        <returns><span data-ttu-id="21d1f-183">Число байтов, полученных при кодировании заданного диапазона символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-183">The number of bytes produced by encoding the specified character span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-184">Чтобы вычислить точный размер, <xref:System.Text.UTF8Encoding.GetBytes%2A> требуемый для хранения результирующих байтов, <xref:System.Text.UTF8Encoding.GetByteCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-184">To calculate the exact size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-185">Чтобы вычислить максимальный размер, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-185">To calculate the maximum size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-186">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-186">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-187">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-187">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-188">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-188">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-189">Чтобы обеспечить правильную декодирование закодированных байтов при сохранении их в виде файла или потока, можно добавить префикс потока закодированных байтов в преамбулу.</span><span class="sxs-lookup"><span data-stu-id="21d1f-189">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="21d1f-190">Вставка преамбулы в начало потока байтов (например, в начале последовательности байтов для занесения в файл) является обязанностью разработчика, а число байтов в преамбуле не отражается в значении, возвращаемом <xref:System.Text.UTF8Encoding.GetByteCount%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-190">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-191">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-191">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="21d1f-192">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-192">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-193">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-193">-and-</span></span> 
 <span data-ttu-id="21d1f-194">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-194"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF8Encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="21d1f-195">Объект <see cref="T:System.String" />, содержащий кодируемый набор символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-195">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="21d1f-196">Вычисляет количество байтов, полученных при кодировании символов в заданном объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-196">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="21d1f-197">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-197">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-198">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetBytes%2A> необходимый для хранения результирующих байтов, <xref:System.Text.UTF8Encoding.GetByteCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-198">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-199">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-199">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-200">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-200">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-201">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-201">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-202">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-202">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-203">Чтобы обеспечить правильную декодирование закодированных байтов при сохранении их в виде файла или потока, можно добавить префикс потока закодированных байтов в преамбулу.</span><span class="sxs-lookup"><span data-stu-id="21d1f-203">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="21d1f-204">Вставка преамбулы в начало потока байтов (например, в начале последовательности байтов для занесения в файл) является обязанностью разработчика, а число байтов в преамбуле не отражается в значении, возвращаемом <xref:System.Text.UTF8Encoding.GetByteCount%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-204">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-205">В следующем примере вызываются <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> методы <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> и для вычисления максимального и фактического числа байтов, необходимых для кодирования строки.</span><span class="sxs-lookup"><span data-stu-id="21d1f-205">The following example calls the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> and <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="21d1f-206">Он также отображает фактическое число байтов, необходимых для хранения потока байтов с меткой порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-206">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-207">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-207"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-208">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-208">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-209">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-209">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="21d1f-210">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-210">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-211">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-211">-and-</span></span> 
 <span data-ttu-id="21d1f-212">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-212"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="21d1f-213">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="21d1f-213">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="21d1f-214">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-214">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="21d1f-215">Вычисляет число байтов, полученных при кодировании набора символов начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="21d1f-215">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="21d1f-216">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-216">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-217">Чтобы вычислить точный размер массива, необходимый <xref:System.Text.UTF8Encoding.GetBytes%2A> методу для хранения полученных байтов, <xref:System.Text.UTF8Encoding.GetByteCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-217">To calculate the exact array size required by the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-218">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-218">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-219">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-219">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-220">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-220">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-221">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-221">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-222">Чтобы обеспечить правильную декодирование закодированных байтов при сохранении их в виде файла или потока, можно добавить префикс потока закодированных байтов в преамбулу.</span><span class="sxs-lookup"><span data-stu-id="21d1f-222">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="21d1f-223">Вставка преамбулы в начало потока байтов (например, в начале последовательности байтов для занесения в файл) является обязанностью разработчика, а число байтов в преамбуле не отражается в значении, возвращаемом <xref:System.Text.UTF8Encoding.GetByteCount%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-223">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-224"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-224"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-225">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-225"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="21d1f-226">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-226">-or-</span></span> 
<span data-ttu-id="21d1f-227">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-227">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-228">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-228">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="21d1f-229">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-229">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span> 
<span data-ttu-id="21d1f-230">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-230">-and-</span></span> 
 <span data-ttu-id="21d1f-231">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-231"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="21d1f-232">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-232">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="21d1f-233">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-233">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="21d1f-234">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-234">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="21d1f-235">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="21d1f-235">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="21d1f-236">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-236">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="21d1f-237">Вычисляет число байтов, полученных при кодировании набора символов из указанного массива символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-237">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="21d1f-238">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-238">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-239">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetBytes%2A> необходимый для хранения результирующих байтов, вызовите метод <xref:System.Text.UTF8Encoding.GetByteCount%2A> использования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-239">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the uses <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-240">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-240">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-241">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-241">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-242">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-242">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-243">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-243">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-244">Чтобы обеспечить правильную декодирование закодированных байтов при сохранении их в виде файла или потока, можно добавить префикс потока закодированных байтов в преамбулу.</span><span class="sxs-lookup"><span data-stu-id="21d1f-244">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="21d1f-245">Вставка преамбулы в начало потока байтов (например, в начале последовательности байтов для занесения в файл) является обязанностью разработчика, а число байтов в преамбуле не отражается в значении, возвращаемом <xref:System.Text.UTF8Encoding.GetByteCount%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-245">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-246">В следующем примере массив заполняется прописными буквами латинского алфавита и строчными буквами <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> , а затем вызывается метод для определения числа байтов, необходимых для кодирования символов нижнего регистра строчных букв.</span><span class="sxs-lookup"><span data-stu-id="21d1f-246">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="21d1f-247">Затем эти сведения отображаются вместе с общим числом байтов, необходимых при добавлении метки порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-247">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="21d1f-248">Он сравнивает это число со значением, возвращенным <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> методом, что указывает на максимальное число байтов, необходимых для кодирования символов нижнего регистра латиницы.</span><span class="sxs-lookup"><span data-stu-id="21d1f-248">It compares this number with the value returned by the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-249">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-249"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-250">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-250"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="21d1f-251">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-251">-or-</span></span> 
 <span data-ttu-id="21d1f-252">Параметры<paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-252"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="21d1f-253">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-253">-or-</span></span> 
<span data-ttu-id="21d1f-254">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-254">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-255">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-255">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="21d1f-256">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-256">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-257">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-257">-and-</span></span> 
<span data-ttu-id="21d1f-258">Свойству <see cref="P:System.Text.Encoding.EncoderFallback" /> задано значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-258">The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21d1f-259">Кодирует набор символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-259">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string -&gt; byte[]" Usage="uTF8Encoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="21d1f-260">Кодируемая строка символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-260">The character string to encode.</span></span></param>
        <summary><span data-ttu-id="21d1f-261">Кодирует символы из указанного объекта <see cref="T:System.String" /> в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-261">Encodes the characters in a specified <see cref="T:System.String" /> object into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="21d1f-262">Массив байтов, содержащий закодированные символы из строки, заданной параметром s.</span><span class="sxs-lookup"><span data-stu-id="21d1f-262">A byte array that contains the encoded characters in the string specified by the s parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int" Usage="uTF8Encoding.GetBytes (chars, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="21d1f-263">Кодируемый диапазон символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-263">The character span to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="21d1f-264">Диапазон, содержащий результирующий набор байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-264">The span to contain the resulting set of bytes.</span></span></param>
        <summary><span data-ttu-id="21d1f-265">Кодирует заданный диапазон символов в заданный диапазон байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-265">Encodes the specified character span into the specified byte span.</span></span></summary>
        <returns><span data-ttu-id="21d1f-266">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-266">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-267">Чтобы вычислить точный размер, <xref:System.Text.UTF8Encoding.GetBytes%2A> требуемый для хранения результирующих байтов, <xref:System.Text.UTF8Encoding.GetByteCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-267">To calculate the exact size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-268">Чтобы вычислить максимальный размер, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-268">To calculate the maximum size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-269">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-269">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-270">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-270">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-271">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-271">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-272">Данные для преобразования, например данные, считываемые из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="21d1f-272">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="21d1f-273">В этом случае, или если объем данных настолько велик, что необходимо разделить на <xref:System.Text.Decoder> меньшие блоки, используйте <xref:System.Text.Encoder> или, возвращаемый <xref:System.Text.UTF8Encoding.GetDecoder%2A> методом или <xref:System.Text.UTF8Encoding.GetEncoder%2A> методом соответственно.</span><span class="sxs-lookup"><span data-stu-id="21d1f-273">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> returned by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="21d1f-274">Чтобы обеспечить правильную декодирование закодированных байтов при сохранении их в виде файла или потока, можно добавить префикс потока закодированных байтов в преамбулу.</span><span class="sxs-lookup"><span data-stu-id="21d1f-274">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="21d1f-275">При вставке преамбулы в начало потока байтов (например, в начале последовательности байтов для занесения в файл) лежит ответственность за разработчика.</span><span class="sxs-lookup"><span data-stu-id="21d1f-275">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="21d1f-276"><xref:System.Text.UTF8Encoding.GetBytes%2A> Метод не добавляет преамбулу к началу последовательности закодированных байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-276">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="21d1f-277">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="21d1f-277">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="21d1f-278">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-278">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="21d1f-279">Указатель на положение, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-279">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="21d1f-280">Максимальное число байтов для записи.</span><span class="sxs-lookup"><span data-stu-id="21d1f-280">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="21d1f-281">Кодирует набор символов, начало которого задается указателем символа, в последовательность байтов, которые сохраняются начиная с заданного указателя байта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-281">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="21d1f-282">Фактическое число байтов, записанных в местоположение, указанное с помощью параметра <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-282">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-283">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetBytes%2A> необходимый для хранения результирующих байтов, <xref:System.Text.UTF8Encoding.GetByteCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-283">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-284">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-284">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-285">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-285">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-286">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-286">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-287">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-287">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-288">Данные для преобразования, например данные, считываемые из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="21d1f-288">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="21d1f-289">В этом случае, или если объем данных настолько велик, что необходимо разделить на <xref:System.Text.Decoder> меньшие блоки, используйте <xref:System.Text.Encoder> или, возвращаемый <xref:System.Text.UTF8Encoding.GetDecoder%2A> методом или <xref:System.Text.UTF8Encoding.GetEncoder%2A> методом соответственно.</span><span class="sxs-lookup"><span data-stu-id="21d1f-289">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> returned by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="21d1f-290">Чтобы обеспечить правильную декодирование закодированных байтов при сохранении их в виде файла или потока, можно добавить префикс потока закодированных байтов в преамбулу.</span><span class="sxs-lookup"><span data-stu-id="21d1f-290">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="21d1f-291">При вставке преамбулы в начало потока байтов (например, в начале последовательности байтов для занесения в файл) лежит ответственность за разработчика.</span><span class="sxs-lookup"><span data-stu-id="21d1f-291">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="21d1f-292"><xref:System.Text.UTF8Encoding.GetBytes%2A> Метод не добавляет преамбулу к началу последовательности закодированных байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-292">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-293">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-293"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="21d1f-294">-или-</span><span class="sxs-lookup"><span data-stu-id="21d1f-294">-or-</span></span> 
 <span data-ttu-id="21d1f-295"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-295"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-296">Значение параметра <paramref name="charCount" /> или <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-296"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-297">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-297">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="21d1f-298">-или-</span><span class="sxs-lookup"><span data-stu-id="21d1f-298">-or-</span></span> 
 <span data-ttu-id="21d1f-299"><paramref name="byteCount" /> меньше результирующего числа байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-299"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="21d1f-300">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-300">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-301">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-301">-and-</span></span> 
 <span data-ttu-id="21d1f-302">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-302"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="21d1f-303">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-303">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="21d1f-304">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-304">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="21d1f-305">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-305">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="21d1f-306">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="21d1f-306">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="21d1f-307">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-307">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="21d1f-308">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-308">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="21d1f-309">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-309">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="21d1f-310">Кодирует набор символов из заданного массива символов в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-310">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="21d1f-311">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-311">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-312">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetBytes%2A> необходимый для хранения результирующих байтов, <xref:System.Text.UTF8Encoding.GetByteCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-312">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-313">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-313">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-314">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-314">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-315">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-315">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-316">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-316">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-317">Данные для преобразования, например данные, считываемые из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="21d1f-317">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="21d1f-318">В этом случае, или если объем данных настолько велик, что необходимо разделить на <xref:System.Text.Decoder> меньшие блоки, используйте <xref:System.Text.Encoder> или, предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> методом или <xref:System.Text.UTF8Encoding.GetEncoder%2A> методом соответственно.</span><span class="sxs-lookup"><span data-stu-id="21d1f-318">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="21d1f-319">Чтобы обеспечить правильную декодирование закодированных байтов при сохранении их в виде файла или потока, можно добавить префикс потока закодированных байтов в преамбулу.</span><span class="sxs-lookup"><span data-stu-id="21d1f-319">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="21d1f-320">При вставке преамбулы в начало потока байтов (например, в начале последовательности байтов для занесения в файл) лежит ответственность за разработчика.</span><span class="sxs-lookup"><span data-stu-id="21d1f-320">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="21d1f-321"><xref:System.Text.UTF8Encoding.GetBytes%2A> Метод не добавляет преамбулу к началу последовательности закодированных байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-321">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-322">В следующем примере <xref:System.Text.UTF8Encoding.GetBytes%2A> метод используется для кодирования диапазона символов из строки и сохранения закодированных байтов в диапазоне элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-322">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of characters from a string and stores the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-323">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-323"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="21d1f-324">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-324">-or-</span></span> 
 <span data-ttu-id="21d1f-325"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-325"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-326">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-326"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="21d1f-327">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-327">-or-</span></span> 
 <span data-ttu-id="21d1f-328">Параметры<paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-328"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="21d1f-329">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-329">-or-</span></span> 
 <span data-ttu-id="21d1f-330">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-330"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-331">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-331">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="21d1f-332">-или-</span><span class="sxs-lookup"><span data-stu-id="21d1f-332">-or-</span></span> 
 <span data-ttu-id="21d1f-333">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-333"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="21d1f-334">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-334">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-335">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-335">-and-</span></span> 
 <span data-ttu-id="21d1f-336">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-336"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="21d1f-337">Объект <see cref="T:System.String" />, содержащий кодируемый набор символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-337">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="21d1f-338">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="21d1f-338">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="21d1f-339">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-339">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="21d1f-340">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-340">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="21d1f-341">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-341">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="21d1f-342">Кодирует набор символов из заданного объекта <see cref="T:System.String" /> в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-342">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="21d1f-343">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-343">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-344">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetBytes%2A> необходимый для хранения результирующих байтов, <xref:System.Text.UTF8Encoding.GetByteCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-344">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-345">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-345">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-346">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-346">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-347">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-347">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-348">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-348">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-349">Данные для преобразования, например данные, считываемые из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="21d1f-349">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="21d1f-350">В этом случае, или если объем данных настолько велик, что необходимо разделить на <xref:System.Text.Decoder> меньшие блоки, используйте <xref:System.Text.Encoder> или, предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> методом или <xref:System.Text.UTF8Encoding.GetEncoder%2A> методом соответственно.</span><span class="sxs-lookup"><span data-stu-id="21d1f-350">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="21d1f-351">Чтобы обеспечить правильную декодирование закодированных байтов при сохранении их в виде файла или потока, можно добавить префикс потока закодированных байтов в преамбулу.</span><span class="sxs-lookup"><span data-stu-id="21d1f-351">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="21d1f-352">При вставке преамбулы в начало потока байтов (например, в начале последовательности байтов для занесения в файл) лежит ответственность за разработчика.</span><span class="sxs-lookup"><span data-stu-id="21d1f-352">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="21d1f-353"><xref:System.Text.UTF8Encoding.GetBytes%2A> Метод не добавляет преамбулу к началу последовательности закодированных байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-353">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-354">В следующем примере используется <xref:System.Text.UTF8Encoding.GetBytes%2A> метод для кодирования диапазона элементов из массива символов Юникода и сохранения закодированных байтов в диапазоне элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-354">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-355">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-355"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="21d1f-356">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-356">-or-</span></span> 
 <span data-ttu-id="21d1f-357"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-357"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-358">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-358"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="21d1f-359">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-359">-or-</span></span> 
 <span data-ttu-id="21d1f-360">Параметры<paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-360"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="21d1f-361">-или-</span><span class="sxs-lookup"><span data-stu-id="21d1f-361">-or-</span></span> 
 <span data-ttu-id="21d1f-362">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-362"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-363">Обнаружение ошибок включено, и <paramref name="s" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-363">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="21d1f-364">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-364">-or-</span></span> 
 <span data-ttu-id="21d1f-365">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-365"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="21d1f-366">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-366">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-367">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-367">-and-</span></span> 
 <span data-ttu-id="21d1f-368">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-368"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21d1f-369">Вычисляет количество символов, полученных при декодировании последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-369">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="uTF8Encoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="21d1f-370">Диапазон, содержащий набор байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-370">The span containing the set of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="21d1f-371">Вычисляет количество символов, полученных при декодировании заданного диапазона байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-371">Calculates the number of characters produced by decoding the specified byte span.</span></span></summary>
        <returns><span data-ttu-id="21d1f-372">Количество символов, полученных при декодировании заданного диапазона байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-372">The number of characters produced by decoding the specified byte span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-373">Чтобы вычислить точный размер, <xref:System.Text.UTF8Encoding.GetChars%2A> требуемый для хранения результирующих символов, <xref:System.Text.UTF8Encoding.GetCharCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-373">To calculate the exact size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-374">Чтобы вычислить максимальный размер, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-374">To calculate the maximum size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-375">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-375">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-376">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-376">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-377">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-377">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="21d1f-378">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="21d1f-378">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="21d1f-379">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-379">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="21d1f-380">Вычисляет количество символов, полученных при декодировании последовательности байтов начиная с заданного указателя байта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-380">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="21d1f-381">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-381">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-382">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetChars%2A> необходимый для хранения результирующих символов, <xref:System.Text.UTF8Encoding.GetCharCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-382">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-383">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-383">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-384">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-384">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-385">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-385">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-386">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-386">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-387"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-387"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-388">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-388"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="21d1f-389">-или-</span><span class="sxs-lookup"><span data-stu-id="21d1f-389">-or-</span></span> 
<span data-ttu-id="21d1f-390">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-390">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-391">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-391">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="21d1f-392">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-392">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-393">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-393">-and-</span></span> 
 <span data-ttu-id="21d1f-394">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-394"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="21d1f-395">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-395">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="21d1f-396">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-396">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="21d1f-397">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="21d1f-397">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="21d1f-398">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-398">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="21d1f-399">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-399">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="21d1f-400">Вычисляет количество символов, полученных при декодировании последовательности байтов из заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-400">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="21d1f-401">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-401">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-402">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetChars%2A> необходимый для хранения результирующих символов, <xref:System.Text.UTF8Encoding.GetCharCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-402">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-403">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-403">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-404">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-404">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-405">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-405">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-406">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-406">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-407">В следующем примере <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод используется для возврата количества символов, полученных при декодировании диапазона элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-407">The following example uses the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-408"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-408"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-409">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-409"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="21d1f-410">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-410">-or-</span></span> 
 <span data-ttu-id="21d1f-411">Параметры<paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-411"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="21d1f-412">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-412">-or-</span></span> 
<span data-ttu-id="21d1f-413">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-413">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-414">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-414">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="21d1f-415">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-415">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-416">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-416">-and-</span></span> 
 <span data-ttu-id="21d1f-417">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-417"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21d1f-418">Декодирует последовательность байтов в набор символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-418">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int" Usage="uTF8Encoding.GetChars (bytes, chars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="21d1f-419">Диапазон, содержащий байты для декодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-419">The span containing the bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="21d1f-420">Диапазон, содержащий результирующий набор символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-420">The span to contain the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="21d1f-421">Декодирует заданный диапазон байтов в заданный диапазон символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-421">Decodes the specified byte span into the specified character span.</span></span></summary>
        <returns><span data-ttu-id="21d1f-422">Фактическое число символов, записанных в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-422">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-423">Чтобы вычислить точный размер, <xref:System.Text.UTF8Encoding.GetChars%2A> требуемый для хранения результирующих символов, <xref:System.Text.UTF8Encoding.GetCharCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-423">To calculate the exact size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-424">Чтобы вычислить максимальный размер, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-424">To calculate the maximum size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-425">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-425">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-426">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-426">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-427">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-427">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-428">Если набор байтов для декодирования включает метку порядка байтов (BOM), а диапазон байтов был возвращен методом типа, не поддерживающего спецификацию спецификации, то этот символ `U+FFFE` включается в диапазон символов, возвращаемых этим методом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-428">If the set of bytes to be decoded includes the byte order mark (BOM) and the span of bytes was returned by a method of a non-BOM aware type, the character `U+FFFE` is included in the span of characters returned by this method.</span></span> <span data-ttu-id="21d1f-429">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-429">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="21d1f-430">Данные для преобразования, например данные, считываемые из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="21d1f-430">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="21d1f-431">В этом случае, или если объем данных настолько велик, что необходимо разделить на <xref:System.Text.Decoder> меньшие блоки, используйте <xref:System.Text.Encoder> объект или, предоставленный <xref:System.Text.UTF8Encoding.GetDecoder%2A> методом или <xref:System.Text.UTF8Encoding.GetEncoder%2A> методом, соответственно.</span><span class="sxs-lookup"><span data-stu-id="21d1f-431">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="chars" Type="System.Char*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="21d1f-432">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="21d1f-432">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="21d1f-433">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-433">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="21d1f-434">Указатель на положение, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-434">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="21d1f-435">Наибольшее количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="21d1f-435">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="21d1f-436">Декодирует последовательность байтов, начало которой задается указателем байта, в набор символов, которые сохраняются начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="21d1f-436">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="21d1f-437">Фактическое число символов, записанных в местоположение, указанное с помощью параметра <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-437">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-438">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetChars%2A> необходимый для хранения результирующих символов, <xref:System.Text.UTF8Encoding.GetCharCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-438">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-439">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-439">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-440">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-440">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-441">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-441">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-442">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-442">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-443">Если диапазон байтов для декодирования включает метку порядка байтов (BOM), а массив байтов был возвращен методом типа, не поддерживающим СПЕЦИФИКАЦИю, то символ U + ФФФЕ включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-443">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="21d1f-444">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-444">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="21d1f-445">Данные для преобразования, например данные, считываемые из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="21d1f-445">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="21d1f-446">В этом случае, или если объем данных настолько велик, что необходимо разделить на <xref:System.Text.Decoder> меньшие блоки, используйте <xref:System.Text.Encoder> объект или, предоставленный <xref:System.Text.UTF8Encoding.GetDecoder%2A> методом или <xref:System.Text.UTF8Encoding.GetEncoder%2A> методом, соответственно.</span><span class="sxs-lookup"><span data-stu-id="21d1f-446">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-447"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-447"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="21d1f-448">-или-</span><span class="sxs-lookup"><span data-stu-id="21d1f-448">-or-</span></span> 
 <span data-ttu-id="21d1f-449">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-449"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-450">Значение параметра <paramref name="byteCount" /> или <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-450"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-451">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-451">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="21d1f-452">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-452">-or-</span></span> 
 <span data-ttu-id="21d1f-453"><paramref name="charCount" /> меньше результирующего числа символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-453"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="21d1f-454">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-454">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-455">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-455">-and-</span></span> 
 <span data-ttu-id="21d1f-456">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-456"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="21d1f-457">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-457">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="21d1f-458">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-458">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="21d1f-459">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="21d1f-459">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="21d1f-460">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-460">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="21d1f-461">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-461">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="21d1f-462">Массив символов, в который будет помещен результирующий набор символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-462">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="21d1f-463">Индекс, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-463">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="21d1f-464">Декодирует последовательность байтов из заданного массива байтов в указанный массив символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-464">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="21d1f-465">Фактическое число символов, записанных в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-465">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-466">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetChars%2A> необходимый для хранения результирующих символов, <xref:System.Text.UTF8Encoding.GetCharCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-466">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-467">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-467">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-468">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-468">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-469">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-469">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-470">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-470">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-471">Если диапазон байтов для декодирования включает метку порядка байтов (BOM), а массив байтов был возвращен методом типа, не поддерживающим СПЕЦИФИКАЦИю, то символ U + ФФФЕ включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-471">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="21d1f-472">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-472">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="21d1f-473">Данные для преобразования, например данные, считываемые из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="21d1f-473">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="21d1f-474">В этом случае, или если объем данных настолько велик, что необходимо разделить на <xref:System.Text.Decoder> меньшие блоки, используйте <xref:System.Text.Encoder> или, предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> методом или <xref:System.Text.UTF8Encoding.GetEncoder%2A> методом соответственно.</span><span class="sxs-lookup"><span data-stu-id="21d1f-474">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-475">В следующем примере <xref:System.Text.UTF8Encoding.GetChars%2A> метод используется для декодирования диапазона элементов в массиве байтов и сохранения результата в массиве символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-475">The following example uses the <xref:System.Text.UTF8Encoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-476"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-476"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="21d1f-477">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-477">-or-</span></span> 
 <span data-ttu-id="21d1f-478">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-478"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-479">Значение параметра <paramref name="byteIndex" />, <paramref name="byteCount" /> или <paramref name="charIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-479"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="21d1f-480">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-480">-or-</span></span> 
 <span data-ttu-id="21d1f-481">Параметры<paramref name="byteindex" /> и <paramref name="byteCount" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-481"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="21d1f-482">-или-</span><span class="sxs-lookup"><span data-stu-id="21d1f-482">-or-</span></span> 
 <span data-ttu-id="21d1f-483">Значение параметра <paramref name="charIndex" /> не является допустимым индексом в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-483"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-484">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-484">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="21d1f-485">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-485">-or-</span></span> 
 <span data-ttu-id="21d1f-486">Недостаточно емкости <paramref name="chars" /> от <paramref name="charIndex" /> до конца массива для размещения полученных символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-486"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="21d1f-487">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-487">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-488">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-488">-and-</span></span> 
 <span data-ttu-id="21d1f-489">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-489"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF8Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21d1f-490">Получает средство декодирования, преобразующее последовательность байтов в кодировке UTF-8 в последовательность символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="21d1f-490">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="21d1f-491">Средство декодирования, преобразующее последовательность байтов в кодировке UTF-8 в последовательность символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="21d1f-491">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-492">Метод преобразует последовательные блоки байтов в последовательные блоки символов таким же образом, как <xref:System.Text.UTF8Encoding.GetChars%2A> и метод этого класса. <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="21d1f-492">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF8Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="21d1f-493">Тем не менее <xref:System.Text.Decoder> , сохраняет сведения о состоянии между вызовами, что позволяет правильно декодировать последовательности байтов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="21d1f-493">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="21d1f-494"><xref:System.Text.Decoder> Также сохраняет конечные байты в конце блоков данных и использует конечные байты в следующей операции декодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-494">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="21d1f-495">Поэтому они <xref:System.Text.UTF8Encoding.GetEncoder%2A> и полезны для передачи по сети и операций с файлами, так как эти операции часто работают с блоками данных, а не с полным потоком данных. <xref:System.Text.UTF8Encoding.GetDecoder%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-495">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="21d1f-496">Если обнаружение ошибок включено, то есть `throwOnInvalidCharacters` параметр конструктора имеет `true`значение, обнаружение ошибок также включается в, <xref:System.Text.Decoder> возвращаемом этим методом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-496">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="21d1f-497">Если обнаружение ошибок включено и обнаружена недопустимая последовательность, то состояние декодера не определено и обработка должна быть остановлена.</span><span class="sxs-lookup"><span data-stu-id="21d1f-497">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-498">В следующем примере <xref:System.Text.UTF8Encoding.GetDecoder%2A> метод используется для получения декодера UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-498">The following example uses the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method to obtain a UTF-8 decoder.</span></span> <span data-ttu-id="21d1f-499">Декодер преобразует последовательность байтов в последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-499">The decoder converts a sequence of bytes into a sequence of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CPP/getdecoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CS/getdecoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/VB/getdecoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="21d1f-500">Общие сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="21d1f-500">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF8Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21d1f-501">Получает средство кодирования, преобразующее последовательность символов Юникода в последовательность байтов в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-501">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="21d1f-502">Объект <see cref="T:System.Text.Encoder" />, преобразующий последовательность символов Юникода в последовательность байтов в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-502">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-503">Метод преобразует последовательные блоки символов в последовательные блоки байтов таким же образом, как <xref:System.Text.UTF8Encoding.GetBytes%2A> и метод. <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="21d1f-503">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF8Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="21d1f-504">Тем не менее <xref:System.Text.Encoder> , сохраняет сведения о состоянии между вызовами, что позволяет правильно кодировать последовательности символов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="21d1f-504">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="21d1f-505"><xref:System.Text.Encoder> Также сохраняет замыкающие символы в конце блоков данных и использует замыкающие символы в следующей операции кодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-505">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="21d1f-506">Например, блок данных может заканчиваться непарным старшим символом-заместителем, а соответствующий младший символ-заместитель может находиться в следующем блоке данных.</span><span class="sxs-lookup"><span data-stu-id="21d1f-506">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="21d1f-507">Поэтому они <xref:System.Text.UTF8Encoding.GetEncoder%2A> и полезны для передачи по сети и операций с файлами, так как эти операции часто работают с блоками данных, а не с полным потоком данных. <xref:System.Text.UTF8Encoding.GetDecoder%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-507">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="21d1f-508">Если обнаружение ошибок включено, то есть `throwOnInvalidCharacters` параметр конструктора имеет `true`значение, обнаружение ошибок также включается в, <xref:System.Text.Encoder> возвращаемом этим методом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-508">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="21d1f-509">Если обнаружение ошибок включено и обнаружена недопустимая последовательность, состояние кодировщика не определено и обработка должна быть остановлена.</span><span class="sxs-lookup"><span data-stu-id="21d1f-509">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-510">В следующем примере <xref:System.Text.UTF8Encoding.GetEncoder%2A> метод используется для получения кодировщика, преобразующего последовательность символов в последовательность байтов в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-510">The following example uses the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method to obtain an encoder to convert a sequence of characters into a UTF-8 encoded sequence of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CPP/getencoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CS/getencoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/VB/getencoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="21d1f-511">Общие сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="21d1f-511">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF8Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21d1f-512">Возвращает хэш-код текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="21d1f-512">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="21d1f-513">Хэш-код для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="21d1f-513">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21d1f-514">В следующем примере <xref:System.Text.UTF8Encoding.GetHashCode%2A> метод используется для возврата хэш-кода для <xref:System.Text.UTF8Encoding> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="21d1f-514">The following example uses the <xref:System.Text.UTF8Encoding.GetHashCode%2A> method to return a hash code for <xref:System.Text.UTF8Encoding> instances.</span></span> <span data-ttu-id="21d1f-515">Обратите внимание, что хэш-код, возвращаемый этим методом, зависит от конструктора <xref:System.Text.UTF8Encoding> , используемого для создания объекта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-515">Notice that the hash code returned by this method depends on the constructor used to create the <xref:System.Text.UTF8Encoding> object.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CPP/gethashcode-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CS/gethashcode-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/VB/gethashcode-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF8Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="21d1f-516">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-516">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="21d1f-517">Вычисляет максимальное количество байтов, полученных при кодировании заданного числа символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-517">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="21d1f-518">Максимальное количество байтов, полученных при кодировании заданного количества символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-518">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-519">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetBytes%2A> необходимый для хранения результирующих байтов, <xref:System.Text.UTF8Encoding.GetByteCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-519">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-520">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-520">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="21d1f-521">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-521">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-522"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>является наихудшим числом, включая наихудший случай для выбранного <xref:System.Text.EncoderFallback>в данный момент варианта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-522"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="21d1f-523">Если резервный вариант выбирается с потенциально большой строкой <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> , может возвращать большие значения.</span><span class="sxs-lookup"><span data-stu-id="21d1f-523">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="21d1f-524">В большинстве случаев этот метод возвращает разумные числа для небольших строк.</span><span class="sxs-lookup"><span data-stu-id="21d1f-524">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="21d1f-525">В случае больших строк может потребоваться выбрать использование очень больших буферов и перехват ошибок в редких случаях, когда превышено разумный размер буфера.</span><span class="sxs-lookup"><span data-stu-id="21d1f-525">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="21d1f-526">Также можно рассмотреть другой подход с помощью <xref:System.Text.UTF8Encoding.GetByteCount%2A> или. <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="21d1f-526">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21d1f-527">Например, в тексте на английском языке и во многих других языках часто требуется только один байт UTF-8 для представления символа, но число, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> возвращаемое, должно допускать возможность того, что Преобразуемая строка будет состоять только из символов, которые каждый требуется четыре байта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-527">For example, text in English and many other languages often needs only one UTF-8 byte to represent a character, but the number returned by <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has to allow for the possibility that the string to be converted will consist entirely of characters that each require four bytes.</span></span>  
  
 <span data-ttu-id="21d1f-528"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>не имеет отношения к <xref:System.Text.UTF8Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="21d1f-528"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetChars%2A>.</span></span> <span data-ttu-id="21d1f-529">Если приложению требуется аналогичная функция для использования с <xref:System.Text.UTF8Encoding.GetChars%2A>, следует использовать. <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-529">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetChars%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21d1f-530">`GetMaxByteCount(N)`не обязательно то же значение, что `N* GetMaxByteCount(1)`и.</span><span class="sxs-lookup"><span data-stu-id="21d1f-530">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-531">В следующем примере <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод используется для возврата максимального числа байтов, необходимого для кодирования указанного числа символов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-531">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-532">Значение параметра <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-532"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="21d1f-533">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-533">-or-</span></span> 
<span data-ttu-id="21d1f-534">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-534">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="21d1f-535">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-535">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-536">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-536">-and-</span></span> 
 <span data-ttu-id="21d1f-537">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-537"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF8Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="21d1f-538">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-538">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="21d1f-539">Вычисляет максимальное количество символов, полученных при декодировании заданного числа байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-539">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="21d1f-540">Максимальное количество символов, полученных при декодировании заданного количества байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-540">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-541">Чтобы вычислить точный размер массива, <xref:System.Text.UTF8Encoding.GetChars%2A> необходимый для хранения результирующих символов, <xref:System.Text.UTF8Encoding.GetCharCount%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-541">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-542">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-542">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="21d1f-543">Метод обычно выделяет меньше памяти, в <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> то время как метод обычно выполняется быстрее. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-543">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="21d1f-544"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>является наихудшим числом, включая наихудший случай для выбранного <xref:System.Text.DecoderFallback>в данный момент варианта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-544"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="21d1f-545">Если резервный вариант выбирается с потенциально большой строкой <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> , может возвращать большие значения.</span><span class="sxs-lookup"><span data-stu-id="21d1f-545">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="21d1f-546">В большинстве случаев этот метод возвращает разумные числа для небольших строк.</span><span class="sxs-lookup"><span data-stu-id="21d1f-546">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="21d1f-547">В случае больших строк может потребоваться выбрать использование очень больших буферов и перехват ошибок в редких случаях, когда превышено разумный размер буфера.</span><span class="sxs-lookup"><span data-stu-id="21d1f-547">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span>  <span data-ttu-id="21d1f-548">Также можно рассмотреть другой подход с помощью <xref:System.Text.UTF8Encoding.GetCharCount%2A> или. <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="21d1f-548">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetCharCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="21d1f-549"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>не имеет отношения к <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="21d1f-549"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="21d1f-550">Если приложению требуется аналогичная функция для использования с <xref:System.Text.UTF8Encoding.GetBytes%2A>, следует использовать. <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="21d1f-550">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetBytes%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21d1f-551">`GetMaxCharCount(N)`не обязательно то же значение, что `N* GetMaxCharCount(1)`и.</span><span class="sxs-lookup"><span data-stu-id="21d1f-551">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-552">В следующем примере <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод используется для возврата максимального числа символов, полученных при декодировании указанного числа байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-552">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-553">Значение параметра <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-553"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="21d1f-554">-или-</span><span class="sxs-lookup"><span data-stu-id="21d1f-554">-or-</span></span> 
<span data-ttu-id="21d1f-555">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-555">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="21d1f-556">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-556">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-557">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-557">-and-</span></span> 
 <span data-ttu-id="21d1f-558">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-558"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF8Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21d1f-559">Возвращает метку порядка байтов Юникода в кодировке UTF-8, если кодирующий объект <see cref="T:System.Text.UTF8Encoding" /> настроен для ее предоставления.</span><span class="sxs-lookup"><span data-stu-id="21d1f-559">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span></span></summary>
        <returns><span data-ttu-id="21d1f-560">Массив байтов, содержащий метку порядка байтов Юникода, если кодирующий объект <see cref="T:System.Text.UTF8Encoding" /> настроен для ее предоставления.</span><span class="sxs-lookup"><span data-stu-id="21d1f-560">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span></span> <span data-ttu-id="21d1f-561">В противном случае этот метод возвращает массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="21d1f-561">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-562"><xref:System.Text.UTF8Encoding> Объект может предоставить преамбулу, которая представляет собой массив байтов, который может быть префиксом последовательности байтов, полученной в результате процесса кодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-562">The <xref:System.Text.UTF8Encoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes that result from the encoding process.</span></span> <span data-ttu-id="21d1f-563">Предварительная последовательность закодированных байтов с меткой порядка байтов (кодовая точка U + FEFF) помогает декодеру определить порядок байтов и формат преобразования или кодировку UTF.</span><span class="sxs-lookup"><span data-stu-id="21d1f-563">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="21d1f-564">Метка порядка байтов Юникода (BOM) сериализуется как 0xEF 0xBB 0xBF.</span><span class="sxs-lookup"><span data-stu-id="21d1f-564">The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</span></span> <span data-ttu-id="21d1f-565">Обратите внимание, что стандарт Юникод не требует и не рекомендует использовать BOM для потоков в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-565">Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</span></span>  
  
 <span data-ttu-id="21d1f-566">Можно создать экземпляр <xref:System.Text.UTF8Encoding> объекта, метод которого <xref:System.Text.UTF8Encoding.GetPreamble%2A> Возвращает действительную спецификацию, следующим образом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-566">You can instantiate a <xref:System.Text.UTF8Encoding> object whose <xref:System.Text.UTF8Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="21d1f-567">Путем извлечения <xref:System.Text.UTF8Encoding> объекта <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> , возвращенного свойством.</span><span class="sxs-lookup"><span data-stu-id="21d1f-567">By retrieving the <xref:System.Text.UTF8Encoding> object returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="21d1f-568">Путем вызова <xref:System.Text.UTF8Encoding> конструктора `encoderShouldEmitUTF8Identifier` с параметром и установки для `true`него значения.</span><span class="sxs-lookup"><span data-stu-id="21d1f-568">By calling a <xref:System.Text.UTF8Encoding> constructor with a `encoderShouldEmitUTF8Identifier` parameter and setting its value set to `true`.</span></span>  
  
 <span data-ttu-id="21d1f-569">Все остальные <xref:System.Text.UTF8Encoding> объекты настраиваются для возврата пустого массива, а не допустимой спецификации.</span><span class="sxs-lookup"><span data-stu-id="21d1f-569">All other <xref:System.Text.UTF8Encoding> objects are configured to return an empty array rather than a valid BOM.</span></span>  
  
 <span data-ttu-id="21d1f-570">Спецификация обеспечивает почти определенную идентификацию кодировки для файлов, которые в противном случае теряют ссылку на их кодировку, например, непомеченные или неправильно помеченные веб-данные или случайные текстовые файлы, которые хранятся в том случае, если у бизнеса нет международных проблем.</span><span class="sxs-lookup"><span data-stu-id="21d1f-570">The BOM provide nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="21d1f-571">Часто проблемы пользователей могут быть устранены, если данные постоянно и правильно помечены тегами.</span><span class="sxs-lookup"><span data-stu-id="21d1f-571">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="21d1f-572">Для стандартов, предоставляющих тип кодировки, BOM является несколько избыточным.</span><span class="sxs-lookup"><span data-stu-id="21d1f-572">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="21d1f-573">Однако его можно использовать, чтобы помочь серверу отправить правильный заголовок кодировки.</span><span class="sxs-lookup"><span data-stu-id="21d1f-573">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="21d1f-574">Кроме того, его можно использовать в качестве резервного, если кодировка в противном случае будет потеряна.</span><span class="sxs-lookup"><span data-stu-id="21d1f-574">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="21d1f-575">Существует ряд недостатков использования спецификации.</span><span class="sxs-lookup"><span data-stu-id="21d1f-575">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="21d1f-576">Например, знание того, как ограничить поля базы данных, использующие СПЕЦИФИКАЦИю, может оказаться затруднительным.</span><span class="sxs-lookup"><span data-stu-id="21d1f-576">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="21d1f-577">Объединение файлов может быть проблемой, например, при слиянии файлов таким образом, что ненужный символ может оказаться в середине данных.</span><span class="sxs-lookup"><span data-stu-id="21d1f-577">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="21d1f-578">Несмотря на множество недостатков, настоятельно рекомендуется использовать СПЕЦИФИКАЦИю.</span><span class="sxs-lookup"><span data-stu-id="21d1f-578">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="21d1f-579">Дополнительные сведения о порядке байтов и метке порядка байтов см. в стандарте Юникода на [домашней странице Юникода](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="21d1f-579">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="21d1f-580">Чтобы обеспечить правильную декодирование закодированных байтов при их сохранении в виде файла или потока, можно добавить префикс начала потока закодированных байтов с преамбулой.</span><span class="sxs-lookup"><span data-stu-id="21d1f-580">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="21d1f-581">Обратите внимание <xref:System.Text.UTF8Encoding.GetBytes%2A> , что метод не добавляет к последовательности закодированных байтов спецификацию. Указание спецификации в начале соответствующего потока байтов является обязанностью разработчика.</span><span class="sxs-lookup"><span data-stu-id="21d1f-581">Note that the <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>
  
## Examples  
 <span data-ttu-id="21d1f-582">В следующем примере <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод используется для возврата метки порядка байтов Юникода, закодированной в формате UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-582">The following example uses the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to return the Unicode byte order mark encoded in UTF-8 format.</span></span> <span data-ttu-id="21d1f-583">Обратите внимание, что конструктор без <xref:System.Text.UTF8Encoding> параметров для не предоставляет преамбулы.</span><span class="sxs-lookup"><span data-stu-id="21d1f-583">Notice that the parameterless constructor for <xref:System.Text.UTF8Encoding> does not provide a preamble.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="21d1f-584">В <xref:System.Text.UTF8Encoding> следующем примере создаются два объекта, первый из которых вызывает <xref:System.Text.UTF8Encoding.%23ctor> конструктор без параметров, который не предоставляет спецификацию, а второй `encoderShouldEmitUTF8Identifier` вызовет <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> конструктор, для аргумента которого задано значение. `true`.</span><span class="sxs-lookup"><span data-stu-id="21d1f-584">The following example instantiates two <xref:System.Text.UTF8Encoding> objects, the first by calling the parameterless <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not provide a BOM, and the second by calling the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructor with its `encoderShouldEmitUTF8Identifier` argument set to `true`.</span></span> <span data-ttu-id="21d1f-585">Затем он вызывает <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод для записи спецификации в файл перед записью строки в кодировке UF8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-585">It then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UF8-encoded string.</span></span> <span data-ttu-id="21d1f-586">Как видно из выходных данных консоли, файл, сохраняющий байты из второго кодировщика, имеет еще три байта, чем первый.</span><span class="sxs-lookup"><span data-stu-id="21d1f-586">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/cs/getpreamble1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/vb/getpreamble1.vb#1)]  
  
 <span data-ttu-id="21d1f-587">Можно также сравнить файлы с помощью `fc` команды в окне консоли или просмотреть файлы в текстовом редакторе, содержащем шестнадцатеричный режим представления.</span><span class="sxs-lookup"><span data-stu-id="21d1f-587">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="21d1f-588">Обратите внимание, что при открытии файла в редакторе, поддерживающем UTF-8, спецификация не отображается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-588">Note that when the file is opened in an editor that supports UTF-8, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF8Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="21d1f-589">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="21d1f-589">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="21d1f-590">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="21d1f-590">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="21d1f-591">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-591">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="21d1f-592">Декодирует диапазон байтов из массива байтов в строку.</span><span class="sxs-lookup"><span data-stu-id="21d1f-592">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="21d1f-593">Объект <see cref="T:System.String" />, содержащий результаты декодирования заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-593">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-594">При обнаружении ошибок недействительная последовательность приводит к тому, что <xref:System.ArgumentException> этот метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-594">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="21d1f-595">Без обнаружения ошибок недопустимые последовательности пропускаются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="21d1f-595">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="21d1f-596">Если диапазон байтов для декодирования включает метку порядка байтов (BOM), а массив байтов был возвращен методом типа, не поддерживающим СПЕЦИФИКАЦИю, то символ U + ФФФЕ включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="21d1f-596">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="21d1f-597">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-597">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="21d1f-598">Данные для преобразования, например данные, считываемые из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="21d1f-598">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="21d1f-599">В этом случае, или если объем данных настолько велик, что необходимо разделить на <xref:System.Text.Decoder> меньшие блоки, используйте <xref:System.Text.Encoder> или, предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> методом или <xref:System.Text.UTF8Encoding.GetEncoder%2A> методом соответственно.</span><span class="sxs-lookup"><span data-stu-id="21d1f-599">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21d1f-600">В следующем примере массив инициализируется путем вызова <xref:System.Text.UTF8Encoding.GetByteCount%2A> метода, чтобы точно определить, сколько байтов требуется для закодированной строки, а затем добавить размер метки порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="21d1f-600">The following example initializes an array by calling the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="21d1f-601">Затем в примере вызывается <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод для сохранения спецификации в массив перед <xref:System.Text.UTF8Encoding.GetBytes%2A> вызовом метода для сохранения закодированных байтов в массиве.</span><span class="sxs-lookup"><span data-stu-id="21d1f-601">The example then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="21d1f-602">Затем в примере вызывается <xref:System.Text.UTF8Encoding.GetString%2A> метод для декодирования строки.</span><span class="sxs-lookup"><span data-stu-id="21d1f-602">The example then calls the <xref:System.Text.UTF8Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="21d1f-603">Обратите внимание, что в этом случае декодированная строка отличается от исходной строки, так как она начинается с 16-битной метки порядка байтов U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="21d1f-603">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="21d1f-604">Это означает, что две строки будут считаться неравными, и что если строка выводится, то спецификация будет отображаться как символ замены "?".</span><span class="sxs-lookup"><span data-stu-id="21d1f-604">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="21d1f-605">Чтобы удалить BOM в начале строки, можно вызвать <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="21d1f-605">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21d1f-606">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-606"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21d1f-607">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="21d1f-607"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="21d1f-608">- или -</span><span class="sxs-lookup"><span data-stu-id="21d1f-608">-or-</span></span> 
 <span data-ttu-id="21d1f-609">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-609"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21d1f-610">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="21d1f-610">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="21d1f-611">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="21d1f-611">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="21d1f-612">- и -</span><span class="sxs-lookup"><span data-stu-id="21d1f-612">-and-</span></span> 
 <span data-ttu-id="21d1f-613">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="21d1f-613"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Preamble">
      <MemberSignature Language="C#" Value="public override ReadOnlySpan&lt;byte&gt; Preamble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; Preamble" />
      <MemberSignature Language="DocId" Value="P:System.Text.UTF8Encoding.Preamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Preamble As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property ReadOnlySpan&lt;System::Byte&gt; Preamble { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Preamble : ReadOnlySpan&lt;byte&gt;" Usage="System.Text.UTF8Encoding.Preamble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21d1f-614">Возвращает метку порядка байтов Юникода в кодировке UTF-8, если объект настроен для ее предоставления.</span><span class="sxs-lookup"><span data-stu-id="21d1f-614">Gets a Unicode byte order mark encoded in UTF-8 format, if this object is configured to supply one.</span></span></summary>
        <value><span data-ttu-id="21d1f-615">Диапазон байтов, содержащий метку порядка байтов Юникода, если этот объект настроен для предоставления такого объекта; в противном случае — диапазон по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="21d1f-615">A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21d1f-616"><xref:System.Text.UTF8Encoding> Объект может предоставить преамбулу, которая представляет собой диапазон байтов, которые могут быть предваряются до последовательности байтов, полученной в результате процесса кодирования.</span><span class="sxs-lookup"><span data-stu-id="21d1f-616">The <xref:System.Text.UTF8Encoding> object can provide a preamble, which is a span of bytes that can be prefixed to the sequence of bytes that result from the encoding process.</span></span> <span data-ttu-id="21d1f-617">Предустановление последовательности закодированных байтов с помощью метки порядка байтов (кодовая точка `U+FEFF`) помогает декодеру определить порядок байтов и формат преобразования или UTF.</span><span class="sxs-lookup"><span data-stu-id="21d1f-617">Prefacing a sequence of encoded bytes with a byte order mark (code point `U+FEFF`) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="21d1f-618">Метка порядка байтов Юникода (BOM) сериализуется как 0xEF 0xBB 0xBF.</span><span class="sxs-lookup"><span data-stu-id="21d1f-618">The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</span></span> <span data-ttu-id="21d1f-619">Обратите внимание, что стандарт Юникод не требует и не рекомендует использовать BOM для потоков в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="21d1f-619">Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</span></span>  
  
 <span data-ttu-id="21d1f-620"><xref:System.Text.UTF8Encoding> Экземпляр`Preamble` объекта, который является допустимой спецификацией, можно создать следующими способами.</span><span class="sxs-lookup"><span data-stu-id="21d1f-620">You can instantiate a <xref:System.Text.UTF8Encoding> object whose `Preamble` is a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="21d1f-621">Путем извлечения <xref:System.Text.UTF8Encoding> объекта <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> , возвращенного свойством.</span><span class="sxs-lookup"><span data-stu-id="21d1f-621">By retrieving the <xref:System.Text.UTF8Encoding> object returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="21d1f-622">Путем вызова <xref:System.Text.UTF8Encoding> конструктора `encoderShouldEmitUTF8Identifier` с параметром и установки его значения в `true`значение.</span><span class="sxs-lookup"><span data-stu-id="21d1f-622">By calling a <xref:System.Text.UTF8Encoding> constructor with an `encoderShouldEmitUTF8Identifier` parameter and setting its value set to `true`.</span></span>  
  
 <span data-ttu-id="21d1f-623">Все остальные <xref:System.Text.UTF8Encoding> объекты настраиваются так, чтобы они возвращали диапазон по умолчанию, а не действительную спецификацию.</span><span class="sxs-lookup"><span data-stu-id="21d1f-623">All other <xref:System.Text.UTF8Encoding> objects are configured to return a default span rather than a valid BOM.</span></span>  
  
 <span data-ttu-id="21d1f-624">Эта спецификация обеспечивает почти определенную идентификацию кодировки для файлов, которые в противном случае теряют ссылку на их кодирование, такие как непомеченные или неправильно помеченные веб-данные или случайные текстовые файлы, которые хранятся в том случае, если у бизнеса нет международных проблем.</span><span class="sxs-lookup"><span data-stu-id="21d1f-624">The BOM provides nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="21d1f-625">Часто проблемы пользователей могут быть устранены, если данные постоянно и правильно помечены тегами.</span><span class="sxs-lookup"><span data-stu-id="21d1f-625">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="21d1f-626">Для стандартов, предоставляющих тип кодировки, BOM является несколько избыточным.</span><span class="sxs-lookup"><span data-stu-id="21d1f-626">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="21d1f-627">Однако его можно использовать, чтобы помочь серверу отправить правильный заголовок кодировки.</span><span class="sxs-lookup"><span data-stu-id="21d1f-627">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="21d1f-628">Кроме того, его можно использовать в качестве резервного, если кодировка в противном случае будет потеряна.</span><span class="sxs-lookup"><span data-stu-id="21d1f-628">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="21d1f-629">Существует ряд недостатков использования спецификации.</span><span class="sxs-lookup"><span data-stu-id="21d1f-629">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="21d1f-630">Например, знание того, как ограничить поля базы данных, использующие СПЕЦИФИКАЦИю, может оказаться затруднительным.</span><span class="sxs-lookup"><span data-stu-id="21d1f-630">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="21d1f-631">Объединение файлов может быть проблемой, например, при слиянии файлов таким образом, что ненужный символ может оказаться в середине данных.</span><span class="sxs-lookup"><span data-stu-id="21d1f-631">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="21d1f-632">Несмотря на множество недостатков, настоятельно рекомендуется использовать СПЕЦИФИКАЦИю.</span><span class="sxs-lookup"><span data-stu-id="21d1f-632">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="21d1f-633">Дополнительные сведения о порядке байтов и метке порядка байтов см. в стандарте Юникода на [домашней странице Юникода](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="21d1f-633">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="21d1f-634">Чтобы обеспечить правильную декодирование закодированных байтов при их сохранении в виде файла или потока, можно добавить префикс начала потока закодированных байтов с преамбулой.</span><span class="sxs-lookup"><span data-stu-id="21d1f-634">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="21d1f-635">Обратите внимание <xref:System.Text.UTF8Encoding.GetBytes%2A> , что метод не добавляет к последовательности закодированных байтов спецификацию. Указание спецификации в начале соответствующего потока байтов является обязанностью разработчика.</span><span class="sxs-lookup"><span data-stu-id="21d1f-635">Note that the <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
