<Type Name="Rune" FullName="System.Text.Rune">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56f7ad972fe684bfa987688f206e084615733900" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70363373" /></Metadata><TypeSignature Language="C#" Value="public struct Rune : IComparable&lt;System.Text.Rune&gt;, IEquatable&lt;System.Text.Rune&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Rune extends System.ValueType implements class System.IComparable`1&lt;valuetype System.Text.Rune&gt;, class System.IEquatable`1&lt;valuetype System.Text.Rune&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Text.Rune" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rune&#xA;Implements IComparable(Of Rune), IEquatable(Of Rune)" />
  <TypeSignature Language="C++ CLI" Value="public value class Rune : IComparable&lt;System::Text::Rune&gt;, IEquatable&lt;System::Text::Rune&gt;" />
  <TypeSignature Language="F#" Value="type Rune = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Text.Rune&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Text.Rune&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4e9c6-101">Представляет скалярное значение Юникода ([U+0000.. U+D7FF] включительно или [U+E000..U+10FFFF] включительно).</span><span class="sxs-lookup"><span data-stu-id="4e9c6-101">Represents a Unicode scalar value ([ U+0000..U+D7FF ], inclusive; or [ U+E000..U+10FFFF ], inclusive).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-102">Конструкторы этого типа и операторы преобразования проверяют входные данные, поэтому потребители могут вызывать API, предполагая, что <xref:System.Text.Rune> базовый экземпляр имеет правильный формат.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-102">This type's constructors and conversion operators validate the input, so consumers can call the APIs assuming that the underlying <xref:System.Text.Rune> instance is well-formed.</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(char ch);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : char -&gt; System.Text.Rune" Usage="new System.Text.Rune ch" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="4e9c6-103">Блок кода UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-103">A UTF-16 code unit.</span></span></param>
        <summary><span data-ttu-id="4e9c6-104">Создает объект <see cref="T:System.Text.Rune" /> из предоставленного блока кода UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-104">Creates a <see cref="T:System.Text.Rune" /> from the provided UTF-16 code unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e9c6-105"><paramref name="ch" /> представляет заменяющую кодовую точку в кодировке UTF-16 (U+D800..U+DFFF включительно).</span><span class="sxs-lookup"><span data-stu-id="4e9c6-105"><paramref name="ch" /> represents a UTF-16 surrogate code point (U+D800..U+DFFF, inclusive).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(int value);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : int -&gt; System.Text.Rune" Usage="new System.Text.Rune value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-106">Скалярное значение Юникод.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-106">A Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="4e9c6-107">Создает <see cref="T:System.Text.Rune" /> из указанного 32-разрядного целого числа, представляющего скалярное значение Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-107">Creates a <see cref="T:System.Text.Rune" /> from the specified 32-bit integer that represents a Unicode scalar value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e9c6-108"><paramref name="value" /> не представляет скалярное значение Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-108"><paramref name="value" /> does not represent a Unicode scalar value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : uint32 -&gt; System.Text.Rune" Usage="new System.Text.Rune value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-109">Скалярное значение Юникод.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-109">A Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="4e9c6-110">Создает <see cref="T:System.Text.Rune" /> из указанного 32-разрядного целого числа без знака, представляющего скалярное значение Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-110">Creates a <see cref="T:System.Text.Rune" /> from the specified 32-bit unsigned integer that represents a Unicode scalar value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e9c6-111"><paramref name="value" /> не представляет скалярное значение Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-111"><paramref name="value" /> does not represent a Unicode scalar value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (highSurrogate As Char, lowSurrogate As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : char * char -&gt; System.Text.Rune" Usage="new System.Text.Rune (highSurrogate, lowSurrogate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="4e9c6-112">Старший символ-заместитель суррогатной пары.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-112">The high surrogate of the surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="4e9c6-113">Младший символ-заместитель суррогатной пары.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-113">The low surrogate of the surrogate pair.</span></span></param>
        <summary><span data-ttu-id="4e9c6-114">Создает объект <see cref="T:System.Text.Rune" /> из предоставленной суррогатной пары UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-114">Creates a <see cref="T:System.Text.Rune" /> from the provided UTF-16 surrogate pair.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e9c6-115"><paramref name="highSurrogate" /> не представляет старшую заменяющую кодовую точку UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-115"><paramref name="highSurrogate" /> does not represent a UTF-16 high surrogate code point.</span></span>
          
<span data-ttu-id="4e9c6-116">- или -</span><span class="sxs-lookup"><span data-stu-id="4e9c6-116">-or-</span></span>

<span data-ttu-id="4e9c6-117"><paramref name="lowSurrogate" /> не представляет младшую заменяющую кодовую точку UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-117"><paramref name="lowSurrogate" /> does not represent a UTF-16 low surrogate code point.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Text.Rune other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Text.Rune other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.CompareTo(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Rune) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Text::Rune other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Text.Rune -&gt; int&#xA;override this.CompareTo : System.Text.Rune -&gt; int" Usage="rune.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="4e9c6-118">Экземпляр для сравнения с текущим экземпляром класса.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-118">The instance to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="4e9c6-119">Сравнивает текущий экземпляр с указанным экземпляром <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-119">Compares the current instance to the specified <see cref="T:System.Text.Rune" /> instance.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-120">Целое число со знаком, которое показывает позицию данного экземпляра в порядке сортировки по отношению к параметру <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-120">A signed integer indicating the position of this instance in the sort order in relation to <paramref name="other" />:</span></span> <br /><span data-ttu-id="4e9c6-121">— Меньше нуля. Данный экземпляр предшествует параметру <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-121">- Less than zero: This instance precedes <paramref name="other" />.</span></span> 
<br /><span data-ttu-id="4e9c6-122">— Ноль. Данный экземпляр имеет ту же позицию в порядке сортировки, что и <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-122">- Zero: The instance has the same position in the sort order as <paramref name="other" />.</span></span>
<br /><span data-ttu-id="4e9c6-123">— Больше нуля. Данный экземпляр стоит после параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-123">- Greater than zero: This instance follows <paramref name="other" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf16 (ReadOnlySpan&lt;char&gt; source, out System.Text.Rune result, out int charsConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf16(valuetype System.ReadOnlySpan`1&lt;char&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; charsConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf16 (source As ReadOnlySpan(Of Char), ByRef result As Rune, ByRef charsConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf16(ReadOnlySpan&lt;char&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % charsConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf16 : ReadOnlySpan&lt;char&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeFromUtf16 (source, result, charsConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="charsConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4e9c6-124">Диапазон символов UTF-16 только для чтения.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-124">A read-only UTF-16 character span.</span></span></param>
        <param name="result"><span data-ttu-id="4e9c6-125">При возврате методом — расшифрованная руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-125">When this method returns, the decoded rune.</span></span></param>
        <param name="charsConsumed"><span data-ttu-id="4e9c6-126">Количество символов, считанных для создания руны, при возврате управления методом.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-126">When this method returns, the number of characters read to create the rune.</span></span></param>
        <summary><span data-ttu-id="4e9c6-127">Декодирует в <see cref="T:System.Text.Rune" /> начале предоставленного исходного буфера UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-127">Decodes the <see cref="T:System.Text.Rune" /> at the beginning of the provided UTF-16 source buffer.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-128">Значение <see cref="F:System.Buffers.OperationStatus.Done" />, если исходный буфер начинается с допустимого скалярного значения в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-128"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-16 encoded scalar value.</span></span> <span data-ttu-id="4e9c6-129"><paramref name="result" /> затем содержит декодированный <see cref="T:System.Text.Rune" />, и <paramref name="charsConsumed" /> содержит количество значений <see cref="T:System.Char" />, используемых во входном буфере для кодирования <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-129"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="4e9c6-130">Значение <see cref="F:System.Buffers.OperationStatus.NeedMoreData" />, если исходный буфер пуст или содержит только автономный верхний суррогатный символ UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-130"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-16 high surrogate character.</span></span> <span data-ttu-id="4e9c6-131"><paramref name="result" /> затем содержит <see cref="P:System.Text.Rune.ReplacementChar" />, и <paramref name="charsConsumed" /> содержит длину входного буфера.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-131"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="4e9c6-132">Значение <see cref="F:System.Buffers.OperationStatus.InvalidData" />, если исходный буфер начинается с неверно сформированного скалярного значения в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-132"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-16 encoded scalar value.</span></span> <span data-ttu-id="4e9c6-133"><paramref name="result" /> затем содержит <see cref="P:System.Text.Rune.ReplacementChar" />, и <paramref name="charsConsumed" /> содержит количество значений <see cref="T:System.Char" />, используемых для кодирования неправильной последовательности.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-133"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used to encode the ill-formed sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-134">Общее соглашение заключается в том, что этот метод вызывается в цикле, `source` что приводит `charsConsumed` к фрагментированию буфера по элементам каждой итерации цикла.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-134">The general convention is to call this method in a loop, slicing the `source` buffer by `charsConsumed` elements on each iteration of the loop.</span></span> <span data-ttu-id="4e9c6-135">При каждой итерации цикла `result` содержит действительное скалярное значение, если данные были успешно декодированы, или содержит <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> , если данные не были успешно декодированы.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-135">On each iteration of the loop, `result` contains the real scalar value if the data was successfully decoded, or it contains <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> if the data was not successfully decoded.</span></span> <span data-ttu-id="4e9c6-136">Этот шаблон обеспечивает удобную автоматическую замену недопустимых последовательностей U + FFFD при переборе цикла.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-136">This pattern provides convenient automatic U+FFFD substitution of invalid sequences while iterating through the loop.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; source, out System.Text.Rune result, out int bytesConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; bytesConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (source As ReadOnlySpan(Of Byte), ByRef result As Rune, ByRef bytesConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % bytesConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeFromUtf8 (source, result, bytesConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4e9c6-137">Диапазон байтов в кодировке UTF-8 только для чтения.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-137">A read-only UTF-8 encoded byte span.</span></span></param>
        <param name="result"><span data-ttu-id="4e9c6-138">При возврате методом — расшифрованная руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-138">When this method returns, the decoded rune.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="4e9c6-139">Количество байтов, считанных для создания руны, при возврате управления методом.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-139">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="4e9c6-140">Декодирует в <see cref="T:System.Text.Rune" /> начале предоставленного исходного буфера UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-140">Decodes the <see cref="T:System.Text.Rune" /> at the beginning of the provided UTF-8 source buffer.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-141">Значение <see cref="F:System.Buffers.OperationStatus.Done" />, если исходный буфер начинается с допустимого скалярного значения в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-141"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-8 encoded scalar value.</span></span> <span data-ttu-id="4e9c6-142"><paramref name="result" /> затем содержит декодированный <see cref="T:System.Text.Rune" />, и <paramref name="bytesConsumed" /> содержит количество значений <see cref="T:System.Byte" />, используемых во входном буфере для кодирования <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-142"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="4e9c6-143">Значение <see cref="F:System.Buffers.OperationStatus.NeedMoreData" />, если исходный буфер пуст или содержит только автономный верхний суррогатный символ UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-143"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-8 high surrogate character.</span></span> <span data-ttu-id="4e9c6-144"><paramref name="result" /> затем содержит <see cref="P:System.Text.Rune.ReplacementChar" />, и <paramref name="bytesConsumed" /> содержит длину входного буфера.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-144"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="4e9c6-145">Значение <see cref="F:System.Buffers.OperationStatus.InvalidData" />, если исходный буфер начинается с неверно сформированного скалярного значения в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-145"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-8 encoded scalar value.</span></span> <span data-ttu-id="4e9c6-146"><paramref name="result" /> затем содержит <see cref="P:System.Text.Rune.ReplacementChar" />, и <paramref name="bytesConsumed" /> содержит количество значений <see cref="T:System.Byte" />, используемых во входном буфере для кодирования неправильной последовательности.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-146"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the ill-formed sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-147">Общее соглашение заключается в том, что этот метод вызывается в цикле, `source` что приводит `bytesConsumed` к фрагментированию буфера по элементам каждой итерации цикла.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-147">The general convention is to call this method in a loop, slicing the `source` buffer by `bytesConsumed` elements on each iteration of the loop.</span></span> <span data-ttu-id="4e9c6-148">При каждой итерации цикла `result` содержит действительное скалярное значение, если оно успешно декодировано, или содержит <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> , если не удалось декодировать данные.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-148">On each iteration of the loop, `result` contains the real scalar value if successfully decoded, or it contains <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> if the data could not be successfully decoded.</span></span> <span data-ttu-id="4e9c6-149">Этот шаблон обеспечивает удобную автоматическую замену недопустимых последовательностей U + FFFD при переборе цикла.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-149">This pattern provides convenient automatic U+FFFD substitution of invalid sequences while iterating through the loop.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeLastFromUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeLastFromUtf16 (ReadOnlySpan&lt;char&gt; source, out System.Text.Rune result, out int charsConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeLastFromUtf16(valuetype System.ReadOnlySpan`1&lt;char&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; charsConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeLastFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeLastFromUtf16 (source As ReadOnlySpan(Of Char), ByRef result As Rune, ByRef charsConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeLastFromUtf16(ReadOnlySpan&lt;char&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % charsConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeLastFromUtf16 : ReadOnlySpan&lt;char&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeLastFromUtf16 (source, result, charsConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="charsConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4e9c6-150">Доступный только для чтения диапазон символов в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-150">A read-only UTF-16 encoded character span.</span></span></param>
        <param name="result"><span data-ttu-id="4e9c6-151">При возврате методом — расшифрованная руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-151">When this method returns, the decoded rune.</span></span></param>
        <param name="charsConsumed"><span data-ttu-id="4e9c6-152">Количество байтов, считанных для создания руны, при возврате управления методом.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-152">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="4e9c6-153">Декодирует <see cref="T:System.Text.Rune" /> в конце предоставленного исходного буфера UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-153">Decodes the <see cref="T:System.Text.Rune" /> at the end of the provided UTF-16 source buffer.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-154">Значение <see cref="F:System.Buffers.OperationStatus.Done" />, если исходный буфер начинается с допустимого скалярного значения в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-154"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-16 encoded scalar value.</span></span> <span data-ttu-id="4e9c6-155"><paramref name="result" /> затем содержит декодированный <see cref="T:System.Text.Rune" />, и <paramref name="charsConsumed" /> содержит количество значений <see cref="T:System.Char" />, используемых во входном буфере для кодирования <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-155"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="4e9c6-156">Значение <see cref="F:System.Buffers.OperationStatus.NeedMoreData" />, если исходный буфер пуст или содержит только автономный верхний суррогатный символ UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-156"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-16 high surrogate character.</span></span> <span data-ttu-id="4e9c6-157"><paramref name="result" /> затем содержит <see cref="P:System.Text.Rune.ReplacementChar" />, и <paramref name="charsConsumed" /> содержит длину входного буфера.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-157"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="4e9c6-158">Значение <see cref="F:System.Buffers.OperationStatus.InvalidData" />, если исходный буфер начинается с неверно сформированного скалярного значения в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-158"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-16 encoded scalar value.</span></span> <span data-ttu-id="4e9c6-159"><paramref name="result" /> затем содержит <see cref="P:System.Text.Rune.ReplacementChar" />, и <paramref name="charsConsumed" /> содержит количество значений <see cref="T:System.Char" />, используемых для кодирования неправильной последовательности.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-159"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used to encode the ill-formed sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-160">Этот метод очень похож на <xref:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)>, за исключением того, что он позволяет вызывающему объекту перебрать цикл назад, а не вперед.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-160">This method is very similar to <xref:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)>, except it allows the caller to loop backward instead of forward.</span></span> <span data-ttu-id="4e9c6-161">Типичное соглашение о вызовах заключается в том, что при каждой итерации цикла вызывающий объект должен `charsConsumed` выполнять срез конечных элементов `source` буфера.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-161">The typical calling convention is that on each iteration of the loop, the caller should slice off the final `charsConsumed` elements of the `source` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeLastFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeLastFromUtf8 (ReadOnlySpan&lt;byte&gt; source, out System.Text.Rune value, out int bytesConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeLastFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Text.Rune&amp; value, [out] int32&amp; bytesConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeLastFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeLastFromUtf8 (source As ReadOnlySpan(Of Byte), ByRef value As Rune, ByRef bytesConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeLastFromUtf8(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % value, [Runtime::InteropServices::Out] int % bytesConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeLastFromUtf8 : ReadOnlySpan&lt;byte&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeLastFromUtf8 (source, value, bytesConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4e9c6-162">Диапазон байтов в кодировке UTF-8 только для чтения.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-162">A read-only UTF-8 encoded byte span.</span></span></param>
        <param name="value"><span data-ttu-id="4e9c6-163">При возврате методом — расшифрованная руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-163">When this method returns, the decoded rune.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="4e9c6-164">Количество байтов, считанных для создания руны, при возврате управления методом.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-164">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="4e9c6-165">Декодирует <see cref="T:System.Text.Rune" /> в конце предоставленного исходного буфера UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-165">Decodes the <see cref="T:System.Text.Rune" /> at the end of the provided UTF-8 source buffer.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-166">Значение <see cref="F:System.Buffers.OperationStatus.Done" />, если исходный буфер кончается допустимым скалярным значением в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-166"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer ends with a valid UTF-8 encoded scalar value.</span></span> <span data-ttu-id="4e9c6-167"><paramref name="result" /> затем содержит декодированный <see cref="T:System.Text.Rune" />, и <paramref name="bytesConsumed" /> содержит количество значений <see cref="T:System.Byte" />, используемых во входном буфере для кодирования <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-167"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="4e9c6-168">Значение <see cref="F:System.Buffers.OperationStatus.NeedMoreData" />, если исходный буфер пуст или содержит только автономный верхний суррогатный символ UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-168"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-8 high surrogate character.</span></span> <span data-ttu-id="4e9c6-169"><paramref name="result" /> затем содержит <see cref="P:System.Text.Rune.ReplacementChar" />, и <paramref name="bytesConsumed" /> содержит длину входного буфера.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-169"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="4e9c6-170">Значение <see cref="F:System.Buffers.OperationStatus.InvalidData" />, если исходный буфер кончается неправильно сформированным скалярным значением в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-170"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer ends with an ill-formed UTF-8 encoded scalar value.</span></span> <span data-ttu-id="4e9c6-171"><paramref name="result" /> затем содержит <see cref="P:System.Text.Rune.ReplacementChar" />, и <paramref name="bytesConsumed" /> содержит количество значений <see cref="T:System.Byte" />, используемых во входном буфере для кодирования неправильной последовательности.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-171"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the ill-formed sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-172">Этот метод очень похож на <xref:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)>, за исключением того, что он позволяет вызывающему объекту перебрать цикл назад, а не вперед.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-172">This method is very similar to <xref:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)>, except it allows the caller to loop backward instead of forward.</span></span> <span data-ttu-id="4e9c6-173">Типичное соглашение о вызовах заключается в том, что при каждой итерации цикла вызывающий объект должен `bytesConsumed` выполнять срез конечных элементов `source` буфера.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-173">The typical calling convention is that on each iteration of the loop, the caller should slice off the final `bytesConsumed` elements of the `source` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf16">
      <MemberSignature Language="C#" Value="public int EncodeToUtf16 (Span&lt;char&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EncodeToUtf16(valuetype System.Span`1&lt;char&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.EncodeToUtf16(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeToUtf16 (destination As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EncodeToUtf16(Span&lt;char&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.EncodeToUtf16 : Span&lt;char&gt; -&gt; int" Usage="rune.EncodeToUtf16 destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="4e9c6-174">Буфер, в который записывается это значение в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-174">The buffer to which to write this value as UTF-16.</span></span></param>
        <summary><span data-ttu-id="4e9c6-175">Кодирует это <see cref="T:System.Text.Rune" /> в буфер назначения UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-175">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-16 destination buffer.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-176">Число значений <see cref="T:System.Char" />, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-176">The number of <see cref="T:System.Char" /> values written to <paramref name="destination" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e9c6-177">Размер <paramref name="destination" /> недостаточен для хранения выходных данных.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-177"><paramref name="destination" /> is not large enough to hold the output.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public int EncodeToUtf8 (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EncodeToUtf8(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.EncodeToUtf8(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeToUtf8 (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EncodeToUtf8(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.EncodeToUtf8 : Span&lt;byte&gt; -&gt; int" Usage="rune.EncodeToUtf8 destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="4e9c6-178">Буфер, в который записывается это значение в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-178">The buffer to which to write this value as UTF-8.</span></span></param>
        <summary><span data-ttu-id="4e9c6-179">Кодирует это <see cref="T:System.Text.Rune" /> в буфер назначения UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-179">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-8 destination buffer.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-180">Число значений <see cref="T:System.Byte" />, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-180">The number of <see cref="T:System.Byte" /> values written to <paramref name="destination" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e9c6-181">Размер <paramref name="destination" /> недостаточен для хранения выходных данных.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-181"><paramref name="destination" /> is not large enough to hold the output.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rune.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4e9c6-182">Объект для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-182">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="4e9c6-183">Возвращает значение, указывающее, равен ли данный экземпляр указанному объекту.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-183">Returns a value that indicates whether the current instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-184">Значение <see langword="true" />, если значение <paramref name="obj" /> имеет тип <see cref="T:System.Text.Rune" /> и равно текущему экземпляру; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-184"><see langword="true" /> if <paramref name="obj" /> is of type <see cref="T:System.Text.Rune" /> and is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Text.Rune other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Text.Rune other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.Equals(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Text::Rune other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Text.Rune -&gt; bool" Usage="rune.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="4e9c6-185">Объект для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-185">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="4e9c6-186">Возвращает значение, указывающее, равен ли данный экземпляр указанной руне.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-186">Returns a value that indicates whether the current instance and a specified rune are equal.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-187">Значение <see langword="true" />, если объект <paramref name="other" /> равен текущему экземпляру; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-187"><see langword="true" /> if the current instance and <paramref name="other" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rune.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e9c6-188">Возвращает хэш-код данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-188">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-189">Хэш-код данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-189">The hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetNumericValue(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (value As Rune) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : System.Text.Rune -&gt; double" Usage="System.Text.Rune.GetNumericValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-190">Руна, для которой необходимо получить числовое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-190">The rune for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="4e9c6-191">Получает числовое значение, связанное с указанной руной.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-191">Gets the numeric value associated with the specified rune.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-192">Числовое значение, связанное с <paramref name="value" />, или –1, если <paramref name="value" /> не представляет числовой символ.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-192">The numeric value associated with <paramref name="value" />, or -1 if <paramref name="value" /> doesn't represent a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-193">Этот метод имеет поведение, эквивалентное <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-193">This method has behavior equivalent to <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4e9c6-194">Дополнительные сведения см. в этой документации.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-194">Refer to that documentation for more information.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuneAt">
      <MemberSignature Language="C#" Value="public static System.Text.Rune GetRuneAt (string input, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune GetRuneAt(string input, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetRuneAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRuneAt (input As String, index As Integer) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune GetRuneAt(System::String ^ input, int index);" />
      <MemberSignature Language="F#" Value="static member GetRuneAt : string * int -&gt; System.Text.Rune" Usage="System.Text.Rune.GetRuneAt (input, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4e9c6-195">Строка, из которой требуется создать руну.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-195">The string from which to create the rune.</span></span></param>
        <param name="index"><span data-ttu-id="4e9c6-196">Начальная позиция в <paramref name="input" />, с которой требуется создать руну.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-196">The starting position in <paramref name="input" /> at which to create the rune.</span></span></param>
        <summary><span data-ttu-id="4e9c6-197">Возвращает объект <see cref="T:System.Text.Rune" />, начинающийся с указанной позиции в строке.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-197">Gets the <see cref="T:System.Text.Rune" /> that begins at a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-198">Руна, полученная из <paramref name="input" /> в указанном <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-198">The rune obtained from <paramref name="input" /> at the specified <paramref name="index" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e9c6-199">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-199"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e9c6-200"><paramref name="index" /> не ссылается на начало допустимого скалярного значения в <paramref name="input" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-200"><paramref name="index" /> does not reference the start of a valid scalar value in <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e9c6-201"><paramref name="index" /> находится вне допустимого диапазона <paramref name="input" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-201"><paramref name="index" /> is outside the range of <paramref name="input" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (value As Rune) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : System.Text.Rune -&gt; System.Globalization.UnicodeCategory" Usage="System.Text.Rune.GetUnicodeCategory value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-202">Руна, для которой следует получить категорию Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-202">The rune for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="4e9c6-203">Получает категорию Юникода, связанную с указанной руной.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-203">Gets the Unicode category associated with the specified rune.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-204">Категория Юникода, связанная с <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-204">The Unicode category associated with <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-205">Этот метод имеет поведение, эквивалентное <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-205">This method has behavior equivalent to <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4e9c6-206">Дополнительные сведения см. в этой документации.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-206">Refer to that documentation for more information.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAscii">
      <MemberSignature Language="C#" Value="public bool IsAscii { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAscii" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.IsAscii" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAscii As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAscii { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAscii : bool" Usage="System.Text.Rune.IsAscii" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e9c6-207">Возвращает значение, указывающее, находится ли скалярное значение, связанное с этим <see cref="T:System.Text.Rune" />, в диапазоне кодирования ASCII.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-207">Gets a value that indicates whether the scalar value associated with this <see cref="T:System.Text.Rune" /> is within the ASCII encoding range.</span></span></summary>
        <value><span data-ttu-id="4e9c6-208"><see langword="true" />Если скалярное значение связано с диапазоном кодировки ASCII ([U + 0000.. U + 007F]) и, следовательно, может быть представлено одной единицей кода UTF-8; в противном случае —. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="4e9c6-208"><see langword="true" /> if the scalar value associated is within the ASCII encoding range ([ U+0000..U+007F ]) and therefore representable by a single UTF-8 code unit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBmp">
      <MemberSignature Language="C#" Value="public bool IsBmp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBmp" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.IsBmp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBmp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBmp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBmp : bool" Usage="System.Text.Rune.IsBmp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e9c6-209">Возвращает значение, указывающее, находится ли скалярное значение, связанное с этим <see cref="T:System.Text.Rune" />, в диапазоне кодирования BMP.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-209">Gets a value that indicates whether the scalar value associated with this <see cref="T:System.Text.Rune" /> is within the BMP encoding range.</span></span></summary>
        <value><span data-ttu-id="4e9c6-210"><see langword="true" />Если скалярное значение находится в диапазоне кодирования BMP ([U + 0000.. U + FFFF]) и, следовательно, может быть представлено одной единицей кода UTF-16; в противном случае —. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="4e9c6-210"><see langword="true" /> if the scalar value associated is within the BMP encoding range ([ U+0000..U+FFFF ]) and therefore representable by a single UTF-16 code unit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsControl(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsControl : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsControl value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-211">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-211">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-212">Возвращает значение, которое показывает, относится ли указанная руна к категории управляющих символов.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-212">Returns a value that indicates whether the specified rune is categorized as a control character.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-213">Значение <see langword="true" />, если <paramref name="value" /> является управляющим символом; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-213"><see langword="true" /> if <paramref name="value" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-214">Этот метод эквивалентен запросам <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> и сравнению результатов с. <xref:System.Globalization.UnicodeCategory.Control></span><span class="sxs-lookup"><span data-stu-id="4e9c6-214">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.Control>.</span></span>

<span data-ttu-id="4e9c6-215">Для [политик стабильной работы в Юникоде](https://www.unicode.org/policies/stability_policy.html)набор управляющих символов постоянно фиксируется как объединение `[ U+0000..U+001F ]` и. `[ U+007F..U+009F ]`</span><span class="sxs-lookup"><span data-stu-id="4e9c6-215">Per [Unicode stability policies](https://www.unicode.org/policies/stability_policy.html), the set of control characters is permanently fixed to be the union of `[ U+0000..U+001F ]` and `[ U+007F..U+009F ]`.</span></span>

<span data-ttu-id="4e9c6-216">Для получения дополнительной информации см. <xref:System.Char.IsControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-216">For more information, see <xref:System.Char.IsControl%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsDigit(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsDigit : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsDigit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-217">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-217">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-218">Возвращает значение, которое показывает, относится ли указанная руна к категории десятичных чисел.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-218">Returns a value that indicates whether the specified rune is categorized as a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-219">Значение <see langword="true" />, если <paramref name="value" /> является десятичной цифрой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-219"><see langword="true" /> if <paramref name="value" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-220">Этот метод эквивалентен запросам <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> и сравнению результатов с. <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber></span><span class="sxs-lookup"><span data-stu-id="4e9c6-220">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>.</span></span>

<span data-ttu-id="4e9c6-221">Для получения дополнительной информации см. <xref:System.Char.IsDigit%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-221">For more information, see <xref:System.Char.IsDigit%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLetter(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLetter : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLetter value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-222">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-222">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-223">Возвращает значение, которое показывает, относится ли указанная руна к категории букв.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-223">Returns a value that indicates whether the specified rune is categorized as a letter.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-224">Значение <see langword="true" />, если <paramref name="value" /> является буквой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-224"><see langword="true" /> if <paramref name="value" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-225">Этот метод эквивалентен запросам <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> и сравнению результатов с любыми значениями <xref:System.Globalization.UnicodeCategory.LowercaseLetter> <xref:System.Globalization.UnicodeCategory.TitlecaseLetter> <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.ModifierLetter>,, и <xref:System.Globalization.UnicodeCategory.OtherLetter>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-225">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter>, <xref:System.Globalization.UnicodeCategory.TitlecaseLetter>, <xref:System.Globalization.UnicodeCategory.ModifierLetter>, and <xref:System.Globalization.UnicodeCategory.OtherLetter>.</span></span>

<span data-ttu-id="4e9c6-226">Для получения дополнительной информации см. <xref:System.Char.IsLetter%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-226">For more information, see <xref:System.Char.IsLetter%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLetterOrDigit(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLetterOrDigit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-227">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-227">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-228">Возвращает значение, которое показывает, относится ли указанная руна к категории букв или десятичных чисел.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-228">Returns a value that indicates whether the specified rune is categorized as a letter or a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-229">Значение <see langword="true" />, если <paramref name="value" /> является буквой или десятичной цифрой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-229"><see langword="true" /> if <paramref name="value" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-230">Этот метод <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> эквивалентен запросам и сравнению результатов с любыми значениями <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter>, <xref:System.Globalization.UnicodeCategory.TitlecaseLetter> <xref:System.Globalization.UnicodeCategory.ModifierLetter> <xref:System.Globalization.UnicodeCategory.OtherLetter>,, и <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-230">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter>, <xref:System.Globalization.UnicodeCategory.TitlecaseLetter>, <xref:System.Globalization.UnicodeCategory.ModifierLetter>, <xref:System.Globalization.UnicodeCategory.OtherLetter>, and <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>.</span></span>

<span data-ttu-id="4e9c6-231">Для получения дополнительной информации см. <xref:System.Char.IsLetterOrDigit%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-231">For more information, see <xref:System.Char.IsLetterOrDigit%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLower(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLower : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLower value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-232">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-232">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-233">Возвращает значение, которое показывает, относится ли указанная руна к категории букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-233">Returns a value that indicates whether the specified rune is categorized as a lowercase letter.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-234">Значение <see langword="true" />, если <paramref name="value" /> является буквой в нижнем регистре; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-234"><see langword="true" /> if <paramref name="value" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-235">Этот метод эквивалентен запросам <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> и сравнению результатов с. <xref:System.Globalization.UnicodeCategory.LowercaseLetter></span><span class="sxs-lookup"><span data-stu-id="4e9c6-235">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.LowercaseLetter>.</span></span>

<span data-ttu-id="4e9c6-236">Для получения дополнительной информации см. <xref:System.Char.IsLower%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-236">For more information, see <xref:System.Char.IsLower%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsNumber(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsNumber : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsNumber value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-237">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-237">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-238">Возвращает значение, которое показывает, относится ли указанная руна к категории цифр.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-238">Returns a value that indicates whether the specified rune is categorized as a number.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-239">Значение <see langword="true" />, если <paramref name="value" /> является цифрой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-239"><see langword="true" /> if <paramref name="value" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-240">Этот <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> метод эквивалентен запросам и сравнению результатов с любыми значениями <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>, <xref:System.Globalization.UnicodeCategory.LetterNumber>и <xref:System.Globalization.UnicodeCategory.OtherNumber>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-240">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>, <xref:System.Globalization.UnicodeCategory.LetterNumber>, and <xref:System.Globalization.UnicodeCategory.OtherNumber>.</span></span>

<span data-ttu-id="4e9c6-241">Для получения дополнительной информации см. <xref:System.Char.IsNumber%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-241">For more information, see <xref:System.Char.IsNumber%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsPunctuation(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsPunctuation value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-242">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-242">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-243">Возвращает значение, которое показывает, относится ли указанная руна к категории знаков препинания.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-243">Returns a value that indicates whether the specified rune is categorized as a punctuation mark.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-244">Значение <see langword="true" />, если <paramref name="value" /> является знаком препинания; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-244"><see langword="true" /> if <paramref name="value" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-245"><xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> Этот метод эквивалентен запросам и сравнению результатов с любыми значениями <xref:System.Globalization.UnicodeCategory.ConnectorPunctuation> <xref:System.Globalization.UnicodeCategory.DashPunctuation> <xref:System.Globalization.UnicodeCategory.OpenPunctuation> <xref:System.Globalization.UnicodeCategory.FinalQuotePunctuation>,, <xref:System.Globalization.UnicodeCategory.ClosePunctuation> <xref:System.Globalization.UnicodeCategory.InitialQuotePunctuation>,,, и <xref:System.Globalization.UnicodeCategory.OtherPunctuation>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-245">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.ConnectorPunctuation>, <xref:System.Globalization.UnicodeCategory.DashPunctuation>, <xref:System.Globalization.UnicodeCategory.OpenPunctuation>, <xref:System.Globalization.UnicodeCategory.ClosePunctuation>, <xref:System.Globalization.UnicodeCategory.InitialQuotePunctuation>, <xref:System.Globalization.UnicodeCategory.FinalQuotePunctuation>, and <xref:System.Globalization.UnicodeCategory.OtherPunctuation>.</span></span>

<span data-ttu-id="4e9c6-246">Для получения дополнительной информации см. <xref:System.Char.IsPunctuation%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-246">For more information, see <xref:System.Char.IsPunctuation%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsSeparator(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsSeparator value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-247">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-247">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-248">Возвращает значение, которое показывает, относится ли указанная руна к категории знаков разделения.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-248">Returns a value that indicates whether the specified rune is categorized as a separator character.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-249">Значение <see langword="true" />, если <paramref name="value" /> является знаком-разделителем; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-249"><see langword="true" /> if <paramref name="value" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-250">Этот <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> метод эквивалентен запросам и сравнению результатов с любыми значениями <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>и <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-250">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>, and <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span></span>

<span data-ttu-id="4e9c6-251">Для получения дополнительной информации см. <xref:System.Char.IsSeparator%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-251">For more information, see <xref:System.Char.IsSeparator%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsSymbol(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsSymbol value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-252">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-252">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-253">Возвращает значение, которое показывает, относится ли указанная руна к категории знаков символов.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-253">Returns a value that indicates whether the specified rune is categorized as a symbol character.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-254">Значение <see langword="true" />, если <paramref name="value" /> является символьным знаком; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-254"><see langword="true" /> if <paramref name="value" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-255">Этот метод <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> эквивалентен запросам и сравнению результатов с любыми значениями <xref:System.Globalization.UnicodeCategory.MathSymbol>, <xref:System.Globalization.UnicodeCategory.CurrencySymbol> <xref:System.Globalization.UnicodeCategory.ModifierSymbol>, и <xref:System.Globalization.UnicodeCategory.OtherSymbol>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-255">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.MathSymbol>, <xref:System.Globalization.UnicodeCategory.CurrencySymbol>, <xref:System.Globalization.UnicodeCategory.ModifierSymbol>, and <xref:System.Globalization.UnicodeCategory.OtherSymbol>.</span></span>

<span data-ttu-id="4e9c6-256">Для получения дополнительной информации см. <xref:System.Char.IsSymbol%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-256">For more information, see <xref:System.Char.IsSymbol%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsUpper(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsUpper : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsUpper value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-257">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-257">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-258">Возвращает значение, которое показывает, относится ли указанная руна к категории букв верхнего регистра.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-258">Returns a value that indicates whether the specified rune is categorized as an uppercase letter.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-259">Значение <see langword="true" />, если <paramref name="value" /> является буквой верхнего регистра; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-259"><see langword="true" /> if <paramref name="value" /> is an uppercase letter; otherwise,<see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-260">Этот метод эквивалентен запросам <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> и сравнению результатов с. <xref:System.Globalization.UnicodeCategory.UppercaseLetter></span><span class="sxs-lookup"><span data-stu-id="4e9c6-260">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.UppercaseLetter>.</span></span>

<span data-ttu-id="4e9c6-261">Для получения дополнительной информации см. <xref:System.Char.IsUpper%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-261">For more information, see <xref:System.Char.IsUpper%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsValid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValid (value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(int value);" />
      <MemberSignature Language="F#" Value="static member IsValid : int -&gt; bool" Usage="System.Text.Rune.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-262">Скалярное значение Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-262">The Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="4e9c6-263">Возвращает значение, указывающее, представляет ли 32-разрядное целое число со знаком допустимое скалярное значение Юникода, то есть находится ли оно в диапазоне [U+0000..U+D7FF] включительно или [U+ E000..U+10FFFF] включительно.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-263">Returns a value that indicates whether a 32-bit signed integer represents a valid Unicode scalar value; that is, it is in the range [ U+0000..U+D7FF ], inclusive; or [ U+E000..U+10FFFF ], inclusive.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-264"><see langword="true" />, если <paramref name="value" /> является допустимым скалярным значением Юникода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-264"><see langword="true" /> if <paramref name="value" /> is a valid Unicode scalar value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsValid(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValid (value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member IsValid : uint32 -&gt; bool" Usage="System.Text.Rune.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-265">Скалярное значение Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-265">The Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="4e9c6-266">Возвращает значение, указывающее, представляет ли 32-разрядное целое число без знака допустимое скалярное значение Юникода, то есть находится ли оно в диапазоне [U+0000..U+D7FF] включительно или [U+ E000..U+10FFFF] включительно.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-266">Returns a value that indicates whether a 32-bit unsigned integer represents a valid Unicode scalar value; that is, it is in the range [ U+0000..U+D7FF ], inclusive, or [ U+E000..U+10FFFF ], inclusive.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-267"><see langword="true" />, если <paramref name="value" /> является допустимым скалярным значением Юникода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-267"><see langword="true" /> if <paramref name="value" /> is a valid Unicode scalar value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsWhiteSpace(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsWhiteSpace value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-268">Оцениваемая руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-268">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="4e9c6-269">Возвращает значение, которое показывает, относится ли указанная руна к категории пробелов.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-269">Returns a value that indicates whether the specified rune is categorized as a white space character.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-270">Значение <see langword="true" />, если <paramref name="value" /> является пробелом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-270"><see langword="true" /> if <paramref name="value" /> is a white space character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-271"><xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> Этот метод обычно эквивалентен запросу и сравнению результатов с любыми значениями <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>и <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-271">This method is generally equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>, and <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span></span> <span data-ttu-id="4e9c6-272"><xref:System.Text.Rune> Однако<xref:System.Globalization.UnicodeCategory.Control> в категории есть некоторые из них, которые также классифицируются как символы пробелов, и этот метод будет учитывать эти значения.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-272">However, there are some <xref:System.Text.Rune>s in the <xref:System.Globalization.UnicodeCategory.Control> category which are also classified as white space characters, and this method accounts for those values.</span></span>

<span data-ttu-id="4e9c6-273">Для получения дополнительной информации см. <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-273">For more information, see <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Equality(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4e9c6-274">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-274">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4e9c6-275">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-275">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4e9c6-276">Возвращает значение, указывающее, равны ли два экземпляра <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-276">Returns a value that indicates whether two <see cref="T:System.Text.Rune" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-277">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-277"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.Char)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (ch As Char) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(char ch);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : char -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="4e9c6-278">Знак 16-разрядный Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-278">The 16-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="4e9c6-279">Определяет явное преобразование 16-разрядного символа Юникода в <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-279">Defines an explicit conversion of a 16-bit Unicode character to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-280"><paramref name="ch" /> как 32-разрядный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-280"><paramref name="ch" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e9c6-281"><paramref name="ch" /> — это скаляр Юникода, представляющий заменяющую кодовую точку.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-281"><paramref name="ch" /> is a Unicode scalar that represents a surrogate code point.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.Int32)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Integer) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(int value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : int -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-282">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-282">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="4e9c6-283">Определяет явное преобразование 32-разрядного целого числа со знаком в значение <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-283">Defines an explicit conversion of a 32-bit signed integer to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-284"><paramref name="value" /> как 32-разрядный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-284"><paramref name="value" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e9c6-285"><paramref name="value" /> является недопустимым скаляром Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-285"><paramref name="value" /> is an invalid Unicode scalar.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.UInt32)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As UInteger) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : uint32 -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-286">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-286">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="4e9c6-287">Определяет явное преобразование 32-разрядного целого числа без знака в значение <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-287">Defines an explicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-288"><paramref name="value" /> как 32-разрядный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-288"><paramref name="value" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e9c6-289"><paramref name="value" /> является недопустимым скаляром Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-289"><paramref name="value" /> is an invalid Unicode scalar.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_GreaterThan(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4e9c6-290">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-290">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4e9c6-291">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-291">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4e9c6-292">Возвращает значение, позволяющее определить, действительно ли заданное значение типа <see cref="T:System.Text.Rune" /> больше другого заданного значения типа <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-292">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is greater than another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-293"><see langword="true" />, если значение <paramref name="left" /> больше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-293"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_GreaterThanOrEqual(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4e9c6-294">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-294">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4e9c6-295">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-295">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4e9c6-296">Возвращает значение, позволяющее определить, действительно ли заданное значение типа <see cref="T:System.Text.Rune" /> больше или равно другому заданному значению типа <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-296">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is greater than or equal to another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-297"><see langword="true" />, если значение <paramref name="left" /> больше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-297"><see langword="true" /> if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Inequality(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="System.Text.Rune.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4e9c6-298">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-298">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4e9c6-299">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-299">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4e9c6-300">Возвращает значение, указывающее, различаются ли значения двух экземпляров <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-300">Returns a value that indicates whether two <see cref="T:System.Text.Rune" /> instances have different values.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-301">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-301"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_LessThan(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4e9c6-302">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-302">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4e9c6-303">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-303">the second value to compare.</span></span></param>
        <summary><span data-ttu-id="4e9c6-304">Возвращает значение, позволяющее определить, действительно ли заданное значение типа <see cref="T:System.Text.Rune" /> меньше другого заданного значения типа <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-304">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is less than another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-305"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-305"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_LessThanOrEqual(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4e9c6-306">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-306">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4e9c6-307">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-307">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4e9c6-308">Возвращает значение, позволяющее определить, действительно ли заданное значение типа <see cref="T:System.Text.Rune" /> меньше или равно другому заданному значению типа <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-308">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is less than or equal to another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-309"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-309"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plane">
      <MemberSignature Language="C#" Value="public int Plane { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Plane" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Plane" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Plane As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Plane { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Plane : int" Usage="System.Text.Rune.Plane" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e9c6-310">Возвращает плоскость Юникода (от 0 до 16 включительно), которая содержит этот скаляр.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-310">Gets the Unicode plane (0 to 16, inclusive) that contains this scalar.</span></span></summary>
        <value><span data-ttu-id="4e9c6-311">Плоскость Юникода (от 0 до 16 включительно), которая содержит этот скаляр.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-311">The Unicode plane (0 to 16, inclusive) that contains this scalar.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementChar">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ReplacementChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Text.Rune ReplacementChar" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.ReplacementChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReplacementChar As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Rune ReplacementChar { System::Text::Rune get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementChar : System.Text.Rune" Usage="System.Text.Rune.ReplacementChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e9c6-312">Возвращает экземпляр <see cref="T:System.Text.Rune" />, представляющий символ замены Юникода U+FFFD.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-312">Gets a <see cref="T:System.Text.Rune" /> instance that represents the Unicode replacement character U+FFFD.</span></span></summary>
        <value><span data-ttu-id="4e9c6-313">Экземпляр <see cref="T:System.Text.Rune" />, представляющий символ замены Юникода U+FFFD.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-313">A <see cref="T:System.Text.Rune" /> instance that represents the Unicode replacement character U+FFFD.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToLower (System.Text.Rune value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToLower(valuetype System.Text.Rune value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToLower(System.Text.Rune,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (value As Rune, culture As CultureInfo) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToLower(System::Text::Rune value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Text.Rune * System.Globalization.CultureInfo -&gt; System.Text.Rune" Usage="System.Text.Rune.ToLower (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-314">32-разрядный символ Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-314">The 32-bit Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="4e9c6-315">Объект, задающий правила определения регистра для языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-315">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="4e9c6-316">Возвращает копию заданного <see cref="T:System.Text.Rune" />, преобразованного в нижний регистр, используя правила определения регистра заданного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-316">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to lowercase, using the casing rules of the specified culture.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-317">Эквивалент <paramref name="value" /> в нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-317">The lowercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToLowerInvariant (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToLowerInvariant(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToLowerInvariant(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (value As Rune) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToLowerInvariant(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : System.Text.Rune -&gt; System.Text.Rune" Usage="System.Text.Rune.ToLowerInvariant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-318">32-разрядный символ Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-318">The 32-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="4e9c6-319">Возвращает копию указанного <see cref="T:System.Text.Rune" />, преобразованного в нижний регистр, используя правила учета регистра инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-319">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to lowercase using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-320">Эквивалент <paramref name="value" /> в нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-320">The lowercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rune.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e9c6-321">Возвращает строковое представление этого экземпляра <see cref="T:System.Text.Rune" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-321">Returns the string representation of this <see cref="T:System.Text.Rune" /> instance.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-322">Строковое представление этой руны.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-322">The string representation of this rune.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToUpper (System.Text.Rune value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToUpper(valuetype System.Text.Rune value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToUpper(System.Text.Rune,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (value As Rune, culture As CultureInfo) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToUpper(System::Text::Rune value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Text.Rune * System.Globalization.CultureInfo -&gt; System.Text.Rune" Usage="System.Text.Rune.ToUpper (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-323">32-разрядный символ Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-323">The 32-bit Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="4e9c6-324">Объект, задающий правила определения регистра для языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-324">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="4e9c6-325">Возвращает копию заданного <see cref="T:System.Text.Rune" />, преобразованного в верхний регистр, используя правила определения регистра заданного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-325">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to uppercase, using the casing rules of the specified culture.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-326">Эквивалент <paramref name="value" /> в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-326">The uppercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToUpperInvariant (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToUpperInvariant(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToUpperInvariant(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (value As Rune) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToUpperInvariant(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : System.Text.Rune -&gt; System.Text.Rune" Usage="System.Text.Rune.ToUpperInvariant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-327">32-разрядный символ Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-327">The 32-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="4e9c6-328">Возвращает копию указанного <see cref="T:System.Text.Rune" />, преобразованного в верхний регистр, используя правила учета регистра инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-328">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to uppercase using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-329">Эквивалент <paramref name="value" /> в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-329">The uppercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (char ch, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(char ch, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Char,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (ch As Char, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(char ch, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : char * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (ch, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="4e9c6-330">Символ, из которого требуется создать руну.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-330">The character from which to create the rune.</span></span></param>
        <param name="result"><span data-ttu-id="4e9c6-331">При возврате управления методом — руна, соответствующая <paramref name="ch" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-331">When this method returns, the rune that corresponds to <paramref name="ch" />.</span></span></param>
        <summary><span data-ttu-id="4e9c6-332">Пытается создать <see cref="T:System.Text.Rune" /> из указанного символа и возвращает значение, указывающее, успешно ли выполнена операция.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-332">Attempts to create a <see cref="T:System.Text.Rune" /> from a specified character and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-333">Если метод выполнен успешно, возвращается значение <see langword="true" />. В противном случае возвращается <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-333"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (int value, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(int32 value, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Int32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (value As Integer, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(int value, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : int * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-334">Скалярное значение Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-334">The Unicode scalar value.</span></span></param>
        <param name="result"><span data-ttu-id="4e9c6-335">При возврате управления методом — руна, соответствующая <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-335">When this method returns, the rune that corresponds to <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="4e9c6-336">Пытается создать <see cref="T:System.Text.Rune" /> из указанного целого числа со знаком, представляющего скалярное значение Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-336">Attempts to create a <see cref="T:System.Text.Rune" /> from a specified signed integer that represents a Unicode scalar value.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-337">Если метод выполнен успешно, возвращается значение <see langword="true" />. В противном случае возвращается <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-337"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (uint value, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(unsigned int32 value, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.UInt32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (value As UInteger, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(System::UInt32 value, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : uint32 * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e9c6-338">Скалярное значение Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-338">The Unicode scalar value.</span></span></param>
        <param name="result"><span data-ttu-id="4e9c6-339">При возврате управления методом — руна, соответствующая <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-339">When this method returns, the rune that corresponds to <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="4e9c6-340">Пытается создать <see cref="T:System.Text.Rune" /> из указанного целого 32-разрядного числа без знака, представляющего скалярное значение Юникода.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-340">Attempts to create a <see cref="T:System.Text.Rune" /> from the specified 32-bit unsigned integer that represents a Unicode scalar value.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-341">Если метод выполнен успешно, возвращается значение <see langword="true" />. В противном случае возвращается <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-341"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (char highSurrogate, char lowSurrogate, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(char highSurrogate, char lowSurrogate, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Char,System.Char,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (highSurrogate As Char, lowSurrogate As Char, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(char highSurrogate, char lowSurrogate, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : char * char * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (highSurrogate, lowSurrogate, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="4e9c6-342">Старший символ-заместитель суррогатной пары.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-342">The high surrogate of the surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="4e9c6-343">Младший символ-заместитель суррогатной пары.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-343">The low surrogate of the surrogate pair.</span></span></param>
        <param name="result"><span data-ttu-id="4e9c6-344">Руна, соответствующее указанной суррогатной паре.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-344">The rune that corresponds to the specified surrogate pair.</span></span></param>
        <summary><span data-ttu-id="4e9c6-345">Пытается создать <see cref="T:System.Text.Rune" /> из указанной суррогатной пары в UTF-16 и возвращает значение, указывающее, успешно ли выполнена операция.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-345">Attempts to create a <see cref="T:System.Text.Rune" /> from the specified UTF-16 surrogate pair and returns a value that indicates whether the operation was successful.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-346">Значение <see langword="true" />, если операция завершилась удачно, <see langword="false" /> — если входные значения не представляют правильно сформированную суррогатную пару UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-346"><see langword="true" /> if the operation succeeded; <see langword="false" /> if the input values don't represent a well-formed UTF-16 surrogate pair.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncodeToUtf16">
      <MemberSignature Language="C#" Value="public bool TryEncodeToUtf16 (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncodeToUtf16(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryEncodeToUtf16(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncodeToUtf16 (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncodeToUtf16(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncodeToUtf16 : Span&lt;char&gt; * int -&gt; bool" Usage="rune.TryEncodeToUtf16 (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="4e9c6-347">Буфер, в который записывается это значение в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-347">The buffer to which to write this value as UTF-16 encoded value.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="4e9c6-348">Число значений <see cref="T:System.Char" />, записанных в <paramref name="destination" />, или 0, если буфер назначения недостаточно велик для размещения выходных данных.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-348">The number of <see cref="T:System.Char" /> values written to <paramref name="destination" />, or 0 if the destination buffer is not large enough to contain the output.</span></span></param>
        <summary><span data-ttu-id="4e9c6-349">Кодирует это <see cref="T:System.Text.Rune" /> в буфер назначения в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-349">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-16 encoded destination buffer.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-350">Значение <see langword="true" />, если значение было записано в буфер; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-350"><see langword="true" /> if the value was written to the buffer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
## Remarks

<span data-ttu-id="4e9c6-351">Для определения требуемого размера `destination` буфера можно заранее запросить свойство.<xref:System.Text.Rune.Utf16SequenceLength></span><span class="sxs-lookup"><span data-stu-id="4e9c6-351">The <xref:System.Text.Rune.Utf16SequenceLength> property can be queried ahead of time to determine the required size of the `destination` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncodeToUtf8">
      <MemberSignature Language="C#" Value="public bool TryEncodeToUtf8 (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncodeToUtf8(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryEncodeToUtf8(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncodeToUtf8 (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncodeToUtf8(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncodeToUtf8 : Span&lt;byte&gt; * int -&gt; bool" Usage="rune.TryEncodeToUtf8 (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="4e9c6-352">Буфер, в который записывается это значение в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-352">The buffer to which to write the UTF-8 encoded value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="4e9c6-353">Число значений <see cref="T:System.Byte" />, записанных в <paramref name="destination" />, или 0, если буфер назначения недостаточно велик для размещения выходных данных.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-353">The number of <see cref="T:System.Byte" /> values written to <paramref name="destination" />, or 0 if the destination buffer is not large enough to contain the output.</span></span></param>
        <summary><span data-ttu-id="4e9c6-354">Кодирует это <see cref="T:System.Text.Rune" /> в буфер назначения в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-354">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-8 encoded destination buffer.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-355">Значение <see langword="true" />, если значение было записано в буфер; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-355"><see langword="true" /> if the value was written to the buffer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
## Remarks

<span data-ttu-id="4e9c6-356">Для определения требуемого размера `destination` буфера можно заранее запросить свойство.<xref:System.Text.Rune.Utf8SequenceLength></span><span class="sxs-lookup"><span data-stu-id="4e9c6-356">The <xref:System.Text.Rune.Utf8SequenceLength> property can be queried ahead of time to determine the required size of the `destination` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRuneAt">
      <MemberSignature Language="C#" Value="public static bool TryGetRuneAt (string input, int index, out System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetRuneAt(string input, int32 index, [out] valuetype System.Text.Rune&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryGetRuneAt(System.String,System.Int32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetRuneAt (input As String, index As Integer, ByRef value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetRuneAt(System::String ^ input, int index, [Runtime::InteropServices::Out] System::Text::Rune % value);" />
      <MemberSignature Language="F#" Value="static member TryGetRuneAt : string * int * Rune -&gt; bool" Usage="System.Text.Rune.TryGetRuneAt (input, index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4e9c6-357">Строка, из которой требуется извлечь руну.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-357">The string from which to extract the rune.</span></span></param>
        <param name="index"><span data-ttu-id="4e9c6-358">Индекс, отсчитываемый от нуля, по которому требуется извлечь руну.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-358">The zero-based index from which to extract the rune.</span></span></param>
        <param name="value"><span data-ttu-id="4e9c6-359">При возврате методом — расшифрованная руна.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-359">When this method returns, the decoded rune.</span></span></param>
        <summary><span data-ttu-id="4e9c6-360">Пытается получить объект <see cref="T:System.Text.Rune" />, начинающийся с указанной позиции в строке, и возвращает значение, указывающее, завершилась ли операция успехом.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-360">Attempts to get the <see cref="T:System.Text.Rune" /> that begins at a specified position in a string, and return a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="4e9c6-361">Значение <see langword="true" />, если скалярное значение было успешно извлечено по указанному индексу; <see langword="false" />, если не удалось извлечь значение из-за недопустимых данных.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-361"><see langword="true" /> if a scalar value was successfully extracted from the specified index; <see langword="false" /> if a value could not be extracted because of invalid data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e9c6-362">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-362"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e9c6-363"><paramref name="index" /> выходит за пределы диапазона <paramref name="input" />.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-363"><paramref name="index" /> is out of the range of <paramref name="input" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Utf16SequenceLength">
      <MemberSignature Language="C#" Value="public int Utf16SequenceLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Utf16SequenceLength" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Utf16SequenceLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Utf16SequenceLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Utf16SequenceLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Utf16SequenceLength : int" Usage="System.Text.Rune.Utf16SequenceLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e9c6-364">Возвращает длину в блоках кода (<see cref="T:System.Char" />) для последовательности UTF-16, которая должна представлять это скалярное значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-364">Gets the length in code units (<see cref="T:System.Char" />) of the UTF-16 sequence required to represent this scalar value.</span></span></summary>
        <value><span data-ttu-id="4e9c6-365">Длина в единицах кода (<see cref="T:System.Char" />) последовательности UTF-16, необходимой для представления этого скалярного значения.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-365">The length in code units (<see cref="T:System.Char" />) of the UTF-16 sequence required to represent this scalar value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-366">Возвращаемое значение будет равно 1 или 2.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-366">The return value will be 1 or 2.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Utf8SequenceLength">
      <MemberSignature Language="C#" Value="public int Utf8SequenceLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Utf8SequenceLength" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Utf8SequenceLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Utf8SequenceLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Utf8SequenceLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Utf8SequenceLength : int" Usage="System.Text.Rune.Utf8SequenceLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e9c6-367">Возвращает длину в блоках для последовательности UTF-8, которая должна представлять это скалярное значение.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-367">Gets the length in code units of the UTF-8 sequence required to represent this scalar value.</span></span></summary>
        <value><span data-ttu-id="4e9c6-368">Длина в единицах кода последовательности UTF-8, необходимой для представления этого скалярного значения.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-368">The length in code units of the UTF-8 sequence required to represent this scalar value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e9c6-369">Возвращаемое значение будет равно 1 – 4 включительно.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-369">The return value will be 1 through 4, inclusive.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public int Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Value { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : int" Usage="System.Text.Rune.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e9c6-370">Возвращает скалярное значение Юникода в виде целого числа.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-370">Gets the Unicode scalar value as an integer.</span></span></summary>
        <value><span data-ttu-id="4e9c6-371">Скалярное значение Юникода в виде целого числа.</span><span class="sxs-lookup"><span data-stu-id="4e9c6-371">The Unicode scalar value as an integer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
