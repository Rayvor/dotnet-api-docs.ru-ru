<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36d20c01a10df1ac3b8d9349072ea2049fe240af" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69144646" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="de28b-101">Предоставляет буфер, который позволяет резервному обработчику возвращать альтернативную строку средству кодирования, если не удается кодировать входной символ.</span><span class="sxs-lookup"><span data-stu-id="de28b-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de28b-102">Кодировка определяет сопоставление между символом Юникода и закодированной последовательностью байтов.</span><span class="sxs-lookup"><span data-stu-id="de28b-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="de28b-103">Операция кодирования, которая преобразует входной символ в выходную последовательность байтов, завершается ошибкой, если для определенного символа не определено сопоставление.</span><span class="sxs-lookup"><span data-stu-id="de28b-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="de28b-104">.NET Framework предоставляет механизм обработки сбоев, называемый откатом, если преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="de28b-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="de28b-105">Все резервные обработчики кодировщика должны реализовывать следующее:</span><span class="sxs-lookup"><span data-stu-id="de28b-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="de28b-106">Резерв кодировщика, представленный классом, производным от <xref:System.Text.EncoderFallback> класса.</span><span class="sxs-lookup"><span data-stu-id="de28b-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="de28b-107">Резервный буфер кодировщика, представленный типом, производным от <xref:System.Text.EncoderFallbackBuffer> класса, который может возвращать строку в операцию преобразования.</span><span class="sxs-lookup"><span data-stu-id="de28b-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="de28b-108">Резервные варианты могут использовать три стратегии для обработки ошибок преобразования:</span><span class="sxs-lookup"><span data-stu-id="de28b-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="de28b-109">Наилучшее сопоставление.</span><span class="sxs-lookup"><span data-stu-id="de28b-109">Best-fit mapping.</span></span> <span data-ttu-id="de28b-110">Резервный буфер кодировщика может возвращать строку, представляющую близкое приближение к входному символу.</span><span class="sxs-lookup"><span data-stu-id="de28b-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="de28b-111">.NET Framework не предоставляет общедоступную реализацию наилучшего соответствия <xref:System.Text.EncoderFallbackBuffer> .</span><span class="sxs-lookup"><span data-stu-id="de28b-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="de28b-112">Сказк.</span><span class="sxs-lookup"><span data-stu-id="de28b-112">Replacement.</span></span> <span data-ttu-id="de28b-113">Резервный буфер кодировщика может возвращать строку, например вопросительный знак ("?"), которая указывает, что символ не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="de28b-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="de28b-114">В .NET Framework <xref:System.Text.EncoderReplacementFallback> классы и <xref:System.Text.EncoderReplacementFallbackBuffer> предоставляют реализацию закрытого резервного буфера для замены.</span><span class="sxs-lookup"><span data-stu-id="de28b-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="de28b-115">Конструктор <xref:System.Text.EncoderReplacementFallback> класса позволяет определить строку замены.</span><span class="sxs-lookup"><span data-stu-id="de28b-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="de28b-116">Исключение.</span><span class="sxs-lookup"><span data-stu-id="de28b-116">Exception.</span></span> <span data-ttu-id="de28b-117"><xref:System.Text.EncoderFallbackBuffer> Реализация создает исключение, которое указывает, что символ не может быть закодирован, и завершает операцию кодирования.</span><span class="sxs-lookup"><span data-stu-id="de28b-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="de28b-118">В этом случае резервный обработчик должен обеспечить <xref:System.Text.EncoderFallbackBuffer> реализацию, хотя он не возвращает строку кодировщику.</span><span class="sxs-lookup"><span data-stu-id="de28b-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="de28b-119">В .NET Framework <xref:System.Text.EncoderExceptionFallback> классы и <xref:System.Text.EncoderExceptionFallbackBuffer> предоставляют открытую реализацию <xref:System.Text.EncoderFallbackException> резервного исключения, которая создает исключение, если символ не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="de28b-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="de28b-120">Буфер в <xref:System.Text.EncoderFallbackBuffer> реализации представляет целую строку, возвращаемую кодировщику в ответ на резервный вариант кодировщика.</span><span class="sxs-lookup"><span data-stu-id="de28b-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="de28b-121">Как правило, реализации также включают в себя сведения о состоянии, например индекс следующего символа, возвращаемого кодировщику, и число оставшихся символов для возврата.</span><span class="sxs-lookup"><span data-stu-id="de28b-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="de28b-122">Поскольку <xref:System.Text.EncoderFallbackBuffer> является абстрактным классом, он требует, чтобы производные классы реализовали следующие члены как минимум:</span><span class="sxs-lookup"><span data-stu-id="de28b-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="de28b-123">Перегруженный <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> метод, который вызывается кодировщиком при невозможности кодирования символа.</span><span class="sxs-lookup"><span data-stu-id="de28b-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="de28b-124">Кодировщик передает в реализацию резервного буфера два фрагмента данных: символ или суррогатную пару, которые не удалось закодировать, и индекс символа во входных данных.</span><span class="sxs-lookup"><span data-stu-id="de28b-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="de28b-125">В резервном обработчике исключений кодировщика в этом методе создается исключение.</span><span class="sxs-lookup"><span data-stu-id="de28b-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="de28b-126">В противном случае метод `true` возвращает значение, если он предоставляет откат `false` , или значение, если нет.</span><span class="sxs-lookup"><span data-stu-id="de28b-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="de28b-127">Метод, который вызывается повторно кодировщиком, если метод возвращает <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> `true`значение. <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A></span><span class="sxs-lookup"><span data-stu-id="de28b-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="de28b-128">В последовательных вызовах обработчик должен возвращать каждый символ в своем буфере.</span><span class="sxs-lookup"><span data-stu-id="de28b-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="de28b-129">Когда он возвращает все символы, он должен возвращать U + 0000.</span><span class="sxs-lookup"><span data-stu-id="de28b-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="de28b-130">Обработчик исключений всегда возвращает U + 0000.</span><span class="sxs-lookup"><span data-stu-id="de28b-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="de28b-131"><xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> Метод, который пытается переместить указатель на предыдущую точку в буфере и указывает, было ли перемещение успешным.</span><span class="sxs-lookup"><span data-stu-id="de28b-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="de28b-132">Обработчик исключений всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="de28b-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="de28b-133"><xref:System.Text.EncoderFallbackBuffer.Remaining%2A> Свойство, указывающее количество оставшихся символов, возвращаемых кодировщику.</span><span class="sxs-lookup"><span data-stu-id="de28b-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="de28b-134">Обработчик отката исключений всегда возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="de28b-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="de28b-135">Кодировки в .NET Framework</span><span class="sxs-lookup"><span data-stu-id="de28b-135">Character Encoding in the .NET Framework</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29"><span data-ttu-id="de28b-136">Пример: Кириллица для латиницы, программа транслитерации</span><span class="sxs-lookup"><span data-stu-id="de28b-136">Sample: Cyrillic to Roman Transliteration Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de28b-137">Инициализирует новый экземпляр класса <see cref="T:System.Text.EncoderFallbackBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="de28b-137">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de28b-138">Указывает, что замещающая строка доступна, если исходная входная последовательность не может быть закодирована или если исходная входная последовательность должна быть проигнорирована.</span><span class="sxs-lookup"><span data-stu-id="de28b-138">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown"><span data-ttu-id="de28b-139">Входной символ.</span><span class="sxs-lookup"><span data-stu-id="de28b-139">An input character.</span></span></param>
        <param name="index"><span data-ttu-id="de28b-140">Позиция индекса символа во входном буфере.</span><span class="sxs-lookup"><span data-stu-id="de28b-140">The index position of the character in the input buffer.</span></span></param>
        <summary><span data-ttu-id="de28b-141">При переопределении в производном классе готовит резервный буфер для обработки указанного входного символа.</span><span class="sxs-lookup"><span data-stu-id="de28b-141">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span></span></summary>
        <returns><span data-ttu-id="de28b-142"><see langword="true" />, если резервный буфер может обработать <paramref name="charUnknown" />; <see langword="false" />, если резервный буфер игнорирует <paramref name="charUnknown" />.</span><span class="sxs-lookup"><span data-stu-id="de28b-142"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de28b-143">Методы <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> и <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вызывают<xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> , если возникают неизвестный входной символ, который не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="de28b-143">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="de28b-144">Возвращаемое значение `true` указывает, что резервный буфер может обработать входной символ, что приводит к <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> вызову метода для получения каждого символа резервного буфера.</span><span class="sxs-lookup"><span data-stu-id="de28b-144">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="de28b-145">Поскольку не обрабатывает отдельные символы, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> метод в обработчике резервного исключения создает исключение.</span><span class="sxs-lookup"><span data-stu-id="de28b-145">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh"><span data-ttu-id="de28b-146">Старший символ-заместитель входной пары.</span><span class="sxs-lookup"><span data-stu-id="de28b-146">The high surrogate of the input pair.</span></span></param>
        <param name="charUnknownLow"><span data-ttu-id="de28b-147">Младший символ-заместитель входной пары.</span><span class="sxs-lookup"><span data-stu-id="de28b-147">The low surrogate of the input pair.</span></span></param>
        <param name="index"><span data-ttu-id="de28b-148">Позиция индекса суррогатной пары во входном буфере.</span><span class="sxs-lookup"><span data-stu-id="de28b-148">The index position of the surrogate pair in the input buffer.</span></span></param>
        <summary><span data-ttu-id="de28b-149">При переопределении в производном классе готовит резервный буфер для обработки указанной суррогатной пары.</span><span class="sxs-lookup"><span data-stu-id="de28b-149">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span></span></summary>
        <returns><span data-ttu-id="de28b-150"><see langword="true" />, если резервный буфер может обработать <paramref name="charUnknownHigh" /> и <paramref name="charUnknownLow" />, <see langword="false" />, если резервный буфер игнорирует суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="de28b-150"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de28b-151">Методы <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> и <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вызывают<xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> , если они обнаруживают суррогатную пару во входных данных.</span><span class="sxs-lookup"><span data-stu-id="de28b-151">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="de28b-152">Возвращаемое значение `true` указывает, что резервный буфер может обработать суррогатную пару, что приводит к <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> вызову метода для получения каждого символа резервного буфера.</span><span class="sxs-lookup"><span data-stu-id="de28b-152">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="de28b-153">Поскольку не обрабатывает отдельные символы, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> метод в обработчике резервного исключения создает исключение.</span><span class="sxs-lookup"><span data-stu-id="de28b-153">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de28b-154">При переопределении в производном классе извлекает следующий символ в резервном буфере.</span><span class="sxs-lookup"><span data-stu-id="de28b-154">When overridden in a derived class, retrieves the next character in the fallback buffer.</span></span></summary>
        <returns><span data-ttu-id="de28b-155">Следующий символ в резервном буфере.</span><span class="sxs-lookup"><span data-stu-id="de28b-155">The next character in the fallback buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de28b-156">Операция кодирования вызывает метод, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> если операция встречает Неизвестный символ или суррогатную пару во входных данных.</span><span class="sxs-lookup"><span data-stu-id="de28b-156">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="de28b-157">Например, в случае резервного варианта замены, если <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> метод возвращает `true`, существует замещающая строка, которая может быть закодирована вместо неизвестных входных данных.</span><span class="sxs-lookup"><span data-stu-id="de28b-157">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="de28b-158">Операция кодирования вызывает <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> метод многократно и получает строку замены по одному символу за раз.</span><span class="sxs-lookup"><span data-stu-id="de28b-158">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="de28b-159">Если все символы в резервном буфере возвращены кодировщику, <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> метод должен возвращать U + 0000.</span><span class="sxs-lookup"><span data-stu-id="de28b-159">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="de28b-160">Для обработчика <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> резервного исключения метод должен возвращать U + 0000.</span><span class="sxs-lookup"><span data-stu-id="de28b-160">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de28b-161">При переопределении в производный класс становится причиной того, что в следующем вызове метод <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> получает доступ к позиции символа в буфере данных, предшествующей текущей позиции символа.</span><span class="sxs-lookup"><span data-stu-id="de28b-161">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span></span></summary>
        <returns><span data-ttu-id="de28b-162">Значение <see langword="true" />, если операция <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="de28b-162"><see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de28b-163">Обработчик отката исключений должен возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="de28b-163">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de28b-164">При переопределении в производном классе возвращает максимальное число символов в текущем объекте <see cref="T:System.Text.EncoderFallbackBuffer" />, которые остаются для обработки.</span><span class="sxs-lookup"><span data-stu-id="de28b-164">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span></span></summary>
        <value><span data-ttu-id="de28b-165">Количество символов в текущем резервном буфере, которые еще не были обработаны.</span><span class="sxs-lookup"><span data-stu-id="de28b-165">The number of characters in the current fallback buffer that have not yet been processed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de28b-166">Метод возвращает `true` , Если<xref:System.Text.EncoderFallbackBuffer.Remaining%2A> имеет ненулевое значение. <xref:System.Text.EncoderFallbackBuffer.Fallback%2A></span><span class="sxs-lookup"><span data-stu-id="de28b-166">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="de28b-167">Для обработчика <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> резервного исключения метод должен вернуть ноль.</span><span class="sxs-lookup"><span data-stu-id="de28b-167">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de28b-168">Инициализирует все данные и сведения о состоянии, относящиеся к этому резервному буферу.</span><span class="sxs-lookup"><span data-stu-id="de28b-168">Initializes all data and state information pertaining to this fallback buffer.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="de28b-169"><see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> После вызова метода <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> свойство <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> <see langword="false" />должно возвращать значение 0, методдолженвозвращатьU+0000,аметоддолженвозвращатьзначение.<see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /></span><span class="sxs-lookup"><span data-stu-id="de28b-169">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
