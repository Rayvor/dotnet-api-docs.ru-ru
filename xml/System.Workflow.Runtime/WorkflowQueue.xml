<Type Name="WorkflowQueue" FullName="System.Workflow.Runtime.WorkflowQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7b90e72ef950dad02d0c79dad7c2a8d32c58cbc6" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64241146" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueue" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueue" />
  <TypeSignature Language="F#" Value="type WorkflowQueue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="57ed0-101">Представляет очередь рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="57ed0-101">Represents a workflow queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="57ed0-102">Очереди рабочего процесса используются для передачи сообщений между узлом или службами узла и действиями в рабочем процессе.</span><span class="sxs-lookup"><span data-stu-id="57ed0-102">Workflow queues are used to pass messages between a host or host services and activities in a workflow.</span></span> <span data-ttu-id="57ed0-103">Действие может создать очередь <xref:System.Workflow.Runtime.WorkflowQueue>, вызвав метод <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType>, а узел, служба или другое действие может вызвать метод <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> для добавления элемента в эту очередь <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-103">Any activity can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType>, and a host, a service, or another activity can call <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> to add an item to that <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="57ed0-104">Можно подписаться на событие <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable>, чтобы получать уведомления о поступлении элементов в очередь <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-104">You can subscribe to the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event to be notified when an item arrives on the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="57ed0-105">Можно использовать метод <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> для проверки элемента в начале очереди <xref:System.Workflow.Runtime.WorkflowQueue>, и метод <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> для удаления элемента из очереди <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-105">You can use <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> to examine an item at the beginning of the <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> to remove an item from the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="57ed0-106">Каждая очередь <xref:System.Workflow.Runtime.WorkflowQueue> связана со службой <xref:System.Workflow.Runtime.WorkflowQueuingService>, которую можно использовать для выполнения других операций управления очередью <xref:System.Workflow.Runtime.WorkflowQueue>, например для ее удаления.</span><span class="sxs-lookup"><span data-stu-id="57ed0-106">Each <xref:System.Workflow.Runtime.WorkflowQueue> is associated with a <xref:System.Workflow.Runtime.WorkflowQueuingService> that you can use to perform other management operations on the <xref:System.Workflow.Runtime.WorkflowQueue>, such as deleting the queue.</span></span> <span data-ttu-id="57ed0-107">Свойство <xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> показывает объект <xref:System.Workflow.Runtime.WorkflowQueuingService>, связанный с этой очередью <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-107"><xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> exposes the <xref:System.Workflow.Runtime.WorkflowQueuingService> associated with this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57ed0-108">В следующем примере кода показано создание очереди <xref:System.Workflow.Runtime.WorkflowQueue> с помощью вызова метода <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-108">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="57ed0-109">В нем также используется свойство <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>, чтобы определить, существуют ли сообщения в текущей очереди.</span><span class="sxs-lookup"><span data-stu-id="57ed0-109">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="57ed0-110">Наконец, в коде используется метод <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> для удаления первого объекта из очереди и его возврата.</span><span class="sxs-lookup"><span data-stu-id="57ed0-110">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="57ed0-111">Этот пример кода является частью образца File Watcher Activity из пакета SDK (файл FileSystemEvent.cs).</span><span class="sxs-lookup"><span data-stu-id="57ed0-111">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="57ed0-112">Дополнительные сведения см. в разделе [активности наблюдателя файловой системы](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="57ed0-112">For more information, see [File System Watcher Activity](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms735924(v=vs.90)"><span data-ttu-id="57ed0-113">Взаимодействие между рабочими процессами и приложениями</span><span class="sxs-lookup"><span data-stu-id="57ed0-113">Workflow and Application Communication</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)"><span data-ttu-id="57ed0-114">Отслеживание активности файловой системы</span><span class="sxs-lookup"><span data-stu-id="57ed0-114">File System Watcher Activity</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.Runtime.WorkflowQueue.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57ed0-115">Возвращает число элементов, содержащихся в списке <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-115">Gets the number of items contained in the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <value><span data-ttu-id="57ed0-116">Число элементов в очереди рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="57ed0-116">The number of items in the workflow queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57ed0-117">В следующем примере кода показано создание очереди <xref:System.Workflow.Runtime.WorkflowQueue> с помощью вызова метода <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-117">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="57ed0-118">В нем также используется свойство <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>, чтобы определить, существуют ли сообщения в текущей очереди.</span><span class="sxs-lookup"><span data-stu-id="57ed0-118">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="57ed0-119">Наконец, в коде используется метод <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> для удаления первого объекта из очереди и его возврата.</span><span class="sxs-lookup"><span data-stu-id="57ed0-119">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="57ed0-120">Этот пример кода является частью образца File Watcher Activity из пакета SDK (файл FileSystemEvent.cs).</span><span class="sxs-lookup"><span data-stu-id="57ed0-120">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="57ed0-121">Дополнительные сведения см. в разделе [активности наблюдателя файловой системы](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="57ed0-121">For more information, see [File System Watcher Activity](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)"><span data-ttu-id="57ed0-122">Отслеживание активности файловой системы</span><span class="sxs-lookup"><span data-stu-id="57ed0-122">File System Watcher Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public object Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dequeue();" />
      <MemberSignature Language="F#" Value="member this.Dequeue : unit -&gt; obj" Usage="workflowQueue.Dequeue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57ed0-123">Удаляет и возвращает объект, находящийся в начале <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-123">Removes and returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <returns><span data-ttu-id="57ed0-124">Объект, удаляемый из начала очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-124">The object that is removed from the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57ed0-125">Можно проверить свойство <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>, чтобы определить, является ли очередь <xref:System.Workflow.Runtime.WorkflowQueue> пустой, перед вызовом метода <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, или перехватить исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-125">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57ed0-126">В следующем примере кода показано создание очереди <xref:System.Workflow.Runtime.WorkflowQueue> с помощью вызова метода <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-126">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="57ed0-127">В нем также используется свойство <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>, чтобы определить, существуют ли сообщения в текущей очереди.</span><span class="sxs-lookup"><span data-stu-id="57ed0-127">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="57ed0-128">Наконец, в коде используется метод <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> для удаления первого объекта из очереди и его возврата.</span><span class="sxs-lookup"><span data-stu-id="57ed0-128">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="57ed0-129">Этот пример кода является частью образца File Watcher Activity из пакета SDK (файл FileSystemEvent.cs).</span><span class="sxs-lookup"><span data-stu-id="57ed0-129">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="57ed0-130">Дополнительные сведения см. в разделе [активности наблюдателя файловой системы](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="57ed0-130">For more information, see [File System Watcher Activity](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57ed0-131">Очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> является пустой.</span><span class="sxs-lookup"><span data-stu-id="57ed0-131">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)"><span data-ttu-id="57ed0-132">Отслеживание активности файловой системы</span><span class="sxs-lookup"><span data-stu-id="57ed0-132">File System Watcher Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Workflow.Runtime.WorkflowQueue.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57ed0-133">Возвращает или задает значение, указывающее, включена ли очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-133">Gets or sets a value that specifies whether the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled.</span></span></summary>
        <value><span data-ttu-id="57ed0-134">Значение <see langword="true" />, если <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> включена; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-134"><see langword="true" /> if the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public void Enqueue (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enqueue(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enqueue (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enqueue(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.Enqueue : obj -&gt; unit" Usage="workflowQueue.Enqueue item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57ed0-135">Объект, добавляемый в коллекцию <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-135">The object to add to the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></param>
        <summary><span data-ttu-id="57ed0-136">Добавляет объект в конец очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-136">Adds an object to the end of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57ed0-137">Очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> не включена.</span><span class="sxs-lookup"><span data-stu-id="57ed0-137">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is not enabled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; obj" Usage="workflowQueue.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57ed0-138">Возвращает объект, находящийся в начале очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, но не удаляет его.</span><span class="sxs-lookup"><span data-stu-id="57ed0-138">Returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="57ed0-139">Объект, находящийся в начале <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-139">The object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57ed0-140">Этот метод аналогичен методу <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, однако метод <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> не вносит изменения в очередь <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-140">This method is similar to the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method, but <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> does not modify the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="57ed0-141">Можно проверить свойство <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>, чтобы определить, является ли очередь <xref:System.Workflow.Runtime.WorkflowQueue> пустой, перед вызовом метода <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, или перехватить исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-141">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57ed0-142">Очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> является пустой.</span><span class="sxs-lookup"><span data-stu-id="57ed0-142">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QueueItemArrived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemArrived As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemArrived;" />
      <MemberSignature Language="F#" Value="member this.QueueItemArrived : EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " Usage="member this.QueueItemArrived : System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57ed0-143">Происходит при доставке элемента в данную очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-143">Occurs when an item is delivered on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57ed0-144">Это событие используется только для обработки, которая должна происходить синхронно с доставкой события экземпляру рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="57ed0-144">This event is only used for processing that must occur synchronously with event delivery to the workflow instance.</span></span> <span data-ttu-id="57ed0-145">Обработчик событий может выполняться для потока, не принадлежащего рабочему процессу, поэтому доступ к общедоступным объектам рабочего процесса, например к объекту <xref:System.Workflow.ComponentModel.DependencyObject>, должен быть защищен.</span><span class="sxs-lookup"><span data-stu-id="57ed0-145">The event handler may execute on a non-workflow thread so access to any shared workflow object, for example, any <xref:System.Workflow.ComponentModel.DependencyObject>, must be protected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueItemAvailable">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemAvailable As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemAvailable;" />
      <MemberSignature Language="F#" Value="member this.QueueItemAvailable : EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " Usage="member this.QueueItemAvailable : System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57ed0-146">Возникает, если в данной очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> имеется доступный элемент.</span><span class="sxs-lookup"><span data-stu-id="57ed0-146">Occurs when an item is available on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57ed0-147">Событие <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> вызывается в асинхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="57ed0-147">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is raised in an asynchronous manner.</span></span> <span data-ttu-id="57ed0-148">Отправителем события <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> будет объект <xref:System.Workflow.ComponentModel.ActivityExecutionContext> подписки на действие <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-148">The sender for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event will be the <xref:System.Workflow.ComponentModel.ActivityExecutionContext> of the subscribing <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueName">
      <MemberSignature Language="C#" Value="public IComparable QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueueName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueName As IComparable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IComparable ^ QueueName { IComparable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueName : IComparable" Usage="System.Workflow.Runtime.WorkflowQueue.QueueName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57ed0-149">Возвращает имя очереди рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="57ed0-149">Gets the name of the workflow queue.</span></span></summary>
        <value><span data-ttu-id="57ed0-150">Имя <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-150">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57ed0-151">Имя очереди рабочего процесса задается методом <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-151">The name of the workflow queue is set by the <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuingService">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueuingService QueuingService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowQueuingService QueuingService" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueuingService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueuingService As WorkflowQueuingService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowQueuingService ^ QueuingService { System::Workflow::Runtime::WorkflowQueuingService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueuingService : System.Workflow.Runtime.WorkflowQueuingService" Usage="System.Workflow.Runtime.WorkflowQueue.QueuingService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueuingService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57ed0-152">Возвращает службу организации очереди, связанную с данной очередью <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-152">Gets the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <value><span data-ttu-id="57ed0-153">Объект <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" />, который представляет службу организации очереди, связанную с данной очередью <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-153">A <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> that represents the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemArrived : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.RegisterForQueueItemArrived eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="57ed0-154">Подписчик для объекта <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" />, который реализует интерфейс <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-154">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="57ed0-155">Регистрирует подписчик на событие <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-155">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForQueueItemAvailable">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57ed0-156">Регистрирует подписчик на событие <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-156">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57ed0-157">Можно использовать перегруженные методы <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> для регистрации подписчика на событие <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-157">You can use the overloaded <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> methods to register a subscriber for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event.</span></span> <span data-ttu-id="57ed0-158">Событие <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> используется для уведомления подписчиков о доставке элемента в данную очередь <xref:System.Workflow.Runtime.WorkflowQueue> (в асинхронном режиме).</span><span class="sxs-lookup"><span data-stu-id="57ed0-158">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is used to notify subscribers that an item has been delivered (in an asynchronous manner) to this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.RegisterForQueueItemAvailable eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="57ed0-159">Подписчик для объекта <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" />, который реализует интерфейс <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-159">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="57ed0-160">Регистрирует подписчик на событие <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-160">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57ed0-161">В следующем примере кода показано создание очереди <xref:System.Workflow.Runtime.WorkflowQueue> с помощью вызова метода <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-161">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="57ed0-162">В нем также используется метод <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> для регистрации указанного прослушивателя.</span><span class="sxs-lookup"><span data-stu-id="57ed0-162">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> to register the specified listener.</span></span>  
  
 <span data-ttu-id="57ed0-163">Этот пример кода является частью образца File Watcher Activity из пакета SDK (файл FileSystemEvent.cs).</span><span class="sxs-lookup"><span data-stu-id="57ed0-163">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="57ed0-164">Дополнительные сведения см. в разделе [активности наблюдателя файловой системы](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="57ed0-164">For more information, see [File System Watcher Activity](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#225](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#225)]
 [!code-vb[WF_Samples#225](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#225)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57ed0-165">Параметр <paramref name="eventListener" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="57ed0-165"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)"><span data-ttu-id="57ed0-166">Отслеживание активности файловой системы</span><span class="sxs-lookup"><span data-stu-id="57ed0-166">File System Watcher Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs), subscriberQualifiedName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener, System::String ^ subscriberQualifiedName);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; * string -&gt; unit" Usage="workflowQueue.RegisterForQueueItemAvailable (eventListener, subscriberQualifiedName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
        <Parameter Name="subscriberQualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="57ed0-167">Подписчик для объекта <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" />, который реализует интерфейс <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-167">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <param name="subscriberQualifiedName"><span data-ttu-id="57ed0-168">Свойство <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> действия, подписанного на событие <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />, или неопределенная ссылка (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="57ed0-168">The <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> of the activity that is subscribing to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event or a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="57ed0-169">Регистрирует подписчик на событие <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-169">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57ed0-170">Если полное имя подписанного действия предоставляется параметром `subscriberQualifiedName`, то оно возвращается в свойстве <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> объекта <xref:System.Workflow.Runtime.WorkflowQueueInfo>, связанного с данной очередью при вызове метода <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-170">If the qualified name of the subscribing activity is supplied by `subscriberQualifiedName`, it is returned in <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> of <xref:System.Workflow.Runtime.WorkflowQueueInfo> associated with this queue when <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57ed0-171">Параметр <paramref name="eventListener" /> является неопределенной ссылкой (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="57ed0-171"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.UnregisterForQueueItemArrived : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.UnregisterForQueueItemArrived eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="57ed0-172">Подписчик для объекта <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" />, который реализует интерфейс <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-172">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="57ed0-173">Отменяет регистрацию подписчика на событие <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-173">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57ed0-174">Этот метод зарезервирован для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="57ed0-174">This method is reserved for internal use only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57ed0-175">Параметр <paramref name="eventListener" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="57ed0-175"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.UnregisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.UnregisterForQueueItemAvailable eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="57ed0-176">Подписчик для объекта <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" />, который реализует интерфейс <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-176">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="57ed0-177">Отменяет регистрацию подписчика на событие <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />.</span><span class="sxs-lookup"><span data-stu-id="57ed0-177">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57ed0-178">В следующем примере кода показано создание очереди <xref:System.Workflow.Runtime.WorkflowQueue> с помощью вызова метода <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="57ed0-178">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="57ed0-179">В нем также используется метод <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> для отмены регистрации указанного прослушивателя.</span><span class="sxs-lookup"><span data-stu-id="57ed0-179">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> to unregister the specified listener.</span></span>  
  
 <span data-ttu-id="57ed0-180">Этот пример кода является частью образца File Watcher Activity из пакета SDK (файл FileSystemEvent.cs).</span><span class="sxs-lookup"><span data-stu-id="57ed0-180">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="57ed0-181">Дополнительные сведения см. в разделе [активности наблюдателя файловой системы](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="57ed0-181">For more information, see [File System Watcher Activity](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#226](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#226)]
 [!code-vb[WF_Samples#226](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#226)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57ed0-182">Параметр <paramref name="eventListener" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="57ed0-182"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)"><span data-ttu-id="57ed0-183">Отслеживание активности файловой системы</span><span class="sxs-lookup"><span data-stu-id="57ed0-183">File System Watcher Activity</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>