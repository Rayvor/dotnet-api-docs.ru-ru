<Type Name="WorkflowQueuingService" FullName="System.Workflow.Runtime.WorkflowQueuingService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="680017c296ff8f865cc984fcddf2073a4a201314" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64241108" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowQueuingService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueuingService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueuingService" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueuingService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueuingService" />
  <TypeSignature Language="F#" Value="type WorkflowQueuingService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет службы для управления объектами <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Служба <xref:System.Workflow.Runtime.WorkflowQueuingService> предоставляет методы, которые можно использовать для управления очередями рабочего процесса, связанными с экземпляром рабочего процесса.  
  
   
  
## Examples  
 В следующем примере кода показан метод с именем `CreateQueue`, инициализирующий службу <xref:System.Workflow.Runtime.WorkflowQueuingService>, вызывая метод <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>. Затем код использует метод <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A>, чтобы определить, существует ли очередь <xref:System.Workflow.Runtime.WorkflowQueue> с указанным именем. Если она не существует, то код вызывает метод <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>; в противном случае код вызывает метод <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>.  
  
 Этот пример кода является частью образца File Watcher Activity из пакета SDK (файл FileSystemEvent.cs). Дополнительные сведения см. в разделе [активности наблюдателя файловой системы](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)">Отслеживание активности файловой системы</related>
  </Docs>
  <Members>
    <Member MemberName="CreateWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue (IComparable queueName, bool transactional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue(class System.IComparable queueName, bool transactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(System.IComparable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflowQueue (queueName As IComparable, transactional As Boolean) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ CreateWorkflowQueue(IComparable ^ queueName, bool transactional);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflowQueue : IComparable * bool -&gt; System.Workflow.Runtime.WorkflowQueue" Usage="workflowQueuingService.CreateWorkflowQueue (queueName, transactional)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="transactional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="queueName">Имя очереди.</param>
        <param name="transactional">Значение, указывающее, видна ли очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> вне области текущей транзакции.</param>
        <summary>Создает очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, используя указанное имя и область транзакции.</summary>
        <returns>Объект <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создается очередь <xref:System.Workflow.Runtime.WorkflowQueue> с указанным именем `queueName`. Если параметр «transactional» имеет значение `true`, то очередь <xref:System.Workflow.Runtime.WorkflowQueue> видна только внутри текущей транзакции.  
  
   
  
## Examples  
 В следующем примере кода показан метод с именем `CreateQueue`, инициализирующий службу <xref:System.Workflow.Runtime.WorkflowQueuingService>, вызывая метод <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>. Затем код использует метод <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A>, чтобы определить, существует ли очередь <xref:System.Workflow.Runtime.WorkflowQueue> с указанным именем. Если она не существует, то код вызывает метод <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>; в противном случае код вызывает метод <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>.  
  
 Этот пример кода является частью образца File Watcher Activity из пакета SDK (файл FileSystemEvent.cs). Дополнительные сведения см. в разделе [активности наблюдателя файловой системы](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="queueName" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> с именем, указанным параметром <paramref name="queueName" />, уже существует.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)">Отслеживание активности файловой системы</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkflowQueue">
      <MemberSignature Language="C#" Value="public void DeleteWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteWorkflowQueue (queueName As IComparable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWorkflowQueue(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.DeleteWorkflowQueue : IComparable -&gt; unit" Usage="workflowQueuingService.DeleteWorkflowQueue queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Имя удаляемой очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</param>
        <summary>Удаляет указанную очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показан метод, который выводит на консоль строку и создает экземпляр службы <xref:System.Workflow.Runtime.WorkflowQueuingService>, вызывая метод <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>. Наконец, код вызывает метод <xref:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue%2A> для удаления очереди, связанной со свойством `QueueName` в текущем рабочем процессе.  
  
 Этот пример кода является частью образца File Watcher Activity из пакета SDK (файл FileSystemEvent.cs). Дополнительные сведения см. в разделе [активности наблюдателя файловой системы](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).  
  
 [!code-csharp[WF_Samples#224](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#224)]
 [!code-vb[WF_Samples#224](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#224)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="queueName" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)">Отслеживание активности файловой системы</related>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.Exists(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (queueName As IComparable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.Exists : IComparable -&gt; bool" Usage="workflowQueuingService.Exists queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Имя <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</param>
        <summary>Выполняет проверку существования указанной очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
        <returns>Значение <see langword="true" />, если очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> существует; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показан метод с именем `CreateQueue`, инициализирующий службу <xref:System.Workflow.Runtime.WorkflowQueuingService>, вызывая метод <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>. Затем код использует метод <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A>, чтобы определить, существует ли очередь <xref:System.Workflow.Runtime.WorkflowQueue> с указанным именем. Если она не существует, то код вызывает метод <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>; в противном случае код вызывает метод <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>.  
  
 Этот пример кода является частью образца File Watcher Activity из пакета SDK (файл FileSystemEvent.cs). Дополнительные сведения см. в разделе [активности наблюдателя файловой системы](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="queueName" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)">Отслеживание активности файловой системы</related>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueue (queueName As IComparable) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ GetWorkflowQueue(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueue : IComparable -&gt; System.Workflow.Runtime.WorkflowQueue" Usage="workflowQueuingService.GetWorkflowQueue queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Имя извлекаемого объекта <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</param>
        <summary>Получает указанный объект <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
        <returns>Объект <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показан метод с именем `CreateQueue`, инициализирующий службу <xref:System.Workflow.Runtime.WorkflowQueuingService>, вызывая метод <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>. Затем код использует метод <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A>, чтобы определить, существует ли очередь <xref:System.Workflow.Runtime.WorkflowQueue> с указанным именем. Если она не существует, то код вызывает метод <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>; в противном случае код вызывает метод <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>.  
  
 Этот пример кода является частью образца File Watcher Activity из пакета SDK (файл FileSystemEvent.cs). Дополнительные сведения см. в разделе [активности наблюдателя файловой системы](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="queueName" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Указанный объект <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> не найден.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)">Отслеживание активности файловой системы</related>
      </Docs>
    </Member>
    <Member MemberName="PendingMessagesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PendingMessagesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ PendingMessagesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PendingMessagesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Содержит неиспользованные элементы в очередях рабочего процесса, связанных с данной службой <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При успешном или преждевременном завершении выполнения экземпляра рабочего процесса все неиспользованные элементы в очередях его рабочего процесса, связанных с данной службой <xref:System.Workflow.Runtime.WorkflowQueuingService>, перемещаются в свойство <xref:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>