<Type Name="WorkflowInstance" FullName="System.Workflow.Runtime.WorkflowInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="637fd297a240ef6844493929bfdec6a41e588c83" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70544835" /></Metadata><TypeSignature Language="C#" Value="public sealed class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance sealed" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3269e-101">Представляет экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-101">Represents a workflow instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="3269e-102">Класс <xref:System.Workflow.Runtime.WorkflowInstance> предоставляет методы и свойства, которые можно использовать для управления выполнением экземпляра рабочего процесса; по сути, это прокси для фактического экземпляра рабочего процесса, используемого механизмом среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="3269e-102">The <xref:System.Workflow.Runtime.WorkflowInstance> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</span></span> <span data-ttu-id="3269e-103">Узел или служба могут предписать механизму среды выполнения рабочих процессов выполнить действия с экземпляром рабочего процесса, вызвав соответствующие методы, содержащиеся в классе <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-103">A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <xref:System.Workflow.Runtime.WorkflowInstance> class.</span></span>  <span data-ttu-id="3269e-104">Если запрашиваемое действие недопустимо, например, если узел вызывает метод <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> для экземпляра рабочего процесса, который уже завершен, то механизм среды выполнения рабочих процессов вызовет соответствующее исключение.</span><span class="sxs-lookup"><span data-stu-id="3269e-104">If the requested action is not valid, for example, if the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3269e-105">Если экземпляр рабочего процесса перестает отвечать из-за того, что вызов ведущего приложения не возвращается, то единственным способом восстановления этого экземпляра будет перезапуск среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="3269e-105">If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</span></span> <span data-ttu-id="3269e-106">Однако, если экземпляр был принудительно выгружен, прерван или приостановлен, то его выполнение можно продолжить, вызвав метод <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3269e-106">However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-107">В следующем примере кода показано создание и запуск экземпляра <xref:System.Workflow.Runtime.WorkflowInstance> в узле рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-107">The following code example demonstrates how you can create and start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="3269e-108">Код создает экземпляр <xref:System.Workflow.Runtime.WorkflowRuntime>, добавляет службы к среде выполнения, а затем рекомендуемым способом создает объект <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-108">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="3269e-109">Код инициализирует экземпляр <xref:System.Workflow.Runtime.WorkflowInstance>, вызывая метод <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> и передавая ему созданный ранее тип.</span><span class="sxs-lookup"><span data-stu-id="3269e-109">The code initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="3269e-110">Экземпляр <xref:System.Workflow.Runtime.WorkflowInstance> запускается вызовом метода <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-110">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="3269e-111">Данный пример кода является частью примера SDK «Canceling a Workflow» из файла Program.cs.</span><span class="sxs-lookup"><span data-stu-id="3269e-111">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="3269e-112">Дополнительные сведения см. [в разделе Отмена рабочего процесса](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="3269e-112">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="3269e-113">Данный тип потокобезопасен.</span><span class="sxs-lookup"><span data-stu-id="3269e-113">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="3269e-114">Отмена рабочего процесса</span><span class="sxs-lookup"><span data-stu-id="3269e-114">Canceling a Workflow</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="workflowInstance.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-115">Прерывает выполнение экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-115">Aborts the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-116">Выполнение экземпляра рабочего процесса прерывается в синхронном режиме; то есть после прерывания выполнения экземпляра рабочего процесса метод возвращает управление.</span><span class="sxs-lookup"><span data-stu-id="3269e-116">The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</span></span> <span data-ttu-id="3269e-117">Механизм среды выполнения рабочих процессов объявляет экземпляр рабочего процесса недействительным в памяти и очищает свойство <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-117">The workflow runtime engine invalidates the workflow instance in memory and clears the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="3269e-118">Если экземпляр рабочего процесса использовал службу сохраняемости, то все действия, выполненные с момента последнего сохранения, отбрасываются.</span><span class="sxs-lookup"><span data-stu-id="3269e-118">If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</span></span> <span data-ttu-id="3269e-119">После прерывания выполнения экземпляра рабочего процесса механизм среды выполнения рабочих процессов вызывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted>.</span><span class="sxs-lookup"><span data-stu-id="3269e-119">After it aborts the workflow instance, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> event.</span></span> <span data-ttu-id="3269e-120">Можно вызвать метод <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, чтобы заново загрузить экземпляр рабочего процесса и запустить его выполнение с последней точки сохранения.</span><span class="sxs-lookup"><span data-stu-id="3269e-120">You can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to reload the workflow instance and start from its last persistence point.</span></span>  
  
 <span data-ttu-id="3269e-121">Метод `Abort` отличается от метода <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> тем, что `Abort` просто удаляет из памяти экземпляр рабочего процесса, который впоследствии можно перезапустить с точки последнего сохранения, в то время как «Terminate» не только удаляет экземпляр рабочего процесса из памяти, но и уведомляет службу сохраняемости о том, что экземпляр удален.</span><span class="sxs-lookup"><span data-stu-id="3269e-121">`Abort` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> in that while `Abort` simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="3269e-122">Для службы <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> это означает, что все данные о состоянии данного экземпляра рабочего процесса удаляются из базы данных при его завершении.</span><span class="sxs-lookup"><span data-stu-id="3269e-122">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="3269e-123">Повторная загрузка экземпляра рабочего процесса с ранее сохраненной точки сохранения будет невозможна.</span><span class="sxs-lookup"><span data-stu-id="3269e-123">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-124">В следующем примере показан вызов метода Abort для экземпляра рабочего процесса типа Workflow1.</span><span class="sxs-lookup"><span data-stu-id="3269e-124">The following example demonstrates calling Abort on a workflow instance of type Workflow1.</span></span>  
  
 [!code-csharp[WF_Samples#13](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#13)]
 [!code-vb[WF_Samples#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-125">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-125">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorkflowChanges">
      <MemberSignature Language="C#" Value="public void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyWorkflowChanges(class System.Workflow.ComponentModel.WorkflowChanges workflowChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyWorkflowChanges(System::Workflow::ComponentModel::WorkflowChanges ^ workflowChanges);" />
      <MemberSignature Language="F#" Value="member this.ApplyWorkflowChanges : System.Workflow.ComponentModel.WorkflowChanges -&gt; unit" Usage="workflowInstance.ApplyWorkflowChanges workflowChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowChanges" Type="System.Workflow.ComponentModel.WorkflowChanges" />
      </Parameters>
      <Docs>
        <param name="workflowChanges"><span data-ttu-id="3269e-126">Объект <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />, задающий динамические обновления для экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-126">A <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> specifying dynamic updates for the workflow instance.</span></span></param>
        <summary><span data-ttu-id="3269e-127">Применяет к экземпляру рабочего процесса изменения, задаваемые объектом <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-127">Applies changes to the workflow instance specified by the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-128">Если экземпляр рабочего процесса еще не приостановлен, то механизм среды выполнения рабочих процессов временно приостанавливает выполнение экземпляра перед применением изменений.</span><span class="sxs-lookup"><span data-stu-id="3269e-128">If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-129">В следующем примере показан вызов метода ApplyWorkflowChanges для объекта <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-129">The following example demonstrates calling ApplyWorkflowChanges to a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  <span data-ttu-id="3269e-130">Это пример из образца пакета SDK «Ordering State Machine» из файла Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="3269e-130">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="3269e-131">Дополнительные сведения см. в [примере упорядочивания конечного автомата](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="3269e-131">For more information, see the [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#89](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#89)]
 [!code-vb[WF_Samples#89](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-132">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-132">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItem">
      <MemberSignature Language="C#" Value="public void EnqueueItem (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItem(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItem (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItem(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItem : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItem (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName"><span data-ttu-id="3269e-133">Имя <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-133">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></param>
        <param name="item"><span data-ttu-id="3269e-134">Объект для постановки в очередь.</span><span class="sxs-lookup"><span data-stu-id="3269e-134">The object to enqueue.</span></span></param>
        <param name="pendingWork"><span data-ttu-id="3269e-135">Интерфейс <see cref="T:System.Workflow.Runtime.IPendingWork" />, позволяющий отправителю получать уведомления при доставке элемента <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-135">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <paramref name="item" /> is delivered.</span></span></param>
        <param name="workItem"><span data-ttu-id="3269e-136">Объект, передаваемый в методы <see cref="T:System.Workflow.Runtime.IPendingWork" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-136">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span></span></param>
        <summary><span data-ttu-id="3269e-137">Синхронно отправляет сообщение в указанную очередь рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-137">Posts a message to the specified workflow queue synchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-138">Отправляет элемент `item` в указанную очередь <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="3269e-138">Sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="3269e-139">Если необходимо получать уведомления при доставке сообщений, то в службе можно реализовать интерфейс <xref:System.Workflow.Runtime.IPendingWork> и передавать элемент `workItem` и объект <xref:System.Workflow.Runtime.IPendingWork> в метод <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-139">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="3269e-140">Если такое уведомление не требуется, то можно передать неопределенную ссылку (`Nothing` в Visual Basic) в качестве параметров `pendingWork` и `workItem`.</span><span class="sxs-lookup"><span data-stu-id="3269e-140">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="3269e-141">При использовании этого метода с рабочим процессом конечного автомата можно получить исключение с сообщением: «Очередь '{0}' не включена».</span><span class="sxs-lookup"><span data-stu-id="3269e-141">When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="3269e-142">Это происходит, когда при текущем состоянии конечного автомата не известно, как обработать определенное событие.</span><span class="sxs-lookup"><span data-stu-id="3269e-142">This happens when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="3269e-143">Например, если какое-либо состояние, отличное от текущего, содержит действие <xref:System.Workflow.Activities.EventDrivenActivity>, содержащее действие <xref:System.Workflow.Activities.HandleExternalEventActivity>, которое представляется очередью "{0}".</span><span class="sxs-lookup"><span data-stu-id="3269e-143">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3269e-144">Порядок сообщений, получаемых экземпляром рабочего процесса, не обязательно будет соответствовать порядку, в котором они были отправлены.</span><span class="sxs-lookup"><span data-stu-id="3269e-144">Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</span></span> <span data-ttu-id="3269e-145">Например, если получение сообщения в существующей очереди (очередь A) приводит к тому, что рабочий процесс создает другую очередь (очередь B), которая затем ожидает другое сообщение, отправленное после первого, то есть вероятность, что второе сообщение поступит первым и не будет получено, так как его очередь еще не создана.</span><span class="sxs-lookup"><span data-stu-id="3269e-145">For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</span></span> <span data-ttu-id="3269e-146">Чтобы предотвратить эту проблему, не следует отправлять второе сообщение, пока не проверено наличие его очереди (с помощью метода <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span><span class="sxs-lookup"><span data-stu-id="3269e-146">To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-147">В следующем примере кода демонстрируется использование метода <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-147">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="3269e-148">При возникновении события <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> вызывается метод `OnWorkflowIdled`, определенный в этом примере.</span><span class="sxs-lookup"><span data-stu-id="3269e-148">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="3269e-149">Он определяет, какой рабочий процесс бездействует, используя свойство <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A>, а затем возвращает коллекцию элементов, находящихся в очереди экземпляра рабочего потока, вызывая метод <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-149">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="3269e-150">Код выполняет перебор элементов коллекции, чтобы определить, какое действие ожидает события, которое привело к бездействию рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-150">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="3269e-151">После этого он отправляет исключение в очередь рабочего процесса, используя метод <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> с именем элемента очереди событий.</span><span class="sxs-lookup"><span data-stu-id="3269e-151">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="3269e-152">Данный пример кода является частью примера SDK «Canceling a Workflow» из файла Program.cs.</span><span class="sxs-lookup"><span data-stu-id="3269e-152">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="3269e-153">Дополнительные сведения см. [в разделе Отмена рабочего процесса](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="3269e-153">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3269e-154">Параметр <paramref name="queueName" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3269e-154"><paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-155">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-155">The workflow runtime engine is not running.</span></span>  
  
<span data-ttu-id="3269e-156">- или -</span><span class="sxs-lookup"><span data-stu-id="3269e-156">-or-</span></span> 
<span data-ttu-id="3269e-157">Очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, заданная именем <paramref name="queueName" />, не существует.</span><span class="sxs-lookup"><span data-stu-id="3269e-157">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span></span>  
  
<span data-ttu-id="3269e-158">- или -</span><span class="sxs-lookup"><span data-stu-id="3269e-158">-or-</span></span> 
<span data-ttu-id="3269e-159">Очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, заданная именем <paramref name="queueName" />, не включена.</span><span class="sxs-lookup"><span data-stu-id="3269e-159">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="3269e-160">Отмена рабочего процесса</span><span class="sxs-lookup"><span data-stu-id="3269e-160">Canceling a Workflow</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItemOnIdle">
      <MemberSignature Language="C#" Value="public void EnqueueItemOnIdle (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItemOnIdle(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItemOnIdle (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItemOnIdle(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItemOnIdle : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItemOnIdle (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName"><span data-ttu-id="3269e-161">Имя <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-161">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></param>
        <param name="item"><span data-ttu-id="3269e-162">Объект для постановки в очередь.</span><span class="sxs-lookup"><span data-stu-id="3269e-162">The object to enqueue.</span></span></param>
        <param name="pendingWork"><span data-ttu-id="3269e-163">Интерфейс <see cref="T:System.Workflow.Runtime.IPendingWork" />, позволяющий отправителю получать уведомления при доставке элемента <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-163">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <paramref name="item" /> is delivered.</span></span></param>
        <param name="workItem"><span data-ttu-id="3269e-164">Объект, передаваемый в методы <see cref="T:System.Workflow.Runtime.IPendingWork" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-164">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span></span></param>
        <summary><span data-ttu-id="3269e-165">Отправляет сообщение в указанную очередь рабочего процесса, когда рабочий процесс находится в состоянии бездействия.</span><span class="sxs-lookup"><span data-stu-id="3269e-165">Posts a message to the specified workflow queue when the workflow is idle.</span></span> <span data-ttu-id="3269e-166">Метод <see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> ожидает перехода рабочего процесса в состояние бездействия и выполняет постановку в очередь после проверки на бездействие планировщика заданий рабочего процесса (то есть при отсутствии выполнения активных операций).</span><span class="sxs-lookup"><span data-stu-id="3269e-166"><see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-167">Ожидает, когда экземпляр рабочего процесса перейдет в состояние бездействия, а затем отправляет элемент `item` в указанную очередь <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="3269e-167">Waits for the workflow instance to become idle and then sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="3269e-168">Если вызвать метод <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A>, когда экземпляр рабочего процесса приостановлен, то механизм среды выполнения рабочих процессов вызовет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="3269e-168">If you call <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> while the workflow instance is suspended, the workflow runtime engine will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="3269e-169">Если необходимо получать уведомления при доставке сообщений, то в службе можно реализовать интерфейс <xref:System.Workflow.Runtime.IPendingWork> и передавать элемент `workItem` и объект <xref:System.Workflow.Runtime.IPendingWork> в метод <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-169">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="3269e-170">Если такое уведомление не требуется, то можно передать неопределенную ссылку (`Nothing` в Visual Basic) в качестве параметров `pendingWork` и `workItem`.</span><span class="sxs-lookup"><span data-stu-id="3269e-170">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="3269e-171">При использовании этого метода с рабочим процессом конечного автомата можно получить исключение с сообщением: «Очередь '{0}' не включена».</span><span class="sxs-lookup"><span data-stu-id="3269e-171">When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="3269e-172">Это происходит, когда текущее состояние конечного автомата не может обработать определенное событие.</span><span class="sxs-lookup"><span data-stu-id="3269e-172">This occurs when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="3269e-173">Например, если какое-либо состояние, отличное от текущего, содержит действие <xref:System.Workflow.Activities.EventDrivenActivity>, содержащее действие <xref:System.Workflow.Activities.HandleExternalEventActivity>, которое представляется очередью "{0}".</span><span class="sxs-lookup"><span data-stu-id="3269e-173">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-174">В следующем примере показана отправка данных экземпляру рабочего процесса с помощью метода `EnqueueItemOnIdle`.</span><span class="sxs-lookup"><span data-stu-id="3269e-174">The following example demonstrates sending information to a workflow instance using the `EnqueueItemOnIdle` method.</span></span> <span data-ttu-id="3269e-175">Сначала создается и запускается объект «WorkflowInstance»; затем создается объект, реализующий интерфейс <xref:System.Workflow.Runtime.IPendingWork>, и предоставляет ему контекст запроса.</span><span class="sxs-lookup"><span data-stu-id="3269e-175">First, a WorkflowInstance object is created and started; next, an object that implements the <xref:System.Workflow.Runtime.IPendingWork> interface is created.</span></span> <span data-ttu-id="3269e-176">`EnqueueItemOnIdle`Затем вызывается метод, передающий строковые значения для имени очереди, элемента, поставленного в очередь, и рабочего элемента, который передается методам объекта Пендингворк.</span><span class="sxs-lookup"><span data-stu-id="3269e-176">`EnqueueItemOnIdle` is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</span></span>  
  
 [!code-csharp[WF_Samples#12](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#12)]
 [!code-vb[WF_Samples#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3269e-177">Параметр <paramref name="queueName" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3269e-177"><paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-178">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-178">The workflow runtime engine is not running.</span></span>  
  
<span data-ttu-id="3269e-179">- или -</span><span class="sxs-lookup"><span data-stu-id="3269e-179">-or-</span></span> 
<span data-ttu-id="3269e-180">Выполнение экземпляра рабочего процесса приостановлено.</span><span class="sxs-lookup"><span data-stu-id="3269e-180">The workflow instance is suspended.</span></span>  
  
<span data-ttu-id="3269e-181">-или-</span><span class="sxs-lookup"><span data-stu-id="3269e-181">-or-</span></span> 
<span data-ttu-id="3269e-182">Очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, заданная именем <paramref name="queueName" />, не существует.</span><span class="sxs-lookup"><span data-stu-id="3269e-182">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span></span>  
  
<span data-ttu-id="3269e-183">-или-</span><span class="sxs-lookup"><span data-stu-id="3269e-183">-or-</span></span> 
<span data-ttu-id="3269e-184">Очередь <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, заданная именем <paramref name="queueName" />, не включена.</span><span class="sxs-lookup"><span data-stu-id="3269e-184">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="workflowInstance.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3269e-185">Объект для сравнения.</span><span class="sxs-lookup"><span data-stu-id="3269e-185">The object to compare.</span></span></param>
        <summary><span data-ttu-id="3269e-186">Возвращает значение, указывающее, совпадает ли указанный объект с экземпляром <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-186">Returns a value that indicates whether the specified object is equal to the <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span></span></summary>
        <returns><span data-ttu-id="3269e-187">Значение <see langword="true" />, если заданный объект совпадает с этим экземпляром <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-187"><see langword="true" /> if the specified object is equal to this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-188">Объект должен быть экземпляром класса <xref:System.Workflow.Runtime.WorkflowInstance> и иметь свойство <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>, совпадающее с данным экземпляром <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-188">The object must be an instance of the <xref:System.Workflow.Runtime.WorkflowInstance> class and have the same <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> as this <xref:System.Workflow.Runtime.WorkflowInstance>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="workflowInstance.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-189">Возвращает хэш-код данного экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-189">Returns the hash code for this workflow instance.</span></span></summary>
        <returns><span data-ttu-id="3269e-190">Хэш-код для этого экземпляра <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-190">The hash code for this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-191">Метод <xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> возвращает хэш-код, основанный на значении свойства <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> returns a hash code based on the value of <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetWorkflowDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetWorkflowDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowDefinition () As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetWorkflowDefinition();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowDefinition : unit -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowInstance.GetWorkflowDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-192">Возвращает корневое действие экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-192">Retrieves the root activity for this workflow instance.</span></span></summary>
        <returns><span data-ttu-id="3269e-193">Объект <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-193">An <see cref="T:System.Workflow.ComponentModel.Activity" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-194">Корневое действие можно использовать для переходов по иерархии действий рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-194">You can use the root activity to navigate the activity hierarchy of the workflow.</span></span>  
  
 <span data-ttu-id="3269e-195">Этот метод не является потокобезопасным, поэтому узел должен синхронизировать свои вызовы с этим методом.</span><span class="sxs-lookup"><span data-stu-id="3269e-195">This method is not thread safe, so the host should synchronize its calls to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-196">В следующем примере показано извлечение определения рабочего процесса из его экземпляра.</span><span class="sxs-lookup"><span data-stu-id="3269e-196">The following example demonstrates retrieving the workflow definition from a workflow instance.</span></span>  <span data-ttu-id="3269e-197">Это пример из образца пакета SDK «Ordering State Machine» из файла Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="3269e-197">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="3269e-198">Дополнительные сведения см. в [примере упорядочивания конечного автомата](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="3269e-198">For more information, see the [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#86](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#86)]
 [!code-vb[WF_Samples#86](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowNextTimerExpiration">
      <MemberSignature Language="C#" Value="public DateTime GetWorkflowNextTimerExpiration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetWorkflowNextTimerExpiration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowNextTimerExpiration () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetWorkflowNextTimerExpiration();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowNextTimerExpiration : unit -&gt; DateTime" Usage="workflowInstance.GetWorkflowNextTimerExpiration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-199">Возвращает следующий момент времени, который запланирован для доставки сообщения таймера данному экземпляру <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-199">Returns the next point in time that this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> is scheduled to be delivered a timer message.</span></span></summary>
        <returns><span data-ttu-id="3269e-200">Значение DateTime представляет следующий момент времени <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" />, когда данному экземпляру <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> будет доставлено сообщение таймера.</span><span class="sxs-lookup"><span data-stu-id="3269e-200">A DateTime value that represents the next <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> time this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> will be delivered a timer message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3269e-201">В следующем примере показано использование метода <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> для проверки наличия других сообщений таймера рабочего процесса в очереди.</span><span class="sxs-lookup"><span data-stu-id="3269e-201">The following example demonstrates using the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> method to determine if more workflow timer messages are enqueued.</span></span> <span data-ttu-id="3269e-202">Это пример из образца пакета SDK «WorkflowThreading» из файла Program.cs.</span><span class="sxs-lookup"><span data-stu-id="3269e-202">This example is from the WorkflowThreading SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="3269e-203">Дополнительные сведения см. в разделе [Пример потоков рабочих процессов](https://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span><span class="sxs-lookup"><span data-stu-id="3269e-203">For more information, see [Workflow Threading Sample](https://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span></span>  
  
 [!code-csharp[WF_Samples#284](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#284)]
 [!code-vb[WF_Samples#284](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#284)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Workflow.Runtime.TimerEventSubscription" />
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueueData">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueueData () As ReadOnlyCollection(Of WorkflowQueueInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowQueueInfo ^&gt; ^ GetWorkflowQueueData();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueueData : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;" Usage="workflowInstance.GetWorkflowQueueData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-204">Возвращает коллекцию объектов <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" />, которая содержит ожидающие элементы и подписанные действия для очередей рабочего процесса, связанных с данным экземпляром рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-204">Gets a collection of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</span></span></summary>
        <returns><span data-ttu-id="3269e-205">Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-205">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> возвращает коллекцию объектов <xref:System.Workflow.Runtime.WorkflowQueueInfo>, каждый из которых содержит сведения о состоянии одной из очередей рабочего процесса, связанных с данным экземпляром рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> returns a collection of <xref:System.Workflow.Runtime.WorkflowQueueInfo> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</span></span> <span data-ttu-id="3269e-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> содержит ожидающие элементы для <xref:System.Workflow.Runtime.WorkflowQueue>, а <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> содержит список действий, подписанных на доставку элементов для <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="3269e-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> contains the pending items for a <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> contains a list of the activities that are subscribed for item delivery on a <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-208">В следующем примере кода показано использование метода <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> для получения данных о состоянии всех очередей рабочего процесса, связанных с объектом <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-208">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method to obtain information about the state of all workflow queues associated with a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="3269e-209">При возникновении события <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> вызывается метод `OnWorkflowIdled`, определенный в этом примере.</span><span class="sxs-lookup"><span data-stu-id="3269e-209">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="3269e-210">Он определяет, какой рабочий процесс бездействует, используя свойство <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A>, а затем возвращает коллекцию элементов, находящихся в очереди экземпляра рабочего потока, вызывая метод <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-210">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="3269e-211">Код выполняет перебор элементов коллекции, чтобы определить, какое действие ожидает события, которое привело к бездействию рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-211">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="3269e-212">После этого он отправляет исключение в очередь рабочего процесса, используя метод <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> с именем элемента очереди событий.</span><span class="sxs-lookup"><span data-stu-id="3269e-212">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="3269e-213">Данный пример кода является частью примера SDK «Canceling a Workflow» из файла Program.cs.</span><span class="sxs-lookup"><span data-stu-id="3269e-213">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="3269e-214">Дополнительные сведения см. [в разделе Отмена рабочего процесса](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="3269e-214">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-215">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-215">The workflow runtime engine is not running.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="3269e-216">Отмена рабочего процесса</span><span class="sxs-lookup"><span data-stu-id="3269e-216">Canceling a Workflow</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid" Usage="System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3269e-217">Возвращает уникальный идентификатор экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-217">Gets the unique identifier for the workflow instance.</span></span></summary>
        <value><span data-ttu-id="3269e-218">Тип <see cref="T:System.Guid" /> экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-218">The <see cref="T:System.Guid" /> of the workflow instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-219">Для ссылки на экземпляр рабочего процесса можно использовать свойство <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-219">You can use <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> to reference the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-220">В следующем примере кода показано использование свойства <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> для получения сведений об объекте <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-220">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property to obtain information about a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="3269e-221">Первый фрагмент кода создает переменную <xref:System.Workflow.Runtime.WorkflowInstance> с именем `instanceId`.</span><span class="sxs-lookup"><span data-stu-id="3269e-221">The first code snippet creates a <xref:System.Workflow.Runtime.WorkflowInstance> variable named `instanceId`.</span></span>  
  
 [!code-csharp[WF_Samples#210](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#210)]
 [!code-vb[WF_Samples#210](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#210)]  
  
 <span data-ttu-id="3269e-222">Второй фрагмент использует свойство <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>, как первый объект при вызове конструктора `OrderEventArgs`, когда вызывается метод `CallBackForApproval`.</span><span class="sxs-lookup"><span data-stu-id="3269e-222">The second snippet uses the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property as the first object in an `OrderEventArgs` constructor call when the `CallBackForApproval` method is called.</span></span>  
  
 <span data-ttu-id="3269e-223">Данный пример кода является частью образца пакета SDK Listen из файла OrderServiceImple.cs.</span><span class="sxs-lookup"><span data-stu-id="3269e-223">This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</span></span> <span data-ttu-id="3269e-224">Дополнительные сведения см. в разделе [Пример прослушивания](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="3269e-224">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#211](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#211)]
 [!code-vb[WF_Samples#211](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#211)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)"><span data-ttu-id="3269e-225">Пример. Прослушивание</span><span class="sxs-lookup"><span data-stu-id="3269e-225">Listen Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="workflowInstance.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-226">Загружает ранее выгруженный экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-226">Loads a previously unloaded workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-227">Метод <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> является синхронным; если загрузка экземпляра рабочего процесса возможна, то после его загрузки в память и включения в план выполнения механизмом среды выполнения рабочих процессов метод <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> возвращает управление.</span><span class="sxs-lookup"><span data-stu-id="3269e-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is synchronous; if the workflow instance can be loaded, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</span></span> <span data-ttu-id="3269e-228">Среда выполнения создает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> после того, как служба сохраняемости восстанавливает экземпляр рабочего процесса в памяти, но до того, как механизм среды выполнения рабочих процессов включит этот экземпляр в план выполнения.</span><span class="sxs-lookup"><span data-stu-id="3269e-228">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-229">В следующем примере показана загрузка ранее выгруженного объекта <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-229">The following example demonstrates how to load a previously unloaded <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#10](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#10)]
 [!code-vb[WF_Samples#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-230">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-230">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReloadTrackingProfiles">
      <MemberSignature Language="C#" Value="public void ReloadTrackingProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReloadTrackingProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadTrackingProfiles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadTrackingProfiles();" />
      <MemberSignature Language="F#" Value="member this.ReloadTrackingProfiles : unit -&gt; unit" Usage="workflowInstance.ReloadTrackingProfiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-231">Перезагрузите профили отслеживания для данного экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-231">Reload the tracking profiles for this workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-232">Инфраструктура отслеживания среды выполнения перезагрузит все профили <xref:System.Workflow.Runtime.Tracking.TrackingProfile> для данного экземпляра рабочего процесса, связанные с ее каналами отслеживания.</span><span class="sxs-lookup"><span data-stu-id="3269e-232">The runtime tracking infrastructure will reload each <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for this workflow instance associated with its tracking channels.</span></span> <span data-ttu-id="3269e-233">Если рабочий процесс не находится в приостановленном состоянии, то при повторной загрузке профилей отслеживания инфраструктура отслеживания среды выполнения временно приостанавливает его.</span><span class="sxs-lookup"><span data-stu-id="3269e-233">If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-234">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-234">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="workflowInstance.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-235">Возобновляет выполнение ранее приостановленного экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-235">Resumes execution of a previously suspended workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-236">Узел может вызвать метод <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> для возобновления выполнения экземпляра рабочего процесса, который был ранее приостановлен.</span><span class="sxs-lookup"><span data-stu-id="3269e-236">The host can call <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> to resume execution of a workflow instance that has been previously suspended.</span></span> <span data-ttu-id="3269e-237">Если экземпляр рабочего процесса не находится в приостановленном состоянии, то никакие действия не выполняются.</span><span class="sxs-lookup"><span data-stu-id="3269e-237">If the workflow instance is not in the suspended state, no action is taken.</span></span> <span data-ttu-id="3269e-238">Среда выполнения вызывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> непосредственно перед возобновлением выполнения экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-238">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before execution of the workflow instance is resumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-239">В следующем примере показан вызов метода Resume для ранее приостановленного экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-239">The following example demonstrates calling Resume on a previously suspended workflow instance.</span></span>  <span data-ttu-id="3269e-240">Данный пример является частью образца пакета SDK «Suspend and Terminate».</span><span class="sxs-lookup"><span data-stu-id="3269e-240">This example is from the Suspend and Terminate SDK sample.</span></span>  <span data-ttu-id="3269e-241">Дополнительные сведения см. в разделе [Пример приостановки и завершения](https://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517)работы.</span><span class="sxs-lookup"><span data-stu-id="3269e-241">For more information, see [Suspend and Terminate Sample](https://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span></span>  
  
 [!code-csharp[WF_Samples#172](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#172)]
 [!code-vb[WF_Samples#172](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#172)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-242">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-242">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="workflowInstance.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-243">Запускает выполнение экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-243">Starts the execution of the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-244">Метод <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> вызывает метод <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> для корневого действия данного экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> calls <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> on the root activity of this workflow instance.</span></span> <span data-ttu-id="3269e-245">Если в методе <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> возникает исключение, то он завершает выполнение экземпляра рабочего процесса, вызывая метод <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> со свойством <xref:System.Exception.Message%2A> исключения, переданным в качестве причины завершения.</span><span class="sxs-lookup"><span data-stu-id="3269e-245">If <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> encounters an exception, it terminates the workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> with the <xref:System.Exception.Message%2A> property of the exception passed as the reason for the termination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-246">В следующем примере кода показано использование метода <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> для запуска экземпляра <xref:System.Workflow.Runtime.WorkflowInstance> в узле рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-246">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method to start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="3269e-247">Код создает экземпляр <xref:System.Workflow.Runtime.WorkflowRuntime>, добавляет службы к среде выполнения, а затем рекомендуемым способом создает объект <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-247">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="3269e-248">Он создает объект типа <xref:System.Type> и приводит его к одному из объектов рабочего процесса, с которым связан узел.</span><span class="sxs-lookup"><span data-stu-id="3269e-248">It creates a <xref:System.Type> object and casts it to one of the workflow objects with which the host is associated.</span></span> <span data-ttu-id="3269e-249">Затем код инициализирует экземпляр <xref:System.Workflow.Runtime.WorkflowInstance>, вызывая метод <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> и передавая ему созданный ранее тип.</span><span class="sxs-lookup"><span data-stu-id="3269e-249">The code next initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="3269e-250">Экземпляр <xref:System.Workflow.Runtime.WorkflowInstance> запускается вызовом метода <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-250">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="3269e-251">Данный пример кода является частью примера SDK «Canceling a Workflow» из файла Program.cs.</span><span class="sxs-lookup"><span data-stu-id="3269e-251">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="3269e-252">Дополнительные сведения см. [в разделе Отмена рабочего процесса](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="3269e-252">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-253">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-253">The workflow runtime engine is not running.</span></span>  
  
 <span data-ttu-id="3269e-254">- или -</span><span class="sxs-lookup"><span data-stu-id="3269e-254">-or-</span></span>  
  
 <span data-ttu-id="3269e-255">Экземпляр рабочего процесса уже запущен.</span><span class="sxs-lookup"><span data-stu-id="3269e-255">The workflow instance has already been started.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="3269e-256">Отмена рабочего процесса</span><span class="sxs-lookup"><span data-stu-id="3269e-256">Canceling a Workflow</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Suspend (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Suspend(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Suspend : string -&gt; unit" Usage="workflowInstance.Suspend error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="3269e-257">Описание причины приостановки выполнения экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-257">A description of the reason for suspending the workflow instance.</span></span></param>
        <summary><span data-ttu-id="3269e-258">Приостанавливает выполнение экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-258">Suspends the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-259">Экземпляр рабочего процесса приостановлен в синхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="3269e-259">The workflow instance is suspended in a synchronous manner.</span></span> <span data-ttu-id="3269e-260">Если экземпляр рабочего процесса уже приостановлен, то никакие действия не выполняются; в противном случае механизм среды выполнения рабочих процессов приостанавливает экземпляр рабочего процесса, вызывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> и передает причину `reason` в аргументах <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3269e-260">If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event and passes `reason` in a <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3269e-261">Метод <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> не выгружает экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> does not unload the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-262">В следующем примере кода показан вызов метода Suspend для объекта <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-262">The following code example demonstrates calling Suspend on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#9](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#9)]
 [!code-vb[WF_Samples#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-263">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-263">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowInstance.Terminate error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="3269e-264">Описание причины завершения выполнения экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-264">A description of the reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="3269e-265">Завершает выполнение экземпляра рабочего процесса в синхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="3269e-265">Terminates the workflow instance in a synchronous manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-266">Выполнение экземпляра рабочего процесса завершено в синхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="3269e-266">The workflow instance is terminated in a synchronous manner.</span></span> <span data-ttu-id="3269e-267">Узел вызывает метод <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> для завершения выполнения экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-267">The host calls <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> to terminate the workflow instance.</span></span> <span data-ttu-id="3269e-268">Механизм среды выполнения рабочих процессов удаляет экземпляр рабочего процесса из памяти и уведомляет службу сохраняемости о том, что экземпляр удален.</span><span class="sxs-lookup"><span data-stu-id="3269e-268">The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="3269e-269">Для службы <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> это означает, что все данные о состоянии данного экземпляра рабочего процесса удаляются из базы данных при его завершении.</span><span class="sxs-lookup"><span data-stu-id="3269e-269">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="3269e-270">Повторная загрузка экземпляра рабочего процесса с ранее сохраненной точки сохранения будет невозможна.</span><span class="sxs-lookup"><span data-stu-id="3269e-270">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
 <span data-ttu-id="3269e-271">После удаления экземпляра рабочего процесса из памяти и уведомления службы сохраняемости о завершении, метод `Terminate` вызывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> и передает причину `reason` в свойство <xref:System.Exception.Message%2A> объекта <xref:System.Workflow.ComponentModel.WorkflowTerminatedException>, содержащегося в аргументах <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3269e-271">After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the `Terminate` method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event and passes `reason` in the <xref:System.Exception.Message%2A> property of a <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> contained in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span></span>  
  
 <span data-ttu-id="3269e-272">Метод `Terminate` отличается от метода <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> тем, что «Terminate» не только удаляет экземпляр рабочего процесса из памяти, но и уведомляет службу сохраняемости о завершении, в то время как `Abort` просто удаляет из памяти экземпляр рабочего процесса, который впоследствии можно перезапустить с точки последнего сохранения.</span><span class="sxs-lookup"><span data-stu-id="3269e-272">`Terminate` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, `Abort` simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-273">В следующем примере кода показан вызов метода Terminate для объекта <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-273">The following code example demonstrates calling Terminate on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#8](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#8)]
 [!code-vb[WF_Samples#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-274">Механизм среды выполнения рабочих процессов не работает.</span><span class="sxs-lookup"><span data-stu-id="3269e-274">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryUnload">
      <MemberSignature Language="C#" Value="public bool TryUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.TryUnload" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUnload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUnload();" />
      <MemberSignature Language="F#" Value="member this.TryUnload : unit -&gt; bool" Usage="workflowInstance.TryUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-275">Выгружает экземпляр рабочего процесса из памяти в хранилище сохраняемости, если он приостановлен или бездействует.</span><span class="sxs-lookup"><span data-stu-id="3269e-275">Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</span></span></summary>
        <returns><span data-ttu-id="3269e-276">Значение <see langword="true" />, если экземпляр рабочего процесса выгружен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3269e-276"><see langword="true" /> if the workflow instance was unloaded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-277">Если экземпляр рабочего процесса приостановлен или бездействует, то метод <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> использует службу сохраняемости для его удаления из памяти и сохранения в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="3269e-277">If the workflow instance is idle or suspended, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</span></span> <span data-ttu-id="3269e-278">Если служба сохраняемости, зарегистрированная объектом <xref:System.Workflow.Runtime.WorkflowRuntime>, отсутствует, то метод <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="3269e-278">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="3269e-279">Если экземпляр рабочего процесса успешно сохранен, среда выполнения создает <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> событие и возвращает. `true`</span><span class="sxs-lookup"><span data-stu-id="3269e-279">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event, and returns `true`.</span></span> <span data-ttu-id="3269e-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>Возвращает `false` значение, если экземпляр рабочего процесса уже выгружен, был завершен, был прерван или уже завершен.</span><span class="sxs-lookup"><span data-stu-id="3269e-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> returns `false` if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</span></span>  
  
 <span data-ttu-id="3269e-281">Узел может использовать метод <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> для освобождения системных ресурсов бездействующего рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-281">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-282">В следующем примере показано использование метода «TryUnload» для выгрузки рабочего процесса при возникновении события <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>.</span><span class="sxs-lookup"><span data-stu-id="3269e-282">The following example demonstrates using the TryUnload method to unload a workflow when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event fires.</span></span> <span data-ttu-id="3269e-283">Данный пример является частью образца пакета SDK «Using Persistence Services» из файла Program.cs.</span><span class="sxs-lookup"><span data-stu-id="3269e-283">This example is from the Using Persistence Services SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="3269e-284">Дополнительные сведения см. [в разделе Использование служб сохраняемости](https://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span><span class="sxs-lookup"><span data-stu-id="3269e-284">For more information, see [Using Persistence Services Sample](https://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span></span>  
  
 [!code-csharp[WF_Samples#280](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#280)]
 [!code-vb[WF_Samples#280](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#280)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-285">Отсутствует служба сохраняемости, зарегистрированная механизмом среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="3269e-285">There is no persistence service registered with the workflow runtime engine.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowInstance.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3269e-286">Выгружает экземпляр рабочего процесса из памяти в хранилище сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="3269e-286">Unloads the workflow instance from memory to the persistence store.</span></span> <span data-ttu-id="3269e-287">Этот вызов блокируется до завершения текущих запланированных заданий или до окончания области транзакции.</span><span class="sxs-lookup"><span data-stu-id="3269e-287">This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3269e-288">Метод <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> является синхронным, то есть после завершения выполняемых действий он возвращает управление.</span><span class="sxs-lookup"><span data-stu-id="3269e-288"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> is synchronous; that is, it returns after completing any action that it performs.</span></span> <span data-ttu-id="3269e-289">Если экземпляр рабочего процесса не бездействует, то среда выполнения будет ожидать возможности его прерывания.</span><span class="sxs-lookup"><span data-stu-id="3269e-289">If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</span></span> <span data-ttu-id="3269e-290">Экземпляр может быть прерван только после завершения текущей запланированной работы; обычно это происходит, когда выполняемое действие возвращает управление из своего метода <xref:System.Workflow.ComponentModel.Activity.Execute%2A>.</span><span class="sxs-lookup"><span data-stu-id="3269e-290">An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <xref:System.Workflow.ComponentModel.Activity.Execute%2A> method.</span></span> <span data-ttu-id="3269e-291">Однако, если экземпляр выполняет действие <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, то область транзакции должна завершить выполнение перед тем, как экземпляр сможет быть прерван.</span><span class="sxs-lookup"><span data-stu-id="3269e-291">However, if the instance is executing a <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, the transaction scope must complete execution before the instance can be interrupted.</span></span> <span data-ttu-id="3269e-292">После этого метод «Unload» использует службу сохраняемости для удаления экземпляра рабочего процесса из памяти и сохраняет его в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="3269e-292">Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</span></span> <span data-ttu-id="3269e-293">Если служба сохраняемости, зарегистрированная объектом <xref:System.Workflow.Runtime.WorkflowRuntime>, отсутствует, то метод <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="3269e-293">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="3269e-294">Если экземпляр рабочего процесса сохранен успешно, то среда выполнения вызывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>.</span><span class="sxs-lookup"><span data-stu-id="3269e-294">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="3269e-295">Узел может использовать метод <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> для освобождения системных ресурсов бездействующего рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-295">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3269e-296">В следующем примере показан вызов метода <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> для объекта <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-296">The following example demonstrates calling <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#11](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#11)]
 [!code-vb[WF_Samples#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3269e-297">Отсутствует служба сохраняемости, зарегистрированная механизмом среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="3269e-297">There is no persistence service registered with the workflow runtime engine.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowRuntime">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowRuntime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ WorkflowRuntime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowRuntime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3269e-298">Возвращает объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> для данного экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-298">Gets the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> for this workflow instance.</span></span></summary>
        <value><span data-ttu-id="3269e-299">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />, представляющий среду выполнения, в которой работает данный экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="3269e-299">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that represents the execution environment in which this workflow instance is running.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3269e-300">В следующем примере показано обращение к выполнению объекта <xref:System.Workflow.Runtime.WorkflowRuntime> объекта <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="3269e-300">The following example demonstrates accessing the executing <xref:System.Workflow.Runtime.WorkflowRuntime> of a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#7](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#7)]
 [!code-vb[WF_Samples#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
