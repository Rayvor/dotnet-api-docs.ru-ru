<Type Name="WorkflowRuntime" FullName="System.Workflow.Runtime.WorkflowRuntime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53f0790eebeb1af07e9cfe1a269fdcf7309c5726" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70704529" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowRuntime : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WorkflowRuntime extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowRuntime" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowRuntime&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntime : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type WorkflowRuntime = class&#xA;    interface IServiceProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eebae-101">Представляет настраиваемую среду выполнения, обеспечиваемую механизмом среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-101">Represents the configurable execution environment provided by the workflow run-time engine for workflows.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="eebae-102">Класс <xref:System.Workflow.Runtime.WorkflowRuntime> предоставляет функции, которые требуются ведущему приложению и службам для настройки и управления механизмом среды выполнения рабочих процессов и для получения уведомлений об изменениях механизма среды выполнения рабочих процессов и всех экземпляров его рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-102"><xref:System.Workflow.Runtime.WorkflowRuntime> exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-103">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-103">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-104">Он содержит примеры использования конструктора <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> и методов <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> и <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-104">It provides examples of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor and the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, and <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> methods.</span></span> <span data-ttu-id="eebae-105">Код также демонстрирует метод, рекомендуемый для создания объекта <xref:System.Workflow.Runtime.WorkflowInstance> в узле рабочего процесса с помощью метода <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-105">The code also shows the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method.</span></span> <span data-ttu-id="eebae-106">В нем также показано задание обработчиков для событий <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> и <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated>.</span><span class="sxs-lookup"><span data-stu-id="eebae-106">It also shows how to set event handlers for the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, and <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events.</span></span>  
  
 <span data-ttu-id="eebae-107">Этот пример кода является частью примера [отмены рабочего процесса](https://go.microsoft.com/fwlink/?LinkID=157346) .</span><span class="sxs-lookup"><span data-stu-id="eebae-107">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="eebae-108">Данный тип потокобезопасен.</span><span class="sxs-lookup"><span data-stu-id="eebae-108">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eebae-109">Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-109">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eebae-110">Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-110">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-111">Объект <xref:System.Workflow.Runtime.WorkflowRuntime> инициализируется со значениями свойств по умолчанию и содержит базовые службы по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="eebae-111">The <xref:System.Workflow.Runtime.WorkflowRuntime> is initialized with the default property values and contains the default core services.</span></span> <span data-ttu-id="eebae-112">Для дополнительной настройки механизма среды выполнения рабочих процессов можно добавлять и удалять службы с помощью методов <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> и <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>; также можно задать свойство <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-112">To additionally configure the workflow run-time engine, you can add and remove services by using <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> and <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>, and you can set <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</span></span> <span data-ttu-id="eebae-113">После настройки объекта <xref:System.Workflow.Runtime.WorkflowRuntime> вызовите метод <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, чтобы запустить механизм среды выполнения рабочих процессов и его службы.</span><span class="sxs-lookup"><span data-stu-id="eebae-113">After the <xref:System.Workflow.Runtime.WorkflowRuntime> is configured, call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> to start the workflow run-time engine and its services.</span></span>  
  
 <span data-ttu-id="eebae-114">В следующей таблице представлены начальные значения свойств для экземпляра класса <xref:System.Workflow.Runtime.WorkflowRuntime>.</span><span class="sxs-lookup"><span data-stu-id="eebae-114">The following table shows initial property values for an instance of <xref:System.Workflow.Runtime.WorkflowRuntime> class.</span></span>  
  
|<span data-ttu-id="eebae-115">Свойство.</span><span class="sxs-lookup"><span data-stu-id="eebae-115">Property</span></span>|<span data-ttu-id="eebae-116">Начальное значение</span><span class="sxs-lookup"><span data-stu-id="eebae-116">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>|<span data-ttu-id="eebae-117">«WorkflowRuntime»</span><span class="sxs-lookup"><span data-stu-id="eebae-117">"WorkflowRuntime"</span></span>|  
|<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>|`false`|  
  
 <span data-ttu-id="eebae-118">Базовыми службами по умолчанию являются: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> и <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</span><span class="sxs-lookup"><span data-stu-id="eebae-118">The default core services are <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> and <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-119">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-119">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-120">Он содержит пример использования конструктора <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> для создания экземпляра класса <xref:System.Workflow.Runtime.WorkflowRuntime> и доступа к его методам и событиям.</span><span class="sxs-lookup"><span data-stu-id="eebae-120">It provides an example of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor to create an instance of a <xref:System.Workflow.Runtime.WorkflowRuntime> and access its methods and events.</span></span>  
  
 <span data-ttu-id="eebae-121">Этот пример кода является частью примера [отмены рабочего процесса](https://go.microsoft.com/fwlink/?LinkID=157346) .</span><span class="sxs-lookup"><span data-stu-id="eebae-121">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime (string configSectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configSectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configSectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime(System::String ^ configSectionName);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.WorkflowRuntime : string -&gt; System.Workflow.Runtime.WorkflowRuntime" Usage="new System.Workflow.Runtime.WorkflowRuntime configSectionName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configSectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configSectionName"><span data-ttu-id="eebae-122">Имя допустимого раздела <see langword="workflowSettings" /> в файле конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="eebae-122">The name of a valid <see langword="workflowSettings" /> section in the application configuration file.</span></span></param>
        <summary><span data-ttu-id="eebae-123">Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />, используя указанный раздел файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="eebae-123">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the specified section of the application configuration file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-124">Объект <xref:System.Workflow.Runtime.WorkflowRuntime> инициализируется в соответствии с настройками в разделе, указанном параметром `configSectionName` в файле конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="eebae-124">The <xref:System.Workflow.Runtime.WorkflowRuntime> is initialized according to the settings in the section specified by `configSectionName` in the application configuration file.</span></span> <span data-ttu-id="eebae-125">`configSectionName`должен соответствовать допустимому `workflowSettings` разделу файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="eebae-125">`configSectionName` must correspond to a valid `workflowSettings` section of a configuration file.</span></span>  
  
 <span data-ttu-id="eebae-126">При настройке подсистемы среды выполнения рабочего процесса с помощью файла конфигурации приложения он загружает и создает экземпляры классов типов, перечисленных в `Services` разделе файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="eebae-126">When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the `Services` section of the configuration file.</span></span> <span data-ttu-id="eebae-127">При создании этих классов механизм среды выполнения рабочих процессов выполняет поиск конструкторов классов со следующими сигнатурами в следующем порядке.</span><span class="sxs-lookup"><span data-stu-id="eebae-127">When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</span></span>  
  
1.  <span data-ttu-id="eebae-128">Служба(среда выполнения WorkflowRuntime, параметры NameValueCollection)</span><span class="sxs-lookup"><span data-stu-id="eebae-128">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span></span>  
  
2.  <span data-ttu-id="eebae-129">Служба(среда выполнения WorkflowRuntime)</span><span class="sxs-lookup"><span data-stu-id="eebae-129">Service(WorkflowRuntime runtime)</span></span>  
  
3.  <span data-ttu-id="eebae-130">Служба(параметры NameValueCollection)</span><span class="sxs-lookup"><span data-stu-id="eebae-130">Service(NameValueCollection parameters)</span></span>  
  
4.  <span data-ttu-id="eebae-131">Служба()</span><span class="sxs-lookup"><span data-stu-id="eebae-131">Service()</span></span>  
  
 <span data-ttu-id="eebae-132">Все классы служб, загружаемые из файла конфигурации, должны реализовывать хотя бы одну из этих сигнатур конструкторов.</span><span class="sxs-lookup"><span data-stu-id="eebae-132">All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</span></span>  
  
 <span data-ttu-id="eebae-133">Для получения дополнительной информации см. <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</span><span class="sxs-lookup"><span data-stu-id="eebae-133">For more information, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-134">Параметр <paramref name="configSectionName" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-134"><paramref name="configSectionName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eebae-135">Не удалось найти допустимый раздел <see langword="workflowSettings" /> в файле конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="eebae-135">A valid <see langword="workflowSettings" /> section could not be found in the application configuration file.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eebae-136">Для этого домена приложения уже существует объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-136">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime (System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As WorkflowRuntimeSection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime(System::Workflow::Runtime::Configuration::WorkflowRuntimeSection ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.WorkflowRuntime : System.Workflow.Runtime.Configuration.WorkflowRuntimeSection -&gt; System.Workflow.Runtime.WorkflowRuntime" Usage="new System.Workflow.Runtime.WorkflowRuntime settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="eebae-137">Объект <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-137">A <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span></span></param>
        <summary><span data-ttu-id="eebae-138">Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />, используя настройки в указанном разделе <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-138">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the settings in the specified <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-139">Этот конструктор предоставляет средства для настройки механизма среды выполнения рабочих процессов с помощью одного вызова метода для узлов, которые не используют файл конфигурации.</span><span class="sxs-lookup"><span data-stu-id="eebae-139">This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</span></span> <span data-ttu-id="eebae-140">Имеется много причин, чтобы не использовать файл конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="eebae-140">There are many reasons for not using the application configuration file.</span></span> <span data-ttu-id="eebae-141">Ведущее приложение может выполняться в среде, не допускающей использование файлов конфигурации, например в доверенной среде, не разрешающей чтение из файла конфигурации приложения по соображениям безопасности.</span><span class="sxs-lookup"><span data-stu-id="eebae-141">A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</span></span> <span data-ttu-id="eebae-142">Кроме того, ведущее приложение может использовать собственный механизм настройки, например хранить параметры конфигурации механизма среды выполнения рабочих процессов в базе данных SQL.</span><span class="sxs-lookup"><span data-stu-id="eebae-142">Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</span></span>  
  
 <span data-ttu-id="eebae-143">Механизм среды выполнения рабочих процессов загрузит и создаст классы типов, которые содержатся в свойстве <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eebae-143">The workflow run-time engine loads and instantiates classes of the types contained in <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eebae-144">При создании этих классов механизм среды выполнения рабочих процессов выполняет поиск конструкторов классов со следующими сигнатурами в следующем порядке.</span><span class="sxs-lookup"><span data-stu-id="eebae-144">When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</span></span>  
  
1.  <span data-ttu-id="eebae-145">Служба(среда выполнения WorkflowRuntime, параметры NameValueCollection)</span><span class="sxs-lookup"><span data-stu-id="eebae-145">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span></span>  
  
2.  <span data-ttu-id="eebae-146">Служба(среда выполнения WorkflowRuntime)</span><span class="sxs-lookup"><span data-stu-id="eebae-146">Service(WorkflowRuntime runtime)</span></span>  
  
3.  <span data-ttu-id="eebae-147">Служба(параметры NameValueCollection)</span><span class="sxs-lookup"><span data-stu-id="eebae-147">Service(NameValueCollection parameters)</span></span>  
  
4.  <span data-ttu-id="eebae-148">Служба()</span><span class="sxs-lookup"><span data-stu-id="eebae-148">Service()</span></span>  
  
 <span data-ttu-id="eebae-149">Все классы служб, указанные в `settings`, должны реализовывать хотя бы одну из этих сигнатур конструкторов.</span><span class="sxs-lookup"><span data-stu-id="eebae-149">All service classes that are specified in `settings` must implement at least one of these constructor signatures.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-150">Параметр <paramref name="settings" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-150"><paramref name="settings" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eebae-151">Для этого домена приложения уже существует объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-151">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddService(System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.AddService : obj -&gt; unit" Usage="workflowRuntime.AddService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="eebae-152">Объект, представляющий добавляемую службу.</span><span class="sxs-lookup"><span data-stu-id="eebae-152">An object that represents the service to add.</span></span></param>
        <summary><span data-ttu-id="eebae-153">Добавляет указанную службу к механизму среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-153">Adds the specified service to the workflow run-time engine.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-154">Механизм среды выполнения рабочих процессов можно настраивать, добавляя базовые службы.</span><span class="sxs-lookup"><span data-stu-id="eebae-154">You can configure the workflow run-time engine by adding core services.</span></span> <span data-ttu-id="eebae-155">Базовые службы — это службы, производные от любого из следующих базовых классов служб: <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> и <xref:System.Workflow.Runtime.Tracking.TrackingService>.</span><span class="sxs-lookup"><span data-stu-id="eebae-155">Core services are those that derive from any of the following service base classes: the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="eebae-156">Основные службы можно добавить, только если не запущена подсистема среды выполнения рабочего процесса. то есть, если <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> имеет `false`.</span><span class="sxs-lookup"><span data-stu-id="eebae-156">Core services can only be added when the workflow run-time engine is not running; that is, when <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `false`.</span></span> <span data-ttu-id="eebae-157">Объект <xref:System.Workflow.Runtime.WorkflowRuntime> также можно использовать в качестве контейнера для хранения других служб, которые могут использоваться другими рабочими процессами или приложениями, выполняемыми на узле.</span><span class="sxs-lookup"><span data-stu-id="eebae-157">The <xref:System.Workflow.Runtime.WorkflowRuntime> can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</span></span> <span data-ttu-id="eebae-158">При добавлении небазовой службы, производной от класса <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, после запуска механизма среды выполнения рабочих процессов, метод <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> вызывает метод <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>, реализованный данной службой.</span><span class="sxs-lookup"><span data-stu-id="eebae-158">If you add a non-core service that derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class after the workflow run-time engine has been started, <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> calls the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method implemented by that service.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eebae-159">Метод <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> накладывает ограничение, запрещающее добавлять несколько служб одного типа <xref:System.Type> к объекту <xref:System.Workflow.Runtime.WorkflowRuntime>.</span><span class="sxs-lookup"><span data-stu-id="eebae-159"><xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> enforces the restriction that no two services of the same <xref:System.Type> can be added to the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="eebae-160">Однако можно добавлять несколько служб, производных от одного базового класса.</span><span class="sxs-lookup"><span data-stu-id="eebae-160">However, you can add multiple services that derive from the same base class.</span></span>  <span data-ttu-id="eebae-161">В объекте <xref:System.Workflow.Runtime.WorkflowRuntime> может быть только по одной службе, производной от каждого из следующих базовых классов служб: <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> и <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>.</span><span class="sxs-lookup"><span data-stu-id="eebae-161">There can be only one service derived from each of the following service base classes in the <xref:System.Workflow.Runtime.WorkflowRuntime>: the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, and the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  <span data-ttu-id="eebae-162">При добавлении нескольких служб, производных от одного из этих классов, например двух служб сохраняемости, метод <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> вызовет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="eebae-162">If you add multiple services derived from one of these classes, for example two persistence services, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-163">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-163">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-164">Он содержит пример использования метода <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> для добавления служб <xref:System.Workflow.Activities.ExternalDataExchangeService> и <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> к механизму среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-164">It provides example of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> method to add an <xref:System.Workflow.Activities.ExternalDataExchangeService> and <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> to the workflow run-time engine.</span></span>  
  
 <span data-ttu-id="eebae-165">Этот пример кода является частью примера [отмены рабочего процесса](https://go.microsoft.com/fwlink/?LinkId=157346) .</span><span class="sxs-lookup"><span data-stu-id="eebae-165">This code example is part of the [Cancelling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-166">Параметр <paramref name="service" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-166"><paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-167">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-167">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eebae-168">Служба <paramref name="service" /> уже зарегистрирована механизмом среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-168"><paramref name="service" /> is already registered with the workflow run-time engine.</span></span>  
  
<span data-ttu-id="eebae-169">- или -</span><span class="sxs-lookup"><span data-stu-id="eebae-169">-or-</span></span> 
 <span data-ttu-id="eebae-170"><paramref name="service" /> является базовой службой, и механизм времени выполнения рабочих процессов уже выполняется (свойство <see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> имеет значение <see langword="true" />).</span><span class="sxs-lookup"><span data-stu-id="eebae-170"><paramref name="service" /> is a core service and the workflow run-time engine is already running (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateWorkflow">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eebae-171">Создает экземпляр рабочего процесса, используя указанные параметры.</span><span class="sxs-lookup"><span data-stu-id="eebae-171">Creates a workflow instance by using the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-172">Если механизм среды выполнения рабочих процессов не запущен, то методы <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> вызывают метод <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-172">If the workflow run-time engine has not been started, the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> methods call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span></span> <span data-ttu-id="eebae-173">См. список возможных исключений в разделе <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-173">See <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> for a list of possible exceptions.</span></span> <span data-ttu-id="eebae-174">После создания экземпляра рабочего процесса вызовите метод <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType> для объекта <xref:System.Workflow.Runtime.WorkflowInstance>, возвращаемого методом <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>, чтобы начать его выполнение.</span><span class="sxs-lookup"><span data-stu-id="eebae-174">After you create the workflow instance, call <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType> on the <xref:System.Workflow.Runtime.WorkflowInstance> object returned by the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method to begin its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow workflowType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="workflowType"><span data-ttu-id="eebae-175">Тип <see cref="T:System.Type" /> создаваемого рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-175">The <see cref="T:System.Type" /> of the workflow to create.</span></span></param>
        <summary><span data-ttu-id="eebae-176">Создает новый экземпляр рабочего процесса, используя заданный тип рабочего процесса <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-176">Creates a new workflow instance by using the specified workflow <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="eebae-177">Созданий экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-177">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-178">Перед созданием экземпляра <xref:System.Workflow.Runtime.WorkflowInstance> выполняется его проверка.</span><span class="sxs-lookup"><span data-stu-id="eebae-178">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="eebae-179">Если при проверке возникли какие-либо ошибки, то возникает исключение <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>.</span><span class="sxs-lookup"><span data-stu-id="eebae-179">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="eebae-180">Этот подход хорошо работает в простых ситуациях, однако в серверных средах повторная проверка рабочего процесса для каждой активации может создать излишнюю нагрузку.</span><span class="sxs-lookup"><span data-stu-id="eebae-180">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="eebae-181">Дополнительные сведения об отключении проверки см. <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>в разделе.</span><span class="sxs-lookup"><span data-stu-id="eebae-181">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-182">В следующем примере кода показан способ, рекомендуемый для создания объекта <xref:System.Workflow.Runtime.WorkflowInstance> в узле рабочего процесса с помощью метода <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-182">The following code example demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method.</span></span>  
  
 <span data-ttu-id="eebae-183">Этот пример кода является частью примера [отмены рабочего процесса](https://go.microsoft.com/fwlink/?LinkID=157346) .</span><span class="sxs-lookup"><span data-stu-id="eebae-183">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-184">Параметр <paramref name="workflowType" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-184"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow workflowDefinitionReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader"><span data-ttu-id="eebae-185">Объект <see cref="T:System.Xml.XmlReader" />, содержащий определение рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-185">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span></span></param>
        <summary><span data-ttu-id="eebae-186">Создает экземпляр рабочего процесса, используя заданный объект <see cref="T:System.Xml.XmlReader" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-186">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="eebae-187">Созданий экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-187">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-188">Экземпляр рабочего процесса создается из файла определения рабочего процесса XAML, на который ссылается объект <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="eebae-188">The workflow instance is created from a XAML workflow definition file referenced by the <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="eebae-189">Перед созданием экземпляра <xref:System.Workflow.Runtime.WorkflowInstance> выполняется его проверка.</span><span class="sxs-lookup"><span data-stu-id="eebae-189">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="eebae-190">Если при проверке возникли какие-либо ошибки, то возникает исключение <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>.</span><span class="sxs-lookup"><span data-stu-id="eebae-190">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="eebae-191">Этот подход хорошо работает в простых ситуациях, однако в серверных средах повторная проверка рабочего процесса для каждой активации может создать излишнюю нагрузку.</span><span class="sxs-lookup"><span data-stu-id="eebae-191">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="eebae-192">Дополнительные сведения об отключении проверки см. <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>в разделе.</span><span class="sxs-lookup"><span data-stu-id="eebae-192">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-193">В следующем примере показано создание рабочего процесса, для которого дано определение на языке XAML.</span><span class="sxs-lookup"><span data-stu-id="eebae-193">The following example demonstrates how to create a workflow given a XAML-based workflow definition.</span></span>  
  
```  
static void Main(string[] args)  
{  
    using (WorkflowRuntime workflowRuntime = new WorkflowRuntime())  
    {  
        AutoResetEvent waitHandle = new AutoResetEvent(false);  
        workflowRuntime.WorkflowCompleted += delegate(object sender, WorkflowCompletedEventArgs e)  
        {  
            waitHandle.Set();  
        };  
        workflowRuntime.WorkflowTerminated += delegate(object sender, WorkflowTerminatedEventArgs e)  
        {  
            Console.WriteLine(e.Exception.Message);  
            waitHandle.Set();  
        };  
  
        TypeProvider typeProvider = new TypeProvider(null);  
        // Add referenced assemblies, if needed  
        // typeProvider.AddAssembly(...);  
        workflowRuntime.AddService(typeProvider);  
  
        using (XmlReader reader = XmlReader.Create("Workflow1.xoml"))  
        {  
            WorkflowInstance instance = workflowRuntime.CreateWorkflow(reader);  
            instance.Start();  
        }  
  
        waitHandle.WaitOne();  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-194">Параметр <paramref name="workflowDefinitionReader" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-194"><paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-195">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-195">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type, namedArgumentValues As Dictionary(Of String, Object)) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type * System.Collections.Generic.Dictionary&lt;string, obj&gt; -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowType, namedArgumentValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowType"><span data-ttu-id="eebae-196">Тип <see cref="T:System.Type" /> создаваемого рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-196">The <see cref="T:System.Type" /> of the workflow to create.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="eebae-197">Коллекция <see cref="T:System.Collections.Generic.Dictionary`2" /> объектов, ключом которых является строка, представляющая аргументы рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-197">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by string that represents the arguments to the workflow.</span></span></param>
        <summary><span data-ttu-id="eebae-198">Создает экземпляр рабочего процесса, используя указанный тип рабочего процесса <see cref="T:System.Type" /> и аргументы рабочего процесса, содержащиеся в указанной коллекции <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-198">Creates a workflow instance by using the specified workflow <see cref="T:System.Type" /> and the arguments to the workflow contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="eebae-199">Созданий экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-199">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-200">Перед созданием экземпляра <xref:System.Workflow.Runtime.WorkflowInstance> выполняется его проверка.</span><span class="sxs-lookup"><span data-stu-id="eebae-200">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="eebae-201">Если при проверке возникли какие-либо ошибки, то возникает исключение <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>.</span><span class="sxs-lookup"><span data-stu-id="eebae-201">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="eebae-202">Этот подход хорошо работает в простых ситуациях, однако в серверных средах повторная проверка рабочего процесса для каждой активации может создать излишнюю нагрузку.</span><span class="sxs-lookup"><span data-stu-id="eebae-202">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="eebae-203">Дополнительные сведения об отключении проверки см. <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>в разделе.</span><span class="sxs-lookup"><span data-stu-id="eebae-203">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="eebae-204">Пример передачи параметров `CreateWorkflow`в см. в разделе [Рабочий процесс с примером параметров](https://go.microsoft.com/fwlink/?LinkId=157403).</span><span class="sxs-lookup"><span data-stu-id="eebae-204">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkId=157403).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-205">Параметр <paramref name="workflowType" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-205"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type, namedArgumentValues As Dictionary(Of String, Object), instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type * System.Collections.Generic.Dictionary&lt;string, obj&gt; * Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowType, namedArgumentValues, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowType"><span data-ttu-id="eebae-206">Тип <see cref="T:System.Type" /> создаваемого рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-206">The <see cref="T:System.Type" /> of the workflow to create.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="eebae-207">Коллекция <see cref="T:System.Collections.Generic.Dictionary`2" /> объектов, ключом которых является строка, представляющая аргументы рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-207">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span></span></param>
        <param name="instanceId"><span data-ttu-id="eebae-208">Тип <see cref="T:System.Guid" /> конкретного создаваемого экземпляра <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-208">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span></span></param>
        <summary><span data-ttu-id="eebae-209">Создает экземпляр рабочего процесса, используя указанные параметры.</span><span class="sxs-lookup"><span data-stu-id="eebae-209">Creates a workflow instance by using the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="eebae-210">Созданий экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-210">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-211">Перед созданием экземпляра <xref:System.Workflow.Runtime.WorkflowInstance> выполняется его проверка.</span><span class="sxs-lookup"><span data-stu-id="eebae-211">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="eebae-212">Если при проверке возникли какие-либо ошибки, то возникает исключение <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>.</span><span class="sxs-lookup"><span data-stu-id="eebae-212">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="eebae-213">Этот подход хорошо работает в простых ситуациях, однако в серверных средах повторная проверка рабочего процесса для каждой активации может создать излишнюю нагрузку.</span><span class="sxs-lookup"><span data-stu-id="eebae-213">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="eebae-214">Дополнительные сведения об отключении проверки см. <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>в разделе.</span><span class="sxs-lookup"><span data-stu-id="eebae-214">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="eebae-215">Идентификаторы `instanceId` выполняемых рабочих процессов, загруженных объектом <xref:System.Workflow.Runtime.WorkflowRuntime>, должны быть уникальными.</span><span class="sxs-lookup"><span data-stu-id="eebae-215">The workflow `instanceId` for any running workflows loaded by the <xref:System.Workflow.Runtime.WorkflowRuntime> must be unique.</span></span> <span data-ttu-id="eebae-216">Если для создания рабочего процесса передается `instanceId` и выполняющийся рабочий процесс уже использует этот `instanceId`, то возникает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="eebae-216">If you pass an `instanceId` to create a workflow and a running workflow is already using that `instanceId`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="eebae-217">Пример передачи параметров `CreateWorkflow`в см. в разделе [Рабочий процесс с примером параметров](https://go.microsoft.com/fwlink/?LinkID=157403).</span><span class="sxs-lookup"><span data-stu-id="eebae-217">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-218">Параметр <paramref name="workflowType" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-218"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader, class System.Xml.XmlReader rulesReader, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader, rulesReader As XmlReader, namedArgumentValues As Dictionary(Of String, Object)) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader, System::Xml::XmlReader ^ rulesReader, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader * System.Xml.XmlReader * System.Collections.Generic.Dictionary&lt;string, obj&gt; -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowDefinitionReader, rulesReader, namedArgumentValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
        <Parameter Name="rulesReader" Type="System.Xml.XmlReader" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader"><span data-ttu-id="eebae-219">Объект <see cref="T:System.Xml.XmlReader" />, содержащий определение рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-219">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span></span></param>
        <param name="rulesReader"><span data-ttu-id="eebae-220">Объект <see cref="T:System.Xml.XmlReader" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-220">An <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="eebae-221">Коллекция <see cref="T:System.Collections.Generic.Dictionary`2" /> объектов, ключом которых является строка, представляющая аргументы рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-221">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span></span></param>
        <summary><span data-ttu-id="eebae-222">Создает экземпляр рабочего процесса, используя указанные объекты <see cref="T:System.Xml.XmlReader" /> и аргументы, содержащиеся в указанной коллекции <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-222">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" /> objects and the arguments contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="eebae-223">Созданий экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-223">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-224">Экземпляр рабочего процесса создается из определения рабочего процесса, на которое ссылается объект <xref:System.Xml.XmlReader>, и аргументов, предоставленных параметром `namedArgumentValues`.</span><span class="sxs-lookup"><span data-stu-id="eebae-224">The workflow instance is created from the workflow definition referenced by the <xref:System.Xml.XmlReader> and the arguments supplied by `namedArgumentValues`.</span></span>  
  
 <span data-ttu-id="eebae-225">Перед созданием экземпляра <xref:System.Workflow.Runtime.WorkflowInstance> выполняется его проверка.</span><span class="sxs-lookup"><span data-stu-id="eebae-225">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="eebae-226">Если при проверке возникли какие-либо ошибки, то возникает исключение <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>.</span><span class="sxs-lookup"><span data-stu-id="eebae-226">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="eebae-227">Этот подход хорошо работает в простых ситуациях, однако в серверных средах повторная проверка рабочего процесса для каждой активации может создать излишнюю нагрузку.</span><span class="sxs-lookup"><span data-stu-id="eebae-227">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="eebae-228">Дополнительные сведения об отключении проверки см. <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>в разделе.</span><span class="sxs-lookup"><span data-stu-id="eebae-228">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="eebae-229">Пример передачи параметров `CreateWorkflow`в см. в разделе [Рабочий процесс с примером параметров](https://go.microsoft.com/fwlink/?LinkID=157403).</span><span class="sxs-lookup"><span data-stu-id="eebae-229">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 <span data-ttu-id="eebae-230">Пример использования правил, определенных в XML, см. в разделе Определение [IfElse с помощью правил](https://go.microsoft.com/fwlink/?LinkId=157404).</span><span class="sxs-lookup"><span data-stu-id="eebae-230">For an example of using rules defined in XML, see [IfElse with Rules Sample](https://go.microsoft.com/fwlink/?LinkId=157404).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-231">Параметр <paramref name="workflowDefinitionReader" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-231"><paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-232">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-232">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader, class System.Xml.XmlReader rulesReader, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader, rulesReader As XmlReader, namedArgumentValues As Dictionary(Of String, Object), instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader, System::Xml::XmlReader ^ rulesReader, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader * System.Xml.XmlReader * System.Collections.Generic.Dictionary&lt;string, obj&gt; * Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowDefinitionReader, rulesReader, namedArgumentValues, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
        <Parameter Name="rulesReader" Type="System.Xml.XmlReader" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader"><span data-ttu-id="eebae-233">Объект <see cref="T:System.Xml.XmlReader" />, содержащий определение рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-233">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span></span></param>
        <param name="rulesReader"><span data-ttu-id="eebae-234">Объект <see cref="T:System.Xml.XmlReader" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-234">An <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="eebae-235">Коллекция <see cref="T:System.Collections.Generic.Dictionary`2" /> объектов, ключом которых является строка, представляющая аргументы рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-235">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span></span></param>
        <param name="instanceId"><span data-ttu-id="eebae-236">Тип <see cref="T:System.Guid" /> конкретного создаваемого экземпляра <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-236">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span></span></param>
        <summary><span data-ttu-id="eebae-237">Создает экземпляр рабочего процесса, используя указанные параметры.</span><span class="sxs-lookup"><span data-stu-id="eebae-237">Creates a workflow instance by using the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="eebae-238">Созданий экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-238">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-239">Перед созданием экземпляра <xref:System.Workflow.Runtime.WorkflowInstance> выполняется его проверка.</span><span class="sxs-lookup"><span data-stu-id="eebae-239">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="eebae-240">Если при проверке возникли какие-либо ошибки, то возникает исключение <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>.</span><span class="sxs-lookup"><span data-stu-id="eebae-240">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="eebae-241">Этот подход хорошо работает в простых ситуациях, однако в серверных средах повторная проверка рабочего процесса для каждой активации может создать излишнюю нагрузку.</span><span class="sxs-lookup"><span data-stu-id="eebae-241">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="eebae-242">Дополнительные сведения об отключении проверки см. <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>в разделе.</span><span class="sxs-lookup"><span data-stu-id="eebae-242">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="eebae-243">Идентификаторы `instanceId` выполняемых рабочих процессов, загруженных объектом <xref:System.Workflow.Runtime.WorkflowRuntime>, должны быть уникальными.</span><span class="sxs-lookup"><span data-stu-id="eebae-243">The workflow `instanceId` for any running workflows loaded by the <xref:System.Workflow.Runtime.WorkflowRuntime> must be unique.</span></span> <span data-ttu-id="eebae-244">Если для создания рабочего процесса передается `instanceId` и выполняющийся рабочий процесс уже использует этот `instanceId`, то возникает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="eebae-244">If you pass an `instanceId` to create a workflow and a running workflow is already using that `instanceId`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="eebae-245">Пример передачи параметров `CreateWorkflow`в см. в разделе [Рабочий процесс с примером параметров](https://go.microsoft.com/fwlink/?LinkID=157403).</span><span class="sxs-lookup"><span data-stu-id="eebae-245">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 <span data-ttu-id="eebae-246">Пример использования правил, определенных в XML, см. в разделе Определение [IfElse с помощью правил](https://go.microsoft.com/fwlink/?LinkID=157404).</span><span class="sxs-lookup"><span data-stu-id="eebae-246">For an example of using rules defined in XML, see [IfElse with Rules Sample](https://go.microsoft.com/fwlink/?LinkID=157404).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-247">Параметр <paramref name="workflowType" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-247"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="workflowRuntime.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eebae-248">Освобождает ресурсы, используемые объектом <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-248">Releases the resources used by the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-249">Для правильного закрытия объекта <xref:System.Workflow.Runtime.WorkflowRuntime> метод <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> следует вызывать после вызова метода <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-249">To shut down the <xref:System.Workflow.Runtime.WorkflowRuntime> gracefully, you should only call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> after you have called <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span></span> <span data-ttu-id="eebae-250">Это обусловлено тем, что вызов одного метода <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> оставляет объект <xref:System.Workflow.Runtime.WorkflowRuntime> в непригодном для использования состоянии.</span><span class="sxs-lookup"><span data-stu-id="eebae-250">This is because calling the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method alone leaves the <xref:System.Workflow.Runtime.WorkflowRuntime> in an unusable state.</span></span> <span data-ttu-id="eebae-251">Метод <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> освобождает ресурсы, используемые средой выполнения, закрывая открытые дескрипторы файлов, подключения баз данных и т. п., но не выгружает экземпляры рабочих процессов, не останавливает службы и не выполняет другие действия, выполняемые методом <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-251"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> does.</span></span>  
  
 <span data-ttu-id="eebae-252">Метод <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> следует вызывать только тогда, когда ведущему приложению необходимо освободить ресурсы, используемые объектом<xref:System.Workflow.Runtime.WorkflowRuntime> до их автоматического освобождения сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="eebae-252"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> should be called only when the host application must free the resources used by the <xref:System.Workflow.Runtime.WorkflowRuntime> before they are automatically freed by the garbage collector.</span></span> <span data-ttu-id="eebae-253">Общие сведения о <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-253">For general information about <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-254">В следующем примере показан вызов метода <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> для объекта <xref:System.Workflow.Runtime.WorkflowRuntime>.</span><span class="sxs-lookup"><span data-stu-id="eebae-254">The following example demonstrates how to call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> on a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="eebae-255">В этом образце метод <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> вызывается из обработчика событий «FormClosing» главной формы приложения; это гарантирует, что объекты, созданные средой выполнения, правильно удаляются при завершении работы приложения.</span><span class="sxs-lookup"><span data-stu-id="eebae-255">In this sample, the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down.</span></span> <span data-ttu-id="eebae-256">Этот пример представлен в [примере приложения распознавания речи](https://go.microsoft.com/fwlink/?LinkId=157405).</span><span class="sxs-lookup"><span data-stu-id="eebae-256">This sample is from the [Speech Application Sample](https://go.microsoft.com/fwlink/?LinkId=157405).</span></span>  
  
 [!code-csharp[WF_Samples#108](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#108)]
 [!code-vb[WF_Samples#108](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllServices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;object&gt; GetAllServices (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;object&gt; GetAllServices(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllServices (serviceType As Type) As ReadOnlyCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Object ^&gt; ^ GetAllServices(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetAllServices : Type -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;obj&gt;" Usage="workflowRuntime.GetAllServices serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="eebae-257">Возвращаемые службы должны реализовывать тип <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-257">The <see cref="T:System.Type" /> that services must implement to be returned.</span></span></param>
        <summary><span data-ttu-id="eebae-258">Извлекает все службы, добавленные к механизму среды выполнения рабочих процессов, которые реализуют или являются производными от указанного типа <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-258">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="eebae-259">Службы, которые реализуют или являются производными от указанного типа <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-259">Services that implement or derive from the specified <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-260">Пустая коллекция <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> означает, что к механизму среды выполнения рабочих процессов не была добавлена ни одна служба, реализующая или производная от указанного типа <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="eebae-260">An empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> indicates that no services that implement or derive from the specified <xref:System.Type> have been added to the workflow run-time engine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-261">В следующем примере демонстрируется извлечение всех служб данного типа из объекта <xref:System.Workflow.Runtime.WorkflowRuntime>.</span><span class="sxs-lookup"><span data-stu-id="eebae-261">The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#19](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#19)]
 [!code-vb[WF_Samples#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-262">Параметр <paramref name="serviceType" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-262"><paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-263">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-263">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllServices&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetAllServices&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetAllServices&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllServices(Of T) () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetAllServices();" />
      <MemberSignature Language="F#" Value="member this.GetAllServices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="workflowRuntime.GetAllServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="eebae-264">Тип службы.</span><span class="sxs-lookup"><span data-stu-id="eebae-264">The service type.</span></span></typeparam>
        <summary><span data-ttu-id="eebae-265">Извлекает все службы, добавленные к механизму среды выполнения рабочих процессов, которые реализуют или являются производными от указанного универсального типа.</span><span class="sxs-lookup"><span data-stu-id="eebae-265">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</span></span></summary>
        <returns><span data-ttu-id="eebae-266">Службы, которые реализуют или являются производными от указанного универсального типа.</span><span class="sxs-lookup"><span data-stu-id="eebae-266">Services that implement or derive from the specified generic type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-267">Пустая коллекция <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> означает, что к механизму среды выполнения рабочих процессов не добавлена ни одна служба, реализующая или производная от указанного универсального типа.</span><span class="sxs-lookup"><span data-stu-id="eebae-267">An empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> indicates that no services have been added to the workflow run-time engine that implement or derive from the specified generic type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-268">В следующем примере демонстрируется извлечение всех служб данного типа из объекта <xref:System.Workflow.Runtime.WorkflowRuntime>.</span><span class="sxs-lookup"><span data-stu-id="eebae-268">The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#6](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#6)]
 [!code-vb[WF_Samples#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-269">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-269">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedWorkflows">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt; GetLoadedWorkflows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowInstance&gt; GetLoadedWorkflows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedWorkflows () As ReadOnlyCollection(Of WorkflowInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowInstance ^&gt; ^ GetLoadedWorkflows();" />
      <MemberSignature Language="F#" Value="member this.GetLoadedWorkflows : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt;" Usage="workflowRuntime.GetLoadedWorkflows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eebae-270">Возвращает коллекцию, содержащую экземпляры рабочего процесса, загруженные в память.</span><span class="sxs-lookup"><span data-stu-id="eebae-270">Gets a collection that contains all the workflow instances currently loaded in memory.</span></span></summary>
        <returns><span data-ttu-id="eebae-271">Объект <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> для всех экземпляров рабочего процесса, загруженных в память.</span><span class="sxs-lookup"><span data-stu-id="eebae-271">A <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> object for each workflow instance currently loaded in memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-272">Обратите внимание, что, в отличие от метода <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, этот метод не вызывает исключение <xref:System.InvalidOperationException>, если среда выполнения не запущена.</span><span class="sxs-lookup"><span data-stu-id="eebae-272">Note that, unlike <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, this method does not throw a <xref:System.InvalidOperationException> if the runtime is not started.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-273">В следующем примере показано извлечение коллекции загруженных рабочих процессов из объекта <xref:System.Workflow.Runtime.WorkflowRuntime>.</span><span class="sxs-lookup"><span data-stu-id="eebae-273">The following example demonstrates how to retrieve a collection of loaded workflows from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#18](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#18)]
 [!code-vb[WF_Samples#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-274">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-274">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="workflowRuntime.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="eebae-275"><see cref="T:System.Type" /> искомой службы.</span><span class="sxs-lookup"><span data-stu-id="eebae-275">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="eebae-276">Извлекает из механизма среды выполнения рабочих процессов службу указанного типа <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-276">Retrieves a service of the specified <see cref="T:System.Type" /> from the workflow run-time engine.</span></span></summary>
        <returns><span data-ttu-id="eebae-277">Служба заданного типа <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-277">The service of the specified <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-278">Метод <xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> вызывает исключение <xref:System.InvalidOperationException>, если для указанного типа <xref:System.Type> существует больше одной службы.</span><span class="sxs-lookup"><span data-stu-id="eebae-278"><xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> throws an <xref:System.InvalidOperationException> if more than one service exists for the specified <xref:System.Type>.</span></span> <span data-ttu-id="eebae-279">Поэтому следует использовать один из перегруженных методов <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A>, если есть вероятность, что в объекте <xref:System.Workflow.Runtime.WorkflowRuntime> может присутствовать несколько служб указанного типа.</span><span class="sxs-lookup"><span data-stu-id="eebae-279">Therefore, you should use one of the overloaded methods of <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> if it is possible that multiple services of the specified type are present in the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="eebae-280">Например, подсистема среды выполнения рабочего процесса может иметь несколько служб отслеживания.</span><span class="sxs-lookup"><span data-stu-id="eebae-280">For example, the workflow run-time engine may have multiple tracking services.</span></span> <span data-ttu-id="eebae-281">В случае запроса службы отслеживания путем указания базового класса <xref:System.Workflow.Runtime.Tracking.TrackingService> возможно формирование исключения.</span><span class="sxs-lookup"><span data-stu-id="eebae-281">If you request a tracking service by specifying the <xref:System.Workflow.Runtime.Tracking.TrackingService> base class, it is possible that an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-282">Параметр <paramref name="serviceType" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-282"><paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-283">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> уже удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-283">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eebae-284">Обнаружено больше одной службы типа <paramref name="serviceType" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-284">More than one service of type <paramref name="serviceType" /> was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetService&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetService&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetService();" />
      <MemberSignature Language="F#" Value="member this.GetService : unit -&gt; 'T" Usage="workflowRuntime.GetService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="eebae-285">Тип службы.</span><span class="sxs-lookup"><span data-stu-id="eebae-285">The service type.</span></span></typeparam>
        <summary><span data-ttu-id="eebae-286">Извлекает из механизма среды выполнения рабочих процессов службу указанного универсального типа.</span><span class="sxs-lookup"><span data-stu-id="eebae-286">Retrieves a service of the specified generic type from the workflow run-time engine.</span></span></summary>
        <returns><span data-ttu-id="eebae-287">Одна служба заданного универсального типа.</span><span class="sxs-lookup"><span data-stu-id="eebae-287">A single service of the specified generic type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-288">Метод <xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> вызывает исключение <xref:System.InvalidOperationException>, если для указанного универсального типа существует больше одной службы.</span><span class="sxs-lookup"><span data-stu-id="eebae-288"><xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> throws an <xref:System.InvalidOperationException> if more than one service exists for the specified generic type.</span></span> <span data-ttu-id="eebae-289">Поэтому следует использовать один из перегруженных методов <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A>, если есть вероятность, что в объекте <xref:System.Workflow.Runtime.WorkflowRuntime> может присутствовать несколько служб универсального типа.</span><span class="sxs-lookup"><span data-stu-id="eebae-289">Therefore, you should use one of the overloaded methods of <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> if it is possible that multiple services of the generic type are present in the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="eebae-290">Например, подсистема среды выполнения рабочего процесса может иметь несколько служб отслеживания.</span><span class="sxs-lookup"><span data-stu-id="eebae-290">For example, the workflow run-time engine may have multiple tracking services.</span></span> <span data-ttu-id="eebae-291">В случае запроса службы отслеживания путем указания базового класса <xref:System.Workflow.Runtime.Tracking.TrackingService> возможно формирование исключения.</span><span class="sxs-lookup"><span data-stu-id="eebae-291">If you request a tracking service by specifying the <xref:System.Workflow.Runtime.Tracking.TrackingService> base class, it is possible that an exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-292">В следующем примере демонстрируется извлечение одной службы из объекта <xref:System.Workflow.Runtime.WorkflowRuntime>; в данном случае это служба типа <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</span><span class="sxs-lookup"><span data-stu-id="eebae-292">The following example demonstrates how to retrieve a single service from a <xref:System.Workflow.Runtime.WorkflowRuntime> object; in this case, a service of type <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</span></span> <span data-ttu-id="eebae-293">Этот пример представлен в [примере потоков рабочих процессов](https://go.microsoft.com/fwlink/?LinkId=157350).</span><span class="sxs-lookup"><span data-stu-id="eebae-293">This example is from the [Workflow Threading Sample](https://go.microsoft.com/fwlink/?LinkId=157350).</span></span>  
  
 [!code-csharp[WF_Samples#28](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#28)]
 [!code-vb[WF_Samples#28](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-294">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> уже удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-294">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> has already been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eebae-295">Обнаружено больше одной службы универсального типа.</span><span class="sxs-lookup"><span data-stu-id="eebae-295">More than one service of the generic type was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance GetWorkflow (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance GetWorkflow(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflow (instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ GetWorkflow(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.GetWorkflow : Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.GetWorkflow instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="eebae-296">Тип <see cref="T:System.Guid" /> экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-296">The <see cref="T:System.Guid" /> of a workflow instance.</span></span></param>
        <summary><span data-ttu-id="eebae-297">Извлекает экземпляр рабочего процесса, который имеет указанный тип <see cref="T:System.Guid" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-297">Retrieves the workflow instance that has the specified <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="eebae-298">Экземпляр класса <see cref="T:System.Workflow.Runtime.WorkflowInstance" />, имеющий указанный тип <see cref="T:System.Guid" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-298">The <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> that has the specified <see cref="T:System.Guid" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-299">Если параметр `instanceId` задает экземпляр рабочего процесса, которого нет в памяти, то этот экземпляр рабочего процесса загружается в память и включается в план выполнения.</span><span class="sxs-lookup"><span data-stu-id="eebae-299">If `instanceId` specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</span></span> <span data-ttu-id="eebae-300">Например, после прерывания выполнения экземпляра рабочего процесса можно вызвать метод <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, чтобы снова загрузить этот экземпляр рабочего процесса в память.</span><span class="sxs-lookup"><span data-stu-id="eebae-300">For example, after a workflow instance is aborted, you can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to load the workflow instance back into memory.</span></span> <span data-ttu-id="eebae-301">В этом случае служба сохраняемости загрузит в память последнее сохраненное состояние экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-301">In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-302">В следующем примере кода показан метод `ReloadWorkflow`, вызывающий метод <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-302">The following code example demonstrates a `ReloadWorkflow` method that calls the <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> method.</span></span> <span data-ttu-id="eebae-303">Метод `ReloadWorkflow` является частью большего класса, имеющего свойство `Runtime` для доступа ко всем методам, свойствам и событиям класса <xref:System.Workflow.Runtime.WorkflowRuntime>.</span><span class="sxs-lookup"><span data-stu-id="eebae-303">The `ReloadWorkflow` method is part of a larger class that has a `Runtime` property to access all of the methods, properties, and events of the <xref:System.Workflow.Runtime.WorkflowRuntime> class.</span></span>  
  
 <span data-ttu-id="eebae-304">Этот пример кода входит в образец примера [пользовательской службы сохраняемости](https://go.microsoft.com/fwlink/?LinkId=157351) .</span><span class="sxs-lookup"><span data-stu-id="eebae-304">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkId=157351) sample.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eebae-305">В этом примере вызов метода <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> является избыточным, так как методы <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> и <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> используют для загрузки экземпляра рабочего процесса в память один и тот же внутренний вспомогательный метод.</span><span class="sxs-lookup"><span data-stu-id="eebae-305">In the example, the call to <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is redundant because both the <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> and <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> methods use the same internal helper method to load the workflow instance into memory.</span></span>  
  
 [!code-csharp[WF_Samples#265](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#265)]
 [!code-vb[WF_Samples#265](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#265)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eebae-306">Среда выполнения рабочих процессов не запущена.</span><span class="sxs-lookup"><span data-stu-id="eebae-306">The workflow runtime is not started.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsStarted">
      <MemberSignature Language="C#" Value="public bool IsStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStarted" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStarted : bool" Usage="System.Workflow.Runtime.WorkflowRuntime.IsStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-307">Возвращает значение, показывающее, был ли запущен механизм среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-307">Gets a value that indicates whether the workflow run-time engine has been started.</span></span></summary>
        <value><span data-ttu-id="eebae-308">Значение <see langword="true" />, если механизм времени выполнения рабочих процессов запущен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-308"><see langword="true" /> if the workflow run-time engine has been started; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="eebae-309">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-309">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-310">Свойство <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> показывает, что службы механизма среды выполнения рабочих процессов запущены.</span><span class="sxs-lookup"><span data-stu-id="eebae-310"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> indicates that the workflow run-time engine services are running.</span></span> <span data-ttu-id="eebae-311"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>`false` до вызова <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> узла.</span><span class="sxs-lookup"><span data-stu-id="eebae-311"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `false` until the host calls <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span></span> <span data-ttu-id="eebae-312">Значение `true` сохраняется, пока ведущее приложение не вызовет метод <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-312">It remains `true` until the host calls <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eebae-313">Пока выполняется механизм среды выполнения рабочих процессов, к нему нельзя добавлять базовые службы.</span><span class="sxs-lookup"><span data-stu-id="eebae-313">You cannot add core services to the workflow run-time engine while it is running.</span></span> <span data-ttu-id="eebae-314">Базовые службы — это службы, производные от классов <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>, <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> и <xref:System.Workflow.Runtime.Tracking.TrackingService>.</span><span class="sxs-lookup"><span data-stu-id="eebae-314">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-315">В следующем примере показан доступ к свойству <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> объекта <xref:System.Workflow.Runtime.WorkflowRuntime>.</span><span class="sxs-lookup"><span data-stu-id="eebae-315">The following example demonstrates how to access the <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="eebae-316">В этом примере, если среда выполнения запущена, на консоль выводится сообщение.</span><span class="sxs-lookup"><span data-stu-id="eebae-316">In this example, if the runtime is started, a message is printed to the console.</span></span>  
  
 [!code-csharp[WF_Samples#21](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#21)]
 [!code-vb[WF_Samples#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowRuntime.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Workflow.Runtime.WorkflowRuntime.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-317">Возвращает или задает имя, связанное с объектом <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-317">Gets or sets the name associated with the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></summary>
        <value><span data-ttu-id="eebae-318">Имя, связанное с данным объектом <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-318">The name associated with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-319">Невозможно задать <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> , пока выполняется подсистема среды выполнения рабочего процесса (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> имеет значение `true`).</span><span class="sxs-lookup"><span data-stu-id="eebae-319">You cannot set <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> while the workflow run-time engine is running (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-320">В следующем примере показан доступ к свойству <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> объекта <xref:System.Workflow.Runtime.WorkflowRuntime>.</span><span class="sxs-lookup"><span data-stu-id="eebae-320">The following example demonstrates how to access the <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="eebae-321">В этом примере среде выполнения задается имя «Main Runtime».</span><span class="sxs-lookup"><span data-stu-id="eebae-321">In this example, the name of the runtime is set to "Main Runtime".</span></span>  
  
 [!code-csharp[WF_Samples#20](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#20)]
 [!code-vb[WF_Samples#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-322">Происходит попытка задать свойство <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> для объекта <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />, который удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-322">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> on a <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that is disposed occurs.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eebae-323">Происходит попытка задать свойство <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> во время работы механизма среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-323">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> while the workflow run-time engine is running occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveService">
      <MemberSignature Language="C#" Value="public void RemoveService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveService (service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveService(System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.RemoveService : obj -&gt; unit" Usage="workflowRuntime.RemoveService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="eebae-324">Объект, представляющий удаляемую службу.</span><span class="sxs-lookup"><span data-stu-id="eebae-324">An object that represents the service to remove.</span></span></param>
        <summary><span data-ttu-id="eebae-325">Удаляет указанную службу из механизма среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-325">Removes the specified service from the workflow run-time engine.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-326">Невозможно удалить основную службу, пока выполняется подсистема среды выполнения рабочего процесса (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> имеет значение `true`).</span><span class="sxs-lookup"><span data-stu-id="eebae-326">You cannot remove a core service while the workflow run-time engine is running (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</span></span> <span data-ttu-id="eebae-327">Базовые службы — это службы, производные от классов <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> или <xref:System.Workflow.Runtime.Tracking.TrackingService>.</span><span class="sxs-lookup"><span data-stu-id="eebae-327">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, or the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="eebae-328">Если служба `service` является производной от класса <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, то метод <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> вызывает метод <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>, реализованный `service`.</span><span class="sxs-lookup"><span data-stu-id="eebae-328">If `service` derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> calls the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method implemented by `service`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-329">В следующем примере служба <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> добавляется к объекту <xref:System.Workflow.Runtime.WorkflowRuntime> и удаляется из него.</span><span class="sxs-lookup"><span data-stu-id="eebae-329">In the following example, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> is added and removed from the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span>  
  
 [!code-csharp[WF_Samples#16](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#16)]
 [!code-vb[WF_Samples#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eebae-330">Параметр <paramref name="service" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eebae-330"><paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-331">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> уже удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-331">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eebae-332">Механизм среды выполнения рабочих процессов запущен (свойство <see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> имеет значение <see langword="true" />), и <paramref name="service" /> является базовой службой.</span><span class="sxs-lookup"><span data-stu-id="eebae-332">The workflow run-time engine has started (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />) and <paramref name="service" /> is a core service.</span></span>  
  
<span data-ttu-id="eebae-333">- или -</span><span class="sxs-lookup"><span data-stu-id="eebae-333">-or-</span></span> 
 <span data-ttu-id="eebae-334">Служба <paramref name="service" /> не зарегистрирована механизмом среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-334"><paramref name="service" /> is not registered with the workflow run-time engine.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServicesExceptionNotHandled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; ServicesExceptionNotHandled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; ServicesExceptionNotHandled" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" />
      <MemberSignature Language="VB.NET" Value="Public Event ServicesExceptionNotHandled As EventHandler(Of ServicesExceptionNotHandledEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::ServicesExceptionNotHandledEventArgs ^&gt; ^ ServicesExceptionNotHandled;" />
      <MemberSignature Language="F#" Value="member this.ServicesExceptionNotHandled : EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; " Usage="member this.ServicesExceptionNotHandled : System.EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-335">Происходит, когда служба, производная от класса <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />, вызывает метод <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-335">Occurs when a service that is derived from the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> class calls <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-336">Служба, производная от класса <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, может вызвать метод <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> для оповещения подписчиков события <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> о возникновении во время ее выполнения исключения, которое она не смогла обработать.</span><span class="sxs-lookup"><span data-stu-id="eebae-336">A service that is derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class can call the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> method to inform subscribers to the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> event that an exception that it was unable to handle occurred during its execution.</span></span> <span data-ttu-id="eebae-337">На это событие можно подписаться, чтобы реализовать механизм восстановления.</span><span class="sxs-lookup"><span data-stu-id="eebae-337">You can subscribe to this event to implement a recovery mechanism.</span></span>  
  
 <span data-ttu-id="eebae-338">Это событие происходит при возникновении исключения, когда механизм среды выполнения рабочих процессов еще не создал экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-338">This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</span></span> <span data-ttu-id="eebae-339">В этом сценарии единственным способом уведомления ведущего приложения о возникновении исключения является создание события.</span><span class="sxs-lookup"><span data-stu-id="eebae-339">In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</span></span> <span data-ttu-id="eebae-340">Однако механизм среды выполнения рабочих процессов не вызывает его напрямую.</span><span class="sxs-lookup"><span data-stu-id="eebae-340">However, the workflow run-time engine does not call this directly.</span></span> <span data-ttu-id="eebae-341">Вместо этого механизм среды выполнения рабочих процессов возвращает исключение либо экземпляру рабочего процесса, либо, если экземпляра нет, вызвавшему объекту, который в этом случае фактически является службой, вызывающей данное событие.</span><span class="sxs-lookup"><span data-stu-id="eebae-341">Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</span></span> <span data-ttu-id="eebae-342">При создании собственной службы сохраняемости или планирования заданий необходимо реализовать это событие самостоятельно через базовый метод <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-342">If you create your own persistence or scheduler service, you must implement this event yourself through the base <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> method.</span></span>  
  
 <span data-ttu-id="eebae-343">Отправитель события <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowEventArgs> содержит тип <xref:System.Guid> экземпляра рабочего процесса, который использовал данную службу, и исключение <xref:System.Exception>, которое не удалось обработать.</span><span class="sxs-lookup"><span data-stu-id="eebae-343">For the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Guid> of the workflow instance that was using the service and the <xref:System.Exception> that could not be handled.</span></span>  
  
 <span data-ttu-id="eebae-344">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-344">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-345">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-345">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-346">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> с обработчиком событий — методом с именем `OnExceptionNotHandled`.</span><span class="sxs-lookup"><span data-stu-id="eebae-346">The code associates <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> with an event handler, a method named `OnExceptionNotHandled`.</span></span>  
  
 <span data-ttu-id="eebae-347">Этот пример кода является частью [примера пользовательской службы сохраняемости](https://go.microsoft.com/fwlink/?LinkID=157351).</span><span class="sxs-lookup"><span data-stu-id="eebae-347">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=157351).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.Started" />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of WorkflowRuntimeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowRuntimeEventArgs ^&gt; ^ Started;" />
      <MemberSignature Language="F#" Value="member this.Started : EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " Usage="member this.Started : System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-348">Возникает при запуске механизма среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-348">Occurs when the workflow run-time engine is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-349">Метод вызывает событие после проверки основной конфигурации службы обработчика среды выполнения рабочего процесса <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> , вызвала метод, реализованный в каждой <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> из служб, производных от класса, <xref:System.Workflow.Runtime.WorkflowRuntime.Started> <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> и имеет значение  <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> . `true`</span><span class="sxs-lookup"><span data-stu-id="eebae-349">The <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event after it has validated the core service configuration of the workflow run-time engine, has invoked the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method implemented by each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, and has set <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to `true`.</span></span> <span data-ttu-id="eebae-350">Порядок, в котором службы, производные от класса <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, запускаются механизмом среды выполнения рабочих процессов, не гарантирован, и некоторым службам механизма среды выполнения рабочих процессов для завершения своих задач запуска могут потребоваться функции, предоставляемые другими службами.</span><span class="sxs-lookup"><span data-stu-id="eebae-350">There is no guarantee about the order in which the services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</span></span> <span data-ttu-id="eebae-351">Службы механизма среды выполнения рабочих процессов могут переопределять метод <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType> для завершения конечных задач запуска, которым требуется поддержка других служб механизма среды выполнения рабочих процессов при возникновении события <xref:System.Workflow.Runtime.WorkflowRuntime.Started>.</span><span class="sxs-lookup"><span data-stu-id="eebae-351">Workflow run-time engine services can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType> method to perform any final startup tasks that require the support of other workflow run-time engine services when the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event is raised.</span></span>  
  
 <span data-ttu-id="eebae-352">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-352">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-353">В следующем примере к событию <xref:System.Workflow.Runtime.WorkflowRuntime.Started> объекта <xref:System.Workflow.Runtime.WorkflowRuntime> добавляется обработчик события.</span><span class="sxs-lookup"><span data-stu-id="eebae-353">In the following example, an event handler is added to the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event of the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="eebae-354">В этом примере обработчиком является анонимный метод, который выводит на консоль простое сообщение.</span><span class="sxs-lookup"><span data-stu-id="eebae-354">In this example, the handler is an anonymous method that prints a simple message to the console.</span></span>  
  
 [!code-csharp[WF_Samples#15](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#15)]
 [!code-vb[WF_Samples#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRuntime">
      <MemberSignature Language="C#" Value="public void StartRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartRuntime();" />
      <MemberSignature Language="F#" Value="member this.StartRuntime : unit -&gt; unit" Usage="workflowRuntime.StartRuntime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eebae-355">Запускает механизм среды выполнения рабочих процессов и его службы.</span><span class="sxs-lookup"><span data-stu-id="eebae-355">Starts the workflow run-time engine and the workflow run-time engine services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-356">Метод проверяет существование допустимого набора базовых служб и запускает службы, производные от класса <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>.</span><span class="sxs-lookup"><span data-stu-id="eebae-356">This method verifies that a valid set of core services exists and then starts any services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="eebae-357">Должна быть только одна из следующих основных служб: служба рабочего процесса `CommitWorkBatch` , производная <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> от базового класса и службы планировщика, производная от <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> базового класса.</span><span class="sxs-lookup"><span data-stu-id="eebae-357">There must be one and only one of each of the following core services: a workflow `CommitWorkBatch` service derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> base class and a scheduler service derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> base class.</span></span>  <span data-ttu-id="eebae-358">Если какая-либо из этих основных служб отсутствует, подсистема среды выполнения рабочих процессов предоставляет соответствующую службу по умолчанию: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> для службы рабочего `CommitWorkBatch` процесса и <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> для службы планировщика.</span><span class="sxs-lookup"><span data-stu-id="eebae-358">If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> for the workflow `CommitWorkBatch` service and <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> for the scheduler service.</span></span> <span data-ttu-id="eebae-359">Служба сохраняемости является необязательной, но может присутствовать только одна служба сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="eebae-359">A persistence service is optional, but there can be at most only one persistence service present.</span></span> <span data-ttu-id="eebae-360">Метод <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> проверяет конфигурацию служб, а затем вызывает метод <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> для всех служб, производных от класса <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>.</span><span class="sxs-lookup"><span data-stu-id="eebae-360">After it has validated the service configuration, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> calls <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on all of the services that are derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="eebae-361">Наконец, механизм среды выполнения рабочих процессов задает значение свойству <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> и создает событие <xref:System.Workflow.Runtime.WorkflowRuntime.Started>.</span><span class="sxs-lookup"><span data-stu-id="eebae-361">Finally, the workflow run-time engine sets <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> and raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event.</span></span>  
  
 <span data-ttu-id="eebae-362">После запуска механизма среды выполнения рабочих процессов добавлять или удалять базовые службы нельзя.</span><span class="sxs-lookup"><span data-stu-id="eebae-362">You cannot add or remove core services after the workflow run-time engine is started.</span></span> <span data-ttu-id="eebae-363">Базовые службы — это службы, производные от классов <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> или <xref:System.Workflow.Runtime.Tracking.TrackingService>.</span><span class="sxs-lookup"><span data-stu-id="eebae-363">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, or the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="eebae-364">Вызов метода <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> во время работы механизма среды выполнения рабочих процессов не приводит ни к каким действиям.</span><span class="sxs-lookup"><span data-stu-id="eebae-364">If you call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> while the workflow run-time engine is running, no action is performed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-365">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-365">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-366">Код вызывает метод <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> после того, как метод <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> создает экземпляр класса <xref:System.Workflow.Runtime.WorkflowRuntime> и вызывает метод <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, чтобы добавить службы к среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="eebae-366">The code calls the <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> after the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> creates a <xref:System.Workflow.Runtime.WorkflowRuntime> instance and after it calls <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> to add services to the runtime.</span></span> <span data-ttu-id="eebae-367">Он также вызывает метод <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> перед выполнением остальных действий.</span><span class="sxs-lookup"><span data-stu-id="eebae-367">It also calls <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> before any other processing occurs.</span></span>  
  
 <span data-ttu-id="eebae-368">Этот пример кода является частью примера [отмены рабочего процесса](https://go.microsoft.com/fwlink/?LinkId=157346) .</span><span class="sxs-lookup"><span data-stu-id="eebae-368">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-369">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-369">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eebae-370">Имеется больше одной службы <see langword="CommitWorkBatch" /> рабочего процесса, зарегистрированной данным объектом <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-370">There is more than one service workflow <see langword="CommitWorkBatch" /> service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span>  
  
<span data-ttu-id="eebae-371">- или -</span><span class="sxs-lookup"><span data-stu-id="eebae-371">-or-</span></span> 
<span data-ttu-id="eebae-372">Имеется больше одной службы планирования заданий, зарегистрированной данным объектом <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-372">There is more than one scheduler service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span>  
  
<span data-ttu-id="eebae-373">-или-</span><span class="sxs-lookup"><span data-stu-id="eebae-373">-or-</span></span> 
<span data-ttu-id="eebae-374">Имеется больше одной службы сохраняемости, зарегистрированной данным объектом <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span><span class="sxs-lookup"><span data-stu-id="eebae-374">There is more than one persistence service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As EventHandler(Of WorkflowRuntimeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowRuntimeEventArgs ^&gt; ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " Usage="member this.Stopped : System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-375">Возникает при остановке механизма среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-375">Occurs when the workflow run-time engine is stopped.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-376">Метод <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> вызывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> после вызова метода <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>, реализованного всеми его службами, производными от класса <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>.</span><span class="sxs-lookup"><span data-stu-id="eebae-376">The <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event after it has invoked the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method implemented by each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="eebae-377">Порядок остановки служб механизма среды выполнения рабочих процессов не гарантирован, и некоторым из этих служб может понадобиться сохранение некоторых функций, основанных на других службах, пока они также не будут остановлены.</span><span class="sxs-lookup"><span data-stu-id="eebae-377">There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</span></span> <span data-ttu-id="eebae-378">Такие службы могут переопределять метод <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType> для реализации прежней логики завершения при возникновении события <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>.</span><span class="sxs-lookup"><span data-stu-id="eebae-378">Such services can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType> method to perform any residual shutdown logic when the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event is raised.</span></span>  
  
 <span data-ttu-id="eebae-379">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-379">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-380">В следующем примере к событию <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> объекта <xref:System.Workflow.Runtime.WorkflowRuntime> добавляется обработчик события.</span><span class="sxs-lookup"><span data-stu-id="eebae-380">In the following example, an event handler is added to the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event of the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="eebae-381">В этом примере обработчиком является анонимный метод, который выводит на консоль простое сообщение.</span><span class="sxs-lookup"><span data-stu-id="eebae-381">In this example, the handler is an anonymous method that prints a simple message to the console.</span></span>  
  
 [!code-csharp[WF_Samples#14](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#14)]
 [!code-vb[WF_Samples#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRuntime">
      <MemberSignature Language="C#" Value="public void StopRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopRuntime();" />
      <MemberSignature Language="F#" Value="member this.StopRuntime : unit -&gt; unit" Usage="workflowRuntime.StopRuntime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eebae-382">Останавливает механизм среды выполнения рабочих процессов и ее службы.</span><span class="sxs-lookup"><span data-stu-id="eebae-382">Stops the workflow run-time engine and the run-time services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-383">Этот метод заставляет подсистеме среды выполнения рабочего процесса выгрузить каждый из экземпляров рабочего процесса, останавливаться на всех службах, производных <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> от класса, <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> `false`установить значение и вызвать <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> событие.</span><span class="sxs-lookup"><span data-stu-id="eebae-383">This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, set <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to `false`, and raise the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event.</span></span>  
  
 <span data-ttu-id="eebae-384">Для правильного закрытия объекта <xref:System.Workflow.Runtime.WorkflowRuntime> метод <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> вызовите перед вызовом метода <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-384">To shut down the <xref:System.Workflow.Runtime.WorkflowRuntime> gracefully, call <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> before you call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</span></span>  
  
 <span data-ttu-id="eebae-385">Дополнительные сведения см. в описании метода <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="eebae-385">For more information, see the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-386">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-386">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-387">Метод <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> вызывается после завершения узлом всех остальных действий, связанных со средой выполнения.</span><span class="sxs-lookup"><span data-stu-id="eebae-387"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> is called after the host has completed all other processing associated with the runtime.</span></span>  
  
 <span data-ttu-id="eebae-388">Этот пример кода является частью примера [отмены рабочего процесса](https://go.microsoft.com/fwlink/?LinkId=157346) .</span><span class="sxs-lookup"><span data-stu-id="eebae-388">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#259](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#259)]
 [!code-vb[WF_Samples#259](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#259)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eebae-389">Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> уже удален.</span><span class="sxs-lookup"><span data-stu-id="eebae-389">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowAborted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowAborted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowAborted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowAborted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowAborted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowAborted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowAborted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-390">Происходит при прерывании выполнения экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-390">Occurs when a workflow instance is aborted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-391">Событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> происходит после удаления всех ожидающих работ экземпляра рабочего процесса, но до того, как экземпляр рабочего процесса становится недействительным в памяти.</span><span class="sxs-lookup"><span data-stu-id="eebae-391"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</span></span> <span data-ttu-id="eebae-392">Выполнение экземпляра рабочего процесса можно прервать, вызвав метод <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eebae-392">You can abort a workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eebae-393">Отправитель этого события содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowEventArgs> содержит экземпляр <xref:System.Workflow.Runtime.WorkflowInstance>, связанный с данным событием.</span><span class="sxs-lookup"><span data-stu-id="eebae-393">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="eebae-394">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-394">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-395">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-395">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-396">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> с обработчиком событий — методом с именем `OnWorkflowAborted`.</span><span class="sxs-lookup"><span data-stu-id="eebae-396">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> with an event handler, a method named `OnWorkflowAborted`.</span></span>  
  
 <span data-ttu-id="eebae-397">Этот пример кода является частью примера [отмены рабочего процесса](https://go.microsoft.com/fwlink/?LinkID=157346) .</span><span class="sxs-lookup"><span data-stu-id="eebae-397">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#141](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#141)]
 [!code-vb[WF_Samples#141](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#141)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; WorkflowCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; WorkflowCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowCompleted As EventHandler(Of WorkflowCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowCompletedEventArgs ^&gt; ^ WorkflowCompleted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowCompleted : EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; " Usage="member this.WorkflowCompleted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-398">Происходит при успешном завершении выполнения экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-398">Occurs when a workflow instance has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-399">Событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> возникает после успешного завершения выполнения экземпляра рабочего процесса, но до того, как этот экземпляр становится недействительным в памяти.</span><span class="sxs-lookup"><span data-stu-id="eebae-399"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> is raised after the workflow instance has completed but before the instance is invalidated in memory.</span></span>  
  
 <span data-ttu-id="eebae-400">Отправитель этого события <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> содержит объект <xref:System.Workflow.Runtime.WorkflowInstance> и его выходные параметры.</span><span class="sxs-lookup"><span data-stu-id="eebae-400">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and its output parameters.</span></span>  
  
 <span data-ttu-id="eebae-401">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-401">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-402">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-402">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-403">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> с обработчиком событий — методом с именем `OnWorkflowCompleted`.</span><span class="sxs-lookup"><span data-stu-id="eebae-403">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.</span></span>  
  
 <span data-ttu-id="eebae-404">Этот пример кода является частью примера [отмены рабочего процесса](https://go.microsoft.com/fwlink/?LinkId=157346) .</span><span class="sxs-lookup"><span data-stu-id="eebae-404">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowCreated" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowCreated As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowCreated;" />
      <MemberSignature Language="F#" Value="member this.WorkflowCreated : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowCreated : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-405">Происходит при создании экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-405">Occurs when a workflow instance is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-406">Механизм среды выполнения рабочих процессов создает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> после того, как экземпляр рабочего процесса полностью создан, но до обработки действий.</span><span class="sxs-lookup"><span data-stu-id="eebae-406">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> event after the workflow instance is completely constructed but before activities are processed.</span></span> <span data-ttu-id="eebae-407">Отправитель этого события содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowEventArgs> содержит экземпляр <xref:System.Workflow.Runtime.WorkflowInstance>, связанный с данным событием.</span><span class="sxs-lookup"><span data-stu-id="eebae-407">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="eebae-408">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-408">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-409">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-409">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-410">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> с обработчиком событий — методом с именем `OnWorkflowCreated`.</span><span class="sxs-lookup"><span data-stu-id="eebae-410">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> with an event handler, a method named `OnWorkflowCreated`.</span></span>  
  
 <span data-ttu-id="eebae-411">Этот пример кода является частью [примера пользовательской службы сохраняемости](https://go.microsoft.com/fwlink/?LinkID=15735).</span><span class="sxs-lookup"><span data-stu-id="eebae-411">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=15735).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowIdled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowIdled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowIdled" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowIdled As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowIdled;" />
      <MemberSignature Language="F#" Value="member this.WorkflowIdled : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowIdled : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-412">Происходит при переходе экземпляра рабочего процесса в состояние бездействия.</span><span class="sxs-lookup"><span data-stu-id="eebae-412">Occurs when a workflow instance enters the idle state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-413">Механизм среды выполнения рабочих процессов создает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, когда экземпляр рабочего процесса переходит в состояние бездействия; например, когда рабочий процесс ожидает завершения действия <xref:System.Workflow.Activities.DelayActivity>.</span><span class="sxs-lookup"><span data-stu-id="eebae-413">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event when the workflow instance enters an idle state; for example, when the workflow is waiting for a <xref:System.Workflow.Activities.DelayActivity> activity to complete.</span></span>  
  
 <span data-ttu-id="eebae-414">Отправитель этого события содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowEventArgs> содержит экземпляр <xref:System.Workflow.Runtime.WorkflowInstance>, связанный с данным событием.</span><span class="sxs-lookup"><span data-stu-id="eebae-414">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="eebae-415">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-415">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-416">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-416">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-417">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> с обработчиком событий — методом с именем `OnWorkflowIdled`.</span><span class="sxs-lookup"><span data-stu-id="eebae-417">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> with an event handler, a method named `OnWorkflowIdled`.</span></span>  
  
 <span data-ttu-id="eebae-418">Этот пример кода является частью примера [отмены рабочего процесса](https://go.microsoft.com/fwlink/?LinkID=157346) .</span><span class="sxs-lookup"><span data-stu-id="eebae-418">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowLoaded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowLoaded As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowLoaded;" />
      <MemberSignature Language="F#" Value="member this.WorkflowLoaded : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowLoaded : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-419">Происходит при загрузке экземпляра рабочего процесса в память.</span><span class="sxs-lookup"><span data-stu-id="eebae-419">Occurs when the workflow instance is loaded into memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-420">Событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> возникает после восстановления службой сохраняемости экземпляра рабочего процесса, но до того, как механизм среды выполнения рабочих процессов начнет выполнение каких-либо действий.</span><span class="sxs-lookup"><span data-stu-id="eebae-420"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</span></span>  
  
 <span data-ttu-id="eebae-421">Отправитель этого события <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowEventArgs> содержит объект <xref:System.Workflow.Runtime.WorkflowInstance>, связанный с этим событием.</span><span class="sxs-lookup"><span data-stu-id="eebae-421">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="eebae-422">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-422">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-423">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-423">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-424">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> с обработчиком событий — методом с именем `OnWorkflowLoad`.</span><span class="sxs-lookup"><span data-stu-id="eebae-424">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> with an event handler, a method named `OnWorkflowLoad`.</span></span>  
  
 <span data-ttu-id="eebae-425">Этот пример кода является частью примера [пользовательской службы сохраняемости](https://go.microsoft.com/fwlink/?LinkID=157351) .</span><span class="sxs-lookup"><span data-stu-id="eebae-425">This code example is part of the [Custom Persistence Service](https://go.microsoft.com/fwlink/?LinkID=157351) sample.</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowPersisted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowPersisted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowPersisted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowPersisted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowPersisted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowPersisted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowPersisted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-426">Происходит при сохранении состояния экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-426">Occurs when the state of a workflow instance is persisted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-427">Сохранение состояния экземпляра рабочего процесса может происходить по многим причинам.</span><span class="sxs-lookup"><span data-stu-id="eebae-427">The workflow instance can be persisted for many reasons.</span></span> <span data-ttu-id="eebae-428">Например, узел может вызвать метод <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> для экземпляра рабочего процесса; или механизм среды выполнения рабочих процессов может сохранить экземпляр рабочего процесса, так как он стал неактивным или из-за завершения атомарной области.</span><span class="sxs-lookup"><span data-stu-id="eebae-428">For example, the host can call <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</span></span> <span data-ttu-id="eebae-429">Если служба постоянного хранения присутствует в <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> инициируется средой выполнения после сохранения в памяти состояния экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-429">If a persistence service is present in the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> is raised by the runtime after the state of the workflow instance is saved to memory.</span></span> <span data-ttu-id="eebae-430">Если служба постоянного хранения не присутствует, событие также инициируется, но состояние экземпляра не сохраняется.</span><span class="sxs-lookup"><span data-stu-id="eebae-430">If a persistence service is not present, the event is still raised but the instance state is not saved.</span></span> <span data-ttu-id="eebae-431">Если событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> возникает из-за выгрузки экземпляра рабочего процесса, то за ним последует событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>.</span><span class="sxs-lookup"><span data-stu-id="eebae-431">If the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event occurs because the workflow instance is being unloaded, it is followed by a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="eebae-432">Отправитель этого события <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowEventArgs> содержит объект <xref:System.Workflow.Runtime.WorkflowInstance>, связанный с этим событием.</span><span class="sxs-lookup"><span data-stu-id="eebae-432">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="eebae-433">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-433">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-434">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-434">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-435">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> с обработчиком событий — методом с именем `OnWorkflowPersisted`.</span><span class="sxs-lookup"><span data-stu-id="eebae-435">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> with an event handler, a method named `OnWorkflowPersisted`.</span></span>  
  
 <span data-ttu-id="eebae-436">Этот пример кода является частью [примера пользовательской службы сохраняемости](https://go.microsoft.com/fwlink/?LinkID=15735).</span><span class="sxs-lookup"><span data-stu-id="eebae-436">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=15735).</span></span>  
  
 [!code-csharp[WF_Samples#279](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#279)]
 [!code-vb[WF_Samples#279](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#279)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowResumed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowResumed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowResumed" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowResumed As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowResumed;" />
      <MemberSignature Language="F#" Value="member this.WorkflowResumed : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowResumed : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-437">Происходит, когда выполнение экземпляра рабочего процесса возобновляется после приостановки.</span><span class="sxs-lookup"><span data-stu-id="eebae-437">Occurs when execution of a workflow instance is resumed following a suspension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-438">Механизм среды выполнения рабочих процессов создает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> непосредственно перед включением экземпляра рабочего процесса в план выполнения.</span><span class="sxs-lookup"><span data-stu-id="eebae-438">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before the workflow instance is scheduled.</span></span> <span data-ttu-id="eebae-439">Событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> обычно возникает в результате явного вызова метода <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eebae-439">The <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event is usually raised because of an explicit call to <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eebae-440">Однако механизм среды выполнения рабочих процессов может временно приостановить выполнение операции для экземпляра, например для применения изменения рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-440">However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</span></span> <span data-ttu-id="eebae-441">В этом случае событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> возникает, когда среда выполнения возобновляет выполнение экземпляра рабочего процесса вслед за операцией.</span><span class="sxs-lookup"><span data-stu-id="eebae-441">In this case, the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event is raised when the runtime resumes execution of the workflow instance following the operation.</span></span>  
  
 <span data-ttu-id="eebae-442">Отправитель этого события <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowEventArgs> содержит объект <xref:System.Workflow.Runtime.WorkflowInstance>, связанный с этим событием.</span><span class="sxs-lookup"><span data-stu-id="eebae-442">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="eebae-443">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-443">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-444">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-444">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-445">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> с обработчиком событий — методом с именем `OnWorkflowResume`.</span><span class="sxs-lookup"><span data-stu-id="eebae-445">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> with an event handler, a method named `OnWorkflowResume`.</span></span>  
  
 <span data-ttu-id="eebae-446">Этот пример кода является частью [примера приостановки и завершения](https://go.microsoft.com/fwlink/?LinkId=157402).</span><span class="sxs-lookup"><span data-stu-id="eebae-446">This code example is part of the [Suspend and Terminate Sample](https://go.microsoft.com/fwlink/?LinkId=157402).</span></span>  
  
 [!code-csharp[WF_Samples#171](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#171)]
 [!code-vb[WF_Samples#171](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowStarted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowStarted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowStarted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowStarted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowStarted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-447">Происходит при запуске экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-447">Occurs when a workflow instance has been started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-448">Механизм среды выполнения рабочих процессов создает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> после запуска экземпляра рабочего процесса с помощью включения корневого действия в план выполнения.</span><span class="sxs-lookup"><span data-stu-id="eebae-448">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> event after the workflow instance is started by scheduling the root activity for execution.</span></span> <span data-ttu-id="eebae-449">Отправитель этого события содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowEventArgs> содержит экземпляр <xref:System.Workflow.Runtime.WorkflowInstance>, связанный с данным событием.</span><span class="sxs-lookup"><span data-stu-id="eebae-449">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="eebae-450">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-450">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-451">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-451">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-452">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> с обработчиком событий — методом с именем `OnWorkflowStarted`.</span><span class="sxs-lookup"><span data-stu-id="eebae-452">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> with an event handler, a method named `OnWorkflowStarted`.</span></span>  
  
 <span data-ttu-id="eebae-453">Этот пример кода является частью [примера обмена данными с узлом](https://go.microsoft.com/fwlink/?LinkId=157406).</span><span class="sxs-lookup"><span data-stu-id="eebae-453">This code example is part of the [Host Communication Sample](https://go.microsoft.com/fwlink/?LinkId=157406).</span></span>  
  
 [!code-csharp[WF_Samples#297](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#297)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowSuspended">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; WorkflowSuspended;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; WorkflowSuspended" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowSuspended As EventHandler(Of WorkflowSuspendedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowSuspendedEventArgs ^&gt; ^ WorkflowSuspended;" />
      <MemberSignature Language="F#" Value="member this.WorkflowSuspended : EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; " Usage="member this.WorkflowSuspended : System.EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-454">Происходит при приостановке выполнения экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-454">Occurs when a workflow instance is suspended.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-455">Выполнение экземпляра рабочего процесса может быть приостановлено узлом посредством вызова метода <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A>, действием <xref:System.Workflow.ComponentModel.SuspendActivity> или неявно механизмом среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="eebae-455">The workflow instance can be suspended by the host through a call to the <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> method, by a <xref:System.Workflow.ComponentModel.SuspendActivity> activity, or implicitly by the workflow run-time engine.</span></span> <span data-ttu-id="eebae-456">Например, механизм среды выполнения рабочих процессов может временно приостановить выполнение экземпляра при применении к нему динамических изменений.</span><span class="sxs-lookup"><span data-stu-id="eebae-456">For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</span></span>  
  
 <span data-ttu-id="eebae-457">Отправитель события <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> содержит экземпляр <xref:System.Workflow.Runtime.WorkflowInstance> и строку, описывающую причину приостановки выполнения экземпляра.</span><span class="sxs-lookup"><span data-stu-id="eebae-457">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and a string that describes the reason the instance was suspended.</span></span>  
  
 <span data-ttu-id="eebae-458">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-458">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-459">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-459">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-460">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> с обработчиком событий — методом с именем `OnWorkflowSuspended`.</span><span class="sxs-lookup"><span data-stu-id="eebae-460">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> with an event handler, a method named `OnWorkflowSuspended`.</span></span>  
  
 <span data-ttu-id="eebae-461">Этот пример кода является частью [примера приостановки и завершения](https://go.microsoft.com/fwlink/?LinkID=157402).</span><span class="sxs-lookup"><span data-stu-id="eebae-461">This code example is part of the [Suspend and Terminate Sample](https://go.microsoft.com/fwlink/?LinkID=157402).</span></span>  
  
 [!code-csharp[WF_Samples#170](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#170)]
 [!code-vb[WF_Samples#170](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowTerminated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; WorkflowTerminated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; WorkflowTerminated" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowTerminated As EventHandler(Of WorkflowTerminatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowTerminatedEventArgs ^&gt; ^ WorkflowTerminated;" />
      <MemberSignature Language="F#" Value="member this.WorkflowTerminated : EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; " Usage="member this.WorkflowTerminated : System.EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-462">Происходит при завершении выполнения экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-462">Occurs when a workflow instance is terminated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eebae-463">Рабочий процесс может быть завершен узлом посредством вызова метода <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A>, действием <xref:System.Workflow.ComponentModel.TerminateActivity> или механизмом среды выполнения рабочих процессов при возникновении необработанного исключения.</span><span class="sxs-lookup"><span data-stu-id="eebae-463">The workflow can be terminated by the host through a call to the <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> method, by a <xref:System.Workflow.ComponentModel.TerminateActivity> activity, or by the workflow run-time engine when an unhandled exception occurs.</span></span> <span data-ttu-id="eebae-464">Механизм среды выполнения рабочих процессов создает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> после завершения выполнения экземпляра рабочего процесса, но до того, как он станет недействительным в памяти.</span><span class="sxs-lookup"><span data-stu-id="eebae-464">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event after the workflow instance is terminated, but before it is invalidated in memory.</span></span>  
  
 <span data-ttu-id="eebae-465">Отправитель события <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> содержит экземпляр <xref:System.Workflow.Runtime.WorkflowInstance> и сведения о причине завершения выполнения экземпляра в свойстве <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eebae-465">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and information about the reason the instance was terminated in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="eebae-466">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-466">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eebae-467">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-467">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-468">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> с обработчиком событий — методом с именем `OnWorkflowCompleted`.</span><span class="sxs-lookup"><span data-stu-id="eebae-468">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.</span></span>  
  
 <span data-ttu-id="eebae-469">Этот пример кода является частью примера [отмены рабочего процесса](https://go.microsoft.com/fwlink/?LinkID=157346) .</span><span class="sxs-lookup"><span data-stu-id="eebae-469">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowUnloaded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowUnloaded As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowUnloaded;" />
      <MemberSignature Language="F#" Value="member this.WorkflowUnloaded : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowUnloaded : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eebae-470">Происходит при выгрузке экземпляра рабочего процесса из памяти.</span><span class="sxs-lookup"><span data-stu-id="eebae-470">Occurs when the workflow instance is unloaded from memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="eebae-471">Экземпляр рабочего процесса может быть выгружен из памяти явным вызовом метода <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> или неявно механизмом среды выполнения рабочих процессов в соответствии с его собственными правилами.</span><span class="sxs-lookup"><span data-stu-id="eebae-471">A workflow instance can be unloaded from memory by an explicit call to <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>, or implicitly by the workflow run-time engine according to its own semantics.</span></span> <span data-ttu-id="eebae-472">Например, подсистема среды выполнения рабочих процессов выгружает экземпляр рабочего процесса, если экземпляр переходит в состояние бездействия и в среде выполнения <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> добавлен элемент, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> для `true`которого задано значение.</span><span class="sxs-lookup"><span data-stu-id="eebae-472">For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> added for which <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> is `true`.</span></span>  
  
<span data-ttu-id="eebae-473">Обработчик среды выполнения рабочих процессов создает `WorkflowUnloaded` событие после успешного сохранения состояния экземпляра рабочего процесса, но до того, как экземпляр становится недействительным в памяти.</span><span class="sxs-lookup"><span data-stu-id="eebae-473">The workflow run-time engine raises the `WorkflowUnloaded` event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</span></span> <span data-ttu-id="eebae-474">Поэтому событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> предшествует событию <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>.</span><span class="sxs-lookup"><span data-stu-id="eebae-474">Therefore, a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event precedes the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
<span data-ttu-id="eebae-475">Отправитель этого события `WorkflowUnloaded` содержит объект <xref:System.Workflow.Runtime.WorkflowRuntime>, а объект <xref:System.Workflow.Runtime.WorkflowEventArgs> содержит объект <xref:System.Workflow.Runtime.WorkflowInstance>, связанный с этим событием.</span><span class="sxs-lookup"><span data-stu-id="eebae-475">For the `WorkflowUnloaded` event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
<span data-ttu-id="eebae-476">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="eebae-476">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
## Examples

<span data-ttu-id="eebae-477">В следующем примере кода показано использование функций класса <xref:System.Workflow.Runtime.WorkflowRuntime> с узла рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="eebae-477">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="eebae-478">Этот код связывает событие <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> с обработчиком событий — методом с именем `OnWorkflowUnload`.</span><span class="sxs-lookup"><span data-stu-id="eebae-478">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> with an event handler, a method named `OnWorkflowUnload`.</span></span>  
  
 <span data-ttu-id="eebae-479">Этот пример кода является частью [примера пользовательской службы сохраняемости](https://go.microsoft.com/fwlink/?LinkID=157351).</span><span class="sxs-lookup"><span data-stu-id="eebae-479">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=157351).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
