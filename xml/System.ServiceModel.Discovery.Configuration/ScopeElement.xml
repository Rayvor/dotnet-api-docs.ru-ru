<Type Name="ScopeElement" FullName="System.ServiceModel.Discovery.Configuration.ScopeElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aacd487486ba8dacbb1de740d043d4c8aa11a19e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70448340" /></Metadata><TypeSignature Language="C#" Value="public sealed class ScopeElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScopeElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Discovery.Configuration.ScopeElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ScopeElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScopeElement sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type ScopeElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет URI области для конечной точки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс представляет URI области в файлах конфигурации. В следующем примере показано, как этот класс используется в файле конфигурации.  
  
```  
<endpointBehaviors>  
    <behavior name="ep1Behavior">  
        <endpointDiscovery>  
            <scopes>  
                <add scope="http://www.microsoft.com/building42/floor1"/>  
                <add scope="ldap:///ou=engineeringo=examplecomc=us"/>  
                <add scope="mailto:vipulm@microsoft.com"/>  
             </scopes>  
        </endpointDiscovery>  
    </behavior>  
</endpointBehaviors>  
```  
  
 Каждый элемент в \<области > элемента соответствует <xref:System.ServiceModel.Discovery.Configuration.ScopeElement>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScopeElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScopeElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Discovery.Configuration.ScopeElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Discovery.Configuration.ScopeElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.ServiceModel.Discovery.Configuration.ScopeElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public Uri Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Scope" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Discovery.Configuration.ScopeElement.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Scope { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : Uri with get, set" Usage="System.ServiceModel.Discovery.Configuration.ScopeElement.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.CallbackValidator(CallbackMethodName="ScopeValidatorCallback", Type=typeof(System.ServiceModel.Discovery.Configuration.ScopeElement))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("scope", Options=System.Configuration.ConfigurationPropertyOptions.IsRequired | System.Configuration.ConfigurationPropertyOptions.IsKey)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает URI области.</summary>
        <value>URI области.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
