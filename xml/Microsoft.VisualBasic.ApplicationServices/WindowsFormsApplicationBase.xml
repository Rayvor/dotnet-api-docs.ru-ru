<Type Name="WindowsFormsApplicationBase" FullName="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7cdc76b2a76f925bfd0759b377f2ba0802ed51d2" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70562915" /></Metadata><TypeSignature Language="C#" Value="public class WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WindowsFormsApplicationBase extends Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsFormsApplicationBase&#xA;Inherits ConsoleApplicationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsFormsApplicationBase : Microsoft::VisualBasic::ApplicationServices::ConsoleApplicationBase" />
  <TypeSignature Language="F#" Value="type WindowsFormsApplicationBase = class&#xA;    inherit ConsoleApplicationBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет свойства, методы и события, связанные с текущим приложением.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства, предоставляемые `My.Application` объектом, возвращают данные, связанные только с текущим приложением или библиотекой DLL. С помощью `My.Application` нельзя изменять данные системного уровня.  
  
 Объект `My.Application` состоит из следующих классов:  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> включает элементы, доступные во всех проектах;  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>предоставляет элементы, доступные в Windows Forms приложениях.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase>предоставляет элементы, доступные в консольных приложениях.  
  
   
  
## Examples  
 В этом примере используется цикл для прохода по открытым формам приложения, выбор форм, к которым можно получить доступ непосредственно из текущего потока, и отображение их заголовков <xref:System.Windows.Forms.ListBox> в элементе управления. Дополнительные сведения о доступе к открытым формам см. <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms%2A>в разделе.  
  
 [!code-vb[VbVbalrMyApplication#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#10)]  
  
 В этом примере требуется, чтобы приложение Windows Forms имело форму `Form1` с именем, которая содержит список `ListBox1`с именем.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsApplicationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsApplicationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsApplicationBase (Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(valuetype Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsApplicationBase(Microsoft::VisualBasic::ApplicationServices::AuthenticationMode authenticationMode);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.AuthenticationMode -&gt; Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" Usage="new Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase authenticationMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="authenticationMode" Type="Microsoft.VisualBasic.ApplicationServices.AuthenticationMode" />
      </Parameters>
      <Docs>
        <param name="authenticationMode">Одно из значений перечисления, указывающее режим проверки подлинности в приложении.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />, используя заданный режим проверки подлинности.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если параметр является значением <xref:System.Threading.Thread.CurrentPrincipal%2A> <xref:System.Security.Principal.WindowsPrincipal> перечисления, то этот конструктор пытается установить свойство текущего потока в значение для текущего пользователя. <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows> `authenticationMode`  
  
 Если параметр является значением перечисления, то этот конструктор <xref:System.Threading.Thread.CurrentPrincipal%2A> оставляет свойство текущего потока неизменным. <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined> `authenticationMode`  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationContext">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ApplicationContext ApplicationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ApplicationContext ApplicationContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationContext As ApplicationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ApplicationContext ^ ApplicationContext { System::Windows::Forms::ApplicationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationContext : System.Windows.Forms.ApplicationContext" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ApplicationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Windows.Forms.ApplicationContext" /> для текущего потока приложения Windows Forms.</summary>
        <value>Контекстные сведения о текущем потоке.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это расширенный член. Он не отображается в IntelliSense, если не щелкнуть вкладку **все** .  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ApplicationContext" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="DoEvents">
      <MemberSignature Language="C#" Value="public void DoEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DoEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoEvents();" />
      <MemberSignature Language="F#" Value="member this.DoEvents : unit -&gt; unit" Usage="windowsFormsApplicationBase.DoEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обрабатывает все сообщения Windows, которые в данный момент находятся в очереди сообщений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.DoEvents` Метод позволяет приложению обрабатывать другие события, которые могут возникнуть при выполнении кода. Метод имеет то же поведение, <xref:System.Windows.Forms.Application.DoEvents%2A> что и метод. `My.Application.DoEvents`  
  
 При запуске приложения Windows Forms создается новая форма, которая затем ожидает обработки событий. Каждый раз, когда форма обрабатывает событие, например нажатие кнопки, она обрабатывает весь код, связанный с этим событием. Все остальные события ожидают в очереди. Пока код обрабатывает событие, приложение не отвечает. Например, окно не перерисовывается, если в верхней части перетаскивается другое окно.  
  
 При вызове `My.Application.DoEvents` в коде приложение может управлять другими событиями. Например, если код добавляет данные <xref:System.Windows.Forms.ListBox> в цикл, а после каждого шага в цикле вызывается `My.Application.DoEvents`, форма перерисовывается при перетаскивании другого окна. Если удалить `My.Application.DoEvents` из кода, форма не будет перерисовываться до завершения выполнения обработчика событий нажатия кнопки.  
  
 Как правило, этот метод используется в цикле для обработки сообщений.  
  
> [!NOTE]
>  `My.Application.DoEvents` Метод не обрабатывает события точно так же, как и форма. Использование многопоточности для того, чтобы форма была непосредственно обрабатывала события. Дополнительные сведения см. в разделе [многопоточные приложения](https://msdn.microsoft.com/library/a06a1a56-dd16-44e8-bc01-2c2255511bc6).  
  
> [!CAUTION]
>  Если метод, обрабатывающий событие пользовательского интерфейса, вызывает `My.Application.DoEvents` метод, метод можно повторно указать перед завершением. Это может произойти из- `My.Application.DoEvents` за того, что метод обрабатывает сообщения Windows, а сообщения Windows могут вызывать события.  
  
 В следующей таблице приведен пример задачи, включающей `My.Application.DoEvents` метод.  
  
|Кому|См.|  
|-|-|  
|Разрешить форме отвечать на ввод пользовательского интерфейса при занятости|[Пошаговое руководство. Обработка событий](~/docs/visual-basic/programming-guide/language-features/events/walkthrough-handling-events.md)|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере используется `My.Application.DoEvents` метод, чтобы разрешить обновление `TextBox1` пользовательского интерфейса.  
  
 [!code-vb[VbVbalrMyApplication#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#6)]  
  
 Этот код должен быть в форме, имеющей `TextBox1` компонент `Text` со свойством.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, относящимися к пользовательским интерфейсам и буферу обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <altmember cref="M:System.Windows.Forms.Application.DoEvents" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableVisualStyles">
      <MemberSignature Language="C#" Value="protected bool EnableVisualStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVisualStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Property EnableVisualStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool EnableVisualStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableVisualStyles : bool with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, использует ли это приложение стили Windows XP для окон, элементов управления и т. д.</summary>
        <value>Значение <see cref="T:System.Boolean" />, показывающее, будет ли приложение использовать стили XP Windows для окон, элементов управления и т. д.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод использует это свойство, чтобы определить, следует ли  <xref:System.Windows.Forms.Application.EnableVisualStyles%2A> вызывать.  <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="HideSplashScreen">
      <MemberSignature Language="C#" Value="protected void HideSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void HideSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HideSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void HideSplashScreen();" />
      <MemberSignature Language="F#" Value="member this.HideSplashScreen : unit -&gt; unit" Usage="windowsFormsApplicationBase.HideSplashScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Скрывает экран-заставку приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> Класс создает экран-заставку в отдельном потоке. Этот метод маршалирует вызов в нужный поток.  
  
 Этот метод вызывается при завершении загрузки главной формы.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="IsSingleInstance">
      <MemberSignature Language="C#" Value="protected bool IsSingleInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleInstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsSingleInstance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsSingleInstance { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleInstance : bool with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, является ли это приложение приложением, допускающим одновременное выполнение только одной своей копии.</summary>
        <value><see langword="True" />чтобы указать, что это приложение является приложением с одним экземпляром; в противном случае —. <see langword="False" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A> Метод использует это свойство, чтобы определить, является ли это приложение приложением, одним экземпляром.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />
      <MemberSignature Language="VB.NET" Value="Protected Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainForm : System.Windows.Forms.Form with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или определяет главную форму для этого приложения.</summary>
        <value>Главная форма для этого приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы получить или <xref:System.Windows.Forms.Form> задать объект, используемый Visual Basicной моделью запуска или завершения приложения в качестве главной формы приложения. `MainForm`  
  
 Это свойство поддерживает Visual Basic модель запуска и завершения работы приложения. Дополнительные сведения см. в разделе Общие сведения о [модели приложения Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Изменения этого свойства не сохраняются при закрытии приложения. Чтобы изменить главную форму окончательно, необходимо изменить параметр в **конструкторе проектов**.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="MinimumSplashScreenDisplayTime">
      <MemberSignature Language="C#" Value="public int MinimumSplashScreenDisplayTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumSplashScreenDisplayTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumSplashScreenDisplayTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumSplashScreenDisplayTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSplashScreenDisplayTime : int with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает минимальный интервал времени (в миллисекундах), в течение которого отображается экран-заставка.</summary>
        <value>Минимальный интервал времени (в миллисекундах), в течение которого отображается экран-заставка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.MinimumSplashScreenDisplayTime` Свойство позволяет указать минимальную продолжительность времени, в течение которого должен отображаться экран-заставка приложения. Если основная форма завершает инициализацию за меньшее время, чем указано в этом свойстве, экран-заставка остается до тех пор, пока не закончится время, когда будет отображена Главная форма. Если для запуска приложения требуется больше времени, экран-заставка закрывается после того, как основная форма становится активной.  
  
 При добавлении экрана-заставки в приложение с помощью конструктора проектов он устанавливает `My.Application.MinimumSplashScreenDisplayTime` свойство в значение 2000, предоставляя минимальное время отображения, равное двум секундам.  
  
 Это свойство поддерживает модель приложения Visual Basic. Дополнительные сведения см. в разделе Общие сведения о [модели приложения Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 `My.Application.MinimumSplashScreenDisplayTime` Свойство следует задать в методе, который <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> переопределяет метод или <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> . Код, переопределяющий методы <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> класса, должен быть указан в файле ApplicationEvents. vb, который по умолчанию скрыт.  
  
| |  
|-|  
|Доступ к окну редактора кода для переопределения членов|  
|1. выбрав проект в **Обозреватель решений**, в меню **проект** выберите пункт **свойства** .<br />2. Перейдите на вкладку **приложение** .<br />3. Нажмите кнопку " **Просмотреть события приложения** ", чтобы открыть редактор кода.<br /><br />Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере демонстрируется задание `My.Application.MinimumSplashScreenDisplayTime` свойства путем переопределения <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> свойство.  
  
 [!code-vb[VbVbalrMyApplication#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#51)]  
  
 В этом примере предполагается, что у проекта есть экран-заставка.  
  
 Этот код необходимо ввести в окне редактора кода для событий приложения. Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении доступности сети.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложение вызывает `NetworkAvailabilityChanged` событие при каждом изменении доступности сети. Для получения нового состояния <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> сетевого подключения можно `e` использовать свойство параметра. Чтобы получить текущее состояние сетевого подключения, используйте <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> свойство.  
  
 Это событие возникает в основном потоке приложения с другими событиями пользовательского интерфейса. Это позволяет обработчику событий обращаться непосредственно к пользовательскому интерфейсу приложения. Однако если приложение занято обработкой другого события пользовательского интерфейса при возникновении этого события, это событие не может быть обработано до тех пор, пока другой обработчик <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> событий не завершит работу или не вызовет метод.  
  
 <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged> Событие предоставляет те же функциональные возможности, что и это событие, но доступно для всех типов приложений.  
  
 Код для `NetworkAvailabilityChanged` обработчика событий хранится в файле ApplicationEvents. vb, который по умолчанию скрыт.  
  
| |  
|-|  
|Доступ к окну редактора кода для событий приложения|  
|1. Выберите проект в **Обозреватель решений.** В меню **проект** выберите пункт **Свойства** .<br />2. Перейдите на вкладку **приложение** .<br />3. Нажмите кнопку " **Просмотреть события приложения** ", чтобы открыть редактор кода.<br /><br />Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
> [!NOTE]
>  Многие сетевые концентраторы обеспечивают сетевое подключение, даже если концентратор отключен от более крупной сети. Следовательно, для проводных подключений это событие указывает на изменение соединения между компьютером и концентратором.  
  
> [!NOTE]
>  Это `NetworkAvailabilityChanged` событие не вызывается приложениями, когда они выполняются в Windows 95 и Windows 98, или когда они запускаются не администратором в Windows 2000. Если приложение может работать в этих операционных системах, используйте <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> свойство, чтобы проверить доступность сети.  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере вызывается `SetConnectionStatus` метод класса по умолчанию `Form1` при изменении доступности сети.  
  
 Необходимо ввести код в окне редактора кода для событий приложения. Чтобы открыть это окно, следуйте инструкциям в разделе "Примечания" этого раздела.  
  
 Проект должен иметь форму с именем `Form1`. Он должен иметь метод с именем `SetConnectionStatus` , который `Boolean` принимает параметр.  
  
 [!code-vb[VbVbalrMyApplication#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <altmember cref="N:Microsoft.VisualBasic.ApplicationServices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCreateMainForm">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateMainForm ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnCreateMainForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateMainForm ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateMainForm();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateMainForm : unit -&gt; unit&#xA;override this.OnCreateMainForm : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnCreateMainForm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределение в производном классе позволяет разработчику создавать код, который настраивает экран-заставку и главную форму.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию этот метод не выполняет никаких действий. Однако при выборе главной формы для приложения в **конструкторе проектов**Visual Basic конструктор переопределяет этот метод с помощью метода, который присваивает <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> свойству новый экземпляр главной формы.  
  
 Этот метод вызывается <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A> методом.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OnCreateSplashScreen">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnCreateSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateSplashScreen();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateSplashScreen : unit -&gt; unit&#xA;override this.OnCreateSplashScreen : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnCreateSplashScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределение в производном классе позволяет разработчику создавать код, инициализирующий экран-заставку.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию этот метод не выполняет никаких действий. Если выбрать экран-заставку для приложения в **конструкторе проектов**Visual Basic, конструктор переопределит <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> метод методом, который присваивает <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A> свойству новый экземпляр формы заставки.  
  
 Этот метод вызывается <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> методом.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected virtual bool OnInitialize (System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; commandLineArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnInitialize(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; commandLineArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInitialize (commandLineArgs As ReadOnlyCollection(Of String)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnInitialize(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ commandLineArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnInitialize : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; -&gt; bool&#xA;override this.OnInitialize : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; -&gt; bool" Usage="windowsFormsApplicationBase.OnInitialize commandLineArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.STAThread</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLineArgs" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="commandLineArgs">Коллекция только для чтения, содержащая аргументы командной строки в виде строк для текущего приложения.</param>
        <summary>Определяет визуальные стили, стили отображения текста и текущего участника для основного потока приложения (если приложение использует проверку подлинности Windows), а также инициализирует экран-заставку, если таковой определен.</summary>
        <returns>Значение <see cref="T:System.Boolean" />, показывающее, должен ли продолжаться запуск приложения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию этот метод задает стили оформления, стили отображения текста и текущий участник для основного потока приложения (если приложение использует проверку подлинности Windows) и вызывает `ShowSplashScreen` , `/nosplash` если `-nosplash` не используется в качестве аргумент командной строки.  
  
 Этот метод вызывает следующие методы:  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OnRun">
      <MemberSignature Language="C#" Value="protected virtual void OnRun ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnRun() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRun ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRun();" />
      <MemberSignature Language="F#" Value="abstract member OnRun : unit -&gt; unit&#xA;override this.OnRun : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnRun " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Предоставляет отправную точку для момента, когда основное приложение будет готово к началу запуска после выполнения инициализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию перед входом в цикл обработки сообщений Windows Forms этот метод вызывает `OnCreateMainForm` (для создания главной формы приложения) и `HideSplashScreen` (чтобы закрыть экран-заставку):  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>. Предоставляет конструктору способ создания кода, который инициализирует главную форму.  
  
     По умолчанию этот метод не выполняет никаких действий. Однако при выборе главной формы для приложения в **конструкторе проектов**Visual Basic конструктор переопределяет <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A> метод методом, который присваивает <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> свойству новый экземпляр главной формы.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>. Если в приложении определен экран-заставка и он открыт, этот метод закрывает экран-заставку.  
  
     По умолчанию этот метод закрывает экран-заставку.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShutdown();" />
      <MemberSignature Language="F#" Value="abstract member OnShutdown : unit -&gt; unit&#xA;override this.OnShutdown : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределение в производном классе позволяет выполнить код при завершении работы приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не выполняется, если в основном приложении возникает необработанное исключение.  
  
 По умолчанию этот метод вызывает <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown> событие.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OnStartup">
      <MemberSignature Language="C#" Value="protected virtual bool OnStartup (Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnStartup(class Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStartup (eventArgs As StartupEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStartup(Microsoft::VisualBasic::ApplicationServices::StartupEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnStartup : Microsoft.VisualBasic.ApplicationServices.StartupEventArgs -&gt; bool&#xA;override this.OnStartup : Microsoft.VisualBasic.ApplicationServices.StartupEventArgs -&gt; bool" Usage="windowsFormsApplicationBase.OnStartup eventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">Аргументы командной строки приложения показывают, должен ли быть отменен запуск приложения.</param>
        <summary>Переопределение в производном классе позволяет выполнить код при завершении работы приложения.</summary>
        <returns>Значение <see cref="T:System.Boolean" /> показывает, должно ли продолжаться выполнение запуска приложения после запуска.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию этот метод вызывает <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> событие. Обработчик событий может установить <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство аргумента события. Если <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> имеет `True`значение, этот метод `False` возвращает значение, чтобы отменить запуск приложения. В противном случае данный метод возвращает значение `True`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OnStartupNextInstance">
      <MemberSignature Language="C#" Value="protected virtual void OnStartupNextInstance (Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnStartupNextInstance(class Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStartupNextInstance (eventArgs As StartupNextInstanceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStartupNextInstance(Microsoft::VisualBasic::ApplicationServices::StartupNextInstanceEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnStartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs -&gt; unit&#xA;override this.OnStartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs -&gt; unit" Usage="windowsFormsApplicationBase.OnStartupNextInstance eventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">Аргументы командной строки последующего экземпляра приложения показывают, должен ли первый экземпляр приложения быть выведен на передний план при выходе из обработчика исключений.</param>
        <summary>Переопределение в производном классе позволяет выполнить код при запуске последующего экземпляра приложения, допускающего одновременное выполнение только одной своей копии.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию этот метод вызывает <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> событие. Обработчик событий может установить <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> свойство аргумента события. Если <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> имеет `True`значение, метод активирует главную форму. В противном случае Главная форма остается в текущем состоянии.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="protected virtual bool OnUnhandledException (Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnUnhandledException(class Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnUnhandledException (e As UnhandledExceptionEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnUnhandledException(Microsoft::VisualBasic::ApplicationServices::UnhandledExceptionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs -&gt; bool&#xA;override this.OnUnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs -&gt; bool" Usage="windowsFormsApplicationBase.OnUnhandledException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные для события.</param>
        <summary>Переопределение в производном классе позволяет выполнять код, когда в приложении возникает необработанное исключение.</summary>
        <returns>Значение <see cref="T:System.Boolean" />, показывающее, возникло ли событие <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию этот метод вызывает <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> событие, если отладчик не присоединен и пользователь `UnhandledException` обрабатывает событие. Обработчик событий может установить <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> свойство. Если <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> имеет `False`значение или событие не обрабатывается, приложение завершает работу после возврата из обработчика исключений. В противном случае управление приложением возвращается в цикл сообщений Windows Forms.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OpenForms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormCollection OpenForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.FormCollection OpenForms" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpenForms As FormCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormCollection ^ OpenForms { System::Windows::Forms::FormCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OpenForms : System.Windows.Forms.FormCollection" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию всех открытых форм приложения.</summary>
        <value>Коллекция, содержащая все открытые формы приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.OpenForms` Свойство возвращает коллекцию всех открытых форм приложения. Поведение идентично <xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=nameWithType> свойству.  
  
> [!NOTE]
>  `My.Application.OpenForms` Свойство возвращает все открытые формы, независимо от того, в каком потоке они были открыты. Прежде чем обращаться <xref:System.Windows.Forms.Control.InvokeRequired%2A> к нему, следует проверить свойство каждой формы; в противном случае она <xref:System.InvalidOperationException> может вызвать исключение.  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере выполняется циклический перебор открытых форм приложения, выбираются объекты, непосредственно доступные текущему потоку, и отображаются их заголовки <xref:System.Windows.Forms.ListBox> в элементе управления. В этом примере требуется, чтобы приложение Windows Forms имело форму `Form1` с именем, которая содержит список `ListBox1`с именем.  
  
 [!code-vb[VbVbalrMyApplication#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#10)]  
  
 В этом примере выполняется перебор открытых форм приложения и отображаются их заголовки в <xref:System.Windows.Forms.ListBox> элементе управления.  
  
 [!code-vb[VbVbalrMyApplication#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <altmember cref="T:System.Windows.Forms.FormCollection" />
        <altmember cref="P:System.Windows.Forms.Application.OpenForms" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Run(string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="member this.Run : string[] -&gt; unit" Usage="windowsFormsApplicationBase.Run commandLine" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="commandLine">Командная строка из <see langword="Sub Main" />.</param>
        <summary>Настраивает и запускает модель приложений Visual Basic.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Run` Метод обеспечивает поддержку модели приложения Visual Basic. Этот метод должен вызываться только из приложения `Sub Main`. По умолчанию в `Sub Main` приложении Windows Forms вызывается этот метод. Дополнительные сведения см. в разделе Общие сведения о [модели приложения Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Управляет возможностью доступа ко всем переменным среды. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Управляет возможностью доступа к переменным реестра. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, относящимися к пользовательским интерфейсам и буферу обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Управляет правами на установление или принятие подключений для адреса транспорта. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Управляет доступом к компоненту счетчика производительности Windows NT. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md">Обзор модели приложения в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="SaveMySettingsOnExit">
      <MemberSignature Language="C#" Value="public bool SaveMySettingsOnExit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveMySettingsOnExit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveMySettingsOnExit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveMySettingsOnExit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveMySettingsOnExit : bool with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, сохраняет ли приложение параметры пользователя при завершении работы.</summary>
        <value><see langword="True" />чтобы указать, что приложение сохраняет параметры пользователя при выходе. В противном случае, <see langword="False" /> чтобы указать, что параметры не сохраняются неявно.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `SaveMySettingsOnExit` Свойство позволяет пользователю изменить способ сохранения параметров приложением во время выполнения. Можно явно сохранить изменения параметров с помощью <xref:System.Configuration.ApplicationSettingsBase.Save%2A> метода `My.Settings` объекта. Дополнительные сведения об изменении и сохранении параметров см. в разделе [свойства приложения](https://msdn.microsoft.com/library/0ad4926f-636e-41f8-a5b1-faf9d9b0a254).  
  
 Изменения этого свойства не сохраняются при закрытии приложения. Чтобы изменить `SaveMySettingsOnExit` свойство навсегда, необходимо изменить параметр в **конструкторе проектов**.  
  
| |  
|-|  
|Изменение параметра в конструкторе проектов|  
|1. Выберите проект в **Обозреватель решений**. В меню **проект** выберите пункт **Свойства** .<br />2. Перейдите на вкладку **приложение** .<br />3. Выберите **сохранить My. Settings при завершении работы**.|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 Этот пример состоит из двух частей.  
  
-   Подпрограммы, которая инициализирует проверенное состояние <xref:System.Windows.Forms.CheckBox> элемента управления текущим значением `SaveMySettingsOnExit` свойства. `InitializeSaveMySettingsOnExit`  
  
-   Подпрограммы, которая обрабатывает изменения <xref:System.Windows.Forms.CheckBox> в элементе управления для обновления `My.Application.SaveMySettingsOnExit` свойства. `SaveMySettingsOnExit_CheckedChanged`  
  
 [!code-vb[VbVbalrMyApplication#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#12)]  
  
 Чтобы этот пример работал, приложение должно иметь <xref:System.Windows.Forms.CheckBox> элемент управления с именем. `SaveMySettingsOnExit`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowSplashScreen">
      <MemberSignature Language="C#" Value="protected void ShowSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void ShowSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ShowSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowSplashScreen();" />
      <MemberSignature Language="F#" Value="member this.ShowSplashScreen : unit -&gt; unit" Usage="windowsFormsApplicationBase.ShowSplashScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет, определен ли для предложения экран-заставка, и если да, выводит его.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию этот метод вызывается `OnCreateSplashScreen` потокобезопасным способом.  
  
 Метод содержит код, отображающий экран-заставку по крайней мере для числа миллисекунд, заданных <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A> свойством. <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A> Чтобы использовать эту функцию `My.Application.MinimumSplashScreenDisplayTime` , необходимо задать свойство в методе, который <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A> переопределяет метод или <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> , или добавить экран-заставку в приложение с помощью **конструктора проектов**. Для получения дополнительной информации см. <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>.  
  
 Этот метод вызывается <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> методом.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event Shutdown As ShutdownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::ShutdownEventHandler ^ Shutdown;" />
      <MemberSignature Language="F#" Value="member this.Shutdown : Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler " Usage="member this.Shutdown : Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит по завершении работы приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложение вызывает `Shutdown` событие перед его завершением. Это позволяет управлять тем, как приложение закрывает свои ресурсы. Это событие является частью модели приложения Visual Basic. Дополнительные сведения см. в разделе Общие сведения о [модели приложения Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Код для `Shutdown` обработчика событий хранится в файле ApplicationEvents. vb, который по умолчанию скрыт.  
  
| |  
|-|  
|Доступ к окну редактора кода для событий приложения|  
|1. выбрав проект в **Обозреватель решений**, в меню **проект** выберите пункт **свойства** .<br />2. Перейдите на вкладку **приложение** .<br />3. Нажмите кнопку " **Просмотреть события приложения** ", чтобы открыть редактор кода.<br /><br />Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере записываются сообщения при завершении работы приложения.  
  
 [!code-vb[VbVbalrMyApplication#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#13)]  
  
 Необходимо ввести код в окне редактора кода для событий приложения. Чтобы открыть это окно, следуйте инструкциям в разделе "Примечания" этого раздела. Дополнительные сведения см. [в разделе как записывать сообщения при запуске или завершении работы приложения](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-messages-when-the-application-starts-or-shuts-down.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-messages-when-the-application-starts-or-shuts-down.md">Практическое руководство. Запись в журнал сообщений при запуске и завершении приложения</related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic">Приложение" в конструкторе проектов (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md">Обзор модели приложения в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="ShutdownStyle">
      <MemberSignature Language="C#" Value="protected internal Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property ShutdownStyle As ShutdownMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Microsoft::VisualBasic::ApplicationServices::ShutdownMode ShutdownStyle { Microsoft::VisualBasic::ApplicationServices::ShutdownMode get(); void set(Microsoft::VisualBasic::ApplicationServices::ShutdownMode value); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownStyle : Microsoft.VisualBasic.ApplicationServices.ShutdownMode with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.ShutdownMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, что произойдет после закрытия главной формы приложения.</summary>
        <value>Одно из значений перечисления, указывающее, что должно делать приложение при закрытии главной формы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> Метод проверяет значение этого свойства, чтобы определить, должно ли приложение завершить работу при закрытии главной формы, или если другую открытую форму следует повысить как новую главную форму.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode" />
      </Docs>
    </Member>
    <Member MemberName="SplashScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form SplashScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form SplashScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property SplashScreen As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ SplashScreen { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SplashScreen : System.Windows.Forms.Form with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает экран-заставку для этого приложения.</summary>
        <value>Экран-заставка для приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство позволяет получить или <xref:System.Windows.Forms.Form> задать объект, который приложение использует в качестве экрана-заставки, первая графическая форма, отображаемая при запуске приложения. `My.Application.SplashScreen`  
  
 Это свойство поддерживает модель приложения Visual Basic. Дополнительные сведения см. в разделе Общие сведения о [модели приложения Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Изменения этого свойства не сохраняются при закрытии приложения. Чтобы изменить экран-заставку навсегда, необходимо изменить параметр в **конструкторе проектов**.  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере используется `My.Application.SplashScreen` свойство `My.Application.Startup` и событие для обновления экрана-заставки с информацией о состоянии при запуске приложения.  
  
 [!code-vb[VbVbalrMyApplication#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#14)]  
  
 В этом примере требуется, чтобы проект имел экран-заставку с именем `SplashScreen1`. Экран-заставка должен иметь свойство с именем `Status` , которое обновляет свой пользовательский интерфейс.  
  
 Этот код необходимо ввести в окне редактора кода для событий приложения. Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Одно и то же значение присвоено этому свойству и свойству <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
        <altmember cref="T:System.Windows.Forms.Form" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup" />
      <MemberSignature Language="VB.NET" Value="Public Event Startup As StartupEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::StartupEventHandler ^ Startup;" />
      <MemberSignature Language="F#" Value="member this.Startup : Microsoft.VisualBasic.ApplicationServices.StartupEventHandler " Usage="member this.Startup : Microsoft.VisualBasic.ApplicationServices.StartupEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.StartupEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при запуске приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В нормальном (не единственном) экземпляре приложение создает `Startup` событие при каждом запуске. Приложение с одним экземпляром вызывает событие `Startup` , когда оно запускается только в том случае, если приложение еще не активно; в противном `StartupNextInstance` случае оно вызывает событие. Для получения дополнительной информации см. <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>.  
  
 Это событие является частью модели приложения Visual Basic. Дополнительные сведения см. в разделе Общие сведения о [модели приложения Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Свойство `e`  параметра можно использовать для управления загрузкой начальной формы приложения. Если свойство имеет `True`значение, начальная форма не запускается. <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> В этом случае код должен вызывать альтернативный путь кода запуска.  
  
 Для доступа к аргументам командной строки `e` приложения можно использовать <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> свойство параметра или свойства.  
  
 Код для `Startup` обработчика событий хранится в файле ApplicationEvents. vb, который по умолчанию скрыт.  
  
| |  
|-|  
|Доступ к окну редактора кода для событий приложения|  
|1. выбрав проект в **Обозреватель решений**, в меню **проект** выберите пункт **свойства** .<br />2. Перейдите на вкладку **приложение** .<br />3. Нажмите кнопку " **Просмотреть события приложения** ", чтобы открыть редактор кода.<br /><br /> Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере используется `My.Application.SplashScreen` свойство `My.Application.Startup` и событие для обновления экрана-заставки с информацией о состоянии при запуске приложения.  
  
 [!code-vb[VbVbalrMyApplication#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#14)]  
  
 В этом примере требуется, чтобы проект имел экран-заставку с именем `SplashScreen1`. Экран-заставка должен иметь свойство с `Status` именем, которое обновляет свой пользовательский интерфейс.  
  
 Необходимо ввести код в окне редактора кода для событий приложения. Чтобы открыть это окно, следуйте инструкциям в разделе "Примечания" этого раздела. Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Управляет возможностью добавления обработчика событий для этого события. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" />.</permission>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic">Приложение" в конструкторе проектов (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md">Обзор модели приложения в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="StartupNextInstance">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
      <MemberSignature Language="VB.NET" Value="Public Event StartupNextInstance As StartupNextInstanceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::StartupNextInstanceEventHandler ^ StartupNextInstance;" />
      <MemberSignature Language="F#" Value="member this.StartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler " Usage="member this.StartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при попытке запуска приложения, допускающего одновременное выполнение только одной своей копии, при наличии уже активного экземпляра этого приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложение с одним экземпляром вызывает <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> событие при попытке перезапустить приложение, когда оно уже активно. Когда приложение с одним экземпляром запускается в первый раз, оно вызывает <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> событие. Для получения дополнительной информации см. <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>.  
  
 Это событие является частью модели приложения Visual Basic. Дополнительные сведения см. в разделе Общие сведения о [модели приложения Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Это событие возникает в основном потоке приложения с другими событиями пользовательского интерфейса. Это позволяет обработчику событий получить доступ непосредственно к пользовательскому интерфейсу приложения. Однако если приложение занято обработкой другого события пользовательского интерфейса при возникновении этого события, это событие не может быть обработано до тех пор, пока другой обработчик <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> событий не завершит работу или не вызовет метод.  
  
> [!NOTE]
>  `StartupNextInstance` Событие возникает только в приложениях с одним экземпляром. Чтобы включить поведение одного экземпляра для приложения, необходимо установить флажок **сделать одно экземплярное приложение** в конструкторе проектов.  
  
| |  
|-|  
|Создание отдельного экземпляра приложения|  
|1. выбрав проект в **Обозреватель решений**, в меню **проект** выберите пункт **свойства** .<br />2. Перейдите на вкладку **приложение** .<br />3. Установите флажок **сделать одно экземплярное приложение** .|  
  
 Чтобы получить доступ к <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> аргументам для `e` последующих попыток запуска приложения с одним экземпляром, необходимо использовать свойство параметра. <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> Свойство предоставляет аргументы, используемые для запуска первого экземпляра приложения с одним экземпляром.  
  
 Код для <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> обработчика событий хранится в файле ApplicationEvents. vb, который по умолчанию скрыт.  
  
| |  
|-|  
|Доступ к окну редактора кода для событий приложения|  
|1. выбрав проект в **Обозреватель решений**, в меню **проект** выберите пункт **свойства** .<br />2. Перейдите на вкладку **приложение** .<br />3. Нажмите кнопку " **Просмотреть события приложения** ", чтобы открыть редактор кода.<br /><br />Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
 В следующей таблице приведены примеры задач, `My.Application.StartupNextInstance` включающих событие.  
  
|Кому|См.|  
|-|-|  
|Проверьте аргументы командной строки первого экземпляра приложения.|<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|Да|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере используется `e` параметр <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> обработчика событий для проверки аргументов командной строки приложения. Если найден аргумент, начинающийся с `/input=`, то отображается остальная часть этого аргумента.  
  
 [!code-vb[VbVbalrMyApplication#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#15)]  
  
 Необходимо ввести код в окне редактора кода для событий приложения. Чтобы открыть это окно, следуйте инструкциям в разделе "Примечания" этого раздела. Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic">Приложение" в конструкторе проектов (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md">Обзор модели приложения в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledException As UnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::UnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler " Usage="member this.UnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, если приложение обнаруживает необработанное исключение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложение вызывает `UnhandledException` событие при обнаружении необработанного исключения. Это событие является частью модели приложения Visual Basic. Дополнительные сведения см. в разделе Общие сведения о [модели приложения Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 <xref:System.Threading.ThreadExceptionEventArgs.Exception%2A> Свойство `e`  параметра можно использовать для доступа к необработанному исключению, которое привело к возникновению этого события.  
  
 <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> Свойство `e`  параметра можно использовать для управления выходом из приложения. По умолчанию <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> имеет `True`значение. Поэтому приложение завершает работу после завершения `UnhandledException` обработчика событий. Можно задать значение `False` `UnhandledException` в обработчике событий, чтобы приложение заработало и возвращалось в состояние ожидания.  
  
 Код для `UnhandledException` обработчика событий хранится в файле ApplicationEvents. vb, который по умолчанию скрыт.  
  
| |  
|-|  
|Доступ к окну редактора кода для событий приложения|  
|1. выбрав проект в **Обозреватель решений**, в меню **проект** выберите пункт **свойства** .<br />2. Перейдите на вкладку **приложение** .<br />3. Нажмите кнопку " **Просмотреть события приложения** ", чтобы открыть редактор кода.|  
  
 Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
> [!NOTE]
>  Компилятор Visual Basic не позволяет приложениям, созданным для отладки, от вызова этого события, включать отладчик для обработки необработанных исключений. Это означает, что если вы тестируете приложение, запустив его в отладчике интегрированной среды разработки Visual Studio, `UnhandledException` обработчик событий не будет вызываться. Дополнительные сведения о создании приложений для отладки см. в разделе [/Debug (Visual Basic)](~/docs/visual-basic/reference/command-line-compiler/debug.md).  
  
## <a name="tasks"></a>Задачи  
 В следующей таблице приведены примеры задач, в которых участвует `My.Application.UnhandledException` данное событие.  
  
|Кому|См.|  
|-|-|  
|Регистрация необработанных исключений|[Практическое руководство. Запись в журнал сведений об исключениях](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows Forms|**Да**|  
|Библиотека классов|Нет|  
|Консольное приложение|Нет|  
|Библиотека элементов управления Windows Forms|Нет|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|Нет|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере используется `My.Application.UnhandledException` событие для записи в журнал любых необработанных исключений.  
  
 Необходимо ввести код в окне редактора кода для событий приложения. Чтобы открыть это окно, выполните процедуру, описанную в разделе «Примечания» этого раздела. Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 `UnhandledException` Поскольку событие не возникает при присоединении отладчика к приложению, необходимо выполнить этот пример вне интегрированной среды разработки Visual Studio.  
  
 [!code-vb[VbVbalrMyApplication#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#17)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Управляет возможностью добавления обработчика событий для этого события. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <altmember cref="N:Microsoft.VisualBasic.ApplicationServices" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md">Обзор модели приложения в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="protected static bool UseCompatibleTextRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property bool UseCompatibleTextRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleTextRendering : bool" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределение этого свойства в производном классе позволяет разработчику задать механизм отрисовки текста по умолчанию для форм приложения.</summary>
        <value><see langword="Boolean" />. Значение <see langword="False" /> показывает, что приложение должно использовать механизм отрисовки текста по умолчанию для [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]. Значение <see langword="True" /> показывает, что приложение должно использовать механизм отрисовки текста для Visual Basic .NET 2002 и Visual Basic .NET 2003.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию это свойство возвращает `False` , чтобы указать, что [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)] обработчик визуализации текста GDI должен использоваться для форм приложения. Однако можно переопределить это свойство, чтобы оно возвращало `True` и было указано, что формы приложения используют механизм визуализации текста GDI+, который используется в Visual Basic .NET 2002 и Visual Basic .NET 2003.  
  
 Это свойство вызывается <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> конструктором.  
  
 Код, переопределяющий методы <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> класса, должен быть указан в файле ApplicationEvents. vb, который по умолчанию скрыт.  
  
| |  
|-|  
|Доступ к окну редактора кода для переопределения членов|  
|1. выбрав проект в **Обозреватель решений**, в меню **проект** выберите пункт **свойства** .<br />2. Перейдите на вкладку **приложение** .<br />3. Нажмите кнопку " **Просмотреть события приложения** ", чтобы открыть редактор кода.<br /><br />Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
   
  
## Examples  
 В этом примере показано, как задать обработчик визуализации текста GDI+ в качестве подсистемы отрисовки по умолчанию приложения, <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A> переопределив свойство.  
  
```vb  
Protected Overloads Shared ReadOnly Property UseCompatibleTextRendering() As Boolean  
    Get  
        ' Use the GDI+ text rendering engine.  
        Return True  
    End Get  
End Property  
```  
  
 Этот код необходимо ввести в окне редактора кода для событий приложения. Дополнительные сведения см. в разделе [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Расширение модели приложения Visual Basic</related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic">Application Page, Project Designer (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
