<Type Name="Cursor" FullName="System.Windows.Forms.DataVisualization.Charting.Cursor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67e4fd12db024bf9957bf29c13b8e0f68113c4a7" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72398878" /></Metadata><TypeSignature Language="C#" Value="public class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor : IDisposable" />
  <TypeSignature Language="F#" Value="type Cursor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет горизонтальную или вертикальную линию, определяющую положение вдоль оси.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Курсор — это горизонтальная или вертикальная линия, определяющая позицию вдоль оси. Выделенный диапазон — это диапазон вдоль оси, определяемый начальной и конечной позицией, который отображается с использованием полупрозрачного цвета.  
  
 Курсоры и выделенные диапазоны реализуются классом <xref:System.Windows.Forms.DataVisualization.Charting.Cursor>, который предоставляется как свойства <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> объекта <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>. Объект <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> предназначен для оси X области диаграммы, а объект <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> — для оси Y. Свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> этих объектов определяет, является ли связанная ось первичной или вторичной.  
  
 Единственной функцией выделения курсора и выбора диапазона, находящегося вне класса <xref:System.Windows.Forms.DataVisualization.Charting.Cursor>, являются события, связанные с курсором, и выделение диапазона, которое находится в корневом объекте <xref:System.Windows.Forms.DataVisualization.Charting.Chart>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScroll : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, определяющий будет ли осуществляться прокрутка, если операция выделения диапазона выходит за границы области диаграммы.</summary>
        <value>Значение <see langword="true" />, если представление данных может прокручиваться автоматически; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в представлении данных не отображаются все точки данных в наборе диаграмм, а диапазон выбран пользователем, то автоматическая прокрутка представления будет выполняться, если это свойство имеет значение `true`, а указатель мыши и, следовательно, курсор перемещается за пределами границы области диаграммы.  
  
 Прокрутка выполняется вдоль оси только при наличии дополнительных данных для просмотра.  
  
 Представление данных, в котором не отображаются все данные, обычно приводит к результату, если пользователь масштабируется до подмножества данных. Представления и масштабирования реализуются классом <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType AxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisType AxisType { System::Windows::Forms::DataVisualization::Charting::AxisType get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.AxisType : System.Windows.Forms.DataVisualization.Charting.AxisType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип оси, к которое прикреплен курсор.</summary>
        <value>Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" />, определяющее, к какой оси прикреплен курсор: к основной или к вспомогательной.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существует два набора осей: первичный и вторичный. Основные оси для всех диаграмм, за исключением линейчатых диаграмм, расположены в нижней части (основной оси X) и левой (основной оси Y) области диаграммы.  
  
 Вторичные оси расположены на правой панели (вторичная ось X) и верхней границе (вспомогательной оси Y) области диаграммы.  
  
> [!NOTE]
>  Если все ряды, построенные в области диаграммы, используют только один тип оси (например, основная ось X), то установка этого свойства в тип оси, не используемый серией (в данном случае дополнительная ось X), не будет оказывать никакого влияния. курсор будет автоматически присоединен к единственной оси, используемой для построения ряда.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождение ресурсов, используемых классом <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cursor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет определяемые приложением задачи, связанные с освобождением или сбросом неуправляемых ресурсов.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cursor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" />, если требуется освободить управляемые и неуправляемые ресурсы; значение <see langword="false" />, если требуется освободить только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые и, при необходимости, управляемые ресурсы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает интервал курсора.</summary>
        <value>Интервал курсора.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> определяет, как часто и где может рисоваться конечный пользователь, а также место, где можно изобразить начальную и конечную точки выделения диапазона. Нулевое значение, которое является значением по умолчанию, означает, что выделенный курсор или диапазон можно изобразить в любом месте области диаграммы. Ненулевое значение означает, что курсор или начальная и (или) конечная точка выбранного диапазона будут отображаться только с указанным интервалом, установленным при взаимодействии с пользователем.  
  
 Единица измерения определяется свойством <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>.  
  
 Это свойство также можно использовать в сочетании со свойством <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>, которое позволяет указать смещение с указанного интервала. Например, чтобы разрешить отображение курсора каждую субботу, необходимо указать интервал в 1 неделю, а также смещение интервала в 6 дней. В .NET Framework воскресенье считается первым днем недели.  
  
 Если пользовательский интерфейс курсора включен, установив свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> и нажимая кнопку мыши внутри области диаграммы, положение курсора будет установлено в ближайшее допустимое расположение.  
  
> [!IMPORTANT]
>  Свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> не действует, если задать позицию курсора или выбор диапазона программным способом.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffset : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает смещение интервала, которое определяет, где можно нарисовать курсор и выделение диапазона при их задании пользователем.</summary>
        <value>Смещение от интервала. Значение по умолчанию — нуль; это означает, что ограничения отсутствуют, а отрицательные значения разрешены.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> определяет смещение интервала курсора, а также начальную и/конечную точки выделения диапазона. В сочетании со свойством <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> это свойство определяет, где можно отобразить курсор и диапазон в области диаграммы. Нулевое значение, которое является значением по умолчанию, означает отсутствие смещения.  
  
 Единица измерения определяется свойством <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>.  
  
 Смещение влияет на расположения, в которых можно нарисовать курсор, а также начальную и/конечную точки выделения диапазона. Например, чтобы разрешить отображение курсора каждую субботу, необходимо указать интервал в 1 неделю, а также смещение интервала в 6 дней. В .NET Framework воскресенье считается первым днем недели.  
  
 Если пользовательский интерфейс курсора включен, установив свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> и нажимая кнопку мыши внутри области диаграммы, положение курсора будет установлено в ближайшее допустимое расположение.  
  
> [!IMPORTANT]
>  Свойства, связанные с интервалом, не действуют, если выделение диапазона или позиции курсора устанавливаются программно.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffsetType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип смещения интервала курсора и диапазона выделения для оси.</summary>
        <value>Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" />, определяющее единицу измерения смещения интервала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> определяет тип смещения интервала, который указывается с помощью свойства <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>.  
  
 Если свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> имеет значение <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, будет использоваться параметр свойства <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>.  
  
> [!NOTE]
>  Свойства, связанные с интервалом, не действуют, если выделение диапазона или позиции курсора устанавливаются программно.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип интервала курсора и диапазона выделения для оси.</summary>
        <value>Тип интервала курсора и выбранного диапазона для оси.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> определяет тип интервала, который указывается с помощью свойства <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>.  
  
 Если тип интервала равен <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, единица измерения для интервала рассматривается как `double`, что эквивалентно одному дню, когда указаны значения <xref:System.DateTime>.  
  
> [!NOTE]
>  Свойства, связанные с интервалом, не действуют, если выделение диапазона или позиции курсора устанавливаются программно.  
  
 Если тип интервала оси представляет время, например часы, минуты и т. д., чтобы правильно включить функцию масштабирования, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> также должно быть присвоено значение времени. Например, если ChartArea1. свойства AxisX. Интервалтипе выражается в часах, то ChartArea1. Курсоркс. Интервалтипе можно установить в минутах.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUserEnabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, включающий или отключающий пользовательский интерфейс курсора.</summary>
        <value>Значение <see langword="true" />, если пользовательский интерфейс курсора включен; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserSelectionEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserSelectionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserSelectionEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUserSelectionEnabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, включающий или отключающий пользовательский интерфейс выделения диапазона.</summary>
        <value>Значение <see langword="true" />, если пользовательский интерфейс выделения диапазона включен; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Red")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает цвет линии курсора.</summary>
        <value>Цвет линий курсора. Значение по умолчанию — <see cref="P:System.Drawing.Color.Red" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LineDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает стиль линии курсора.</summary>
        <value>Стиль линии курсора.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает толщину линии курсора в пикселях.</summary>
        <value>Ширина линии в пикселях. Значением по умолчанию является единица (1).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется для указания толщины линии курсора (в пикселях).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public double Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Position { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Position : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает положение курсора.</summary>
        <value>Позиция курсора.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать для получения позиции курсора, а также для программного задания положения курсора.  
  
 Расположение измеряется как значение оси, к которой принадлежит курсор, что определяется свойством <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>. Например, если курсор принадлежит к первичной оси X, то при установке этого свойства в значение 1 января 2000 будет отображаться курсор на оси X в положении 1 января 2000 вдоль оси. Если это значение оси не существует, курсор не будет отображаться.  
  
 Обратите внимание, что если задать это свойство, свойства <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> не будут действовать. то есть курсор будет отображаться в указанном месте.  
  
 Задание этого свойства не приведет к появлению событий <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> или <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>.  
  
 Кроме того, для установки курсора можно использовать методы <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A>.  
  
 Чтобы программно удалить курсор, используйте это свойство, чтобы установить позицию курсора в <xref:System.Double.NaN>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "LightGray")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает полупрозрачный цвет, которым выделяется диапазон данных.</summary>
        <value>Цвет выделенного диапазона. Значение по умолчанию — <see cref="P:System.Drawing.Color.LightGray" /> с альфа-значением, равным 120.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет цвет выделения диапазона и может быть установлен в любое допустимое значение ARGB (альфа, красный, зеленый, синий). Если значение альфа, определяющее уровень прозрачности, не предоставлено, используется значение альфа-канала по умолчанию 120.  
  
 Выбранный цвет можно задать для курсоров осей X и Y, которые реализуются с помощью свойств <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> объекта <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> соответственно. Если диапазон выбран только вдоль оси X, то используется значение <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> для курсора по оси X. Если диапазон выбран только вдоль оси Y, то используется значение <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> для курсора по оси Y. Если диапазон выбран по обеим осям, то для выбранного цвета также используется значение <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> для курсора по оси Y.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public double SelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionEnd As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionEnd { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionEnd : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает конечное положение диапазона выделения.</summary>
        <value>Конечное положение выбранного диапазона.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователь может выбрать диапазон в области диаграммы, щелкнув левую кнопку мыши и перетащив указатель мыши. Обратите внимание, что свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> также должно иметь значение `true`. Кроме того, выбор диапазона можно задать программным способом с помощью свойств <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> или методов <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> или <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>.  
  
 Конечное расположение выделения диапазона вычисляется как значение оси, к которой принадлежит курсор. Например, если курсор принадлежит к основной оси X, а для свойства <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> задано значение 31 декабря 2000, то конец выбранной области будет выполняться 31 декабря 2000 вдоль основной оси X.  
  
 Чтобы программно удалить выделенный диапазон, установите начальную и конечную точки диапазона в <xref:System.Double.NaN> с помощью свойств <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> либо используйте метод <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public double SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionStart { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает начальное положение выделенного с помощью курсора диапазона.</summary>
        <value>Начальное расположение выбранного диапазона курсора.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователь может выбрать диапазон, щелкнув левую кнопку мыши, а затем переместив курсор мыши. Обратите внимание, что свойство <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> также должно иметь значение `true`. Кроме того, выбор диапазона можно задать программным способом с помощью свойств <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> или методов <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> или <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>.  
  
 Начальное расположение выделения диапазона вычисляется как значение оси, к которой принадлежит курсор. Например, если курсор принадлежит к основной оси X, а свойству <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> присвоено значение 1 января 2000, то начало выбранной области будет выполняться 1 января 2000 вдоль основной оси X.  
  
 Чтобы программно удалить выделенный диапазон, установите начальную и конечную точки диапазона в <xref:System.Double.NaN> с помощью свойств <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> либо используйте метод <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPixelPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPixelPosition(valuetype System.Drawing.PointF point, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPixelPosition (point As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPixelPosition(System::Drawing::PointF point, bool roundToBoundary);" />
      <MemberSignature Language="F#" Value="member this.SetCursorPixelPosition : System.Drawing.PointF * bool -&gt; unit" Usage="cursor.SetCursorPixelPosition (point, roundToBoundary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">Структура <see cref="T:System.Drawing.PointF" />, задающая положение, в котором должен быть нарисован курсор.</param>
        <param name="roundToBoundary">Если задано значение <see langword="true" />, курсор будет нарисован вдоль ближайшей границы области диаграммы, если указанные координаты находятся за пределами объекта <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" />.</param>
        <summary>Отображает курсор в заданном месте. Измеряется в пикселях.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPosition (double newPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPosition(float64 newPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPosition (newPosition As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPosition(double newPosition);" />
      <MemberSignature Language="F#" Value="member this.SetCursorPosition : double -&gt; unit" Usage="cursor.SetCursorPosition newPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPosition" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newPosition">Новое положение курсора. Измеряется вдоль соответствующей оси.</param>
        <summary>Задает положение курсора внутри области диаграммы равным указанному значению по оси.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPixelPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPixelPosition(valuetype System.Drawing.PointF startPoint, valuetype System.Drawing.PointF endPoint, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPixelPosition (startPoint As PointF, endPoint As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPixelPosition(System::Drawing::PointF startPoint, System::Drawing::PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="F#" Value="member this.SetSelectionPixelPosition : System.Drawing.PointF * System.Drawing.PointF * bool -&gt; unit" Usage="cursor.SetSelectionPixelPosition (startPoint, endPoint, roundToBoundary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Drawing.PointF" />
        <Parameter Name="endPoint" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint">Структура <see cref="T:System.Drawing.PointF" />, задающая начало диапазона выделения.</param>
        <param name="endPoint">Структура <see cref="T:System.Drawing.PointF" />, задающая конец диапазона выделения.</param>
        <param name="roundToBoundary">Если задано значение <see langword="true" />, начальная и конечная точки будут округлены до ближайшей границы области диаграммы, если указанные координаты находятся за пределами объекта <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" />.</param>
        <summary>Задает начальное и конечное положение диапазона выделения.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPosition (double newStart, double newEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPosition(float64 newStart, float64 newEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPosition (newStart As Double, newEnd As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPosition(double newStart, double newEnd);" />
      <MemberSignature Language="F#" Value="member this.SetSelectionPosition : double * double -&gt; unit" Usage="cursor.SetSelectionPosition (newStart, newEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newStart" Type="System.Double" />
        <Parameter Name="newEnd" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newStart">Новое начальное положение диапазона выделения. Измеряется вдоль соответствующей оси.</param>
        <param name="newEnd">Новое конечное положение диапазона выделения. Измеряется вдоль соответствующей оси.</param>
        <summary>Задает положение выделенного диапазона внутри области диаграммы равным указанным значениям по оси.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
