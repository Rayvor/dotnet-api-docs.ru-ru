<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be67c66acf5965e34367a1f0a1fea321d2677ccc" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63879141" /></Metadata><TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2f666-101">Представляет проект с семантикой времени разработки.</span><span class="sxs-lookup"><span data-stu-id="2f666-101">Represents a project with design time semantics.</span></span> <span data-ttu-id="2f666-102">Данный класс может загружать файлы проектов, редактировать элементы и свойства и выполнять построение проектов.</span><span class="sxs-lookup"><span data-stu-id="2f666-102">This class can load project files, edit items and properties and build projects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f666-103">Создает пустой проект с помощью глобальных свойств из коллекции глобальных проектов и версии инструментов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-103">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f666-104">Создает пустой проект с помощью глобальных свойств из коллекции глобальных проектов и версии инструментов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-104">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-105">Этот проект добавляется в коллекцию глобальных проектов, когда ему присваивается полный путь к исходному файлу проекта, обычно путем сохранения проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-105">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="2f666-106">ProjectRootElement, используемый при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-106">ProjectRootElement to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="2f666-107">Создает пустой проект и оценивает его с помощью заданной корневой папки проекта, глобальных свойств из коллекции глобальных проектов и версии инструментов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-107">Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-108">Этот проект добавляется в коллекцию глобальных проектов, когда этому проекту или заданной корневой папки проекта передается полный путь к исходному файлу проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-108">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="2f666-109">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-109">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-110">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-110">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectCollection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="2f666-111">Коллекция проектов, в которую добавляется новый проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-111">The project collection that the new project is added to.</span></span></param>
        <summary><span data-ttu-id="2f666-112">Создает пустой проект с помощью глобальных свойств заданной коллекции глобальных проектов и версии инструментов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-112">Constructs an empty project using the given project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-113">Этот проект добавляется в заданной коллекции проектов, когда ему присваивается полный путь к исходному файлу проекта, обычно путем сохранения проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-113">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="2f666-114">Исходный файл проекта для оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-114">The source project file to be evaluated.</span></span></param>
        <summary><span data-ttu-id="2f666-115">Создает проект и оценивает его из заданного исходного файла проекта с помощью глобальных свойств из коллекции глобальных проектов и версии инструментов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-115">Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-116">Проект будет добавлен к коллекции глобальных проектов.</span><span class="sxs-lookup"><span data-stu-id="2f666-116">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="2f666-117">Выдает исключение InvalidOperationException, если уже существует проект в коллекции проектов, результатом является этот исходный файл проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-117">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="2f666-118">Может вызывать исключения, относящиеся к IO.</span><span class="sxs-lookup"><span data-stu-id="2f666-118">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="2f666-119">Если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-119">If the evaluation fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="2f666-120">Средство чтения XML, из которого следует считывать исходный код проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-120">Xml reader to read project source code from.</span></span></param>
        <summary><span data-ttu-id="2f666-121">Создает проект и оценивает исходный код из заданного средства чтения XML.</span><span class="sxs-lookup"><span data-stu-id="2f666-121">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="2f666-122">Исходный код оценивается с помощью глобальных свойств из коллекции глобальных проектов и версии инструментов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-122">The source code is evaluated with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-123">Этот проект добавляется в коллекцию глобальных проектов, когда ему присваивается полный путь к исходному файлу проекта, обычно путем сохранения проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-123">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="2f666-124">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-124">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-125">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-125">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="2f666-126">Корневая папка проекта, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-126">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-127">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-127">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-128">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-128">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-129">Версия инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-129">Tools version to evaluate with.</span></span> <span data-ttu-id="2f666-130">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-130">May be null.</span></span></param>
        <summary><span data-ttu-id="2f666-131">Создает пустой проект и оценивает его с помощью заданной корневой папки проекта, заданных глобальных свойств и заданной версии инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-131">Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-132">Этот проект добавляется в коллекцию глобальных проектов, когда этому проекту или заданной корневой папки проекта передается полный путь к исходному файлу проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-132">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="2f666-133">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-133">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-134">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-134">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="2f666-135">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-135">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-136">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-136">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-137">Версия инструментов, используемая при оценке проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-137">The tools version used to evaluate the project.</span></span> <span data-ttu-id="2f666-138">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-138">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="2f666-139">Коллекция проектов, в которую добавляется новый проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-139">The project collection the new project will be added to.</span></span></param>
        <summary><span data-ttu-id="2f666-140">Создает пустой проект, который необходимо оценить с помощью заданной коллекции проектов, заданных глобальных свойств и заданной версии инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-140">Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-141">Проект будет добавлен в коллекцию указанный проект, если задан полный путь к исходному файлу проекта, обычно путем сохранения проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-141">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="2f666-142">Путь к исходному файлу проекта для оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-142">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-143">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-143">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-144">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-144">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-145">Версия инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-145">Tools version to evaluate with.</span></span> <span data-ttu-id="2f666-146">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-146">May be null.</span></span></param>
        <summary><span data-ttu-id="2f666-147">Создает проект и оценивает его из заданного исходного файла проекта с помощью заданных глобальных свойств и заданной версии инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-147">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-148">Проект будет добавлен к коллекции глобальных проектов.</span><span class="sxs-lookup"><span data-stu-id="2f666-148">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="2f666-149">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-149">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-150">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="2f666-151">Может вызывать исключения, относящиеся к IO.</span><span class="sxs-lookup"><span data-stu-id="2f666-151">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="2f666-152">Средство чтения XML, из которого следует считывать исходный код проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-152">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-153">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-153">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-154">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-154">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-155">Версия инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-155">Tools version to evaluate with.</span></span> <span data-ttu-id="2f666-156">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-156">May be null.</span></span></param>
        <summary><span data-ttu-id="2f666-157">Создает проект и оценивает исходный код из заданного средства чтения XML.</span><span class="sxs-lookup"><span data-stu-id="2f666-157">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="2f666-158">Исходный код оценивается с помощью заданных глобальных свойств и заданной версии инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-158">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-159">Этот проект добавляется в коллекцию глобальных проектов, когда ему присваивается полный путь к исходному файлу проекта, обычно путем сохранения проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-159">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="2f666-160">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-160">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-161">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-161">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="2f666-162">Корневая папка проекта, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-162">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-163">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-163">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-164">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-164">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-165">Версия инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-165">Tools version to evaluate with.</span></span> <span data-ttu-id="2f666-166">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-166">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="2f666-167">Коллекция проектов, в которую добавляется проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-167">The project collection the project is added to.</span></span></param>
        <summary><span data-ttu-id="2f666-168">Создает проект и оценивает его с помощью заданной корневой папки проекта, заданных глобальных свойств и заданной версии инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-168">Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-169">Этот проект добавляется в заданной коллекции проектов, когда этому проекту или заданной корневой папки проекта передается полный путь к исходному файлу проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-169">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="2f666-170">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-170">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-171">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-171">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="2f666-172">Путь к исходному файлу проекта для оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-172">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-173">Глобальные свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-173">The global properties.</span></span> <span data-ttu-id="2f666-174">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-174">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-175">Версия инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-175">The tools version.</span></span> <span data-ttu-id="2f666-176">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-176">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="2f666-177">Коллекция проектов, в которую добавляется проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-177">The project collection the project is added to.</span></span> <span data-ttu-id="2f666-178">Не может принимать значение null.</span><span class="sxs-lookup"><span data-stu-id="2f666-178">May not be null.</span></span></param>
        <summary><span data-ttu-id="2f666-179">Создает проект и оценивает его из заданного исходного файла проекта с помощью заданных глобальных свойств и заданной версии инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-179">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-180">Проект будет добавлен к заданной коллекции проектов.</span><span class="sxs-lookup"><span data-stu-id="2f666-180">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="2f666-181">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-181">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-182">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-182">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="2f666-183">Может вызывать исключения, относящиеся к IO.</span><span class="sxs-lookup"><span data-stu-id="2f666-183">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="2f666-184">Средство чтения XML, из которого следует считывать исходный код проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-184">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-185">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-185">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-186">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-186">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-187">Версия инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-187">Tools version to evaluate with.</span></span> <span data-ttu-id="2f666-188">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-188">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="2f666-189">Коллекция проектов, в которую добавляется проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-189">The project collection the project is added to.</span></span> <span data-ttu-id="2f666-190">Не может принимать значение null.</span><span class="sxs-lookup"><span data-stu-id="2f666-190">May not be null.</span></span></param>
        <summary><span data-ttu-id="2f666-191">Создает проект и оценивает исходный код из заданного средства чтения XML.</span><span class="sxs-lookup"><span data-stu-id="2f666-191">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="2f666-192">Исходный код оценивается с помощью заданных глобальных свойств и заданной версии инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-192">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-193">Этот проект добавляется в заданной коллекции проектов, когда этому проекту или заданной корневой папки проекта передается полный путь к исходному файлу проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-193">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="2f666-194">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-194">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-195">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-195">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="2f666-196">Корневая папка проекта, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-196">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-197">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-197">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-198">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-198">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-199">Версия инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-199">Tools version to evaluate with.</span></span> <span data-ttu-id="2f666-200">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-200">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="2f666-201">Коллекция проектов, в которую добавляется проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-201">The project collection the project is added to.</span></span> <span data-ttu-id="2f666-202">Не может принимать значение null.</span><span class="sxs-lookup"><span data-stu-id="2f666-202">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="2f666-203">Параметры загрузки, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-203">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="2f666-204">Создает проект и оценивает его с помощью заданной корневой папки проекта, заданных глобальных свойств, заданной версии инструментов и параметров загрузки.</span><span class="sxs-lookup"><span data-stu-id="2f666-204">Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-205">Этот проект добавляется в заданной коллекции проектов, когда этому проекту или заданной корневой папки проекта передается полный путь к исходному файлу проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-205">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="2f666-206">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-206">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-207">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-207">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="2f666-208">Путь к исходному файлу проекта для оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-208">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-209">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-209">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-210">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-210">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-211">Версия инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-211">The tools version.</span></span> <span data-ttu-id="2f666-212">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-212">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="2f666-213">Коллекция проектов, в которую добавляется проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-213">The project collection the project is added to.</span></span> <span data-ttu-id="2f666-214">Не может принимать значение null.</span><span class="sxs-lookup"><span data-stu-id="2f666-214">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="2f666-215">Параметры загрузки, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-215">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="2f666-216">Создает проект и оценивает его из заданного исходного файла проекта с помощью заданных глобальных свойств, заданной версии инструментов и параметров загрузки.</span><span class="sxs-lookup"><span data-stu-id="2f666-216">Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-217">Проект будет добавлен к заданной коллекции проектов.</span><span class="sxs-lookup"><span data-stu-id="2f666-217">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="2f666-218">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-218">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-219">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="2f666-220">Может вызывать исключения, относящиеся к IO.</span><span class="sxs-lookup"><span data-stu-id="2f666-220">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="2f666-221">Средство чтения XML, из которого следует считывать исходный код проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-221">Xml reader from which to read project source code.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-222">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-222">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-223">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-223">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-224">Версия инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-224">Tools version to evaluate with.</span></span> <span data-ttu-id="2f666-225">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-225">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="2f666-226">Коллекция проектов, в которую добавляется проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-226">The project collection the project is added to.</span></span> <span data-ttu-id="2f666-227">Не может принимать значение null.</span><span class="sxs-lookup"><span data-stu-id="2f666-227">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="2f666-228">Параметры загрузки, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-228">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="2f666-229">Создает проект и оценивает исходный код из заданного средства чтения XML.</span><span class="sxs-lookup"><span data-stu-id="2f666-229">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="2f666-230">Исходный код оценивается с помощью заданных глобальных свойств и заданной версии инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-230">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-231">Этот проект добавляется в заданной коллекции проектов, когда этому проекту или заданной корневой папки проекта передается полный путь к исходному файлу проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-231">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="2f666-232">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-232">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-233">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-233">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="2f666-234">Корневая папка проекта, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-234">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-235">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-235">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-236">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-236">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-237">Версия инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-237">Tools version to evaluate with.</span></span> <span data-ttu-id="2f666-238">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-238">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="2f666-239">Версия вложенного набора инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-239">Sub toolset version to evaluate with.</span></span> <span data-ttu-id="2f666-240">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-240">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="2f666-241">Коллекция проектов, в которую добавляется проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-241">The project collection the project is added to.</span></span> <span data-ttu-id="2f666-242">Не может принимать значение null.</span><span class="sxs-lookup"><span data-stu-id="2f666-242">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="2f666-243">Параметры загрузки, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-243">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="2f666-244">Создает проект и оценивает его, используя заданный корень проекта, с помощью заданных глобальных свойств, версий инструментов и вложенных наборов инструментов, коллекции проектов и параметров загрузки.</span><span class="sxs-lookup"><span data-stu-id="2f666-244">Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-245">Этот проект добавляется в заданной коллекции проектов, когда этому проекту или заданной корневой папки проекта передается полный путь к исходному файлу проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-245">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="2f666-246">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-246">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-247">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-247">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="2f666-248">Путь к исходному файлу проекта для оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-248">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-249">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-249">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-250">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-250">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-251">Версия инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-251">The tools version.</span></span> <span data-ttu-id="2f666-252">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-252">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="2f666-253">версия поднабора инструментов.</span><span class="sxs-lookup"><span data-stu-id="2f666-253">The sub toolset version.</span></span> <span data-ttu-id="2f666-254">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-254">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="2f666-255">Коллекция проектов, в которую добавляется проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-255">The project collection the project is added to.</span></span> <span data-ttu-id="2f666-256">Не может принимать значение null.</span><span class="sxs-lookup"><span data-stu-id="2f666-256">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="2f666-257">Параметры загрузки, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-257">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="2f666-258">Создает проект и оценивает его из заданного исходного файла проекта с помощью заданных глобальных свойств, версий инструментов и вложенных наборов инструментов, коллекции проектов и параметров загрузки.</span><span class="sxs-lookup"><span data-stu-id="2f666-258">Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-259">Проект будет добавлен к заданной коллекции проектов.</span><span class="sxs-lookup"><span data-stu-id="2f666-259">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="2f666-260">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-260">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-261">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-261">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="2f666-262">Может вызывать исключения, относящиеся к IO.</span><span class="sxs-lookup"><span data-stu-id="2f666-262">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="2f666-263">Средство чтения XML, из которого следует считывать исходный код проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-263">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="2f666-264">Глобальные свойства, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-264">Global properties to evaluate with.</span></span> <span data-ttu-id="2f666-265">Могут принимать значение null. В этом случае будут использоваться глобальные свойства коллекции проекта, содержащего данный объект.</span><span class="sxs-lookup"><span data-stu-id="2f666-265">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="2f666-266">Версия инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-266">Tools version to evaluate with.</span></span> <span data-ttu-id="2f666-267">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-267">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="2f666-268">Версия вложенного набора инструментов, используемая при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-268">Sub Toolset version to evaluate with.</span></span> <span data-ttu-id="2f666-269">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2f666-269">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="2f666-270">Коллекция проектов, в которую добавляется проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-270">The project collection the project is added to.</span></span> <span data-ttu-id="2f666-271">Не может принимать значение null.</span><span class="sxs-lookup"><span data-stu-id="2f666-271">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="2f666-272">Параметры загрузки, используемые при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-272">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="2f666-273">Создает проект и оценивает исходный код из заданного средства чтения XML.</span><span class="sxs-lookup"><span data-stu-id="2f666-273">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="2f666-274">Исходный код оценивается с помощью данных глобальных свойств, версий инструментов и вложенного набора инструментов, коллекции проектов и параметров загрузки.</span><span class="sxs-lookup"><span data-stu-id="2f666-274">The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-275">Этот проект добавляется в заданной коллекции проектов, когда этому проекту или заданной корневой папки проекта передается полный путь к исходному файлу проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-275">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="2f666-276">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-276">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="2f666-277">Создает исключение InvalidOperationException, если уже имеется эквивалентный проекте загружено в коллекцию проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-277">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f666-278">Добавляет элемент.</span><span class="sxs-lookup"><span data-stu-id="2f666-278">Adds an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="2f666-279">Тип добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-279">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="2f666-280">Включите атрибут добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-280">Include attribute of the item to be added.</span></span></param>
        <summary><span data-ttu-id="2f666-281">Добавляет элемент без метаданных в проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-281">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="2f666-282">Добавленный элемент.</span><span class="sxs-lookup"><span data-stu-id="2f666-282">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-283">Все метаданные могут быть добавлены позже.</span><span class="sxs-lookup"><span data-stu-id="2f666-283">Any metadata can be added later.</span></span> <span data-ttu-id="2f666-284">Не изменяет исходный проект, если выражение с подстановочными знаками уже включает в себя новый элемент.</span><span class="sxs-lookup"><span data-stu-id="2f666-284">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="2f666-285">Вычисление выполняется на основе результативности.</span><span class="sxs-lookup"><span data-stu-id="2f666-285">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="2f666-286">Элементы, определенные в источнике проекта после нового элемента может использоваться для оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-286">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="2f666-287">Оценивается только этот элемент.</span><span class="sxs-lookup"><span data-stu-id="2f666-287">Only this item is evaluated.</span></span> <span data-ttu-id="2f666-288">Другие элементы, которые могут опираться на нем не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="2f666-288">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="2f666-289">Тип добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-289">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="2f666-290">Включите атрибут добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-290">Include attribute of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="2f666-291">Метаданные добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-291">The metadata of the added item.</span></span></param>
        <summary><span data-ttu-id="2f666-292">Добавляет элемент с заданными метаданными в проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-292">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="2f666-293">Добавленный элемент.</span><span class="sxs-lookup"><span data-stu-id="2f666-293">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-294">Метаданные могут иметь значение null, что означает отсутствие метаданных.</span><span class="sxs-lookup"><span data-stu-id="2f666-294">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="2f666-295">Вычисление выполняется на основе результативности.</span><span class="sxs-lookup"><span data-stu-id="2f666-295">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="2f666-296">Элементы, определенные в источнике проекта после нового элемента может использоваться для оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-296">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="2f666-297">Оценивается только этот элемент.</span><span class="sxs-lookup"><span data-stu-id="2f666-297">Only this item is evaluated.</span></span> <span data-ttu-id="2f666-298">Другие элементы, которые могут опираться на нем не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="2f666-298">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f666-299">Добавляет элемент без метаданных в проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-299">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="2f666-300">Не пытается определить, соответствует ли существующий подстановочный знак новому элементу за исключением случаев, если это первый элемент в группе элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-300">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="2f666-301">Не пытается найти новый элемент рядом с аналогичными элементами.</span><span class="sxs-lookup"><span data-stu-id="2f666-301">Makes no effort to locate the new item near similar items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="2f666-302">Добавляемый тип элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-302">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="2f666-303">Неоцененный атрибут Include, добавляемый к элементу.</span><span class="sxs-lookup"><span data-stu-id="2f666-303">The unevaluated Include attribute to be added to the item.</span></span></param>
        <summary><span data-ttu-id="2f666-304">Добавляет элемент без метаданных в проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-304">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="2f666-305">Не пытается определить, соответствует ли существующий подстановочный знак новому элементу за исключением случаев, если это первый элемент в группе элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-305">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="2f666-306">Не пытается найти новый элемент рядом с аналогичными элементами.</span><span class="sxs-lookup"><span data-stu-id="2f666-306">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="2f666-307">Список добавленных элементов проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-307">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-308">Добавляет элемент к первой группе элементов, не имеет условие и либо не имеет дочерних элементов, или, первый дочерний элемент является элементом того же типа.</span><span class="sxs-lookup"><span data-stu-id="2f666-308">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="2f666-309">Вычисляется на основе результативности:-разворачивается со всеми элементами.</span><span class="sxs-lookup"><span data-stu-id="2f666-309">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="2f666-310">Элементы, определенные в XML под новый элемент может использоваться, несмотря на то, что в реальном вычислении их не будет.</span><span class="sxs-lookup"><span data-stu-id="2f666-310">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="2f666-311">Оценивается только этот элемент.</span><span class="sxs-lookup"><span data-stu-id="2f666-311">Only this item is evaluated.</span></span> <span data-ttu-id="2f666-312">Другие элементы, которые могут опираться на нем не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="2f666-312">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="2f666-313">Это удобный способ что понятно, не обязательно оставляет проект в состоянии самостоятельного согласования до повторного вычисления.</span><span class="sxs-lookup"><span data-stu-id="2f666-313">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="2f666-314">Добавляемый тип элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-314">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="2f666-315">Неоцененный атрибут Include, добавляемый к элементу.</span><span class="sxs-lookup"><span data-stu-id="2f666-315">The unevaluated Include attribute to be added to the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="2f666-316">Добавляемые метаданные.</span><span class="sxs-lookup"><span data-stu-id="2f666-316">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="2f666-317">Добавляет элемент с метаданными в проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-317">Adds an item with metadata to the project.</span></span> <span data-ttu-id="2f666-318">Метаданные могут иметь значение null, что означает отсутствие метаданных.</span><span class="sxs-lookup"><span data-stu-id="2f666-318">Metadata may be null, indicating no metadata.</span></span> <span data-ttu-id="2f666-319">Не пытается определить, соответствует ли существующий подстановочный знак новому элементу за исключением случаев, если это первый элемент в группе элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-319">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span> <span data-ttu-id="2f666-320">Не пытается найти новый элемент рядом с аналогичными элементами.</span><span class="sxs-lookup"><span data-stu-id="2f666-320">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="2f666-321">Список добавленных элементов проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-321">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-322">Добавляет элемент к первой группе элементов, не имеет условие и либо не имеет дочерних элементов, или, первый дочерний элемент является элементом того же типа.</span><span class="sxs-lookup"><span data-stu-id="2f666-322">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="2f666-323">Вычисляется на основе результативности:-разворачивается со всеми элементами.</span><span class="sxs-lookup"><span data-stu-id="2f666-323">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="2f666-324">Элементы, определенные в XML под новый элемент может использоваться, несмотря на то, что в реальном вычислении их не будет.</span><span class="sxs-lookup"><span data-stu-id="2f666-324">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="2f666-325">Оценивается только этот элемент.</span><span class="sxs-lookup"><span data-stu-id="2f666-325">Only this item is evaluated.</span></span> <span data-ttu-id="2f666-326">Не влияет на другие элементы, которые могут зависеть от его.</span><span class="sxs-lookup"><span data-stu-id="2f666-326">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="2f666-327">Это удобный способ что понятно, не обязательно оставляет проект в состоянии самостоятельного согласования до повторного вычисления.</span><span class="sxs-lookup"><span data-stu-id="2f666-327">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItemDefinitionMetadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-328">Получает все метаданные определения элемента, обнаруженным во время оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-328">Gets all item definition metadata encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="2f666-329">Все метаданные определения элемента, обнаруженным во время оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-329">All item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="2f666-330">Перечислитель не включает элементы, состояние которых не принимает значение true, и метаданные определения элементов, добавленные после последней оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-330">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-331">На втором проходе оценки чтения метаданных элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-331">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="2f666-332">В отличие от метаданных, возвращаемых свойством ItemDefinitions эти метаданные упорядочены и включает в себя все метаданные, впоследствии переопределенные с тем же именем и типом элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-332">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItems : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-333">Получает перечислитель по всем элементам, обнаруженным во время оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-333">Gets an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="2f666-334">Эти элементы считываются во время третьего этапа оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-334">These are read during the third evaluation pass.</span></span></summary>
        <value><span data-ttu-id="2f666-335">Перечислитель по всем элементам, обнаруженным во время оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-335">An enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="2f666-336">Эти элементы считываются во время третьего этапа оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-336">These are read during the third evaluation pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-337">В отличие от этих элементов, возвращаемых свойством Items они упорядочиваются относительно других элементов, обнаруженные во время оценки, не просто упорядочены по отношению к элементов одного типа элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-337">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="2f666-338">В некоторых приложениях такой полный взаимный порядок важен и такие узлы можно использовать это свойство.</span><span class="sxs-lookup"><span data-stu-id="2f666-338">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="2f666-339">Перечисление не включает какие-либо элементы, состояние которых не принимает значение true, а также любые элементы, добавленные после последней оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-339">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedProperties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-340">Получает все свойства, обнаруженные во время оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-340">Gets all properties encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="2f666-341">Все свойства, обнаруженные во время оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-341">All properties encountered during evaluation.</span></span> <span data-ttu-id="2f666-342">Перечислитель не включает свойства, состояние которых не принимает значение true, и свойства, добавленные после последней оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-342">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-343">Эти свойства считываются при первом проходе оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-343">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="2f666-344">В отличие от свойств, возвращаемых свойством свойства они упорядочиваются и включает в себя какие-либо свойства, впоследствии переопределенные с тем же именем.</span><span class="sxs-lookup"><span data-stu-id="2f666-344">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f666-345">Создает проект с помощью целевых объектов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-345">Builds this project, using the default targets.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="project.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f666-346">Создает проект с помощью целевых объектов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-346">Builds this project, using the default targets.</span></span></summary>
        <returns><span data-ttu-id="2f666-347">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-347"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-348">Чтобы задать или получить виртуальные элементы для построения, клонируйте явно экземпляр проекта и выполните его построение.</span><span class="sxs-lookup"><span data-stu-id="2f666-348">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="2f666-349">Этот метод не изменяет объект проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-349">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.Build : Microsoft.Build.Framework.ILogger -&gt; bool" Usage="project.Build logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="2f666-350">Средство ведения журнала, которое должно использоваться в процессе построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-350">The logger to be used during the build.</span></span></param>
        <summary><span data-ttu-id="2f666-351">Создает проект с помощью целевых объектов по умолчанию и заданного средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="2f666-351">Builds this project, using the default targets and the given logger.</span></span></summary>
        <returns><span data-ttu-id="2f666-352">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-352"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-353">Чтобы задать или получить виртуальные элементы для построения, клонируйте явно экземпляр проекта и выполните его построение.</span><span class="sxs-lookup"><span data-stu-id="2f666-353">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="2f666-354">Этот метод не изменяет объект проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-354">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="2f666-355">Перечислитель по всем средствам ведения журнала, которые должны использоваться в процессе построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-355">An enumerator over all loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="2f666-356">Создает проект с помощью целевых объектов по умолчанию и заданных средств ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="2f666-356">Builds this project, using the default targets and the given loggers.</span></span></summary>
        <returns><span data-ttu-id="2f666-357">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-357"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-358">Чтобы задать или получить виртуальные элементы для построения, клонируйте явно экземпляр проекта и выполните его построение.</span><span class="sxs-lookup"><span data-stu-id="2f666-358">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="2f666-359">Этот метод не изменяет объект проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-359">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; bool" Usage="project.Build target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2f666-360">Целевой объект для построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-360">The target to be built.</span></span></param>
        <summary><span data-ttu-id="2f666-361">Создает проект путем построения заданного целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-361">Builds this project, building the given target.</span></span></summary>
        <returns><span data-ttu-id="2f666-362">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-362"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-363">Чтобы задать или получить виртуальные элементы для построения, клонируйте явно экземпляр проекта и выполните его построение.</span><span class="sxs-lookup"><span data-stu-id="2f666-363">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="2f666-364">Этот метод не изменяет объект проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-364">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] -&gt; bool" Usage="project.Build targets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="2f666-365">Массив целевых объектов для построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-365">An array of targets to be built.</span></span></param>
        <summary><span data-ttu-id="2f666-366">Создает проект путем построения заданных целевых объектов.</span><span class="sxs-lookup"><span data-stu-id="2f666-366">Builds this project, building the given targets.</span></span></summary>
        <returns><span data-ttu-id="2f666-367">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-367"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-368">Чтобы задать или получить виртуальные элементы для построения, клонируйте явно экземпляр проекта и выполните его построение.</span><span class="sxs-lookup"><span data-stu-id="2f666-368">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="2f666-369">Этот метод не изменяет объект проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-369">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="2f666-370">Средства ведения журнала, которые должны использоваться в процессе построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-370">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="2f666-371">Удаленные средства ведения журнала, которые должны использоваться в процессе построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-371">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="2f666-372">Создает проект с помощью целевых объектов по умолчанию, заданных и удаленных средств ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="2f666-372">Builds this project, using the default targets and the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="2f666-373">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-373"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-374">Чтобы задать или получить виртуальные элементы для построения, клонируйте явно экземпляр проекта и выполните его построение.</span><span class="sxs-lookup"><span data-stu-id="2f666-374">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="2f666-375">Этот метод не изменяет объект проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-375">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2f666-376">Целевой объект для построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-376">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="2f666-377">Средства ведения журнала, которые должны использоваться в процессе построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-377">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="2f666-378">Создает проект путем построения заданного целевого объекта и использования заданных средств ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="2f666-378">Builds this project, building the given target and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="2f666-379">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-379"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-380">Чтобы задать или получить виртуальные элементы для построения, клонируйте явно экземпляр проекта и выполните его построение.</span><span class="sxs-lookup"><span data-stu-id="2f666-380">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="2f666-381">Этот метод не изменяет объект проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-381">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="2f666-382">Целевые объекты, которые следует построить.</span><span class="sxs-lookup"><span data-stu-id="2f666-382">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="2f666-383">Средства ведения журнала, которые должны использоваться в процессе построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-383">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="2f666-384">Создает проект путем построения заданных целевых объектов и использования заданных средств ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="2f666-384">Builds this project, building the given targets and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="2f666-385">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-385"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-386">Чтобы задать или получить виртуальные элементы для построения, клонируйте явно экземпляр проекта и выполните его построение.</span><span class="sxs-lookup"><span data-stu-id="2f666-386">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="2f666-387">Этот метод не изменяет объект проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-387">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2f666-388">Целевой объект для построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-388">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="2f666-389">Средства ведения журнала, которые должны использоваться в процессе построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-389">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="2f666-390">Удаленные средства ведения журнала, которые должны использоваться в процессе построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-390">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="2f666-391">Создает проект путем построения заданного целевого объекта и использования заданных и удаленных средств ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="2f666-391">Builds this project, building the given target and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="2f666-392">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-392"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-393">Чтобы задать или получить виртуальные элементы для построения, клонируйте явно экземпляр проекта и выполните его построение.</span><span class="sxs-lookup"><span data-stu-id="2f666-393">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="2f666-394">Этот метод не изменяет объект проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-394">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="2f666-395">Целевые объекты, которые следует построить.</span><span class="sxs-lookup"><span data-stu-id="2f666-395">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="2f666-396">Средства ведения журнала, которые должны использоваться в процессе построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-396">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="2f666-397">Удаленные средства ведения журнала, которые должны использоваться в процессе построения.</span><span class="sxs-lookup"><span data-stu-id="2f666-397">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="2f666-398">Создает проект путем построения заданных целевых объектов и использования заданных и удаленных средств ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="2f666-398">Builds this project, building the given targets and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="2f666-399">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-399"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-400">Чтобы задать или получить виртуальные элементы для построения, клонируйте явно экземпляр проекта и выполните его построение.</span><span class="sxs-lookup"><span data-stu-id="2f666-400">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="2f666-401">Этот метод не изменяет объект проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-401">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionedProperties : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt;" Usage="Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-402">Получает коллекцию возможных значений для свойств, используемых при оценке состояний, обнаруживаемых для свойств, групп свойств, импортов и объектов When.</span><span class="sxs-lookup"><span data-stu-id="2f666-402">Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span></summary>
        <value><span data-ttu-id="2f666-403">Коллекция возможных значений для свойств, используемых для оценки состояний, обнаруживаемых для свойств, групп свойств, импортов и когда его.</span><span class="sxs-lookup"><span data-stu-id="2f666-403">A collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span> <span data-ttu-id="2f666-404">Коллекция составлена в канонической форме.</span><span class="sxs-lookup"><span data-stu-id="2f666-404">The collection is in canonical form.</span></span> <span data-ttu-id="2f666-405">Имя записи представляет собой имя оцениваемого свойства, а значение — список возможных значений свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-405">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-406">Например, для свойств в проекте при следующих условий: Condition="'$(Configuration)&#124;$(платформы)" == "Отладка&#124;x 86'» Condition="'$(Configuration)' == «Выпуск»» таблице будет заполняться {«конфигурация», {«Debug», «Выпуск»}} {«платформа» {«x86»}} эта коллекция используется Visual Studio для определения конфигураций, определенных в проекте</span><span class="sxs-lookup"><span data-stu-id="2f666-406">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f666-407">Создает экземпляр проекта на основе данного проекта, но полностью отсоединенный от него.</span><span class="sxs-lookup"><span data-stu-id="2f666-407">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-408">Можно использовать для построения независимо друг от друга.</span><span class="sxs-lookup"><span data-stu-id="2f666-408">Can be used to build independently.</span></span> <span data-ttu-id="2f666-409">Исходный проект вычисляется перед созданием экземпляра, если необходимо, таким образом, чтобы исходный проект помечается как неизмененный.</span><span class="sxs-lookup"><span data-stu-id="2f666-409">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f666-410">Создает экземпляр проекта на основе данного проекта, но полностью отсоединенный от него.</span><span class="sxs-lookup"><span data-stu-id="2f666-410">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="2f666-411">Экземпляр проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-411">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-412">Можно использовать для построения независимо друг от друга.</span><span class="sxs-lookup"><span data-stu-id="2f666-412">Can be used to build independently.</span></span> <span data-ttu-id="2f666-413">Исходный проект вычисляется перед созданием экземпляра, если необходимо, таким образом, чтобы исходный проект помечается как неизмененный.</span><span class="sxs-lookup"><span data-stu-id="2f666-413">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : Microsoft.Build.Execution.ProjectInstanceSettings -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="2f666-414">Определяет, является ли созданный экземпляр проекта неизменяемым и содержит ли он таблицу поиска для повышения производительности.</span><span class="sxs-lookup"><span data-stu-id="2f666-414">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span></span></param>
        <summary><span data-ttu-id="2f666-415">Создает экземпляр проекта на основе данного проекта, но полностью отсоединенный от него.</span><span class="sxs-lookup"><span data-stu-id="2f666-415">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="2f666-416">Экземпляр проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-416">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-417">Можно использовать для построения независимо друг от друга.</span><span class="sxs-lookup"><span data-stu-id="2f666-417">Can be used to build independently.</span></span> <span data-ttu-id="2f666-418">Исходный проект вычисляется перед созданием экземпляра, если необходимо, таким образом, чтобы исходный проект помечается как неизмененный.</span><span class="sxs-lookup"><span data-stu-id="2f666-418">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-419">Получает корневой каталог для проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-419">Gets the root directory for this project.</span></span></summary>
        <value><span data-ttu-id="2f666-420">Корневой каталог для этого проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-420">The root directory for this project.</span></span> <span data-ttu-id="2f666-421">Корневой каталог не может принимать значение null; хранящиеся в памяти проекты используют текущий каталог во время загрузки проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-421">The root directory is never null; in-memory projects use the current directory at the time of project load.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableMarkDirty : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-422">Получает или задает значение, указывающее временное отключение элемента <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-422">Gets or sets a value that indicates whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled.</span></span> <span data-ttu-id="2f666-423">Это позволяет, например, установить глобальное свойство, не помечая проект как "грязный" для выполнения впоследствии повторной оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-423">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span></span></summary>
        <value><span data-ttu-id="2f666-424"><see langword="true" /> Чтобы указать <see langword="MarkDirty" /> — временно отключено; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-424"><see langword="true" /> to indicate <see langword="MarkDirty" /> is temporarily disabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationCounter : int" Usage="Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-425">Получает число, увеличивающееся при каждой переоценке проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-425">Gets a number that is incremented every time that project is re-evaluated.</span></span></summary>
        <value><span data-ttu-id="2f666-426">Увеличиваемое значение.</span><span class="sxs-lookup"><span data-stu-id="2f666-426">The incremented value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-427">Это значение требуется сравнить с предыдущего значения, чтобы увидеть, если проект был повторно оценку.</span><span class="sxs-lookup"><span data-stu-id="2f666-427">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="2f666-428">Он не должен использоваться для определения того, как часто проекта с момента повторного вычисления может увеличиваться на единицу больше заданного повторную проверку.</span><span class="sxs-lookup"><span data-stu-id="2f666-428">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="member this.ExpandString : string -&gt; string" Usage="project.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="2f666-429">Строка для оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-429">The string to be evaluated.</span></span></param>
        <summary><span data-ttu-id="2f666-430">Оценивает данную строку, разворачивая элементы и свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-430">Evaluates the given string by expanding items and properties.</span></span> <span data-ttu-id="2f666-431">Строка оценена так, как если бы она находилась в конце файла проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-431">The string is evaluated as if it were found at the very end of the project file.</span></span></summary>
        <returns><span data-ttu-id="2f666-432">Вычисленная строка.</span><span class="sxs-lookup"><span data-stu-id="2f666-432">The evaluated string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-433">Этот метод можно использовать, если достаточно наилучшей оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-433">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string with get, set" Usage="Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-434">Получает или задает полный путь к исходному файлу проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-434">Gets or sets the full path to the project source file.</span></span></summary>
        <value><span data-ttu-id="2f666-435">Полный путь к исходному файлу проекта, или пустая строка, если проект не был загружен с диска.</span><span class="sxs-lookup"><span data-stu-id="2f666-435">The full path to the project source file, or an empty string if the project was not loaded from disk.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-436">Задание этого свойства для проекта в коллекцию проектов Переименование проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-436">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f666-437">Получает вычисленное преобразованное в escape-последовательность значение атрибута Include указанных элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-437">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItem -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2f666-438">Элемент, который необходимо оценить и преобразовать в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="2f666-438">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="2f666-439">Получает вычисленное преобразованное в escape-последовательность значение атрибута Include указанных элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-439">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
        <returns><span data-ttu-id="2f666-440">Вычисленное преобразованное в escape-последовательность значение атрибута Include указанных элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-440">The evaluated, escaped value of the Include attribute of the provided items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2f666-441">Определение элемента, которое необходимо оценить и преобразовать в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="2f666-441">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="2f666-442">Получает вычисленное преобразованное в escape-последовательность значение атрибута Include указанного определения элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-442">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="2f666-443">Значение атрибута Include.</span><span class="sxs-lookup"><span data-stu-id="2f666-443">The value of the Include attribute.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="2f666-444">Тип извлекаемого элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-444">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="2f666-445">Получает все элементы заданного типа в проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-445">Gets all the items in the project of the given item type.</span></span> <span data-ttu-id="2f666-446">При отсутствии таких элементов возвращает пустой список.</span><span class="sxs-lookup"><span data-stu-id="2f666-446">If there are none, returns an empty list.</span></span> <span data-ttu-id="2f666-447">Используйте AddItem или RemoveItem, чтобы изменить элементы в проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-447">Use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="2f666-448">Все элементы в проекте указанного типа элемента или пустой список, если нет элементов с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="2f666-448">All the items in the project of the given item type, or an empty list if there are no items with the given item name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-449">Используйте AddItem или RemoveItem, чтобы изменить элементы в проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-449">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByEvaluatedInclude : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsByEvaluatedInclude evaluatedInclude" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude"><span data-ttu-id="2f666-450">Оцененный атрибут Include.</span><span class="sxs-lookup"><span data-stu-id="2f666-450">The evaluated Include attribute.</span></span></param>
        <summary><span data-ttu-id="2f666-451">Получает все элементы с заданным оцененным атрибутом Include.</span><span class="sxs-lookup"><span data-stu-id="2f666-451">Gets all items that have the given evaluated Include attribute.</span></span></summary>
        <returns><span data-ttu-id="2f666-452">Все элементы с заданным оцененным атрибутом Include.</span><span class="sxs-lookup"><span data-stu-id="2f666-452">All items that have the given evaluated Include attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-453">Например этот метод может возвращать все элементы, имеющие Оцененный атрибут Include «component.cpp».</span><span class="sxs-lookup"><span data-stu-id="2f666-453">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="2f666-454">Обычно возвращается ноль или один элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-454">Typically zero or one items are returned.</span></span> <span data-ttu-id="2f666-455">Тем не менее может быть несколько элементов с одинаковыми путем и различных типов элементов, или даже с теми же типами элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-455">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItemsIgnoringCondition : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsIgnoringCondition itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="2f666-456">Тип извлекаемого элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-456">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="2f666-457">Получает все элементы заданного типа в проекте независимо от того, имеет ли их атрибут Condition значение true.</span><span class="sxs-lookup"><span data-stu-id="2f666-457">Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span> <span data-ttu-id="2f666-458">Этот список доступен только для чтения. Используйте AddItem или RemoveItem, чтобы изменить элементы в проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-458">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="2f666-459">Все элементы заданного типа в проекте независимо от того, имеет ли их атрибут Condition значение true.</span><span class="sxs-lookup"><span data-stu-id="2f666-459">All the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-460">Этот список доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2f666-460">This is a read-only list.</span></span> <span data-ttu-id="2f666-461">Используйте AddItem или RemoveItem, чтобы изменить элементы в проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-461">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberSignature Language="F#" Value="member this.GetLogicalProject : unit -&gt; seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="project.GetLogicalProject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f666-462">Получает перечислитель по всем элементам в "логическом проекте".</span><span class="sxs-lookup"><span data-stu-id="2f666-462">Gets an enumerator over all the elements in the "logical project".</span></span> <span data-ttu-id="2f666-463">Логический проект определяется как неоцененный проект, полученный из единого файла MSBuild, созданного в результате включения текста всех импортов исходного файла манифеста проекта MSBuild.</span><span class="sxs-lookup"><span data-stu-id="2f666-463">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span></span></summary>
        <returns><span data-ttu-id="2f666-464">Перечислитель по всем элементам в "логическом проекте".</span><span class="sxs-lookup"><span data-stu-id="2f666-464">An enumerator over all the elements in the "logical project".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-465">Логический проект определяется как неоцененный проект, полученный из единого файла MSBuild, которая является результатом включения текста всех импортов исходного файла манифеста проекта MSBuild.</span><span class="sxs-lookup"><span data-stu-id="2f666-465">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f666-466">Получает преобразованное в escape-последовательность значение метаданных с заданным именем для указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-466">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectMetadata -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="2f666-467">Метаданные, подлежащие преобразованию в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="2f666-467">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="2f666-468">Получает преобразованное в escape-последовательность значение указанных метаданных.</span><span class="sxs-lookup"><span data-stu-id="2f666-468">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="2f666-469">Преобразованное в escape-последовательность значение указанных метаданных.</span><span class="sxs-lookup"><span data-stu-id="2f666-469">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItem * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2f666-470">Элемент, метаданные которого необходимо преобразовать в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="2f666-470">The item whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="2f666-471">Имя метаданных, подлежащих преобразованию в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="2f666-471">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="2f666-472">Получает преобразованное в escape-последовательность значение метаданных с заданным именем для указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-472">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="2f666-473">Преобразованное в escape-последовательность значение метаданных с заданным именем для указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-473">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2f666-474">Определение элемента, метаданные которого необходимо преобразовать в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="2f666-474">The item definition whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="2f666-475">Имя метаданных, подлежащих преобразованию в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="2f666-475">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="2f666-476">Получает преобразованное в escape-последовательность значение метаданных с заданным именем для указанного определения элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-476">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="2f666-477">Преобразованное в escape-последовательность значение метаданных с заданным именем для указанного определения элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-477">The escaped value of the metadatum with the provided name on the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2f666-478">Имя извлекаемого свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-478">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="2f666-479">Получает все свойства с заданным именем в проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-479">Gets any property in the project that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="2f666-480">Любое свойство в проекте, которое имеет указанное имя, или <see langword="null" />, если свойство с таким именем не существует.</span><span class="sxs-lookup"><span data-stu-id="2f666-480">Any property in the project that has the specified name, or <see langword="null" /> if no property of that name exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="project.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2f666-481">Имя извлекаемого свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-481">The name of the property whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="2f666-482">Получает значение заданного свойства в данном проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-482">Gets the value of the given property in this project.</span></span></summary>
        <returns><span data-ttu-id="2f666-483">Значение данного свойства в проекте или пустая строка, если свойство с таким именем не существует.</span><span class="sxs-lookup"><span data-stu-id="2f666-483">The value of the given property in this project, or an empty string if no property of that name exists.</span></span> <span data-ttu-id="2f666-484">Перед возвратом строки выполняется преобразование escape-последовательности.</span><span class="sxs-lookup"><span data-stu-id="2f666-484">Escape sequences are converted before returning the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-485">Свойство со значением пустую строку и свойство не вообще не различаются между этим методом.</span><span class="sxs-lookup"><span data-stu-id="2f666-485">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span> <span data-ttu-id="2f666-486">Чтобы определить, если свойство установлено на всех в проекте, используйте GetProperty(name).</span><span class="sxs-lookup"><span data-stu-id="2f666-486">To determine if a property is set at all in the project, use GetProperty(name).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Evaluation.ProjectProperty -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="2f666-487">Свойство, подлежащее преобразованию в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="2f666-487">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="2f666-488">Получает преобразованное в escape-последовательность значение указанного свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-488">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="2f666-489">Преобразованное в escape-последовательность значение указанного свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-489">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-490">Получает словарь глобальных свойств, используемых для оценки этого проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-490">Gets a dictionary of the global properties used for the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="2f666-491">Словарь глобальных свойств, используемых для оценки этого проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-491">A dictionary of the global properties used for the evaluation of this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-492">Это открытый метод получения значения, которое преобразует только для чтения неиспользуемый IDictionary\<строка, строка >.</span><span class="sxs-lookup"><span data-stu-id="2f666-492">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 <span data-ttu-id="2f666-493">Чтобы легко определить, когда мы измененных, Установка и удаление глобальных свойств выполняется с помощью <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> и <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f666-493">In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Imports : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.Imports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-494">Получает список всех файлов, использованных для оценки этого проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-494">Gets a list of all the files that contributed to the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="2f666-495">Список всех файлов, использованных для оценки этого проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-495">A list of all the files that contributed to the evaluation of this project.</span></span>  
  
 <span data-ttu-id="2f666-496">Имя каждого элемента представляет собой импортируемый элемент, вызвавший импорт файла.</span><span class="sxs-lookup"><span data-stu-id="2f666-496">The name of each item is the Import element that caused the file to be imported.</span></span> <span data-ttu-id="2f666-497">Значение каждого элемента представляет собой корневую папку импортированного проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-497">The value of each item is the project root of the imported project.</span></span> <span data-ttu-id="2f666-498">Импортируемые элементы, атрибуты состояния которых изменились на false, не включаются.</span><span class="sxs-lookup"><span data-stu-id="2f666-498">Import elements whose Condition attribute evaluated to false are not included.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-499">Корневой каталог проекта этого проекта не включается.</span><span class="sxs-lookup"><span data-stu-id="2f666-499">The project root of this project is not included.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportsIncludingDuplicates : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-500">Получает список дублирующихся импортов, если импорт был выполнен несколько раз.</span><span class="sxs-lookup"><span data-stu-id="2f666-500">Gets a list of duplicate imports if an import was imported multiple times.</span></span> <span data-ttu-id="2f666-501">Однако только первый импорт используется при оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-501">However, only the first import was used in evaluation.</span></span></summary>
        <value><span data-ttu-id="2f666-502">Список дублирующихся импортов.</span><span class="sxs-lookup"><span data-stu-id="2f666-502">A list of duplicate imports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBuildEnabled : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-503">Получает или задает свойство, определяющее, разрешено ли в проекте выполнять построение задач и целевых объектов.</span><span class="sxs-lookup"><span data-stu-id="2f666-503">Gets or sets a property that selects whether the targets and tasks of this project can be built.</span></span></summary>
        <value><span data-ttu-id="2f666-504"><see langword="true" /> Если выполнять построение целевых объектов и задач этого проекта; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-504"><see langword="true" /> if the targets and tasks of this project can be built; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-505">Можно использовать в целях безопасности.</span><span class="sxs-lookup"><span data-stu-id="2f666-505">Can be used for security purposes.</span></span> <span data-ttu-id="2f666-506">По умолчанию новый проект имеет один и тот же параметр IsBuildEnabled как содержащий его родительской коллекции проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-506">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="2f666-507">Когда IsBuildEnabled имеет значение false, происходит сбой метода построения над этим проектом.</span><span class="sxs-lookup"><span data-stu-id="2f666-507">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-508">Получает значение, указывающее, был ли проект изменен и нуждается ли в повторной оценке.</span><span class="sxs-lookup"><span data-stu-id="2f666-508">Gets a value that indicates whether this project has been modified so that it must be reevaluated.</span></span></summary>
        <value><span data-ttu-id="2f666-509"><see langword="true" /> Если этот проект был изменен таким образом, он должен быть вычислен повторно; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-509"><see langword="true" /> if this project has been modified so that it must be reevaluated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-510">Проект будет изменен, должен быть вычислен повторно, когда базовый исходный код проекта, включая изменения в импортированных файлах.</span><span class="sxs-lookup"><span data-stu-id="2f666-510">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="2f666-511">Проект также изменен должен быть вычислен повторно, если изменится набор средств проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-511">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Evaluation.ProjectItemDefinition&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-512">Получает словарь определений элементов этого проекта, ключом которого является тип элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-512">Gets a dictionary of item definitions in this project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="2f666-513">Словарь определений элементов этого проекта, ключом которого является тип элемента.</span><span class="sxs-lookup"><span data-stu-id="2f666-513">A dictionary of item definitions in this project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-514">Получает перечислитель по всем элементам этого проекта, упорядоченным по группам в соответствии с типами элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-514">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="2f666-515">Перечислитель по всем элементам этого проекта, упорядоченным по группам в соответствии с типами элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-515">An enumerator over all items in this project, ordered within groups of item types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemsIgnoringCondition : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-516">Получает перечислитель по всем элементам этого проекта, упорядоченным по группам в соответствии с типами элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-516">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="2f666-517">Перечислитель по всем элементам этого проекта, упорядоченным по группам типов элементов, включая элементы, состояние которых имеют значение false или которые принадлежат к группам элементов с состоянием в <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-517">An enumerator over all items in this project, ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-518">Можно использовать для отображения всех элементов, даже если они не являются частью сборки в текущей конфигурации.</span><span class="sxs-lookup"><span data-stu-id="2f666-518">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-519">Получает перечислитель по всем типам элементов в проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-519">Gets an enumerator over all item types in this project.</span></span></summary>
        <value><span data-ttu-id="2f666-520">Перечислитель по всем типам элементов в этом проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-520">An enumerator over all item types in this project.</span></span> <span data-ttu-id="2f666-521">Это упорядоченная коллекция.</span><span class="sxs-lookup"><span data-stu-id="2f666-521">This is an ordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberSignature Language="F#" Value="member this.MarkDirty : unit -&gt; unit" Usage="project.MarkDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f666-522">Помечает данный проект как измененный.</span><span class="sxs-lookup"><span data-stu-id="2f666-522">Marks this project as modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-523">Это редко необходимо явным образом, вызов этого метода, так как все изменения, затрагивающие проект автоматически пометить ее как измененную.</span><span class="sxs-lookup"><span data-stu-id="2f666-523">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="2f666-524">Иногда тем не менее, этот метод должен вызываться.</span><span class="sxs-lookup"><span data-stu-id="2f666-524">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="2f666-525">Например проект может иметь элемент Import, условие которого зависит файл, который существует на диске.</span><span class="sxs-lookup"><span data-stu-id="2f666-525">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="2f666-526">Если этот файл не существует во время вычисления и создается после вычисления, затем проект должен быть явно помечены как измененные.</span><span class="sxs-lookup"><span data-stu-id="2f666-526">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="2f666-527"><xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> Метод использует это свойство, чтобы определить необходимые вычисления.</span><span class="sxs-lookup"><span data-stu-id="2f666-527">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectCollection : Microsoft.Build.Evaluation.ProjectCollection" Usage="Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-528">Получает коллекцию проектов, содержащую этот проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-528">Gets the project collection which contains this project.</span></span></summary>
        <value><span data-ttu-id="2f666-529">Коллекции проектов, содержащий данный проект, который никогда не бывает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-529">The project collection that contains this project, which is never <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-530">Расположение исходного файла, а не какого-либо содержимого внутри него.</span><span class="sxs-lookup"><span data-stu-id="2f666-530">The location of the originating file itself, not any specific content within it.</span></span> <span data-ttu-id="2f666-531">Если файл не получил имя, это пустое место.</span><span class="sxs-lookup"><span data-stu-id="2f666-531">If the file has not been given a name, this is an empty location.</span></span> <span data-ttu-id="2f666-532">Это правомерный случай отсутствия расположение.</span><span class="sxs-lookup"><span data-stu-id="2f666-532">This is a legitimate case of having no location.</span></span></summary>
        <value><span data-ttu-id="2f666-533">Адресом отправителя файла расположение или пустое место, если файла не задано имя.</span><span class="sxs-lookup"><span data-stu-id="2f666-533">The originating file location, or an empty location if the file has not been given a name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-534">Получает перечислитель по всем свойствам в проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-534">Gets an enumerator over all properties in this project.</span></span> <span data-ttu-id="2f666-535">Это неупорядоченная коллекция.</span><span class="sxs-lookup"><span data-stu-id="2f666-535">This is an unordered collection.</span></span></summary>
        <value><span data-ttu-id="2f666-536">Перечислитель по всем свойствам в данном проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-536">An enumerator over all properties in this project.</span></span> <span data-ttu-id="2f666-537">Так как свойства оцениваются в порядке их расположения, это неупорядоченная коллекция.</span><span class="sxs-lookup"><span data-stu-id="2f666-537">Since properties are evaluated as they appear, this is an unordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberSignature Language="F#" Value="member this.ReevaluateIfNecessary : unit -&gt; unit" Usage="project.ReevaluateIfNecessary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f666-538">Выполняет повторную оценку проекта для внесения изменений.</span><span class="sxs-lookup"><span data-stu-id="2f666-538">Reevaluates the project to incorporate any changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-539">Проекта производится только в том случае, если оно помечено как измененное.</span><span class="sxs-lookup"><span data-stu-id="2f666-539">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="2f666-540">Повторная оценка включает в себя все изменения, внесенные в исходный код проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-540">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="2f666-541">InvalidProjectFileException вызывается в том случае, если вычисление завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="2f666-541">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveGlobalProperty : string -&gt; bool" Usage="project.RemoveGlobalProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2f666-542">Имя удаляемого глобального свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-542">The name of the global property to be removed.</span></span></param>
        <summary><span data-ttu-id="2f666-543">Удаляет глобальное свойство и помечает проект как измененный.</span><span class="sxs-lookup"><span data-stu-id="2f666-543">Removes a global property and marks the project as modified.</span></span></summary>
        <returns><span data-ttu-id="2f666-544">Значение <see langword="true" />, если значение глобального свойства было задано.</span><span class="sxs-lookup"><span data-stu-id="2f666-544"><see langword="true" /> if the value of the global property was set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Evaluation.ProjectItem -&gt; bool" Usage="project.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2f666-545">Удаляемый элемент.</span><span class="sxs-lookup"><span data-stu-id="2f666-545">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="2f666-546">Удаляет элемент из проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-546">Removes an item from the project.</span></span> <span data-ttu-id="2f666-547">Удаляемый элемент должен находиться в проекте и не должен происходить из импортированного файла.</span><span class="sxs-lookup"><span data-stu-id="2f666-547">The item to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="2f666-548">Значение <see langword="true" />, если элемент присутствует в оцениваемом проекте; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-548"><see langword="true" /> if the item is present in this evaluated project; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2f666-549">Обычно данный метод возвращает значение true, так как, если запрошенный элемент отсутствует, метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="2f666-549">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span></span> <span data-ttu-id="2f666-550">Однако если элемент присутствует только в коллекции ItemsIgnoringCondition, метод возвращает значение false.</span><span class="sxs-lookup"><span data-stu-id="2f666-550">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-551">Если группа элементов, содержащая элемент становится пустой, она также удаляется.</span><span class="sxs-lookup"><span data-stu-id="2f666-551">If the item group containing the item becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="2f666-552">Если элемент исходит из символ-шаблон или выражений, разделенных точкой с запятой, выражение сначала разворачивается в несколько элементов.</span><span class="sxs-lookup"><span data-stu-id="2f666-552">If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.</span></span>  
  
 <span data-ttu-id="2f666-553">Проект будет обновлен, но без дальнейшей оценки происходит до повторного вычисления.</span><span class="sxs-lookup"><span data-stu-id="2f666-553">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="2f666-554">Например, если элемент удаляется типа «i», «j», который вычисляется из «@(i)» не изменяется до повторного вычисления.</span><span class="sxs-lookup"><span data-stu-id="2f666-554">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : seq&lt;Microsoft.Build.Evaluation.ProjectItem&gt; -&gt; unit" Usage="project.RemoveItems items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="2f666-555">Удаляемые элементы.</span><span class="sxs-lookup"><span data-stu-id="2f666-555">The items to be removed.</span></span></param>
        <summary><span data-ttu-id="2f666-556">Удаляет из проекта все заданные элементы за исключением тех, которые происходят из импортированных проектов.</span><span class="sxs-lookup"><span data-stu-id="2f666-556">Removes all the given items from the project, unless they originate from an imported project.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-557">Если элемент происходит из импортируемого проекта, он просто пропускается.</span><span class="sxs-lookup"><span data-stu-id="2f666-557">If an item originates from an imported project, it is simply skipped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : Microsoft.Build.Evaluation.ProjectProperty -&gt; bool" Usage="project.RemoveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="2f666-558">Удаляемое свойство.</span><span class="sxs-lookup"><span data-stu-id="2f666-558">The property to remove.</span></span></param>
        <summary><span data-ttu-id="2f666-559">Удаляет свойство из проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-559">Removes an property from the project.</span></span> <span data-ttu-id="2f666-560">Удаляемое свойство должно присутствовать в проекте и не должно происходить из импортированного файла.</span><span class="sxs-lookup"><span data-stu-id="2f666-560">The property to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="2f666-561">Значение <see langword="true" />, если свойство присутствует в оцениваемом проекте; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-561"><see langword="true" /> if the property is present in this evaluated project; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-562">Если в группу свойств, содержащий свойство, становится пустой, она также удаляется.</span><span class="sxs-lookup"><span data-stu-id="2f666-562">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="2f666-563">Проект будет обновлен, но без дальнейшей оценки происходит до повторного вычисления.</span><span class="sxs-lookup"><span data-stu-id="2f666-563">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="2f666-564">Например если удаляется «p», «q», который вычисляется из «$(p)» не изменяется до повторного вычисления.</span><span class="sxs-lookup"><span data-stu-id="2f666-564">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f666-565">Если проект был изменен, сохраняет его в файловой системе с помощью кодировки символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-565">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="project.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f666-566">Если проект был изменен, сохраняет его в файловой системе с помощью кодировки символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-566">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="project.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="2f666-567">Средство записи текста, в которое необходимо сохранить проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-567">The text writer to save the project to.</span></span></param>
        <summary><span data-ttu-id="2f666-568">Сохраняет проект в указанное средство записи текста независимо от наличия изменений в проекте.</span><span class="sxs-lookup"><span data-stu-id="2f666-568">Saves the project to the provided text writer, whether or not the project has been modified.</span></span> <span data-ttu-id="2f666-569">Использует кодировку средства записи текста и помечает проект как неизмененный.</span><span class="sxs-lookup"><span data-stu-id="2f666-569">Uses the character encoding of the text writer and marks the project as unmodified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="project.Save path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="2f666-570">Путь к исходному коду проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-570">The path to the project source code.</span></span></param>
        <summary><span data-ttu-id="2f666-571">Если проект или путь к исходному коду проекта были изменены, сохраняет проект в файловой системе с помощью кодировки символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f666-571">Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Text.Encoding -&gt; unit" Usage="project.Save encoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding"><span data-ttu-id="2f666-572">Кодировка символов, используемая при сохранении проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-572">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="2f666-573">Если проект был изменен, сохраняет его в файловой системе с помощью заданной кодировки символов.</span><span class="sxs-lookup"><span data-stu-id="2f666-573">Saves the project to the file system, if modified, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="project.Save (path, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="2f666-574">Путь к исходному коду проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-574">The path to the project source code.</span></span></param>
        <param name="encoding"><span data-ttu-id="2f666-575">Кодировка символов, используемая при сохранении проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-575">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="2f666-576">Если проект или путь к исходному коду проекта были изменены, сохраняет проект в файловой системе с помощью заданной кодировки символов.</span><span class="sxs-lookup"><span data-stu-id="2f666-576">Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveLogicalProject : System.IO.TextWriter -&gt; unit" Usage="project.SaveLogicalProject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="2f666-577">Средство записи, которое сохраняет файл проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-577">The writer that saves the project file.</span></span></param>
        <summary><span data-ttu-id="2f666-578">Сохраняет "логический" или "предварительно обработанный" файл проекта, включающий все импортированные файлы так, как если бы они составляли единый файл.</span><span class="sxs-lookup"><span data-stu-id="2f666-578">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberSignature Language="F#" Value="member this.SetGlobalProperty : string * string -&gt; bool" Usage="project.SetGlobalProperty (name, escapedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2f666-579">Имя задаваемого глобального свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-579">The name of the global property to set.</span></span></param>
        <param name="escapedValue"><span data-ttu-id="2f666-580">Новое значение глобального свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-580">The new value of the global property.</span></span></param>
        <summary><span data-ttu-id="2f666-581">Задает глобальное свойство после оценки проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-581">Sets a global property after the project has been evaluated.</span></span> <span data-ttu-id="2f666-582">Если значение изменяется, проект помечается как требующий повторной оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-582">If the value changes, the project is marked to require reevaluation.</span></span></summary>
        <returns><span data-ttu-id="2f666-583">Значение <see langword="true" />, если значение меняется, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-583"><see langword="true" /> if the value changes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.SetProperty (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2f666-584">Имя задаваемого свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-584">The name of the property to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="2f666-585">Новое невычисленное значение свойства.</span><span class="sxs-lookup"><span data-stu-id="2f666-585">The new unevaluated value of the property.</span></span></param>
        <summary><span data-ttu-id="2f666-586">Задает или добавляет свойство с заданными именем и значением в проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-586">Sets or adds a property with the given name and value to the project.</span></span> <span data-ttu-id="2f666-587">Переопределяет значение свойства с таким же именем, если оно не происходит из импортированного файла.</span><span class="sxs-lookup"><span data-stu-id="2f666-587">Overwrites the value of a property with the same name if it did not originate in an imported file.</span></span></summary>
        <returns><span data-ttu-id="2f666-588">Свойство.</span><span class="sxs-lookup"><span data-stu-id="2f666-588">The property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-589">Если отсутствует свойство с заданным именем, обновляет последнее существующее свойство с заданным именем, у которого нет условия для самого себя или своей группы свойств, если оно не происходит из импортированного файла.</span><span class="sxs-lookup"><span data-stu-id="2f666-589">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="2f666-590">В противном случае добавляет новое свойство в первую группу свойств без условия, создание группу свойств при необходимости после последней существующей группы свойств, еще в начале проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-590">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="2f666-591">Вычисление выполняется на основе результативности.</span><span class="sxs-lookup"><span data-stu-id="2f666-591">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="2f666-592">Свойства, определенные в источнике проекта после новое свойство может использоваться для оценки.</span><span class="sxs-lookup"><span data-stu-id="2f666-592">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="2f666-593">Оценивается только это свойство.</span><span class="sxs-lookup"><span data-stu-id="2f666-593">Only this property is evaluated.</span></span> <span data-ttu-id="2f666-594">Другие свойства, которые могут опираться на нем не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="2f666-594">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipEvaluation : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-595">Получает или задает значение, указывающее, что ReevaluateIfNecessary временно отключен.</span><span class="sxs-lookup"><span data-stu-id="2f666-595">Gets or sets a value that indicates whether ReevaluateIfNecessary is temporarily disabled.</span></span> <span data-ttu-id="2f666-596">Это может быть полезным, если узел ожидает выполнения ряда считываний и записей в проект и целесообразно пожертвовать правильностью для увеличения производительности.</span><span class="sxs-lookup"><span data-stu-id="2f666-596">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span></span></summary>
        <value><span data-ttu-id="2f666-597">Флаг, определяющий, будет ли ReevaluateIfNecessary временно отключен.</span><span class="sxs-lookup"><span data-stu-id="2f666-597">A flag that determines whether ReevaluateIfNecessary is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubToolsetVersion : string" Usage="Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-598">Получает значение атрибута SubToolsetVersion, если есть.</span><span class="sxs-lookup"><span data-stu-id="2f666-598">Gets the value of the SubToolsetVersion attribute, if any.</span></span> <span data-ttu-id="2f666-599">Это значение было скомбинировано со значением атрибута ToolsVersion, чтобы указать свойства набора инструментов для данного проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-599">This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.</span></span></summary>
        <value><span data-ttu-id="2f666-600">Значение атрибута SubToolsetVersion, или пустая строка, если атрибут не присутствует.</span><span class="sxs-lookup"><span data-stu-id="2f666-600">The SubToolsetVersion attribute value, or an empty string if the attribute is not present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Evaluation.Project.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-601">Получает словарь всех целевых объектов этого проекта, ключом которого является имя целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-601">Gets a dictionary of all targets in this project, keyed by target name.</span></span></summary>
        <value><span data-ttu-id="2f666-602">Только для чтения словарь всех целевых объектов этого проекта, ключом которого является имя целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-602">A read-only dictionary of all targets in this project, keyed by target name.</span></span> <span data-ttu-id="2f666-603">Переопределенные целевые объекты не включены в эту коллекцию.</span><span class="sxs-lookup"><span data-stu-id="2f666-603">Overridden targets are not included in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-604">Получает версию инструментов, использованную для оценки проекта, если таковая имеется.</span><span class="sxs-lookup"><span data-stu-id="2f666-604">Gets the tools version that this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="2f666-605">Версия инструментов, использованную для оценки проекта, если таковые имеются.</span><span class="sxs-lookup"><span data-stu-id="2f666-605">The tools version that this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-606">Заданное конструктором.</span><span class="sxs-lookup"><span data-stu-id="2f666-606">Set by the constructor.</span></span> <span data-ttu-id="2f666-607">Это не обязательно совпадает с версией средств на теге проекта при его наличии; он может извне заданы, например с коммутатором /tv в командной строке.</span><span class="sxs-lookup"><span data-stu-id="2f666-607">This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.</span></span> <span data-ttu-id="2f666-608">Версия инструментов фактическое в теге проекта может быть получен из <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f666-608">The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span></span> <span data-ttu-id="2f666-609">Версия инструментов нельзя изменить после создания проекта.</span><span class="sxs-lookup"><span data-stu-id="2f666-609">The tools version cannot be changed once the project has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Evaluation.Project.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f666-610">Получает корневой проект, связанный с данным проектом.</span><span class="sxs-lookup"><span data-stu-id="2f666-610">Gets the root project associated with this project.</span></span> <span data-ttu-id="2f666-611">Не может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-611">Can never be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="2f666-612">Корневой проект, связанный с этим проектом, который не может иметь <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f666-612">The root project associated with this project, which can never be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f666-613">Нет способа задать это свойство.</span><span class="sxs-lookup"><span data-stu-id="2f666-613">There is no way to set this property.</span></span> <span data-ttu-id="2f666-614">Если у вас есть новый корневой элемент проекта, он вычисляется в новый проект.</span><span class="sxs-lookup"><span data-stu-id="2f666-614">If you have a new project root, evaluate it into a new project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>