<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a20fa78951797e973f27dcc4683110f9d721679" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70598325" /></Metadata><TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <TypeSignature Language="F#" Value="type X509Certificate2 = class&#xA;    inherit X509Certificate" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="99d05-101">Представляет сертификат X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-101">Represents an X.509 certificate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-102">Структура X. 509 создана в рабочих группах Международная организация по стандартизации (ISO).</span><span class="sxs-lookup"><span data-stu-id="99d05-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="99d05-103">Эта структура может использоваться для представления различных типов данных, включая идентификацию, назначение и атрибуты держателя (разрешения, возраст, пол, расположение, принадлежность и т. д.).</span><span class="sxs-lookup"><span data-stu-id="99d05-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="99d05-104">Хотя спецификации ISO наиболее полезны в самой структуре, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> класс предназначен для моделирования сценариев использования, определенных в спецификациях, выданных инфраструктурой открытых ключей Internet Engineering Task Force (IETF), X. 509 (пкикс ) Рабочая группа.</span><span class="sxs-lookup"><span data-stu-id="99d05-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="99d05-105">Наиболее информативными из этих спецификаций являются RFC 3280, "[сертификат и профиль отзыва сертификатов (CRL)](https://go.microsoft.com/fwlink/?LinkId=45286)".</span><span class="sxs-lookup"><span data-stu-id="99d05-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-106">Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], этот тип <xref:System.IDisposable> реализует интерфейс.</span><span class="sxs-lookup"><span data-stu-id="99d05-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="99d05-107">По окончании использования выдаленную ему память следует прямо или косвенно освободить.</span><span class="sxs-lookup"><span data-stu-id="99d05-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="99d05-108">Чтобы сделать это прямо, вызовите его метод <xref:System.IDisposable.Dispose%2A> в блоке `try`/`catch`.</span><span class="sxs-lookup"><span data-stu-id="99d05-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="99d05-109">Чтобы сделать это косвенно, используйте языковые конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="99d05-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="99d05-110">Дополнительные сведения см. в разделе "Использование объекта, реализующего IDisposable" в статье об интерфейсе <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="99d05-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="99d05-111">Для приложений, предназначенных [!INCLUDE[net_v452](~/includes/net-v452-md.md)] для и более ранних <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> версий, <xref:System.IDisposable> класс не реализует интерфейс и поэтому не имеет `Dispose` метода.</span><span class="sxs-lookup"><span data-stu-id="99d05-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-112">В следующем примере показано, как использовать <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект для шифрования и расшифровки файла.</span><span class="sxs-lookup"><span data-stu-id="99d05-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="99d05-113">В следующем примере создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99d05-114">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99d05-115">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-116">Этот конструктор создает пустой <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект, в отличие от других конструкторов для этого класса, которые используют сведения о сертификате из массива байтов, указателя или файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-117">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются только активные сертификаты, а затем пользователю предоставляется возможность выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="99d05-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="99d05-118">Затем в примере в консоль записываются сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 rawData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="99d05-119">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-119">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-120">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием информации из указанного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="99d05-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-121">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект, используя сведения о сертификате из массива байтов.</span><span class="sxs-lookup"><span data-stu-id="99d05-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="99d05-122">Массив байтов может представлять собой двоичные данные X. 509 в кодировке DER или Base64.</span><span class="sxs-lookup"><span data-stu-id="99d05-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="99d05-123">Массив байтов также может быть подписанным в формате PKCS7 (Authenticode). сертификат подписавший используется для создания объекта.</span><span class="sxs-lookup"><span data-stu-id="99d05-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="99d05-124">Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификат создается путем указания хранилища файлов с подписью PKCS7 для `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="99d05-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-125">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-125">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-126">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-126">For example:</span></span>  
  
<span data-ttu-id="99d05-127">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-127">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-128">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-128">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-129">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-129">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : nativeint -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="99d05-130">Указатель на контекст сертификата в неуправляемом коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-130">A pointer to a certificate context in unmanaged code.</span></span> <span data-ttu-id="99d05-131">Структура на языке C вызывается <see langword="PCCERT_CONTEXT" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-131">The C structure is called <see langword="PCCERT_CONTEXT" />.</span></span></param>
        <summary><span data-ttu-id="99d05-132">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью неуправляемого дескриптора.</span><span class="sxs-lookup"><span data-stu-id="99d05-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-133">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект, `PCCERT_CONTEXT`используя маркер для контекста сертификата Microsoft Cryptographic API.</span><span class="sxs-lookup"><span data-stu-id="99d05-133">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="99d05-134">Обратите внимание, что непосредственно вызывающему объекту этого конструктора требуется разрешение на неуправляемый код.</span><span class="sxs-lookup"><span data-stu-id="99d05-134">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-135">Конструктор создает копию контекста сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-135">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="99d05-136">Не следует считать, что структура контекста, переданная конструктору, является допустимой. возможно, он был выпущен.</span><span class="sxs-lookup"><span data-stu-id="99d05-136">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="99d05-137">Копию текущей `PCCERT_CONTEXT` структуры можно получить <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> из свойства, но она допустима только в <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> течение времени существования объекта.</span><span class="sxs-lookup"><span data-stu-id="99d05-137">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-138">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-138">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-139">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-139">For example:</span></span>  
  
<span data-ttu-id="99d05-140">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-140">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-141">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-141">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-142">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-142">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-143">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-143">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-144">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-144">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-145">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-145">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="99d05-146">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-146">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></param>
        <summary><span data-ttu-id="99d05-147">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-148">Этот метод создает новый экземпляр <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> класса <xref:System.Security.Cryptography.X509Certificates.X509Certificate> с помощью объекта.</span><span class="sxs-lookup"><span data-stu-id="99d05-148">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-149">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-149">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-150">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-150">For example:</span></span>  
  
<span data-ttu-id="99d05-151">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-151">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-152">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-152">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-153">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-153">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-154">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-154">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-155">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-155">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-156">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-156">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="99d05-157">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-157">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="99d05-158">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью имени файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-158">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-159">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект, используя имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-159">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="99d05-160">Он поддерживает двоичное кодирование (DER) или кодировку Base64.</span><span class="sxs-lookup"><span data-stu-id="99d05-160">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="99d05-161">Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификат создается путем указания хранилища файлов с подписью PKCS7 для `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="99d05-161">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-162">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-162">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-163">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-163">For example:</span></span>  
  
<span data-ttu-id="99d05-164">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-164">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-165">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-165">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-166">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-166">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="99d05-167">Массив байтов, содержащий данные из сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-167">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-168">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-168">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="99d05-169">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов и пароля.</span><span class="sxs-lookup"><span data-stu-id="99d05-169">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-170">Этот конструктор используется с файлами PKCS12 (PFX), которые содержат закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-170">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="99d05-171">При вызове этого конструктора с правильным паролем закрытый ключ расшифровывается и сохраняется в контейнере ключей.</span><span class="sxs-lookup"><span data-stu-id="99d05-171">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-172">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-172">Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-173">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-173">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="99d05-174">Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификат создается путем указания хранилища файлов с подписью PKCS7 для `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="99d05-174">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-175">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-175">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-176">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-176">For example:</span></span>  
  
<span data-ttu-id="99d05-177">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-177">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-178">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-178">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-179">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-179">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-180">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-180">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-181">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-181">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-182">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="99d05-183">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-183">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-184">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-184">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="99d05-185">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов и пароля.</span><span class="sxs-lookup"><span data-stu-id="99d05-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-186">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект, используя массив байтов и пароль, необходимый для доступа к данным сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-186">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="99d05-187">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-187">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="99d05-188">При вызове этого конструктора с правильным паролем закрытый ключ расшифровывается и сохраняется в контейнере ключей.</span><span class="sxs-lookup"><span data-stu-id="99d05-188">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-189">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-189">Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-190">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-190">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="99d05-191">Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификат создается путем указания хранилища файлов с подписью PKCS7 для `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="99d05-191">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-192">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-192">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-193">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-193">For example:</span></span>  
  
<span data-ttu-id="99d05-194">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-194">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-195">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-195">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-196">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-196">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-197">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-197">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-198">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-198">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-199">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="99d05-200">Сведения о сериализации, необходимые для десериализации нового объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-200">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span></span></param>
        <param name="context"><span data-ttu-id="99d05-201">Контекстные сведения об источнике десериализуемого потока.</span><span class="sxs-lookup"><span data-stu-id="99d05-201">Contextual information about the source of the stream to be deserialized.</span></span></param>
        <summary><span data-ttu-id="99d05-202">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используя заданную информацию о сериализации и контексте потоков.</span><span class="sxs-lookup"><span data-stu-id="99d05-202">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="99d05-203">Только в .NET Core: Во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="99d05-203">.NET Core only: In all cases.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-204">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-204">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-205">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-205">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-206">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-206">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="99d05-207">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-207">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-208">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-208">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="99d05-209">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата и пароля.</span><span class="sxs-lookup"><span data-stu-id="99d05-209">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-210">Этот конструктор используется с файлами PKCS12 (PFX), которые содержат закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-210">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="99d05-211">При вызове этого конструктора с правильным паролем закрытый ключ расшифровывается и сохраняется в контейнере ключей.</span><span class="sxs-lookup"><span data-stu-id="99d05-211">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-212">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-212">Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-213">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-213">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="99d05-214">Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификат создается путем указания хранилища файлов с подписью PKCS7 для `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="99d05-214">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-215">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-215">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-216">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-216">For example:</span></span>  
  
<span data-ttu-id="99d05-217">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-217">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-218">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-218">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-219">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-219">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-220">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-220">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-221">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-221">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-222">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-222">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="99d05-223">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-223">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-224">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-224">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="99d05-225">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используя имя файла сертификата и пароль для доступа к сертификату.</span><span class="sxs-lookup"><span data-stu-id="99d05-225">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-226">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект, используя имя файла сертификата и пароль, необходимые для доступа к сертификату.</span><span class="sxs-lookup"><span data-stu-id="99d05-226">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="99d05-227">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-227">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="99d05-228">При вызове этого конструктора с правильным паролем закрытый ключ расшифровывается и сохраняется в контейнере ключей.</span><span class="sxs-lookup"><span data-stu-id="99d05-228">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-229">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-229">Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-230">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-230">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="99d05-231">Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификат создается путем указания хранилища файлов с подписью PKCS7 для `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="99d05-231">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-232">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-232">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-233">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-233">For example:</span></span>  
  
<span data-ttu-id="99d05-234">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-234">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-235">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-235">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-236">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-236">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-237">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-237">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-238">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-238">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-239">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-239">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="99d05-240">Массив байтов, содержащий данные из сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-240">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-241">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-241">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="99d05-242">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-242">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-243">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов, пароля и флага хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="99d05-243">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-244">Этот конструктор используется с файлами PKCS12 (PFX), которые содержат закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-244">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="99d05-245">При вызове этого конструктора с правильным паролем закрытый ключ расшифровывается и сохраняется в поставщике служб шифрования Microsoft Cryptographic API (CSP).</span><span class="sxs-lookup"><span data-stu-id="99d05-245">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-246">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-246">Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-247">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-247">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="99d05-248">Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификат создается путем указания хранилища файлов с подписью PKCS7 для `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="99d05-248">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-249">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-249">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-250">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-250">For example:</span></span>  
  
<span data-ttu-id="99d05-251">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-251">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-252">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-252">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-253">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-253">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-254">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-254">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-255">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-255">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-256">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-256">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="99d05-257">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-257">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-258">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-258">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="99d05-259">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-259">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-260">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов, пароля и флага хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="99d05-260">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-261">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект, используя массив байтов, пароль, необходимый для доступа к данным сертификата, и флаг хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="99d05-261">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="99d05-262">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-262">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="99d05-263">При вызове этого конструктора с правильным паролем закрытый ключ расшифровывается и сохраняется в поставщике служб шифрования Microsoft Cryptographic API (CSP).</span><span class="sxs-lookup"><span data-stu-id="99d05-263">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-264">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-264">Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-265">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-265">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="99d05-266">Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификат создается путем указания хранилища файлов с подписью PKCS7 для `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="99d05-266">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-267">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-267">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-268">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-268">For example:</span></span>  
  
<span data-ttu-id="99d05-269">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-269">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-270">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-270">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-271">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-271">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-272">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-272">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-273">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-273">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-274">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-274">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="99d05-275">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-275">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-276">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-276">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="99d05-277">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-277">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-278">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата, пароля и флага хранилища ключа.</span><span class="sxs-lookup"><span data-stu-id="99d05-278">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-279">Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификат создается путем указания хранилища файлов с подписью PKCS7 для `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="99d05-279">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-280">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-280">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-281">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-281">For example:</span></span>  
  
<span data-ttu-id="99d05-282">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-282">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-283">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-283">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-284">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-284">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-285">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-285">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-286">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-286">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-287">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-287">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="99d05-288">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-288">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-289">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-289">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="99d05-290">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-290">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-291">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата и пароля для доступа к сертификату, а также флага хранилища ключа.</span><span class="sxs-lookup"><span data-stu-id="99d05-291">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-292">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект, используя имя файла сертификата, пароль, необходимый для доступа к сертификату, и флаг хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="99d05-292">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-293">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-293">Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-294">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-294">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="99d05-295">Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификат создается путем указания хранилища файлов с подписью PKCS7 для `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="99d05-295">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-296">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-296">An error with the certificate occurs.</span></span> <span data-ttu-id="99d05-297">Например:</span><span class="sxs-lookup"><span data-stu-id="99d05-297">For example:</span></span>  
  
<span data-ttu-id="99d05-298">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="99d05-298">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="99d05-299">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-299">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="99d05-300">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="99d05-300">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99d05-301">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="99d05-301">for accessing unmanaged code.</span></span> <span data-ttu-id="99d05-302">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-302">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99d05-303">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99d05-303">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Archived : bool with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-304">Получает или задает значение, указывающее на архивирование сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-304">Gets or sets a value indicating that an X.509 certificate is archived.</span></span></summary>
        <value><span data-ttu-id="99d05-305">Значение <see langword="true" />, если сертификат архивирован, значение<see langword="false" />, если сертификат не архивирован.</span><span class="sxs-lookup"><span data-stu-id="99d05-305"><see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-306">Это свойство задается только для сертификата, связанного с хранилищем.</span><span class="sxs-lookup"><span data-stu-id="99d05-306">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="99d05-307">Если свойство задано и сертификат добавляется в хранилище сертификатов, значение сохраняется.</span><span class="sxs-lookup"><span data-stu-id="99d05-307">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="99d05-308">Если свойство задано для сертификата, полученного из хранилища, значение сохраняется немедленно.</span><span class="sxs-lookup"><span data-stu-id="99d05-308">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="99d05-309">В хранилище X. 509 архивные сертификаты не включаются в возвращаемый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> объект, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> если только свойство не имеет значение `true`.</span><span class="sxs-lookup"><span data-stu-id="99d05-309">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="99d05-310">Если значение задано или не установлено, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> то не выполняется ни одно физическое действие архивации.</span><span class="sxs-lookup"><span data-stu-id="99d05-310">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-311">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются только активные сертификаты, а затем пользователю предоставляется возможность выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="99d05-311">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="99d05-312">Затем в примере в консоль записываются сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-312">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-313">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="99d05-313">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]" Usage="x509Certificate2.Export (contentType, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("X509ContentType.SerializedCert is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Security.Cryptography.X509Certificates.X509ExtensionCollection" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-314">Возвращает коллекцию объектов <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-314">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span></span></summary>
        <value><span data-ttu-id="99d05-315">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-315">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-316">Расширения, определенные в формате сертификата X. 509 v3, позволяют включать дополнительные данные в сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-316">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="99d05-317">Некоторые расширения определяются стандартом ISO в определении X. 509 v3, а также ПКИКС в RFC 3280, "[сертификат и профиль отзыва сертификатов (CRL)](https://go.microsoft.com/fwlink/?LinkId=45286)".</span><span class="sxs-lookup"><span data-stu-id="99d05-317">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="99d05-318">К общим расширениям относятся сведения об использовании<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>ключа (), идентификаторы<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>ключей (), политики сертификатов, сведения об отзыве (расширение точки распространения списка отзыва сертификатов) и другие способы использования.</span><span class="sxs-lookup"><span data-stu-id="99d05-318">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-319">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются только активные сертификаты, а затем пользователю предоставляется возможность выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="99d05-319">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="99d05-320">Затем в примере в консоль записываются сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-320">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-321">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="99d05-321">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-322">Получает или задает связанный псевдоним для сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-322">Gets or sets the associated alias for a certificate.</span></span></summary>
        <value><span data-ttu-id="99d05-323">Понятное имя сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-323">The certificate's friendly name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-324">Понятные имена — это свойства в хранилище сертификатов X. 509, которые можно задать.</span><span class="sxs-lookup"><span data-stu-id="99d05-324">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="99d05-325">Они используются для того, чтобы разрешить пользователю связывать псевдонимы с сертификатами, чтобы их можно было легко идентифицировать.</span><span class="sxs-lookup"><span data-stu-id="99d05-325">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="99d05-326">Если понятное имя для сертификата не существует, возвращается пустая строка ("").</span><span class="sxs-lookup"><span data-stu-id="99d05-326">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-327">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-327">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-328">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="99d05-328">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99d05-329">Показывает тип сертификата, содержащегося в массиве байтов или файле.</span><span class="sxs-lookup"><span data-stu-id="99d05-329">Indicates the type of certificate contained in a byte array or file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="99d05-330">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-330">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-331">Показывает тип сертификата, содержащегося в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="99d05-331">Indicates the type of certificate contained in a byte array.</span></span></summary>
        <returns><span data-ttu-id="99d05-332">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-332">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-333">Этот метод позволяет обнаружить тип сертификата в файле.</span><span class="sxs-lookup"><span data-stu-id="99d05-333">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-334">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются только активные сертификаты, а затем пользователю предоставляется возможность выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="99d05-334">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="99d05-335">Затем в примере в консоль записываются сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-335">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="99d05-336">Параметр <paramref name="rawData" /> имеет нулевую длину, или его значение равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-336"><paramref name="rawData" /> has a zero length or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : string -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="99d05-337">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-337">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="99d05-338">Показывает тип сертификата, содержащегося в файле.</span><span class="sxs-lookup"><span data-stu-id="99d05-338">Indicates the type of certificate contained in a file.</span></span></summary>
        <returns><span data-ttu-id="99d05-339">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-339">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-340">Этот метод позволяет обнаружить тип сертификата в файле.</span><span class="sxs-lookup"><span data-stu-id="99d05-340">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99d05-341"><paramref name="fileName" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-341"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="99d05-342">для чтения сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-342">for reading the certificate.</span></span> <span data-ttu-id="99d05-343">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-343">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="99d05-344">Связанное перечисление:<see cref="F:System.IO.FileAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="99d05-344">Associated enumeration: <see cref="F:System.IO.FileAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="F#" Value="member this.GetNameInfo : System.Security.Cryptography.X509Certificates.X509NameType * bool -&gt; string" Usage="x509Certificate2.GetNameInfo (nameType, forIssuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType"><span data-ttu-id="99d05-345">Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> для субъекта.</span><span class="sxs-lookup"><span data-stu-id="99d05-345">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span></span></param>
        <param name="forIssuer"><span data-ttu-id="99d05-346">Значение <see langword="true" /> для включения имени поставщика; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-346"><see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="99d05-347">Получает имена субъекта и поставщика сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-347">Gets the subject and issuer names from a certificate.</span></span></summary>
        <returns><span data-ttu-id="99d05-348">Имя сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-348">The name of the certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-349">Этот метод всегда следует использовать вместо анализа сертификата, так как многие из значений имен могут находиться в нескольких расположениях.</span><span class="sxs-lookup"><span data-stu-id="99d05-349">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="99d05-350">Использование этого метода гарантирует, что будет возвращено соответствующее имя.</span><span class="sxs-lookup"><span data-stu-id="99d05-350">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-351">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются только активные сертификаты, а затем пользователю предоставляется возможность выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="99d05-351">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="99d05-352">Затем в примере в консоль записываются сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-352">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrivateKey : bool" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-353">Возвращает значение, которое указывает, содержит ли объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> закрытый ключ.</span><span class="sxs-lookup"><span data-stu-id="99d05-353">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span></span></summary>
        <value><span data-ttu-id="99d05-354">Значение <see langword="true" />, если объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> содержит закрытый ключ; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-354"><see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-355">Недопустимый контекст сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-355">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99d05-356">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> предоставленными сведениями о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-356">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] -&gt; unit" Usage="x509Certificate2.Import rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="99d05-357">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-357">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-358">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> данными из массива байтов.</span><span class="sxs-lookup"><span data-stu-id="99d05-358">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-359">Этот метод можно использовать для получения необработанного байтового массива сертификата X. 509 и заполнения <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта связанными значениями.</span><span class="sxs-lookup"><span data-stu-id="99d05-359">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="99d05-360">Поскольку этот метод принимает только массив байтов, его можно использовать только для типов сертификатов, которые не нуждаются в пароле, включая сертификат X. 509 в кодировке Base64 или DER или сертификат PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="99d05-360">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="99d05-361">Обратите внимание, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-361">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="99d05-362">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-362">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="99d05-363">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="99d05-363">for full trust for the immediate caller.</span></span> <span data-ttu-id="99d05-364">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-364">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="99d05-365">Полный уровень доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="99d05-365">for full trust for inheritors.</span></span> <span data-ttu-id="99d05-366">Этот член не может наследоваться частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-366">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="override this.Import : string -&gt; unit" Usage="x509Certificate2.Import fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="99d05-367">Имя сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-367">The name of a certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-368">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-368">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-369">Этот метод использует файл сертификата, например файл с расширением CER, который представляет сертификат X. 509 и заполняет <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект сертификатом, который содержит файл.</span><span class="sxs-lookup"><span data-stu-id="99d05-369">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="99d05-370">Этот метод можно использовать с несколькими типами сертификатов, включая сертификаты X. 509 в кодировке Base64 или DER, сертификаты PFX/PKCS12 и сертификаты подписавших, например Authenticode.</span><span class="sxs-lookup"><span data-stu-id="99d05-370">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="99d05-371">Обратите внимание, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-371">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="99d05-372">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-372">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="99d05-373">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="99d05-373">for full trust for the immediate caller.</span></span> <span data-ttu-id="99d05-374">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-374">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="99d05-375">Полный уровень доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="99d05-375">for full trust for inheritors.</span></span> <span data-ttu-id="99d05-376">Этот член не может наследоваться частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-376">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="99d05-377">Массив байтов, содержащий данные из сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-377">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-378">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-378">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="99d05-379">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-379">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-380">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью данных из массива данных, пароля и флага хранилища ключа.</span><span class="sxs-lookup"><span data-stu-id="99d05-380">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-381">Этот метод можно использовать для таких типов сертификатов, как сертификаты X. 509 в кодировке Base64 или DER, а также сертификаты PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="99d05-381">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="99d05-382">Обратите внимание, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-382">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="99d05-383">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-383">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-384">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-384">Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-385">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-385">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="99d05-386">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="99d05-386">for full trust for the immediate caller.</span></span> <span data-ttu-id="99d05-387">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-387">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="99d05-388">Полный уровень доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="99d05-388">for full trust for inheritors.</span></span> <span data-ttu-id="99d05-389">Этот член не может наследоваться частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-389">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="99d05-390">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-390">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-391">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-391">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="99d05-392">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-392">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-393">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью данных из массива данных, пароля и флагов, чтобы определить способ импорта закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="99d05-393">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-394">Этот метод можно использовать для заполнения <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта с помощью пароля для сертификата, представленного массивом байтов.</span><span class="sxs-lookup"><span data-stu-id="99d05-394">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="99d05-395">Это <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> значение можно использовать для управления местом и способом импорта закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="99d05-395">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="99d05-396">Этот метод принимает массив байтов и может использоваться для типов сертификатов, таких как сертификаты X. 509 в кодировке Base64 или DER/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="99d05-396">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="99d05-397">Обратите внимание, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-397">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="99d05-398">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-398">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-399">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-399">Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-400">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-400">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-401">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-401">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="99d05-402">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="99d05-402">for full trust for the immediate caller.</span></span> <span data-ttu-id="99d05-403">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-403">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="99d05-404">Полный уровень доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="99d05-404">for full trust for inheritors.</span></span> <span data-ttu-id="99d05-405">Этот член не может наследоваться частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-405">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="99d05-406">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-406">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-407">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-407">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="99d05-408">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-408">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-409">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата, паролем и флагом хранилища ключа.</span><span class="sxs-lookup"><span data-stu-id="99d05-409">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-410">**Примечание по безопасности** Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-410">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-411">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-411">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="99d05-412">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="99d05-412">for full trust for the immediate caller.</span></span> <span data-ttu-id="99d05-413">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-413">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="99d05-414">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="99d05-414">for full trust for the immediate caller.</span></span> <span data-ttu-id="99d05-415">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-415">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="99d05-416">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-416">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="99d05-417">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-417">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="99d05-418">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-418">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="99d05-419">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата, паролем и значением <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-419">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-420">Этот метод можно использовать для заполнения <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта данными из файла сертификата, пароля <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> и значения.</span><span class="sxs-lookup"><span data-stu-id="99d05-420">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99d05-421">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="99d05-421">Never hard code a password within your source code.</span></span>  <span data-ttu-id="99d05-422">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="99d05-422">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="99d05-423">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="99d05-423">for full trust for the immediate caller.</span></span> <span data-ttu-id="99d05-424">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-424">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="99d05-425">Полный уровень доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="99d05-425">for full trust for inheritors.</span></span> <span data-ttu-id="99d05-426">Этот член не может наследоваться частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-426">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuerName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-427">Получает различающееся имя поставщика сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-427">Gets the distinguished name of the certificate issuer.</span></span></summary>
        <value><span data-ttu-id="99d05-428">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" />, содержащий имя поставщика сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-428">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-429">Это свойство содержит имя центра сертификации (ЦС), выдавшего сертификат.</span><span class="sxs-lookup"><span data-stu-id="99d05-429">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="99d05-430">Чтобы получить имя сертификата, используйте <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="99d05-430">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="99d05-431">Различающееся имя для сертификата является текстовым представлением субъекта или издателя сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-431">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="99d05-432">Это представление состоит из атрибутов имени (например, "CN = MyName, OU = Мйоргунит, C = US").</span><span class="sxs-lookup"><span data-stu-id="99d05-432">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-433">В следующем примере кода создается исполняемый файл командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-433">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-434">Недопустимый контекст сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-434">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotAfter : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-435">Получает дату в формате местного времени, после которой сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="99d05-435">Gets the date in local time after which a certificate is no longer valid.</span></span></summary>
        <value><span data-ttu-id="99d05-436">Объект <see cref="T:System.DateTime" />, представляющий дату окончания срока действия сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-436">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-437">Это свойство указывает дату окончания срока действия, по которой сертификат станет недействительным.</span><span class="sxs-lookup"><span data-stu-id="99d05-437">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-438">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-438">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-439">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="99d05-439">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotBefore : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-440">Получает дату в формате местного времени, после которой сертификат становится действительным.</span><span class="sxs-lookup"><span data-stu-id="99d05-440">Gets the date in local time on which a certificate becomes valid.</span></span></summary>
        <value><span data-ttu-id="99d05-441">Объект <see cref="T:System.DateTime" />, представляющий дату вступления в силу сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-441">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-442">Это свойство указывает дату, на которую сертификат станет действительным.</span><span class="sxs-lookup"><span data-stu-id="99d05-442">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-443">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-443">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-444">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="99d05-444">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKey : System.Security.Cryptography.AsymmetricAlgorithm with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-445">Получает или задает объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, который представляет закрытый ключ, связанный с сертификатом.</span><span class="sxs-lookup"><span data-stu-id="99d05-445">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="99d05-446">Объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, являющийся поставщиком служб шифрования RSA или DSA.</span><span class="sxs-lookup"><span data-stu-id="99d05-446">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-447">В настоящее время это свойство поддерживает только ключи RSA или DSA, поэтому оно возвращает <xref:System.Security.Cryptography.RSA> либо <xref:System.Security.Cryptography.DSA> объект или <xref:System.Security.Cryptography.RSACryptoServiceProvider> в .NET <xref:System.Security.Cryptography.DSACryptoServiceProvider> Core, либо объект или в .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="99d05-447">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSA> or a <xref:System.Security.Cryptography.DSA> object in .NET Core or an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object in .NET Framework.</span></span> <span data-ttu-id="99d05-448">Если с сертификатом не связан закрытый ключ, он возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="99d05-448">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="99d05-449">Если присвоить этому свойству `null` значение или другому ключу без предварительного удаления, файл закрытого ключа останется на диске.</span><span class="sxs-lookup"><span data-stu-id="99d05-449">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="99d05-450">Чтобы правильно удалить закрытый ключ, связанный с этим свойством, `PersistKeyInCsp` задайте `false`для значение <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> , а затем вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="99d05-450">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-451">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются только активные сертификаты, а затем пользователю предоставляется возможность выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="99d05-451">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="99d05-452">Затем в примере в консоль записываются сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-452">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-453">Значение ключа не является значением RSA или DSA, или ключ не читается.</span><span class="sxs-lookup"><span data-stu-id="99d05-453">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99d05-454">Для этого свойства устанавливается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-454">The value being set for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="99d05-455">Алгоритм ключа для этого закрытого ключа не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="99d05-455">The key algorithm for this private key is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="99d05-456">Ключи X.509 не совпадают.</span><span class="sxs-lookup"><span data-stu-id="99d05-456">The X.509 keys do not match.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="99d05-457">Значение ключа поставщика служб шифрования равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-457">The cryptographic service provider key is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="99d05-458">Только в .NET Core: Предпринята попытка задать значение для этого свойства.</span><span class="sxs-lookup"><span data-stu-id="99d05-458">.NET Core only: An attempt was made to set this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.X509Certificates.PublicKey" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-459">Получает объект <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />, связанный с сертификатом.</span><span class="sxs-lookup"><span data-stu-id="99d05-459">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="99d05-460">Объект <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-460">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-461">Это свойство возвращает <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> объект, который содержит идентификатор объекта (<xref:System.Security.Cryptography.Oid>), представляющий алгоритм открытого ключа, параметры в кодировке ASN. 1 и значение ключа в кодировке ASN. 1.</span><span class="sxs-lookup"><span data-stu-id="99d05-461">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="99d05-462">Ключ также можно получить в виде <xref:System.Security.Cryptography.AsymmetricAlgorithm> объекта, обратившись к <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> свойству.</span><span class="sxs-lookup"><span data-stu-id="99d05-462">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="99d05-463">Это свойство поддерживает только ключи RSA или DSA, поэтому оно возвращает либо <xref:System.Security.Cryptography.RSACryptoServiceProvider> <xref:System.Security.Cryptography.DSACryptoServiceProvider> объект, либо, представляющий открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="99d05-463">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-464">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-464">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-465">Значение ключа не является значением RSA или DSA, или ключ не читается.</span><span class="sxs-lookup"><span data-stu-id="99d05-465">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawData : byte[]" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-466">Получает необработанные данные сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-466">Gets the raw data of a certificate.</span></span></summary>
        <value><span data-ttu-id="99d05-467">Необработанные данные сертификата в качестве массива байтов.</span><span class="sxs-lookup"><span data-stu-id="99d05-467">The raw data of the certificate as a byte array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99d05-468">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-468">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="x509Certificate2.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99d05-469">Сбрасывает состояние объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="99d05-469">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-470">Этот метод можно использовать для сброса состояния сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-470">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="99d05-471">Он также освобождает все ресурсы, связанные с сертификатом.</span><span class="sxs-lookup"><span data-stu-id="99d05-471">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="99d05-472">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="99d05-472">for full trust for the immediate caller.</span></span> <span data-ttu-id="99d05-473">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-473">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="99d05-474">Полный уровень доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="99d05-474">for full trust for inheritors.</span></span> <span data-ttu-id="99d05-475">Этот член не может наследоваться частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="99d05-475">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialNumber : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-476">Получает серийный номер сертификата в виде шестнадцатеричной строки в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="99d05-476">Gets the serial number of a certificate as a big-endian hexadecimal string.</span></span></summary>
        <value><span data-ttu-id="99d05-477">Серийный номер сертификата в виде шестнадцатеричной строки с обратным порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="99d05-477">The serial number of the certificate as a big-endian hexadecimal string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-478">Серийный номер сертификата является частью исходного протокола X. 509.</span><span class="sxs-lookup"><span data-stu-id="99d05-478">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="99d05-479">Серийный номер — это уникальный номер, выданный издателем сертификата, который также называется центром сертификации (ЦС).</span><span class="sxs-lookup"><span data-stu-id="99d05-479">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-480">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-480">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-481">Получает алгоритм, используемый для создания подписи сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-481">Gets the algorithm used to create the signature of a certificate.</span></span></summary>
        <value><span data-ttu-id="99d05-482">Идентификатор объекта алгоритма подписи.</span><span class="sxs-lookup"><span data-stu-id="99d05-482">The object identifier of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-483">Идентификатор объекта (<xref:System.Security.Cryptography.Oid>) определяет тип алгоритма подписи, используемого сертификатом.</span><span class="sxs-lookup"><span data-stu-id="99d05-483">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-484">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются только активные сертификаты, а затем пользователю предоставляется возможность выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="99d05-484">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="99d05-485">Затем в примере в консоль записываются сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-485">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-486">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="99d05-486">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubjectName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-487">Получает различающееся имя субъекта от сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-487">Gets the subject distinguished name from a certificate.</span></span></summary>
        <value><span data-ttu-id="99d05-488">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" />, представляющий имя субъекта сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-488">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-489">Различающееся имя субъекта — это имя пользователя сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-489">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="99d05-490">Различающееся имя сертификата является текстовым представлением субъекта или издателя сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-490">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="99d05-491">Это представление состоит из атрибутов имени, например "CN = MyName, OU = Мйоргунит, C = US".</span><span class="sxs-lookup"><span data-stu-id="99d05-491">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-492">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-492">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-493">Недопустимый контекст сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-493">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thumbprint : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-494">Получает отпечаток сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-494">Gets the thumbprint of a certificate.</span></span></summary>
        <value><span data-ttu-id="99d05-495">Отпечаток сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-495">The thumbprint of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-496">Отпечаток динамически создается с помощью алгоритма SHA1 и физически не существует в сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-496">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="99d05-497">Поскольку отпечаток является уникальным значением сертификата, он обычно используется для поиска определенного сертификата в хранилище сертификатов.</span><span class="sxs-lookup"><span data-stu-id="99d05-497">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-498">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-498">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99d05-499">Отображает сертификат X.509 в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="99d05-499">Displays an X.509 certificate in text format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="x509Certificate2.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99d05-500">Отображает сертификат X.509 в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="99d05-500">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="99d05-501">Сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-501">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-502">Как и в `ToString` случае со всеми методами, выходные данные могут быть несогласованными в разных версиях .NET Framework, поэтому результаты метода не должны анализироваться для содержимого.</span><span class="sxs-lookup"><span data-stu-id="99d05-502">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="99d05-503">Используйте свойства <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта для получения точных сведений о содержимом или <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> используйте метод для получения сведений о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-503">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="99d05-504">Этот метод отображает сертификат в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="99d05-504">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-505">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-505">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="x509Certificate2.ToString verbose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose"><span data-ttu-id="99d05-506">Значение <see langword="true" /> для отображения открытого ключа, закрытого ключа, расширений и т. д.; значение <see langword="false" /> для отображения сведений, аналогичных классу <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, в том числе отпечаток, серийный номер, имена субъекта и поставщика и т. д.</span><span class="sxs-lookup"><span data-stu-id="99d05-506"><see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span></span></param>
        <summary><span data-ttu-id="99d05-507">Отображает сертификат X.509 в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="99d05-507">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="99d05-508">Сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-508">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-509">Как и в `ToString` случае со всеми методами, выходные данные могут быть несогласованными в разных версиях .NET Framework, поэтому результаты метода не должны анализироваться для содержимого.</span><span class="sxs-lookup"><span data-stu-id="99d05-509">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="99d05-510">Для получения точных сведений используйте <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="99d05-510">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="99d05-511">Этот метод отображает сертификат в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="99d05-511">This method displays the certificate in text format.</span></span> <span data-ttu-id="99d05-512">Если параметр имеет `true`значение, то отображаемый текст включает открытый ключ, закрытый ключ и расширения. `verbose`</span><span class="sxs-lookup"><span data-stu-id="99d05-512">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="99d05-513">Если `verbose` для `false` задано значение, то в тексте отобразятся поля, доступные в сертификате X. 509, включая отпечаток, серийный номер, имя субъекта и поставщика, а также сведения о датах действия.</span><span class="sxs-lookup"><span data-stu-id="99d05-513">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-514">Следующий пример кода создает исполняемый файл командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-514">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberSignature Language="F#" Value="member this.Verify : unit -&gt; bool" Usage="x509Certificate2.Verify " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("by default this depends on the incomplete X509Chain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99d05-515">Выполняет проверку цепочки X.509 с использованием базовой политики проверки.</span><span class="sxs-lookup"><span data-stu-id="99d05-515">Performs a X.509 chain validation using basic validation policy.</span></span></summary>
        <returns><span data-ttu-id="99d05-516">Значение <see langword="true" />, если проверка прошла успешно; значение <see langword="false" />, если произошел сбой проверки.</span><span class="sxs-lookup"><span data-stu-id="99d05-516"><see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-517">Этот метод создает простую цепочку для сертификата и применяет базовую политику к этой цепочке.</span><span class="sxs-lookup"><span data-stu-id="99d05-517">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="99d05-518">Если требуются дополнительные сведения об ошибке, проверьте сертификат непосредственно с помощью <xref:System.Security.Cryptography.X509Certificates.X509Chain> объекта.</span><span class="sxs-lookup"><span data-stu-id="99d05-518">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="99d05-519">Обратите внимание, что механизм цепочки по умолчанию можно переопределить <xref:System.Security.Cryptography.CryptoConfig> с помощью класса.</span><span class="sxs-lookup"><span data-stu-id="99d05-519">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="99d05-520">В Microsoft Windows Server 2003 механизм по умолчанию соответствует спецификации, описанной в разделе RFC3280, "[сертификат и профиль отзыва сертификатов (CRL)](https://go.microsoft.com/fwlink/?LinkId=45286)".</span><span class="sxs-lookup"><span data-stu-id="99d05-520">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-521">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются только активные сертификаты, а затем пользователю предоставляется возможность выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="99d05-521">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="99d05-522">Затем в примере в консоль записываются сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="99d05-522">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-523">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="99d05-523">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d05-524">Получает версию формата сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="99d05-524">Gets the X.509 format version of a certificate.</span></span></summary>
        <value><span data-ttu-id="99d05-525">Формат сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-525">The certificate format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d05-526">Существует несколько версий сертификатов X. 509.</span><span class="sxs-lookup"><span data-stu-id="99d05-526">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="99d05-527">Это свойство определяет формат, используемый сертификатом.</span><span class="sxs-lookup"><span data-stu-id="99d05-527">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="99d05-528">Например, для сертификата версии 3 возвращается значение 3.</span><span class="sxs-lookup"><span data-stu-id="99d05-528">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99d05-529">В следующем примере кода создается исполняемый объект командной строки, который принимает файл сертификата в качестве аргумента и выводит на консоль различные свойства сертификата.</span><span class="sxs-lookup"><span data-stu-id="99d05-529">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="99d05-530">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="99d05-530">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
