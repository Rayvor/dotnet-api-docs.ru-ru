<Type Name="IPEndPoint" FullName="System.Net.IPEndPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="43094d11c9b55e54fb03e60f9928634c4d0bd93f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69111496" /></Metadata><TypeSignature Language="C#" Value="public class IPEndPoint : System.Net.EndPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit IPEndPoint extends System.Net.EndPoint" />
  <TypeSignature Language="DocId" Value="T:System.Net.IPEndPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class IPEndPoint&#xA;Inherits EndPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPEndPoint : System::Net::EndPoint" />
  <TypeSignature Language="F#" Value="type IPEndPoint = class&#xA;    inherit EndPoint" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.EndPoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9d931-101">Представляет сетевую конечную точка в виде IP-адреса и номера порта.</span><span class="sxs-lookup"><span data-stu-id="9d931-101">Represents a network endpoint as an IP address and a port number.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d931-102"><xref:System.Net.IPEndPoint> Класс содержит сведения об узле и локальном или удаленном порте, необходимые приложению для подключения к службе на узле.</span><span class="sxs-lookup"><span data-stu-id="9d931-102">The <xref:System.Net.IPEndPoint> class contains the host and local or remote port information needed by an application to connect to a service on a host.</span></span> <span data-ttu-id="9d931-103">Объединяя IP-адрес узла и номер порта службы, <xref:System.Net.IPEndPoint> класс формирует точку подключения к службе.</span><span class="sxs-lookup"><span data-stu-id="9d931-103">By combining the host's IP address and port number of a service, the <xref:System.Net.IPEndPoint> class forms a connection point to a service.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.IPEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#1)]
 [!code-csharp[System.Net.IPEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#1)]
 [!code-vb[System.Net.IPEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d931-104">Инициализирует новый экземпляр класса <see cref="T:System.Net.IPEndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-104">Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPoint (long address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As Long, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IPEndPoint(long address, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.IPEndPoint : int64 * int -&gt; System.Net.IPEndPoint" Usage="new System.Net.IPEndPoint (address, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.Int64" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="9d931-105">IP-адрес узла в Интернете.</span><span class="sxs-lookup"><span data-stu-id="9d931-105">The IP address of the Internet host.</span></span></param>
        <param name="port"><span data-ttu-id="9d931-106">Номер порта, связанный с параметром <paramref name="address" />, или 0 для указания любого доступного порта.</span><span class="sxs-lookup"><span data-stu-id="9d931-106">The port number associated with the <paramref name="address" />, or 0 to specify any available port.</span></span> <span data-ttu-id="9d931-107"><paramref name="port" /> указывается в порядке основного приложения.</span><span class="sxs-lookup"><span data-stu-id="9d931-107"><paramref name="port" /> is in host order.</span></span></param>
        <summary><span data-ttu-id="9d931-108">Инициализирует новый экземпляр класса <see cref="T:System.Net.IPEndPoint" /> с заданными адресом и номером порта.</span><span class="sxs-lookup"><span data-stu-id="9d931-108">Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d931-109">В следующем примере используется указанный IP-адрес и номер порта для создания <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="9d931-109">The following example uses the specified IP address and port number to create an <xref:System.Net.IPEndPoint>.</span></span>  
  
 [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]
 [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]
 [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d931-110">Значение <paramref name="port" /> меньше <see cref="F:System.Net.IPEndPoint.MinPort" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-110"><paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span>  
  
<span data-ttu-id="9d931-111">- или -</span><span class="sxs-lookup"><span data-stu-id="9d931-111">-or-</span></span> 
 <span data-ttu-id="9d931-112">Значение <paramref name="port" /> больше значения <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-112"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span>  
  
<span data-ttu-id="9d931-113">- или -</span><span class="sxs-lookup"><span data-stu-id="9d931-113">-or-</span></span> 
 <span data-ttu-id="9d931-114"><paramref name="address" /> меньше 0 или больше 0x00000000FFFFFFFF.</span><span class="sxs-lookup"><span data-stu-id="9d931-114"><paramref name="address" /> is less than 0 or greater than 0x00000000FFFFFFFF.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPoint (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IPEndPoint(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.IPEndPoint : System.Net.IPAddress * int -&gt; System.Net.IPEndPoint" Usage="new System.Net.IPEndPoint (address, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="9d931-115">Объект <see cref="T:System.Net.IPAddress" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-115">An <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <param name="port"><span data-ttu-id="9d931-116">Номер порта, связанный с параметром <paramref name="address" />, или 0 для указания любого доступного порта.</span><span class="sxs-lookup"><span data-stu-id="9d931-116">The port number associated with the <paramref name="address" />, or 0 to specify any available port.</span></span> <span data-ttu-id="9d931-117"><paramref name="port" /> указывается в порядке основного приложения.</span><span class="sxs-lookup"><span data-stu-id="9d931-117"><paramref name="port" /> is in host order.</span></span></param>
        <summary><span data-ttu-id="9d931-118">Инициализирует новый экземпляр класса <see cref="T:System.Net.IPEndPoint" /> с заданными адресом и номером порта.</span><span class="sxs-lookup"><span data-stu-id="9d931-118">Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[System.Net.IPEndPoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#2)]
 [!code-csharp[System.Net.IPEndPoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#2)]
 [!code-vb[System.Net.IPEndPoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d931-119">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-119"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d931-120">Значение параметра <paramref name="port" /> меньше значения <see cref="F:System.Net.IPEndPoint.MinPort" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-120"><paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span>  
  
<span data-ttu-id="9d931-121">- или -</span><span class="sxs-lookup"><span data-stu-id="9d931-121">-or-</span></span> 
 <span data-ttu-id="9d931-122">Значение <paramref name="port" /> больше значения <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-122"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span>  
  
<span data-ttu-id="9d931-123">- или -</span><span class="sxs-lookup"><span data-stu-id="9d931-123">-or-</span></span> 
 <span data-ttu-id="9d931-124"><paramref name="address" /> меньше 0 или больше 0x00000000FFFFFFFF.</span><span class="sxs-lookup"><span data-stu-id="9d931-124"><paramref name="address" /> is less than 0 or greater than 0x00000000FFFFFFFF.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.Address" />
      <MemberSignature Language="VB.NET" Value="Public Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); void set(System::Net::IPAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress with get, set" Usage="System.Net.IPEndPoint.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d931-125">Возвращает или задает IP-адрес конечной точки.</span><span class="sxs-lookup"><span data-stu-id="9d931-125">Gets or sets the IP address of the endpoint.</span></span></summary>
        <value><span data-ttu-id="9d931-126">Экземпляр класса <see cref="T:System.Net.IPAddress" />, содержащий IP-адрес конечной точки.</span><span class="sxs-lookup"><span data-stu-id="9d931-126">An <see cref="T:System.Net.IPAddress" /> instance containing the IP address of the endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d931-127">В следующем примере <xref:System.Net.IPEndPoint.Address%2A> свойство задается <xref:System.Net.IPAddress> с помощью указанного.</span><span class="sxs-lookup"><span data-stu-id="9d931-127">The following example sets the <xref:System.Net.IPEndPoint.Address%2A> property using the <xref:System.Net.IPAddress> specified.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressFamily">
      <MemberSignature Language="C#" Value="public override System.Net.Sockets.AddressFamily AddressFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily AddressFamily" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.AddressFamily" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AddressFamily As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Sockets::AddressFamily AddressFamily { System::Net::Sockets::AddressFamily get(); };" />
      <MemberSignature Language="F#" Value="member this.AddressFamily : System.Net.Sockets.AddressFamily" Usage="System.Net.IPEndPoint.AddressFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d931-128">Возвращает семейство IP-адресов.</span><span class="sxs-lookup"><span data-stu-id="9d931-128">Gets the Internet Protocol (IP) address family.</span></span></summary>
        <value><span data-ttu-id="9d931-129">Возвращает <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-129">Returns <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d931-130">В следующем примере <xref:System.Net.IPEndPoint.AddressFamily%2A> свойство используется для <xref:System.Net.Sockets.AddressFamily> возврата <xref:System.Net.IPEndPoint> к, которому принадлежит.</span><span class="sxs-lookup"><span data-stu-id="9d931-130">The following example uses the <xref:System.Net.IPEndPoint.AddressFamily%2A> property to return the <xref:System.Net.Sockets.AddressFamily> to which the <xref:System.Net.IPEndPoint> belongs.</span></span> <span data-ttu-id="9d931-131">В данном случае <xref:System.Net.Sockets.AddressFamily.InterNetwork> <xref:System.Net.Sockets.AddressFamily>это.</span><span class="sxs-lookup"><span data-stu-id="9d931-131">In this case it is the <xref:System.Net.Sockets.AddressFamily.InterNetwork><xref:System.Net.Sockets.AddressFamily>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override System.Net.EndPoint Create (System.Net.SocketAddress socketAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.EndPoint Create(class System.Net.SocketAddress socketAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::EndPoint ^ Create(System::Net::SocketAddress ^ socketAddress);" />
      <MemberSignature Language="F#" Value="override this.Create : System.Net.SocketAddress -&gt; System.Net.EndPoint" Usage="iPEndPoint.Create socketAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socketAddress" Type="System.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="socketAddress"><span data-ttu-id="9d931-132">Параметр <see cref="T:System.Net.SocketAddress" />, используемый для создания конечной точки.</span><span class="sxs-lookup"><span data-stu-id="9d931-132">The <see cref="T:System.Net.SocketAddress" /> to use for the endpoint.</span></span></param>
        <summary><span data-ttu-id="9d931-133">Создает конечную точка по адресу сокета.</span><span class="sxs-lookup"><span data-stu-id="9d931-133">Creates an endpoint from a socket address.</span></span></summary>
        <returns><span data-ttu-id="9d931-134">Экземпляр класса <see cref="T:System.Net.EndPoint" />, использующий заданный адрес сокета.</span><span class="sxs-lookup"><span data-stu-id="9d931-134">An <see cref="T:System.Net.EndPoint" /> instance using the specified socket address.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d931-135">В следующем примере используется указанный <xref:System.Net.SocketAddress> объект для <xref:System.Net.IPEndPoint>создания.</span><span class="sxs-lookup"><span data-stu-id="9d931-135">The following example uses the specified <xref:System.Net.SocketAddress> to create an <xref:System.Net.IPEndPoint>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#5)]
 [!code-csharp[System.Net.IPEndPoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#5)]
 [!code-vb[System.Net.IPEndPoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d931-136">Значение свойства AddressFamily для <paramref name="socketAddress" /> не равно значению свойства AddressFamily для текущего экземпляра класса.</span><span class="sxs-lookup"><span data-stu-id="9d931-136">The AddressFamily of <paramref name="socketAddress" /> is not equal to the AddressFamily of the current instance.</span></span>  
  
<span data-ttu-id="9d931-137">-или-</span><span class="sxs-lookup"><span data-stu-id="9d931-137">-or-</span></span> 
 <span data-ttu-id="9d931-138"><paramref name="socketAddress" />.Size &lt; 8.</span><span class="sxs-lookup"><span data-stu-id="9d931-138"><paramref name="socketAddress" />.Size &lt; 8.</span></span></exception>
        <altmember cref="T:System.Net.EndPoint" />
        <altmember cref="T:System.Net.SocketAddress" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="iPEndPoint.Equals comparand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand"><span data-ttu-id="9d931-139">Объект <see cref="T:System.Object" />, который необходимо сравнить с текущим объектом <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-139">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="9d931-140">Определяет, равен ли указанный объект <see cref="T:System.Object" /> текущему объекту <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-140">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="9d931-141">Значение <see langword="true" />, если указанный объект <see cref="T:System.Object" /> равен текущему объекту <see cref="T:System.Object" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-141"><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="iPEndPoint.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d931-142">Возвращает хэш-значение для экземпляра <see cref="T:System.Net.IPEndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-142">Returns a hash value for a <see cref="T:System.Net.IPEndPoint" /> instance.</span></span></summary>
        <returns><span data-ttu-id="9d931-143">Целочисленное хэш-значение.</span><span class="sxs-lookup"><span data-stu-id="9d931-143">An integer hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d931-144"><xref:System.Net.IPEndPoint.GetHashCode%2A> Метод возвращает хэш-код экземпляра конечной точки IP-адреса.</span><span class="sxs-lookup"><span data-stu-id="9d931-144">The <xref:System.Net.IPEndPoint.GetHashCode%2A> method returns a hash code of the IP endpoint instance.</span></span> <span data-ttu-id="9d931-145">Это значение можно использовать в качестве ключа в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="9d931-145">This value can be used as a key in hash tables.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPort">
      <MemberSignature Language="C#" Value="public const int MaxPort = 65535;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxPort = (65535)" />
      <MemberSignature Language="DocId" Value="F:System.Net.IPEndPoint.MaxPort" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxPort As Integer  = 65535" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxPort = 65535;" />
      <MemberSignature Language="F#" Value="val mutable MaxPort : int" Usage="System.Net.IPEndPoint.MaxPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>65535</MemberValue>
      <Docs>
        <summary><span data-ttu-id="9d931-146">Определяет максимальное значение, которое может присваиваться свойству <see cref="P:System.Net.IPEndPoint.Port" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-146">Specifies the maximum value that can be assigned to the <see cref="P:System.Net.IPEndPoint.Port" /> property.</span></span> <span data-ttu-id="9d931-147">Значение MaxPort установлено равным 0x0000FFFF.</span><span class="sxs-lookup"><span data-stu-id="9d931-147">The MaxPort value is set to 0x0000FFFF.</span></span> <span data-ttu-id="9d931-148">Это поле доступно только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9d931-148">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d931-149">В следующем примере <xref:System.Net.IPEndPoint.MaxPort> свойство используется для печати максимального значения, которое может быть назначено <xref:System.Net.IPEndPoint.Port%2A> свойству.</span><span class="sxs-lookup"><span data-stu-id="9d931-149">The following example uses the <xref:System.Net.IPEndPoint.MaxPort> property to print the maximum value that can be assigned to the <xref:System.Net.IPEndPoint.Port%2A> property.</span></span>  
  
 [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]
 [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]
 [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPort">
      <MemberSignature Language="C#" Value="public const int MinPort = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinPort = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.IPEndPoint.MinPort" />
      <MemberSignature Language="VB.NET" Value="Public Const MinPort As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int MinPort = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinPort : int" Usage="System.Net.IPEndPoint.MinPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="9d931-150">Определяет минимальное значение, которое может присваиваться свойству <see cref="P:System.Net.IPEndPoint.Port" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-150">Specifies the minimum value that can be assigned to the <see cref="P:System.Net.IPEndPoint.Port" /> property.</span></span> <span data-ttu-id="9d931-151">Это поле доступно только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9d931-151">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d931-152">В следующем примере <xref:System.Net.IPEndPoint.MinPort> свойство используется для вывода минимального значения, которое может быть присвоено <xref:System.Net.IPEndPoint.Port%2A> свойству.</span><span class="sxs-lookup"><span data-stu-id="9d931-152">The following example uses the <xref:System.Net.IPEndPoint.MinPort> property to print the minimum value that can be assigned to the <xref:System.Net.IPEndPoint.Port%2A> property.</span></span>  
  
 [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]
 [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]
 [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="9d931-153">Количество частей (каждая часть отделяется точкой) в `s` определяет, как создается IP-адрес конечной точки.</span><span class="sxs-lookup"><span data-stu-id="9d931-153">The number of parts (each part is separated by a period) in `s` determines how the endpoint's IP address is constructed.</span></span> <span data-ttu-id="9d931-154">Адрес, соходящийся в одном компоненте, хранится непосредственно в сетевом адресе.</span><span class="sxs-lookup"><span data-stu-id="9d931-154">A one-part address is stored directly in the network address.</span></span> <span data-ttu-id="9d931-155">Адрес из двух частей, удобно для указания адреса класса A, помещает начальную часть в первый байт и завершающую часть в правой части трех байтов сетевого адреса.</span><span class="sxs-lookup"><span data-stu-id="9d931-155">A two-part address, convenient for specifying a class A address, puts the leading part in the first byte and the trailing part in the right-most three bytes of the network address.</span></span> <span data-ttu-id="9d931-156">Адрес из трех частей, удобно для указания адреса класса B, помещает первую часть в первый байт, вторую часть второго байта и последнюю часть в крайнем правом двух байтах сетевого адреса.</span><span class="sxs-lookup"><span data-stu-id="9d931-156">A three-part address, convenient for specifying a class B address, puts the first part in the first byte, the second part in the second byte, and the final part in the right-most two bytes of the network address.</span></span> <span data-ttu-id="9d931-157">Например:</span><span class="sxs-lookup"><span data-stu-id="9d931-157">For example:</span></span>

|<span data-ttu-id="9d931-158">Число частей и пример`s`</span><span class="sxs-lookup"><span data-stu-id="9d931-158">Number of parts and example `s`</span></span>|<span data-ttu-id="9d931-159">IPv4-адрес для IPEndPoint. Address</span><span class="sxs-lookup"><span data-stu-id="9d931-159">IPv4 address for IPEndPoint.Address</span></span>|<span data-ttu-id="9d931-160">Порт</span><span class="sxs-lookup"><span data-stu-id="9d931-160">Port</span></span>|
|-------------------------|--------------------------------|-------------------------|  
|<span data-ttu-id="9d931-161">1 — "1"</span><span class="sxs-lookup"><span data-stu-id="9d931-161">1 -- "1"</span></span>|<span data-ttu-id="9d931-162">0.0.0.1</span><span class="sxs-lookup"><span data-stu-id="9d931-162">0.0.0.1</span></span>|<span data-ttu-id="9d931-163">0</span><span class="sxs-lookup"><span data-stu-id="9d931-163">0</span></span>|  
|<span data-ttu-id="9d931-164">2 — "20.2:80"</span><span class="sxs-lookup"><span data-stu-id="9d931-164">2 -- "20.2:80"</span></span>|<span data-ttu-id="9d931-165">20.0.0.2</span><span class="sxs-lookup"><span data-stu-id="9d931-165">20.0.0.2</span></span>|<span data-ttu-id="9d931-166">80</span><span class="sxs-lookup"><span data-stu-id="9d931-166">80</span></span>|  
|<span data-ttu-id="9d931-167">2 — "20.65535:23"</span><span class="sxs-lookup"><span data-stu-id="9d931-167">2 -- "20.65535:23"</span></span>|<span data-ttu-id="9d931-168">20.0.255.255</span><span class="sxs-lookup"><span data-stu-id="9d931-168">20.0.255.255</span></span>|<span data-ttu-id="9d931-169">23</span><span class="sxs-lookup"><span data-stu-id="9d931-169">23</span></span>|  
|<span data-ttu-id="9d931-170">3 — "128.1.2:443"</span><span class="sxs-lookup"><span data-stu-id="9d931-170">3 -- "128.1.2:443"</span></span>|<span data-ttu-id="9d931-171">128.1.0.2</span><span class="sxs-lookup"><span data-stu-id="9d931-171">128.1.0.2</span></span>|<span data-ttu-id="9d931-172">443</span><span class="sxs-lookup"><span data-stu-id="9d931-172">443</span></span>|  

> [!IMPORTANT]
> <span data-ttu-id="9d931-173">Обратите внимание, что этот метод принимает в качестве допустимого значения, которое может <xref:System.Int64>быть проанализировано как, <xref:System.Int64> а затем рассматривает его как длинное значение IP-адреса в сетевом байтом порядке, аналогично тому, как это делает Конструктор IPAddress.</span><span class="sxs-lookup"><span data-stu-id="9d931-173">Note that this method accepts as valid a value that can be parsed as an <xref:System.Int64>, and then treats that <xref:System.Int64> as the long value of an IP address in network byte order, similar to the way that the IPAddress constructor does.</span></span> <span data-ttu-id="9d931-174">Это означает, что этот метод возвращает значение true, если Int64 анализируется успешно, даже если он представляет адрес, который не является допустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="9d931-174">This means that this method returns true if the Int64 is parsed successfully, even if it represents an address that's not a valid IP address.</span></span> <span data-ttu-id="9d931-175">Например, если значение s равно "1", этот метод возвращает значение true, даже если "1" (или 0.0.0.1) не является допустимым IP-адресом, и вы можете ожидать, что этот метод возвратит значение false.</span><span class="sxs-lookup"><span data-stu-id="9d931-175">For example, if s is "1", this method returns true even though "1" (or 0.0.0.1) is not a valid IP address and you might expect this method to return false.</span></span> <span data-ttu-id="9d931-176">Устранение этой ошибки приведет к нарушению работы существующих приложений, поэтому текущее поведение не изменится.</span><span class="sxs-lookup"><span data-stu-id="9d931-176">Fixing this bug would break existing apps, so the current behavior will not be changed.</span></span> <span data-ttu-id="9d931-177">Код может избежать такого поведения, гарантируя, что он использует только этот метод для анализа IP-адресов в точечно-десятичном формате.</span><span class="sxs-lookup"><span data-stu-id="9d931-177">Your code can avoid this behavior by ensuring that it only uses this method to parse IP addresses in dotted-decimal format.</span></span>
 
<span data-ttu-id="9d931-178">Литеральные адреса IPv6 необходимо заключать в квадратные скобки [] при передаче конечной точки, указывающей номер порта; в противном случае квадратные скобки не являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="9d931-178">Literal IPv6 addresses require to be enclosed in square brackets [] when passing an endpoint that specifies a port number; otherwise, square braces are not mandatory.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Net.IPEndPoint Parse (ReadOnlySpan&lt;char&gt; s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPEndPoint Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char)) As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPEndPoint ^ Parse(ReadOnlySpan&lt;char&gt; s);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; System.Net.IPEndPoint" Usage="System.Net.IPEndPoint.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="9d931-179">Диапазон с доступом только для чтения, содержащий конечную точку IP, выраженную в виде четырех чисел, разделенных точками, или в сетевом байтовом формате в случае протокола IPv4 и в системе записи "двоеточие-шестнадцатиричное число" в случае протокола IPv6.</span><span class="sxs-lookup"><span data-stu-id="9d931-179">A read-only span that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.</span></span></param>
        <summary><span data-ttu-id="9d931-180">Преобразует конечную точку IP-сети (адрес и порт), представленную в виде диапазона, доступного только для чтения, в экземпляр <see cref="T:System.Net.IPEndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-180">Converts an IP network endpoint (address and port) represented as a read-only span to an <see cref="T:System.Net.IPEndPoint" /> instance.</span></span></summary>
        <returns><span data-ttu-id="9d931-181">Объектное представление конечной точки IP-сети.</span><span class="sxs-lookup"><span data-stu-id="9d931-181">The object representation of an IP network endpoint.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d931-182">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-182"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="9d931-183"><paramref name="s" /> не является допустимой конечной точкой IP.</span><span class="sxs-lookup"><span data-stu-id="9d931-183"><paramref name="s" /> is not a valid IP endpoint.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Net.IPEndPoint Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPEndPoint Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPEndPoint ^ Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Net.IPEndPoint" Usage="System.Net.IPEndPoint.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="9d931-184">Строка, содержащая конечную точку IP, выраженную в виде четырех чисел, разделенных точками, или в сетевом байтовом формате в случае протокола IPv4 и в системе записи "двоеточие-шестнадцатиричное число" в случае протокола IPv6.</span><span class="sxs-lookup"><span data-stu-id="9d931-184">A string that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.</span></span></param>
        <summary><span data-ttu-id="9d931-185">Преобразует конечную точку IP-сети (адрес и порт), представленную в виде строки, в экземпляр <see cref="T:System.Net.IPEndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-185">Converts an IP network endpoint (address and port) represented as a string to an <see cref="T:System.Net.IPEndPoint" /> instance.</span></span></summary>
        <returns><span data-ttu-id="9d931-186">Объектное представление конечной точки IP-сети.</span><span class="sxs-lookup"><span data-stu-id="9d931-186">The object representation of an IP network endpoint.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d931-187">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-187"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="9d931-188"><paramref name="s" /> не является допустимой конечной точкой IP.</span><span class="sxs-lookup"><span data-stu-id="9d931-188"><paramref name="s" /> is not a valid IP endpoint.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.IPEndPoint.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d931-189">Возвращает или задает номер порта конечной точки.</span><span class="sxs-lookup"><span data-stu-id="9d931-189">Gets or sets the port number of the endpoint.</span></span></summary>
        <value><span data-ttu-id="9d931-190">Целое значение из диапазона от <see cref="F:System.Net.IPEndPoint.MinPort" /> до <see cref="F:System.Net.IPEndPoint.MaxPort" />, показывающее номер порта конечной точки.</span><span class="sxs-lookup"><span data-stu-id="9d931-190">An integer value in the range <see cref="F:System.Net.IPEndPoint.MinPort" /> to <see cref="F:System.Net.IPEndPoint.MaxPort" /> indicating the port number of the endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d931-191">В следующем примере <xref:System.Net.IPEndPoint.Port%2A> свойство используется для задания номера <xref:System.Net.EndPoint>TCP-порта.</span><span class="sxs-lookup"><span data-stu-id="9d931-191">The following example uses the <xref:System.Net.IPEndPoint.Port%2A> property to set TCP port number of the <xref:System.Net.EndPoint>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d931-192">Значение, заданное для установленной операции, меньше <see cref="F:System.Net.IPEndPoint.MinPort" /> или больше <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-192">The value that was specified for a set operation is less than <see cref="F:System.Net.IPEndPoint.MinPort" /> or greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public override System.Net.SocketAddress Serialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.SocketAddress Serialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Serialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Serialize () As SocketAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::SocketAddress ^ Serialize();" />
      <MemberSignature Language="F#" Value="override this.Serialize : unit -&gt; System.Net.SocketAddress" Usage="iPEndPoint.Serialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d931-193">Выводит в последовательном виде сведения о конечной точке в экземпляр класса <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-193">Serializes endpoint information into a <see cref="T:System.Net.SocketAddress" /> instance.</span></span></summary>
        <returns><span data-ttu-id="9d931-194">Экземпляр класса <see cref="T:System.Net.SocketAddress" />, содержащий адрес сокета для конечной точки.</span><span class="sxs-lookup"><span data-stu-id="9d931-194">A <see cref="T:System.Net.SocketAddress" /> instance containing the socket address for the endpoint.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d931-195">В следующем примере <xref:System.Net.IPEndPoint.Serialize%2A> метод используется для сериализации сведений о конечной точке <xref:System.Net.SocketAddress> в экземпляр.</span><span class="sxs-lookup"><span data-stu-id="9d931-195">The following example uses the <xref:System.Net.IPEndPoint.Serialize%2A> method to serialize endpoint information into a <xref:System.Net.SocketAddress> instance.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#4)]
 [!code-csharp[System.Net.IPEndPoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#4)]
 [!code-vb[System.Net.IPEndPoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="iPEndPoint.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d931-196">Возвращает IP-адрес и номер порта заданной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="9d931-196">Returns the IP address and port number of the specified endpoint.</span></span></summary>
        <returns><span data-ttu-id="9d931-197">Строка, содержащая IP-адрес и номер порта заданной конечной точки (например, 192.168.1.2:80).</span><span class="sxs-lookup"><span data-stu-id="9d931-197">A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d931-198">В следующем примере возвращается строковое представление IP-адреса и номера порта указанного <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="9d931-198">The following example returns a string representation of the IP address and port number of the specified <xref:System.Net.IPEndPoint>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="9d931-199">Количество частей (каждая часть отделяется точкой) в `s` определяет, как создается IP-адрес конечной точки.</span><span class="sxs-lookup"><span data-stu-id="9d931-199">The number of parts (each part is separated by a period) in `s` determines how the endpoint's IP address is constructed.</span></span> <span data-ttu-id="9d931-200">Адрес, соходящийся в одном компоненте, хранится непосредственно в сетевом адресе.</span><span class="sxs-lookup"><span data-stu-id="9d931-200">A one-part address is stored directly in the network address.</span></span> <span data-ttu-id="9d931-201">Адрес из двух частей, удобно для указания адреса класса A, помещает начальную часть в первый байт и завершающую часть в правой части трех байтов сетевого адреса.</span><span class="sxs-lookup"><span data-stu-id="9d931-201">A two-part address, convenient for specifying a class A address, puts the leading part in the first byte and the trailing part in the right-most three bytes of the network address.</span></span> <span data-ttu-id="9d931-202">Адрес из трех частей, удобно для указания адреса класса B, помещает первую часть в первый байт, вторую часть второго байта и последнюю часть в крайнем правом двух байтах сетевого адреса.</span><span class="sxs-lookup"><span data-stu-id="9d931-202">A three-part address, convenient for specifying a class B address, puts the first part in the first byte, the second part in the second byte, and the final part in the right-most two bytes of the network address.</span></span> <span data-ttu-id="9d931-203">Например:</span><span class="sxs-lookup"><span data-stu-id="9d931-203">For example:</span></span>

|<span data-ttu-id="9d931-204">Число частей и пример`s`</span><span class="sxs-lookup"><span data-stu-id="9d931-204">Number of parts and example `s`</span></span>|<span data-ttu-id="9d931-205">IPv4-адрес для IPEndPoint. Address</span><span class="sxs-lookup"><span data-stu-id="9d931-205">IPv4 address for IPEndPoint.Address</span></span>|<span data-ttu-id="9d931-206">Порт</span><span class="sxs-lookup"><span data-stu-id="9d931-206">Port</span></span>|
|-------------------------|--------------------------------|-------------------------|  
|<span data-ttu-id="9d931-207">1 — "1"</span><span class="sxs-lookup"><span data-stu-id="9d931-207">1 -- "1"</span></span>|<span data-ttu-id="9d931-208">0.0.0.1</span><span class="sxs-lookup"><span data-stu-id="9d931-208">0.0.0.1</span></span>|<span data-ttu-id="9d931-209">0</span><span class="sxs-lookup"><span data-stu-id="9d931-209">0</span></span>|  
|<span data-ttu-id="9d931-210">2 — "20.2:80"</span><span class="sxs-lookup"><span data-stu-id="9d931-210">2 -- "20.2:80"</span></span>|<span data-ttu-id="9d931-211">20.0.0.2</span><span class="sxs-lookup"><span data-stu-id="9d931-211">20.0.0.2</span></span>|<span data-ttu-id="9d931-212">80</span><span class="sxs-lookup"><span data-stu-id="9d931-212">80</span></span>|  
|<span data-ttu-id="9d931-213">2 — "20.65535:23"</span><span class="sxs-lookup"><span data-stu-id="9d931-213">2 -- "20.65535:23"</span></span>|<span data-ttu-id="9d931-214">20.0.255.255</span><span class="sxs-lookup"><span data-stu-id="9d931-214">20.0.255.255</span></span>|<span data-ttu-id="9d931-215">23</span><span class="sxs-lookup"><span data-stu-id="9d931-215">23</span></span>|  
|<span data-ttu-id="9d931-216">3 — "128.1.2:443"</span><span class="sxs-lookup"><span data-stu-id="9d931-216">3 -- "128.1.2:443"</span></span>|<span data-ttu-id="9d931-217">128.1.0.2</span><span class="sxs-lookup"><span data-stu-id="9d931-217">128.1.0.2</span></span>|<span data-ttu-id="9d931-218">443</span><span class="sxs-lookup"><span data-stu-id="9d931-218">443</span></span>|  

> [!IMPORTANT]
> <span data-ttu-id="9d931-219">Обратите внимание, что этот метод принимает в качестве допустимого значения, которое может <xref:System.Int64>быть проанализировано как, <xref:System.Int64> а затем рассматривает его как длинное значение IP-адреса в сетевом байтом порядке, аналогично тому, как это делает Конструктор IPAddress.</span><span class="sxs-lookup"><span data-stu-id="9d931-219">Note that this method accepts as valid a value that can be parsed as an <xref:System.Int64>, and then treats that <xref:System.Int64> as the long value of an IP address in network byte order, similar to the way that the IPAddress constructor does.</span></span> <span data-ttu-id="9d931-220">Это означает, что этот метод возвращает значение true, если Int64 анализируется успешно, даже если он представляет адрес, который не является допустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="9d931-220">This means that this method returns true if the Int64 is parsed successfully, even if it represents an address that's not a valid IP address.</span></span> <span data-ttu-id="9d931-221">Например, если значение s равно "1", этот метод возвращает значение true, даже если "1" (или 0.0.0.1) не является допустимым IP-адресом, и вы можете ожидать, что этот метод возвратит значение false.</span><span class="sxs-lookup"><span data-stu-id="9d931-221">For example, if s is "1", this method returns true even though "1" (or 0.0.0.1) is not a valid IP address and you might expect this method to return false.</span></span> <span data-ttu-id="9d931-222">Устранение этой ошибки приведет к нарушению работы существующих приложений, поэтому текущее поведение не изменится.</span><span class="sxs-lookup"><span data-stu-id="9d931-222">Fixing this bug would break existing apps, so the current behavior will not be changed.</span></span> <span data-ttu-id="9d931-223">Код может избежать такого поведения, гарантируя, что он использует только этот метод для анализа IP-адресов в точечно-десятичном формате.</span><span class="sxs-lookup"><span data-stu-id="9d931-223">Your code can avoid this behavior by ensuring that it only uses this method to parse IP addresses in dotted-decimal format.</span></span>
 
<span data-ttu-id="9d931-224">Литеральные адреса IPv6 необходимо заключать в квадратные скобки [] при передаче конечной точки, указывающей номер порта; в противном случае квадратные скобки не являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="9d931-224">Literal IPv6 addresses require to be enclosed in square brackets [] when passing an endpoint that specifies a port number; otherwise, square braces are not mandatory.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out System.Net.IPEndPoint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] class System.Net.IPEndPoint&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As IPEndPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.Net.IPEndPoint.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="result" Type="System.Net.IPEndPoint" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="9d931-225">Проверяемая конечная точка IP.</span><span class="sxs-lookup"><span data-stu-id="9d931-225">The IP endpoint to validate.</span></span></param>
        <param name="result"><span data-ttu-id="9d931-226">При возврате этот метод содержит версию <see cref="T:System.Net.IPEndPoint" /> для <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-226">When this method returns, the <see cref="T:System.Net.IPEndPoint" /> version of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="9d931-227">Пытается преобразовать конечную точку IP-сети (адрес и порт), представленную в виде диапазона, доступного только для чтения, в его эквивалент <see cref="T:System.Net.IPEndPoint" /> и возвращает значение, указывающее, было ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="9d931-227">Tries to convert an IP network endpoint (address and port) represented as a read-only span to its <see cref="T:System.Net.IPEndPoint" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="9d931-228">Значение <see langword="true" />, если <paramref name="s" /> можно проанализировать как конечную точку IP. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-228"><see langword="true" /> if <paramref name="s" /> can be parsed as an IP endpoint; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out System.Net.IPEndPoint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] class System.Net.IPEndPoint&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.TryParse(System.String,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As IPEndPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Net.IPEndPoint.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="result" Type="System.Net.IPEndPoint" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="9d931-229">Проверяемая конечная точка IP.</span><span class="sxs-lookup"><span data-stu-id="9d931-229">The IP endpoint to validate.</span></span></param>
        <param name="result"><span data-ttu-id="9d931-230">При возврате этот метод содержит версию <see cref="T:System.Net.IPEndPoint" /> для <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-230">When this method returns, the <see cref="T:System.Net.IPEndPoint" /> version of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="9d931-231">Пытается преобразовать конечную точку IP-сети (адрес и порт), представленную в виде строки, в ее эквивалент <see cref="T:System.Net.IPEndPoint" /> и возвращает значение, указывающее, было ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="9d931-231">Tries to convert an IP network endpoint (address and port) represented as a string to its <see cref="T:System.Net.IPEndPoint" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="9d931-232">Значение <see langword="true" />, если <paramref name="s" /> можно проанализировать как конечную точку IP. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9d931-232"><see langword="true" /> if <paramref name="s" /> can be parsed as an IP endpoint; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
