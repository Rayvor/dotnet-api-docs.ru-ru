<Type Name="AuthenticationManager" FullName="System.Net.AuthenticationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6af9e7bc87693587573772dcee851171ff5ff5f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75170325" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.AuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationManager" />
  <TypeSignature Language="F#" Value="type AuthenticationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Управляет модулями проверки подлинности, вызываемыми в процессе проверки подлинности учетных данных клиента.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager> является статическим классом, который управляет модулями проверки подлинности, используемыми приложением. При запросе к защищенным ресурсам <xref:System.Net.AuthenticationManager> вызывает метод <xref:System.Net.AuthenticationManager.Authenticate%2A>, чтобы получить экземпляр <xref:System.Net.Authorization>, который будет использоваться в последующих запросах.  
  
 <xref:System.Net.AuthenticationManager> запрашивает каждый зарегистрированный модуль проверки подлинности, вызывая метод <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> для каждого модуля. Первый модуль проверки подлинности, возвращающий экземпляр <xref:System.Net.Authorization>, используется для проверки подлинности запроса.  
  
 Модули, предоставляющие типы проверки подлинности "базовый", "Дайджест", "согласование", NTLM и Kerberos, регистрируются в <xref:System.Net.AuthenticationManager> по умолчанию. Дополнительные модули проверки подлинности, реализующие интерфейс <xref:System.Net.IAuthenticationModule>, можно добавить с помощью метода <xref:System.Net.AuthenticationManager.Register%2A>. Модули проверки подлинности вызываются в том порядке, в котором они были добавлены в список.  
  
> [!NOTE]
>  Тип проверки подлинности Kerberos и Negotiate не поддерживается в Windows 95/98 или Windows NT 4,0.  
  
   
  
## Examples  
 [!code-cpp[System.Net.Authentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#1)]
 [!code-csharp[System.Net.Authentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#1)]
 [!code-vb[System.Net.Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a">Изменения проверки подлинности NTLM для HTTPWebRequest в версии 3,5 SP1</related>
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">Запрос, возвращаемый интернет-ресурсом.</param>
        <param name="request">Компонент <see cref="T:System.Net.WebRequest" />, который инициировал запрос проверки подлинности.</param>
        <param name="credentials">Учетная запись <see cref="T:System.Net.ICredentials" />, связанная с этим запросом.</param>
        <summary>Вызывает все зарегистрированные модули проверки подлинности, чтобы найти модуль, который может ответить на запрос проверки подлинности.</summary>
        <returns>Экземпляр класса <see cref="T:System.Net.Authorization" />, содержащий результат попытки авторизации. Если на запрос не отвечает ни один из модулей проверки подлинности, этот метод возвращает <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Net.AuthenticationManager.Authenticate%2A> вызывает метод <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> для каждого зарегистрированного модуля проверки подлинности до тех пор, пока один из модулей не ответит на экземпляр <xref:System.Net.Authorization>.  
  
 Первый возвращаемый экземпляр <xref:System.Net.Authorization> используется для проверки подлинности запроса. Если модуль проверки подлинности не может проверить подлинность запроса, метод <xref:System.Net.AuthenticationManager.Authenticate%2A> возвращает `null`.  
  
 Модули проверки подлинности вызываются в том порядке, в котором они зарегистрированы в <xref:System.Net.AuthenticationManager>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="challenge" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="request" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="credentials" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CredentialPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentialPolicy CredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CredentialPolicy As ICredentialPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentialPolicy ^ CredentialPolicy { System::Net::ICredentialPolicy ^ get(); void set(System::Net::ICredentialPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CredentialPolicy : System.Net.ICredentialPolicy with get, set" Usage="System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает политику учетных данных, которую следует использовать для запросов ресурсов, выполняемых с использованием класса <see cref="T:System.Net.HttpWebRequest" />.</summary>
        <value>Объект, реализующий интерфейс <see cref="T:System.Net.ICredentialPolicy" />, который определяет, отправляются ли учетные данные вместе с запросами. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Политика учетных данных определяет, следует ли отправлять учетные данные при отправке запроса к сетевому ресурсу, например к содержимому веб-страницы. При отправке учетных данных серверы, которым требуется проверка подлинности клиента, могут попытаться проверить подлинность клиента при получении запроса вместо отправки ответа, указывающего на необходимость в учетных данных клиента. Хотя это экономит круговой путь к серверу, это должно быть сбалансировано от угроз безопасности, присущих для отправки учетных данных по сети. Если сервер назначения не требует проверки подлинности клиента, лучше не передавать учетные данные.  
  
 Политика учетных данных будет вызываться только для запросов, которые задают учетные данные или используют объект <xref:System.Net.WebProxy>, указывающий учетные данные.  
  
   
  
## Examples  
 В следующем примере кода показано задание политики учетных данных.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTargetNameDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CustomTargetNameDictionary As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::StringDictionary ^ CustomTargetNameDictionary { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomTargetNameDictionary : System.Collections.Specialized.StringDictionary" Usage="System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает словарь, содержащий имена участников-служб, которые используются для идентификации узлов во время проверки подлинности Kerberos для запросов, сделанных с использованием класса <see cref="T:System.Net.WebRequest" /> и его производных классов.</summary>
        <value>Доступный для записи словарь <see cref="T:System.Collections.Specialized.StringDictionary" />, который содержит значения имен участников-служб для ключей, состоящих из сведений узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя участника-службы является именем, по которому клиент однозначно определяет экземпляр службы или приложения на сервере для взаимной проверки подлинности. Взаимная проверка подлинности запрашивается по умолчанию, и ее можно потребовать, установив для <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType> значение <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> в запросе.  
  
 Если для <xref:System.Net.WebRequest> требуется взаимная проверка подлинности, то имя субъекта-службы для назначения должно предоставляться клиентом. Если имя субъекта-службы известно, его можно добавить в <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> перед отправкой запроса. Если вы не добавили сведения о имени субъекта-службы в этот словарь, <xref:System.Net.AuthenticationManager> использует метод <xref:System.Net.WebRequest.RequestUri%2A> для составления наиболее вероятного имени участника-службы. Однако это вычисленное значение, которое может быть неправильным. Если выполняется взаимная проверка подлинности и происходит сбой, можно проверить словарь, чтобы определить вычисленное имя участника-службы. Имя субъекта-службы не указано в словаре, если протокол проверки подлинности не поддерживает взаимную проверку подлинности.  
  
 Чтобы добавить значение имени участника-службы в этот словарь, используйте <xref:System.Uri.AbsoluteUri%2A> <xref:System.Net.WebRequest.RequestUri%2A> в качестве ключа. На внутреннем уровне ключ усекается для включения <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>и <xref:System.Uri.Port%2A>, если он не является портом по умолчанию.  
  
> [!NOTE]
>  Для доступа к методам и свойствам <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> требуется неограниченный <xref:System.Net.WebPermission>.  
  
> [!NOTE]
>  Если проверка подлинности Kerberos выполняется через прокси-сервер, то прокси-сервер и конечное имя узла должны быть разрешены в SPN. Разрешение имени прокси-сервера защищено с помощью времени ожидания. Для разрешения максимального имени узла в имя субъекта-службы требуется поиск DNS, и нет времени ожидания, связанного с этой операцией напрямую. Поэтому синхронные операции могут занять больше времени, чем время ожидания. Чтобы преодолеть это, добавьте префикс URI конечного узла в кэш имени субъекта-службы перед выполнением запросов к нему.  
  
 Если свойство <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> не задано, то при обмене данными для проверки подлинности NTLM в версии 3.5 с пакетом обновления  1 (SP1) в качестве имени субъекта-службы по умолчанию указывается имя узла, используемое в URL-адресе запроса. Имя узла, используемое в URL-адресе запроса, может отличаться от заголовка узла, указанного в <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> в запросе клиента. Кроме того, оно может отличаться от фактического имени узла сервера, имени компьютера сервера, IP-адреса компьютера или петлевого адреса. В таких случаях Windows отклонит запрос проверки подлинности. Чтобы устранить эту ошибку, может потребоваться уведомление Windows о том, что имя узла, используемое в URL-адресе запроса в запросе клиента (например, Contoso), на самом деле является альтернативным именем локального компьютера.  
  
   
  
## Examples  
 В следующем примере кода показано, как отобразить содержимое <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>.  
  
 [!code-cpp[NclCredPolicy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#5)]
 [!code-csharp[NclCredPolicy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a">Изменения проверки подлинности NTLM для HTTPWebRequest в версии 3,5 SP1</related>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request">Запрос <see cref="T:System.Net.WebRequest" /> интернет-ресурса.</param>
        <param name="credentials">Учетная запись <see cref="T:System.Net.ICredentials" />, связанная с запросом.</param>
        <summary>Выполняет предварительную проверку подлинности запроса.</summary>
        <returns>Если предварительная проверка подлинности запроса может быть выполнена, возвращается экземпляр класса <see cref="T:System.Net.Authorization" />; в противном случае возвращается <see langword="null" />. Если значением параметра <paramref name="credentials" /> является <see langword="null" />, метод возвращает <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если модуль проверки подлинности может выполнить предварительную проверку подлинности запроса, метод <xref:System.Net.AuthenticationManager.PreAuthenticate%2A> возвращает экземпляр проверки подлинности и отправляет данные авторизации на сервер с вытеснением, а не ожидает, пока ресурс выдаст запрос. Это поведение описано в разделе 3,3 RFC 2617 (проверка подлинности HTTP: обычная и дайджест-проверка подлинности). Модули проверки подлинности, поддерживающие предварительную проверку подлинности, позволяют клиентам повысить эффективность сервера, избегая лишних циклов обработки, вызванных проблемами аутентификации  
  
 Модули авторизации, которые могут выполнять предварительную проверку подлинности запросов, устанавливают для свойства <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType> значение `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Register : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Register authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">Модуль <see cref="T:System.Net.IAuthenticationModule" /> проверки подлинности, который должен регистрироваться диспетчером проверки подлинности.</param>
        <summary>Регистрация модуля проверки подлинности диспетчером проверки подлинности.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Register%2A> метод добавляет модули проверки подлинности в конец списка модулей, вызываемых методом <xref:System.Net.AuthenticationManager.Authenticate%2A>. Модули проверки подлинности вызываются в том порядке, в котором они были добавлены в список. Если модуль с тем же <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> уже зарегистрирован, этот метод удаляет зарегистрированный модуль и добавляет `authenticationModule` в конец списка.  
  
   
  
## Examples  
 В следующем примере модуль проверки подлинности регистрируется с помощью диспетчера проверки подлинности. Полный пример см. в разделе класс <xref:System.Net.AuthenticationManager>.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="authenticationModule" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для исполнения неуправляемого кода. Связанное перечисление: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="RegisteredModules">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator RegisteredModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerator RegisteredModules" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.RegisteredModules" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegisteredModules As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerator ^ RegisteredModules { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegisteredModules : System.Collections.IEnumerator" Usage="System.Net.AuthenticationManager.RegisteredModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает список модулей проверки подлинности, зарегистрированных диспетчером проверки подлинности.</summary>
        <value>Параметр <see cref="T:System.Collections.IEnumerator" />, который обеспечивает чтение зарегистрированных модулей проверки подлинности.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Net.AuthenticationManager.RegisteredModules%2A> предоставляет экземпляр <xref:System.Collections.IEnumerator>, который позволяет считывать список зарегистрированных модулей проверки подлинности. Метод <xref:System.Net.AuthenticationManager.Register%2A> добавляет модули в список, а метод <xref:System.Net.AuthenticationManager.Unregister%2A> удаляет из него модули.  
  
   
  
## Examples  
 В следующем примере свойство <xref:System.Net.AuthenticationManager.RegisteredModules%2A> используется для получения списка модулей проверки подлинности, зарегистрированных в диспетчере проверки подлинности. Полный пример см. в разделе класс <xref:System.Net.AuthenticationManager>.  
  
 [!code-cpp[System.Net.Authentication#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#8)]
 [!code-csharp[System.Net.Authentication#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#8)]
 [!code-vb[System.Net.Authentication#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unregister">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Удаляет модули проверки подлинности из списка зарегистрированных модулей.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Unregister : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">Модуль <see cref="T:System.Net.IAuthenticationModule" /> проверки подлинности, удаляемый из списка зарегистрированных модулей.</param>
        <summary>Удаляет модуль проверки подлинности из списка зарегистрированных модулей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Net.AuthenticationManager.Unregister%2A> удаляет указанный модуль проверки подлинности из списка модулей проверки подлинности, вызванных методом <xref:System.Net.AuthenticationManager.Authenticate%2A>. Модуль должен быть добавлен в список с помощью метода <xref:System.Net.AuthenticationManager.Register%2A>, прежде чем его можно будет удалить из списка.  
  
   
  
## Examples  
 В следующем примере используется метод <xref:System.Net.AuthenticationManager.Unregister%2A> для удаления указанного модуля проверки подлинности из списка зарегистрированных модулей. Полный пример см. в разделе класс <xref:System.Net.AuthenticationManager>.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="authenticationModule" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Заданный модуль <see cref="T:System.Net.IAuthenticationModule" /> проверки подлинности не зарегистрирован.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для исполнения неуправляемого кода. Связанное перечисление: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationScheme As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ authenticationScheme);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationScheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationScheme">Схема проверки подлинности удаляемого модуля.</param>
        <summary>Удаляет модули проверки подлинности с указанной схемой проверки подлинности из списка зарегистрированных модулей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Net.AuthenticationManager.Unregister%2A> удаляет модуль проверки подлинности с указанной схемой проверки подлинности из списка модулей проверки подлинности, вызванных методом <xref:System.Net.AuthenticationManager.Authenticate%2A>. Модуль должен быть добавлен в список с помощью метода <xref:System.Net.AuthenticationManager.Register%2A>, прежде чем его можно будет удалить из списка.  
  
   
  
## Examples  
 В следующем примере метод <xref:System.Net.AuthenticationManager.Unregister%2A> используется для удаления модуля проверки подлинности с указанной схемой проверки подлинности из списка зарегистрированных модулей.  
  
 [!code-cpp[AuthenticationManager_UnRegister2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CPP/authenticationmanager_unregister2.cpp#2)]
 [!code-csharp[AuthenticationManager_UnRegister2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CS/authenticationmanager_unregister2.cs#2)]
 [!code-vb[AuthenticationManager_UnRegister2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/VB/authenticationmanager_unregister2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="authenticationScheme" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Модуль для данной схемы проверки подлинности не зарегистрирован.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для исполнения неуправляемого кода. Связанное перечисление: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>
