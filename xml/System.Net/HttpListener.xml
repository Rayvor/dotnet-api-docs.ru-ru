<Type Name="HttpListener" FullName="System.Net.HttpListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d840bbfb4a4e8c7a4ed7c9f79ccb004a20508643" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69091085" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListener sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e46fa-101">Предоставляет простой программно управляемый прослушиватель протокола HTTP.</span><span class="sxs-lookup"><span data-stu-id="e46fa-101">Provides a simple, programmatically controlled HTTP protocol listener.</span></span> <span data-ttu-id="e46fa-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="e46fa-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-103">С помощью <xref:System.Net.HttpListener> класса можно создать простой прослушиватель протокола HTTP, отвечающий на HTTP-запросы.</span><span class="sxs-lookup"><span data-stu-id="e46fa-103">Using the <xref:System.Net.HttpListener> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</span></span> <span data-ttu-id="e46fa-104">Прослушиватель активен в течение всего времени существования <xref:System.Net.HttpListener> объекта и выполняется в приложении с его разрешениями.</span><span class="sxs-lookup"><span data-stu-id="e46fa-104">The listener is active for the lifetime of the <xref:System.Net.HttpListener> object and runs within your application with its permissions.</span></span>
   
 <span data-ttu-id="e46fa-105">Чтобы использовать <xref:System.Net.HttpListener>, создайте новый экземпляр класса <xref:System.Net.HttpListener> с помощью конструктора и используйте <xref:System.Net.HttpListener.Prefixes%2A> свойство, чтобы получить доступ к коллекции, содержащей строки, указывающие, какой универсальный код ресурса (URI) добавляет префикс <xref:System.Net.HttpListener>должен обрабатываться.</span><span class="sxs-lookup"><span data-stu-id="e46fa-105">To use <xref:System.Net.HttpListener>, create a new instance of the class using the <xref:System.Net.HttpListener> constructor and use the <xref:System.Net.HttpListener.Prefixes%2A> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <xref:System.Net.HttpListener> should process.</span></span>
  
 <span data-ttu-id="e46fa-106">Строка префикса URI состоит из схемы (HTTP или HTTPS), узла, дополнительного порта и необязательного пути.</span><span class="sxs-lookup"><span data-stu-id="e46fa-106">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</span></span> <span data-ttu-id="e46fa-107">Пример полной строки префикса: *http://www.contoso.com:8080/customerData/*.</span><span class="sxs-lookup"><span data-stu-id="e46fa-107">An example of a complete prefix string is *http://www.contoso.com:8080/customerData/*.</span></span> <span data-ttu-id="e46fa-108">Префиксы должны оканчиваться косой чертой ("/").</span><span class="sxs-lookup"><span data-stu-id="e46fa-108">Prefixes must end in a forward slash ("/").</span></span> <span data-ttu-id="e46fa-109"><xref:System.Net.HttpListener> Объект с префиксом, который наиболее близко соответствует запрошенному URI, отвечает на запрос.</span><span class="sxs-lookup"><span data-stu-id="e46fa-109">The <xref:System.Net.HttpListener> object with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="e46fa-110">Несколько <xref:System.Net.HttpListener> объектов не могут добавить один и тот же <xref:System.ComponentModel.Win32Exception> префикс; <xref:System.Net.HttpListener> исключение создается, если добавляет префикс, который уже используется.</span><span class="sxs-lookup"><span data-stu-id="e46fa-110">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix; a <xref:System.ComponentModel.Win32Exception> exception is thrown if a <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>
  
 <span data-ttu-id="e46fa-111">Если указан порт, элемент Host можно заменить на "\*", чтобы указать <xref:System.Net.HttpListener> , что принимает запросы, отправляемые на порт, если запрашиваемый URI не совпадает ни с каким другим префиксом.</span><span class="sxs-lookup"><span data-stu-id="e46fa-111">When a port is specified, the host element can be replaced with "\*" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="e46fa-112">Например, чтобы получить все запросы, отправленные на порт 8080, если запрашиваемый URI не обрабатывается <xref:System.Net.HttpListener>ни одним из них, то префиксом будет *http://\*: 8080/*.</span><span class="sxs-lookup"><span data-stu-id="e46fa-112">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <xref:System.Net.HttpListener>, the prefix is *http://\*:8080/*.</span></span> <span data-ttu-id="e46fa-113">Аналогично, чтобы указать, <xref:System.Net.HttpListener> что компонент принимает все запросы, отправляемые в порт, замените элемент Host символом "+".</span><span class="sxs-lookup"><span data-stu-id="e46fa-113">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "+" character.</span></span> <span data-ttu-id="e46fa-114">Например, *https://+:8080*.</span><span class="sxs-lookup"><span data-stu-id="e46fa-114">For example, *https://+:8080*.</span></span> <span data-ttu-id="e46fa-115">Символы "\*" и "+" могут присутствовать в префиксах, включающих пути.</span><span class="sxs-lookup"><span data-stu-id="e46fa-115">The "\*" and "+" characters can be present in prefixes that include paths.</span></span>
  
 <span data-ttu-id="e46fa-116">Начиная с .NET Core 2,0 или .NET Framework 4,6 в Windows 10, поддомены с подстановочными знаками поддерживаются в префиксах URI, <xref:System.Net.HttpListener> управляемых объектом.</span><span class="sxs-lookup"><span data-stu-id="e46fa-116">Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="e46fa-117">Чтобы указать поддомен с подстановочными знаками, используйте\*символ "" как часть имени узла в префиксе URI.</span><span class="sxs-lookup"><span data-stu-id="e46fa-117">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix.</span></span> <span data-ttu-id="e46fa-118">Например, *\*http://. foo.com/*.</span><span class="sxs-lookup"><span data-stu-id="e46fa-118">For example, *http://\*.foo.com/*.</span></span> <span data-ttu-id="e46fa-119">Передайте его в качестве аргумента <xref:System.Net.HttpListenerPrefixCollection.Add%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="e46fa-119">Pass this as the argument to the <xref:System.Net.HttpListenerPrefixCollection.Add%2A> method.</span></span> <span data-ttu-id="e46fa-120">Это работает начиная с .NET Core 2,0 или .NET Framework 4,6 в Windows 10; в более ранних версиях это создает <xref:System.Net.HttpListenerException>.</span><span class="sxs-lookup"><span data-stu-id="e46fa-120">This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <xref:System.Net.HttpListenerException>.</span></span>

 > [!WARNING]
 > <span data-ttu-id="e46fa-121">**Не** следует использовать подстановочные привязки верхнего уровня (*http://\*: 8080/* и *http://+:8080*).</span><span class="sxs-lookup"><span data-stu-id="e46fa-121">Top-level wildcard bindings (*http://\*:8080/* and *http://+:8080*) should **not** be used.</span></span> <span data-ttu-id="e46fa-122">Это может создать уязвимость и поставить ваше приложение под угрозу.</span><span class="sxs-lookup"><span data-stu-id="e46fa-122">Top-level wildcard bindings can open up your app to security vulnerabilities.</span></span> <span data-ttu-id="e46fa-123">Сюда относятся и строгие, и нестрогие подстановочные знаки.</span><span class="sxs-lookup"><span data-stu-id="e46fa-123">This applies to both strong and weak wildcards.</span></span> <span data-ttu-id="e46fa-124">Вместо этого используйте имена узлов в явном виде.</span><span class="sxs-lookup"><span data-stu-id="e46fa-124">Use explicit host names rather than wildcards.</span></span> <span data-ttu-id="e46fa-125">Привязки с подстановочными знаками на уровне дочерних доменов (например `*.mysub.com`) не создают таких угроз безопасности, если вы полностью контролируете родительский домен (в отличие от варианта `*.com`, создающего уязвимость).</span><span class="sxs-lookup"><span data-stu-id="e46fa-125">Subdomain wildcard binding (for example, `*.mysub.com`) doesn't have this security risk if you control the entire parent domain (as opposed to `*.com`, which is vulnerable).</span></span> <span data-ttu-id="e46fa-126">Дополнительные сведения см. в документе [rfc7230, раздел 5.4](https://tools.ietf.org/html/rfc7230#section-5.4).</span><span class="sxs-lookup"><span data-stu-id="e46fa-126">See [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) for more information.</span></span>
  
 <span data-ttu-id="e46fa-127">Чтобы начать прослушивание запросов от клиентов, добавьте префиксы URI в коллекцию и вызовите <xref:System.Net.HttpListener.Start%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e46fa-127">To begin listening for requests from clients, add the URI prefixes to the collection and call the <xref:System.Net.HttpListener.Start%2A> method.</span></span> <span data-ttu-id="e46fa-128"><xref:System.Net.HttpListener>предлагает как синхронные, так и асинхронные модели для обработки клиентских запросов.</span><span class="sxs-lookup"><span data-stu-id="e46fa-128"><xref:System.Net.HttpListener> offers both synchronous and asynchronous models for processing client requests.</span></span> <span data-ttu-id="e46fa-129">Доступ к запросам и связанным с ними <xref:System.Net.HttpListenerContext> ответам осуществляется с <xref:System.Net.HttpListener.GetContext%2A> помощью объекта, возвращаемого методом, или <xref:System.Net.HttpListener.BeginGetContext%2A> его <xref:System.Net.HttpListener.EndGetContext%2A> асинхронными аналогами, методами и.</span><span class="sxs-lookup"><span data-stu-id="e46fa-129">Requests and their associated responses are accessed using the <xref:System.Net.HttpListenerContext> object returned by the <xref:System.Net.HttpListener.GetContext%2A> method or its asynchronous counterparts, the <xref:System.Net.HttpListener.BeginGetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods.</span></span>
  
 <span data-ttu-id="e46fa-130">Синхронная модель подходит, если приложение должно блокироваться при ожидании запроса клиента и если требуется обработать только один запрос за раз.</span><span class="sxs-lookup"><span data-stu-id="e46fa-130">The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</span></span> <span data-ttu-id="e46fa-131">Используя синхронную модель, вызовите <xref:System.Net.HttpListener.GetContext%2A> метод, который ожидает отправки клиентом запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-131">Using the synchronous model, call the <xref:System.Net.HttpListener.GetContext%2A> method, which waits for a client to send a request.</span></span> <span data-ttu-id="e46fa-132">Метод возвращает <xref:System.Net.HttpListenerContext> объект для обработки, когда происходит событие.</span><span class="sxs-lookup"><span data-stu-id="e46fa-132">The method returns an <xref:System.Net.HttpListenerContext> object to you for processing when one occurs.</span></span>
  
 <span data-ttu-id="e46fa-133">В более сложной асинхронной модели приложение не блокируется при ожидании запросов, и каждый запрос обрабатывается в собственном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="e46fa-133">In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</span></span> <span data-ttu-id="e46fa-134"><xref:System.Net.HttpListener.BeginGetContext%2A> Используйте метод, чтобы указать определяемый приложением метод, вызываемый для каждого входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-134">Use the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify an application-defined method to be called for each incoming request.</span></span> <span data-ttu-id="e46fa-135">В этом методе вызовите <xref:System.Net.HttpListener.EndGetContext%2A> метод, чтобы получить запрос, обработать его и ответить.</span><span class="sxs-lookup"><span data-stu-id="e46fa-135">Within that method, call the <xref:System.Net.HttpListener.EndGetContext%2A> method to obtain the request, process it, and respond.</span></span>
  
 <span data-ttu-id="e46fa-136">В любой из этих моделей доступ к входящим запросам <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> осуществляется с помощью свойства и <xref:System.Net.HttpListenerRequest> представляются объектами.</span><span class="sxs-lookup"><span data-stu-id="e46fa-136">In either model, incoming requests are accessed using the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerRequest> objects.</span></span> <span data-ttu-id="e46fa-137">Аналогично, доступ к ответам <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> осуществляется с помощью свойства и <xref:System.Net.HttpListenerResponse> представляются объектами.</span><span class="sxs-lookup"><span data-stu-id="e46fa-137">Similarly, responses are accessed using the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerResponse> objects.</span></span> <span data-ttu-id="e46fa-138">Эти объекты совместно используют некоторые функциональные возможности <xref:System.Net.HttpWebRequest> с <xref:System.Net.HttpWebResponse> объектами и, но последние объекты не могут использоваться совместно с <xref:System.Net.HttpListener> , поскольку они реализуют клиент, а не сервер, поведение.</span><span class="sxs-lookup"><span data-stu-id="e46fa-138">These objects share some functionality with the <xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> objects, but the latter objects cannot be used in conjunction with <xref:System.Net.HttpListener> because they implement client, not server, behaviors.</span></span>
  
 <span data-ttu-id="e46fa-139"><xref:System.Net.HttpListener> Может требоваться проверка подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="e46fa-139">An <xref:System.Net.HttpListener> can require client authentication.</span></span> <span data-ttu-id="e46fa-140">Можно указать определенную схему, которая будет использоваться для проверки подлинности, или указать делегат, определяющий используемую схему.</span><span class="sxs-lookup"><span data-stu-id="e46fa-140">You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</span></span> <span data-ttu-id="e46fa-141">Для получения сведений об удостоверении клиента необходимо иметь некоторую форму проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="e46fa-141">You must require some form of authentication to obtain information about the client's identity.</span></span> <span data-ttu-id="e46fa-142">Дополнительные сведения см. в <xref:System.Net.HttpListenerContext.User%2A>разделе Свойства, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>и <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> .</span><span class="sxs-lookup"><span data-stu-id="e46fa-142">For additional information, see the <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, and <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> properties.</span></span>
  
> [!NOTE]
> <span data-ttu-id="e46fa-143">При создании <xref:System.Net.HttpListener> с помощью HTTPS необходимо выбрать сертификат сервера для этого прослушивателя.</span><span class="sxs-lookup"><span data-stu-id="e46fa-143">If you create an <xref:System.Net.HttpListener> using https, you must select a Server Certificate for that listener.</span></span> <span data-ttu-id="e46fa-144">В противном случае <xref:System.Net.HttpListener> запросбудетзавершатьсяснепредвиденнымзакрытиемсоединения.<xref:System.Net.HttpWebRequest></span><span class="sxs-lookup"><span data-stu-id="e46fa-144">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span>
  
> [!NOTE]
> <span data-ttu-id="e46fa-145">Можно настроить сертификаты сервера и другие параметры прослушивателя с помощью сетевой оболочки (Netsh. exe).</span><span class="sxs-lookup"><span data-stu-id="e46fa-145">You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</span></span> <span data-ttu-id="e46fa-146">Дополнительные сведения см. в разделе [Сетевая оболочка (Netsh)](/windows-server/networking/technologies/netsh/netsh) .</span><span class="sxs-lookup"><span data-stu-id="e46fa-146">See [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) for more details.</span></span> <span data-ttu-id="e46fa-147">Исполняемый файл начал доставляться с Windows Server 2008 и Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="e46fa-147">The executable began shipping with Windows Server 2008 and Windows Vista.</span></span>
  
> [!NOTE]
> <span data-ttu-id="e46fa-148">Если для <xref:System.Net.HttpListener>задано несколько схем проверки подлинности, прослушиватель выполнит запрос клиентов в следующем `Negotiate`порядке: `Digest` `Basic`, `NTLM`, и.</span><span class="sxs-lookup"><span data-stu-id="e46fa-148">If you specify multiple authentication schemes for the <xref:System.Net.HttpListener>, the listener will challenge clients in the following order: `Negotiate`, `NTLM`, `Digest`, and then `Basic`.</span></span>
  
   
  
## Examples
 <span data-ttu-id="e46fa-149">В следующем примере кода показано использование <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="e46fa-149">The following code example demonstrates using a <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a"><span data-ttu-id="e46fa-150">Изменения проверки подлинности NTLM для HTTPWebRequest в версии 3,5 SP1</span><span class="sxs-lookup"><span data-stu-id="e46fa-150">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46fa-151">Инициализирует новый экземпляр класса <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-151">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-152">Перед использованием экземпляра, возвращаемого этим конструктором, необходимо вызвать его <xref:System.Net.HttpListener.Start%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e46fa-152">Before using the instance returned by this constructor, you must invoke its <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-153">В следующем примере кода демонстрируется использование <xref:System.Net.HttpListener> конструктора для создания нового <xref:System.Net.HttpListener> объекта.</span><span class="sxs-lookup"><span data-stu-id="e46fa-153">The following code example demonstrates using the <xref:System.Net.HttpListener> constructor to create a new <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="e46fa-154">Полный пример см. в <xref:System.Net.HttpListener> разделе о классе.</span><span class="sxs-lookup"><span data-stu-id="e46fa-154">For the complete example, see the <xref:System.Net.HttpListener> class topic.</span></span>  
  
 [!code-csharp[Net_listener_Basic#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#9)]  
 [!code-vb[Net_Listener_Basic#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e46fa-155">Этот класс не может использоваться в этой операционной системе.</span><span class="sxs-lookup"><span data-stu-id="e46fa-155">This class cannot be used on the current operating system.</span></span> <span data-ttu-id="e46fa-156">Для использования экземпляров этого класса требуется операционная система Windows Server 2003 или Windows XP с пакетом обновления 2.</span><span class="sxs-lookup"><span data-stu-id="e46fa-156">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e46fa-157">Примечание. Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="e46fa-157">Note: This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e46fa-158">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e46fa-158">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpListener.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46fa-159">Незамедлительно завершает работу объекта <see cref="T:System.Net.HttpListener" />, отменяя все текущие запросы в очереди.</span><span class="sxs-lookup"><span data-stu-id="e46fa-159">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-160">Этот метод уничтожает все ресурсы, удерживаемые этим прослушивателем.</span><span class="sxs-lookup"><span data-stu-id="e46fa-160">This method disposes of all resources held by this listener.</span></span> <span data-ttu-id="e46fa-161">Все ожидающие запросы не могут быть завершены.</span><span class="sxs-lookup"><span data-stu-id="e46fa-161">Any pending requests are unable to complete.</span></span>  
  
 <span data-ttu-id="e46fa-162">После вызова этого метода вы получите исключение <xref:System.ObjectDisposedException> , если попытаться использовать его. <xref:System.Net.HttpListener></span><span class="sxs-lookup"><span data-stu-id="e46fa-162">After calling this method, you will receive an <xref:System.ObjectDisposedException> if you attempt to use this <xref:System.Net.HttpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-163">В следующем примере кода демонстрируется вызов этого метода.</span><span class="sxs-lookup"><span data-stu-id="e46fa-163">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
 [!code-vb[Net_Listener_Basic#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="e46fa-164">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="e46fa-164">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e46fa-165">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e46fa-165">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationSchemes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemes" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemes As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationSchemes { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemes : System.Net.AuthenticationSchemes with get, set" Usage="System.Net.HttpListener.AuthenticationSchemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-166">Возвращает или задает схему, используемую для проверки подлинности клиентов.</span><span class="sxs-lookup"><span data-stu-id="e46fa-166">Gets or sets the scheme used to authenticate clients.</span></span></summary>
        <value><span data-ttu-id="e46fa-167">Битовая комбинация значений перечисления <see cref="T:System.Net.AuthenticationSchemes" />, которая указывает, как клиенты должны проходить проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="e46fa-167">A bitwise combination of <see cref="T:System.Net.AuthenticationSchemes" /> enumeration values that indicates how clients are to be authenticated.</span></span> <span data-ttu-id="e46fa-168">Значение по умолчанию — <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-168">The default value is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-169"><xref:System.Net.HttpListener> Использует указанную схему для проверки подлинности всех входящих запросов.</span><span class="sxs-lookup"><span data-stu-id="e46fa-169">The <xref:System.Net.HttpListener> uses the specified scheme to authenticate all incoming requests.</span></span> <span data-ttu-id="e46fa-170">Методы <xref:System.Net.HttpListener.GetContext%2A> <xref:System.Net.HttpListener> и <xref:System.Net.HttpListener.EndGetContext%2A> возвращают входящий запрос клиента только в случае успешной проверки подлинности запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-170">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming client request only if the <xref:System.Net.HttpListener> successfully authenticates the request.</span></span>  
  
 <span data-ttu-id="e46fa-171">Вы можете запросить удостоверение успешно прошедшего проверку подлинности клиента с помощью <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="e46fa-171">You can interrogate the identity of a successfully authenticated client by using the <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e46fa-172">Если требуется <xref:System.Net.HttpListener> , чтобы объект использовал разные механизмы проверки подлинности на основе характеристик получаемых им запросов (например, свойства <xref:System.Net.HttpListenerRequest.Url%2A> запроса или <xref:System.Net.HttpListenerRequest.UserHostName%2A> ), необходимо реализовать метод, который выбирает Схема проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="e46fa-172">If you want an <xref:System.Net.HttpListener> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostName%2A> property), you must implement a method that chooses the authentication scheme.</span></span> <span data-ttu-id="e46fa-173">Инструкции о том, как это сделать, см. <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> в документации по свойству.</span><span class="sxs-lookup"><span data-stu-id="e46fa-173">For instructions about how to do this, see the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e46fa-174">Чтобы установить это свойство для включения дайджеста, NTLM или Negotiate, требуется <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="e46fa-174">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-175">В следующем примере кода показано использование <xref:System.Net.HttpListener.AuthenticationSchemes%2A> свойства для указания схемы проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="e46fa-175">The following code example demonstrates using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property to specify an authentication scheme.</span></span>  
  
 [!code-csharp[Net_listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
 [!code-vb[Net_Listener_Basic#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-176">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-176">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemeSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemeSelectorDelegate As AuthenticationSchemeSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemeSelector ^ AuthenticationSchemeSelectorDelegate { System::Net::AuthenticationSchemeSelector ^ get(); void set(System::Net::AuthenticationSchemeSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemeSelectorDelegate : System.Net.AuthenticationSchemeSelector with get, set" Usage="System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemeSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-177">Возвращает или задает делегата, вызываемого для определения протокола, который будет использоваться для проверки подлинности клиентов.</span><span class="sxs-lookup"><span data-stu-id="e46fa-177">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span></span></summary>
        <value><span data-ttu-id="e46fa-178">Делегат <see cref="T:System.Net.AuthenticationSchemeSelector" />, который вызывает метод, используемый для выбора протокола проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="e46fa-178">An <see cref="T:System.Net.AuthenticationSchemeSelector" /> delegate that invokes the method used to select an authentication protocol.</span></span> <span data-ttu-id="e46fa-179">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-179">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e46fa-180">Если необходимо, чтобы один и тот же протокол проверки подлинности использовался для всех запросов <xref:System.Net.HttpListener>, обрабатываемых определенным экземпляром, не нужно задавать это свойство.</span><span class="sxs-lookup"><span data-stu-id="e46fa-180">If you want the same authentication protocol to be used for all requests handled by a particular instance of <xref:System.Net.HttpListener>, you do not need to set this property.</span></span> <span data-ttu-id="e46fa-181">Чтобы указать протокол, используемый для всех клиентских запросов, используйте <xref:System.Net.HttpListener.AuthenticationSchemes%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="e46fa-181">To specify a protocol to be used for all client requests, use the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property.</span></span>  
  
 <span data-ttu-id="e46fa-182">Если клиент не указал данные проверки подлинности в своих заголовках <xref:System.Net.HttpListener> , метод вызывает указанный делегат для каждого входящего запроса, не прошедшего проверку подлинности, чтобы определить, какой протокол будет использоваться для проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="e46fa-182">If the client has not specified authentication information in its headers, the <xref:System.Net.HttpListener> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</span></span> <span data-ttu-id="e46fa-183">Методы <xref:System.Net.HttpListener.GetContext%2A> <xref:System.Net.HttpListener> и <xref:System.Net.HttpListener.EndGetContext%2A> возвращают входящий запрос только в случае успешной проверки подлинности запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-183">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming request only if the <xref:System.Net.HttpListener> successfully authenticated the request.</span></span> <span data-ttu-id="e46fa-184">Если запрос не может пройти проверку подлинности <xref:System.Net.HttpListener> , автоматически отправляет ответ 401.</span><span class="sxs-lookup"><span data-stu-id="e46fa-184">If a request cannot be authenticated, the <xref:System.Net.HttpListener> automatically sends back a 401 response.</span></span> <span data-ttu-id="e46fa-185">Удостоверение успешно прошедшего проверку подлинности клиента можно получить с <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> помощью свойства.</span><span class="sxs-lookup"><span data-stu-id="e46fa-185">You can get the identity of a successfully authenticated client using the <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e46fa-186">Возможность делегирования выбора протокола проверки подлинности в метод для конкретного приложения полезна, если требуется, <xref:System.Net.HttpListener> чтобы экземпляр использовал разные протоколы проверки подлинности в зависимости от характеристик получаемых запросов (для Пример: свойство запроса <xref:System.Net.HttpListenerRequest.Url%2A> или. <xref:System.Net.HttpListenerRequest.UserHostAddress%2A></span><span class="sxs-lookup"><span data-stu-id="e46fa-186">The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <xref:System.Net.HttpListener> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e46fa-187">Чтобы установить это свойство для включения дайджеста, NTLM или Negotiate, требуется <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="e46fa-187">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-188">В следующем примере кода задается значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="e46fa-188">The following code example sets the value of this property.</span></span>  
  
 [!code-csharp[NclListener#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#2)]
 [!code-vb[NclListener#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#2)]  
  
 <span data-ttu-id="e46fa-189">В следующем примере кода показана реализация метода, <xref:System.Net.AuthenticationSchemeSelector> вызываемого делегатом.</span><span class="sxs-lookup"><span data-stu-id="e46fa-189">The following code example provides an implementation of a method invoked by an <xref:System.Net.AuthenticationSchemeSelector> delegate.</span></span>  
  
 [!code-csharp[NclListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#1)]
 [!code-vb[NclListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-190">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-190">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetContext">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetContext (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetContext(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetContext (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetContext(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetContext : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListener.BeginGetContext (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e46fa-191">Делегат <see cref="T:System.AsyncCallback" />, указывающий на метод, который следует вызвать при наличии клиентского запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-191">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span></span></param>
        <param name="state"><span data-ttu-id="e46fa-192">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="e46fa-192">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="e46fa-193">Этот объект передается делегату <paramref name="callback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="e46fa-193">This object is passed to the <paramref name="callback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="e46fa-194">Начинает асинхронное получение входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-194">Begins asynchronously retrieving an incoming request.</span></span></summary>
        <returns><span data-ttu-id="e46fa-195">Объект <see cref="T:System.IAsyncResult" />, представляющий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="e46fa-195">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-196"><xref:System.Net.HttpListener.BeginGetContext%2A> Метод начинает асинхронный (не блокирующий) вызов для получения входящих клиентских запросов.</span><span class="sxs-lookup"><span data-stu-id="e46fa-196">The <xref:System.Net.HttpListener.BeginGetContext%2A> method begins an asynchronous (non-blocking) call to receive incoming client requests.</span></span> <span data-ttu-id="e46fa-197">Перед вызовом этого метода необходимо вызвать <xref:System.Net.HttpListener.Start%2A> метод и добавить по крайней мере один префикс универсального идентификатора ресурса (URI) для прослушивания путем добавления строк URI в объект, <xref:System.Net.HttpListenerPrefixCollection> возвращаемый <xref:System.Net.HttpListener.Prefixes%2A> свойством.</span><span class="sxs-lookup"><span data-stu-id="e46fa-197">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="e46fa-198">Асинхронная операция должна быть завершена путем вызова <xref:System.Net.HttpListener.EndGetContext%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="e46fa-198">The asynchronous operation must be completed by calling the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span> <span data-ttu-id="e46fa-199">Как правило, метод вызывается `callback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="e46fa-199">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="e46fa-200">Этот метод не блокируется при завершении операции.</span><span class="sxs-lookup"><span data-stu-id="e46fa-200">This method does not block while the operation completes.</span></span> <span data-ttu-id="e46fa-201">Чтобы получить входящий запрос и заблокировать его до завершения операции, вызовите <xref:System.Net.HttpListener.GetContext%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e46fa-201">To get an incoming request and block until the operation completes, call the <xref:System.Net.HttpListener.GetContext%2A> method.</span></span>  
  
 <span data-ttu-id="e46fa-202">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e46fa-202">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-203">В следующем примере кода показано использование <xref:System.Net.HttpListener.BeginGetContext%2A> метода для указания метода обратного вызова, который будет обрабатывать входящие клиентские запросы.</span><span class="sxs-lookup"><span data-stu-id="e46fa-203">The following code example demonstrates using the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify a callback method that will handle incoming client requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
 [!code-vb[Net_Listener_Basic#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#12)]  
  
 <span data-ttu-id="e46fa-204">В следующем примере кода реализуется метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e46fa-204">The following code example implements a callback method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
 [!code-vb[Net_Listener_Basic#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="e46fa-205">Вызов функции Win32 завершился с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="e46fa-205">A Win32 function call failed.</span></span> <span data-ttu-id="e46fa-206">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span><span class="sxs-lookup"><span data-stu-id="e46fa-206">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e46fa-207">Этот объект не был запущен или в настоящее время остановлен.</span><span class="sxs-lookup"><span data-stu-id="e46fa-207">This object has not been started or is currently stopped.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-208">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-208">This object is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e46fa-209">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="e46fa-209">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e46fa-210">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e46fa-210">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="httpListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46fa-211">Завершает работу <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-211">Shuts down the <see cref="T:System.Net.HttpListener" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-212">После вызова этого метода вы больше не сможете использовать <xref:System.Net.HttpListener> объект.</span><span class="sxs-lookup"><span data-stu-id="e46fa-212">After calling this method, you can no longer use the <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="e46fa-213">Чтобы временно приостановить <xref:System.Net.HttpListener> работу объекта, <xref:System.Net.HttpListener.Stop%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="e46fa-213">To temporarily pause an <xref:System.Net.HttpListener> object, use the <xref:System.Net.HttpListener.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="e46fa-214">Этот метод завершает работу <xref:System.Net.HttpListener> объекта без обработки запросов в очереди.</span><span class="sxs-lookup"><span data-stu-id="e46fa-214">This method shut downs the <xref:System.Net.HttpListener> object without processing queued requests.</span></span> <span data-ttu-id="e46fa-215">Все ожидающие запросы не могут быть завершены.</span><span class="sxs-lookup"><span data-stu-id="e46fa-215">Any pending requests are unable to complete.</span></span>  
  
## Examples  

<span data-ttu-id="e46fa-216">В следующем примере кода демонстрируется вызов `Close` метода:</span><span class="sxs-lookup"><span data-stu-id="e46fa-216">The following code example demonstrates calling the `Close` method:</span></span>
  
[!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
[!code-vb[Net_Listener_Basic#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="e46fa-217">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="e46fa-217">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e46fa-218">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e46fa-218">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DefaultServiceNames">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.DefaultServiceNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultServiceNames As ServiceNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ DefaultServiceNames { System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultServiceNames : System.Security.Authentication.ExtendedProtection.ServiceNameCollection" Usage="System.Net.HttpListener.DefaultServiceNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ServiceNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-219">Получает список имен поставщиков услуг (SPN) по умолчанию, определенный зарегистрированными префиксами.</span><span class="sxs-lookup"><span data-stu-id="e46fa-219">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span></span></summary>
        <value><span data-ttu-id="e46fa-220">Объект <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />, содержащий список SPN.</span><span class="sxs-lookup"><span data-stu-id="e46fa-220">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains a list of SPNs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-221"><xref:System.Net.HttpListener.DefaultServiceNames%2A> Свойство используется со встроенной проверкой подлинности Windows для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="e46fa-221">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="e46fa-222">Список имен участников-служб инициализируется из <xref:System.Net.HttpListener.Prefixes%2A> свойства при доступе и очистке при добавлении новых префиксов <xref:System.Net.HttpListener.Prefixes%2A> к свойству.</span><span class="sxs-lookup"><span data-stu-id="e46fa-222">The list of SPNs is initialized from the <xref:System.Net.HttpListener.Prefixes%2A> property when accessed and cleared when new prefixes are added to the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="e46fa-223">Свойство <xref:System.Net.HttpListener.DefaultServiceNames%2A> используется, если приложение не <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> устанавливает свойство для своей политики расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="e46fa-223">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used if an application doesn't set the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> property on its extended protection policy.</span></span>  
  
 <span data-ttu-id="e46fa-224">Объект <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> , полученный <xref:System.Net.HttpListener.DefaultServiceNames%2A> со <xref:System.Net.HttpListener.Prefixes%2A> свойством, строится на основе свойства в соответствии со следующими правилами.</span><span class="sxs-lookup"><span data-stu-id="e46fa-224">The <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> that is retrieved with the <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is built from the <xref:System.Net.HttpListener.Prefixes%2A> property according to the following rules:</span></span>  
  
1.  <span data-ttu-id="e46fa-225">Если имя узла — "+", "\*", или литерал IPv4 или IPv6 (эквивалентен "\*", но ограничен конкретным локальным интерфейсом), добавляется следующее имя участника-службы:</span><span class="sxs-lookup"><span data-stu-id="e46fa-225">If the hostname is "+", "\*", or an IPv4 or IPv6 literal (equivalent to "\*" but restricted to a specific local interface), the following SPN is added:</span></span>  
  
 <span data-ttu-id="e46fa-226">`"HTTP/"`а также полное доменное имя компьютера.</span><span class="sxs-lookup"><span data-stu-id="e46fa-226">`"HTTP/"` plus the fully qualified domain name of the computer.</span></span>  
  
1.  <span data-ttu-id="e46fa-227">Если имя узла не содержит точек (домены или поддомены), предпринимается попытка разрешить полное доменное имя с помощью DNS (то же поведение, которое используется <xref:System.Net.HttpWebRequest>).</span><span class="sxs-lookup"><span data-stu-id="e46fa-227">If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <xref:System.Net.HttpWebRequest>).</span></span> <span data-ttu-id="e46fa-228">Если полное доменное имя можно разрешить, добавляются следующие имена участников-служб:</span><span class="sxs-lookup"><span data-stu-id="e46fa-228">If the fully-qualified domain name can be resolved, the following SPNs are added:</span></span>  
  
 <span data-ttu-id="e46fa-229">`"HTTP/"`а также имя узла (короткое имя).</span><span class="sxs-lookup"><span data-stu-id="e46fa-229">`"HTTP/"` plus the hostname (the short name).</span></span>  
  
 <span data-ttu-id="e46fa-230">`"HTTP/"`а также полное доменное имя узла.</span><span class="sxs-lookup"><span data-stu-id="e46fa-230">`"HTTP/"` plus the fully qualified domain name for the hostname.</span></span>  
  
1.  <span data-ttu-id="e46fa-231">Если имя узла содержит не точки (домены или поддомены) и полное доменное имя не удается разрешить, добавляется следующее имя участника-службы:</span><span class="sxs-lookup"><span data-stu-id="e46fa-231">If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</span></span>  
  
 <span data-ttu-id="e46fa-232">`"HTTP/"`и имя узла.</span><span class="sxs-lookup"><span data-stu-id="e46fa-232">`"HTTP/"` plus the hostname.</span></span>  
  
1.  <span data-ttu-id="e46fa-233">Если имя узла содержит точки (домены или поддомены), добавляется следующее имя участника-службы:</span><span class="sxs-lookup"><span data-stu-id="e46fa-233">If the hostname contains dots (domains or subdomains), the following SPN is added:</span></span>  
  
 <span data-ttu-id="e46fa-234">`"HTTP/"`и имя узла.</span><span class="sxs-lookup"><span data-stu-id="e46fa-234">`"HTTP/"` plus the hostname.</span></span>  
  
 <span data-ttu-id="e46fa-235"><xref:System.Net.HttpListener.DefaultServiceNames%2A> Свойство может использоваться приложением для просмотра списка имен участников-служб по умолчанию, которые будут использоваться для проверки подлинности, если пользовательский список не указан.</span><span class="sxs-lookup"><span data-stu-id="e46fa-235">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</span></span> <span data-ttu-id="e46fa-236">Если требуются другие имена участников-служб, приложение может добавить их с помощью одного <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> из методов.</span><span class="sxs-lookup"><span data-stu-id="e46fa-236">If other SPNs are needed, an application can add them using one of the <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> methods.</span></span>  
  
 <span data-ttu-id="e46fa-237">Использование расширенной защиты для принятия решений по политике на основе запрошенного URL-адреса является ненадежным, так как это можно сделать подмену.</span><span class="sxs-lookup"><span data-stu-id="e46fa-237">It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</span></span> <span data-ttu-id="e46fa-238">Вместо этого приложения должны использовать свойства <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> или <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> для принятия таких решений о политике.</span><span class="sxs-lookup"><span data-stu-id="e46fa-238">Rather, applications should rely on the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> or <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> properties to make such policy decisions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="e46fa-239">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="e46fa-239">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext EndGetContext (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext EndGetContext(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetContext (asyncResult As IAsyncResult) As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ EndGetContext(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetContext : IAsyncResult -&gt; System.Net.HttpListenerContext" Usage="httpListener.EndGetContext asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="e46fa-240">Объект <see cref="T:System.IAsyncResult" />, который был получен при запуске асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="e46fa-240">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span></span></param>
        <summary><span data-ttu-id="e46fa-241">Завершает асинхронную операцию получения входящего клиентского запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-241">Completes an asynchronous operation to retrieve an incoming client request.</span></span></summary>
        <returns><span data-ttu-id="e46fa-242">Объект <see cref="T:System.Net.HttpListenerContext" />, представляющий клиентский запрос.</span><span class="sxs-lookup"><span data-stu-id="e46fa-242">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-243">Метод вызывается, как правило, в определяемом приложением методе обратного вызова, который вызывается делегатом <xref:System.Net.HttpListenerContext> для получения объекта, содержащего входящий клиентский запрос и связанный с ним ответ. <xref:System.Net.HttpListener.EndGetContext%2A></span><span class="sxs-lookup"><span data-stu-id="e46fa-243">The <xref:System.Net.HttpListener.EndGetContext%2A> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <xref:System.Net.HttpListenerContext> object that contains an incoming client request and its associated response.</span></span> <span data-ttu-id="e46fa-244">Этот метод завершает операцию, ранее запущенную с помощью вызова <xref:System.Net.HttpListener.BeginGetContext%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="e46fa-244">This method completes an operation previously started by calling the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="e46fa-245">Если операция не завершена, этот метод блокируется до тех пор, пока он не завершится.</span><span class="sxs-lookup"><span data-stu-id="e46fa-245">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="e46fa-246">Поскольку для вызова <xref:System.Net.HttpListener.EndGetContext%2A> метода <xref:System.Net.HttpListener> требуется объект, этот объект обычно передается в метод обратного вызова с помощью объекта <xref:System.Net.HttpListener.BeginGetContext%2A> состояния, переданного в метод.</span><span class="sxs-lookup"><span data-stu-id="e46fa-246">Because calling the <xref:System.Net.HttpListener.EndGetContext%2A> method requires the <xref:System.Net.HttpListener> object, this object is typically passed into a callback method by using the state object passed into the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="e46fa-247">Этот объект состояния можно получить с помощью <xref:System.IAsyncResult.AsyncState%2A> свойства `asyncResult` объекта.</span><span class="sxs-lookup"><span data-stu-id="e46fa-247">You can obtain this state object by using the <xref:System.IAsyncResult.AsyncState%2A> property of the `asyncResult` object.</span></span>  
  
 <span data-ttu-id="e46fa-248">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e46fa-248">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-249">В следующем примере кода показана реализация метода обратного вызова, который вызывает <xref:System.Net.HttpListener.EndGetContext%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e46fa-249">The following code example shows the implementation of a callback method that calls the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
 [!code-vb[Net_Listener_Basic#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e46fa-250">Значение параметра <paramref name="asyncResult" /> не получено вызовом метода <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-250"><paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e46fa-251">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-251"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="e46fa-252">Вызов функции Win32 завершился с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="e46fa-252">A Win32 function call failed.</span></span> <span data-ttu-id="e46fa-253">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span><span class="sxs-lookup"><span data-stu-id="e46fa-253">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e46fa-254">Метод <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> уже был вызван для указанного объекта <paramref name="asyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-254">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-255">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-255">This object is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e46fa-256">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="e46fa-256">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e46fa-257">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e46fa-257">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionPolicy : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy with get, set" Usage="System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("not used anywhere in the implementation")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-258">Получает или задает объект <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который используется для расширенной защиты сеанса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-258">Gets or sets the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span></span></summary>
        <value><span data-ttu-id="e46fa-259">Объект <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который задает политику для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="e46fa-259">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-260"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> Свойство используется со встроенной проверкой подлинности Windows для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="e46fa-260">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="e46fa-261">Свойство позволяет настроить политику расширенной защиты для всего <xref:System.Net.HttpListener> сеанса. <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A></span><span class="sxs-lookup"><span data-stu-id="e46fa-261">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="e46fa-262"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> Свойство позволяет настроить политику расширенной защиты для каждого отдельного запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-262">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy for each individual request.</span></span>  
  
 <span data-ttu-id="e46fa-263">Свойство <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> должно иметь значение `null`.</span><span class="sxs-lookup"><span data-stu-id="e46fa-263">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="e46fa-264"><xref:System.Net.HttpListener> Экземпляр получает маркер привязки канала (CBT) непосредственно из своего собственного сеанса TLS, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="e46fa-264">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e46fa-265">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />, но свойство <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> не имело значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-265">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e46fa-266">Предпринята попытка задать свойству <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-266">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e46fa-267">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> после вызова метода <see cref="M:System.Net.HttpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-267">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-268">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-268">This object is closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e46fa-269">Свойству <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> было присвоено значение <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> на платформе, не поддерживающей расширенную защиту.</span><span class="sxs-lookup"><span data-stu-id="e46fa-269">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="e46fa-270">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="e46fa-270">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener.ExtendedProtectionSelector ExtendedProtectionSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener/ExtendedProtectionSelector ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionSelectorDelegate As HttpListener.ExtendedProtectionSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener::ExtendedProtectionSelector ^ ExtendedProtectionSelectorDelegate { System::Net::HttpListener::ExtendedProtectionSelector ^ get(); void set(System::Net::HttpListener::ExtendedProtectionSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionSelectorDelegate : System.Net.HttpListener.ExtendedProtectionSelector with get, set" Usage="System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener+ExtendedProtectionSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-271">Получает или задает делегат, вызываемый для определения объекта <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который следует использовать для каждого запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-271">Gets or sets the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span></span></summary>
        <value><span data-ttu-id="e46fa-272">Объект <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который задает политику для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="e46fa-272">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-273"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> Свойство используется со встроенной проверкой подлинности Windows для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="e46fa-273">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="e46fa-274">Свойство позволяет настроить политику расширенной защиты для всего <xref:System.Net.HttpListener> сеанса. <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A></span><span class="sxs-lookup"><span data-stu-id="e46fa-274">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="e46fa-275"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> Свойство позволяет настроить расширенную политику защиты для отдельного запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-275">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy per individual request.</span></span>  
  
 <span data-ttu-id="e46fa-276">Свойство <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> должно иметь значение `null`.</span><span class="sxs-lookup"><span data-stu-id="e46fa-276">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="e46fa-277"><xref:System.Net.HttpListener> Экземпляр получает маркер привязки канала (CBT) непосредственно из своего собственного сеанса TLS, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="e46fa-277">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 <span data-ttu-id="e46fa-278">Для каждого запроса делегат может выбрать параметры, которые <xref:System.Net.HttpListener> экземпляр будет использовать для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="e46fa-278">For each request, the delegate can choose the settings that the <xref:System.Net.HttpListener> instance will use to provide extended protection.</span></span>  
  
 <span data-ttu-id="e46fa-279">Если делегат возвращает `null` для этого свойства, это <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> представляет <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> свойство, для <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>которого задано значение.</span><span class="sxs-lookup"><span data-stu-id="e46fa-279">If a delegate returns `null` for this property, this represents a <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> which the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> property set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e46fa-280">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />, но свойство <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> должно иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-280">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e46fa-281">Предпринята попытка задать свойству <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-281">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e46fa-282">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> после вызова метода <see cref="M:System.Net.HttpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-282">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-283">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-283">This object is closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e46fa-284">Предпринята попытка задать свойство  <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> на платформе, не поддерживающей расширенную защиту.</span><span class="sxs-lookup"><span data-stu-id="e46fa-284">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="e46fa-285">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="e46fa-285">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ GetContext();" />
      <MemberSignature Language="F#" Value="member this.GetContext : unit -&gt; System.Net.HttpListenerContext" Usage="httpListener.GetContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46fa-286">Ожидает входящий запрос и выполняет возврат при получении такого запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-286">Waits for an incoming request and returns when one is received.</span></span></summary>
        <returns><span data-ttu-id="e46fa-287">Объект <see cref="T:System.Net.HttpListenerContext" />, представляющий клиентский запрос.</span><span class="sxs-lookup"><span data-stu-id="e46fa-287">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-288">Перед вызовом этого метода необходимо вызвать <xref:System.Net.HttpListener.Start%2A> метод и добавить по крайней мере один префикс URI для прослушивания путем добавления строк URI в объект, <xref:System.Net.HttpListenerPrefixCollection> возвращаемый <xref:System.Net.HttpListener.Prefixes%2A> свойством.</span><span class="sxs-lookup"><span data-stu-id="e46fa-288">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="e46fa-289">Подробное описание префиксов см. в <xref:System.Net.HttpListener> разделе Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="e46fa-289">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 <span data-ttu-id="e46fa-290">Этот метод блокируется при ожидании входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-290">This method blocks while waiting for an incoming request.</span></span> <span data-ttu-id="e46fa-291">Если требуется, чтобы входящие запросы обрабатывались асинхронно (в отдельных потоках), чтобы приложение не блокировало работу, <xref:System.Net.HttpListener.BeginGetContext%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="e46fa-291">If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-292">В следующем примере кода демонстрируется вызов этого метода.</span><span class="sxs-lookup"><span data-stu-id="e46fa-292">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="e46fa-293">Вызов функции Win32 завершился с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="e46fa-293">A Win32 function call failed.</span></span> <span data-ttu-id="e46fa-294">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span><span class="sxs-lookup"><span data-stu-id="e46fa-294">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e46fa-295">Этот объект не был запущен или в настоящее время остановлен.</span><span class="sxs-lookup"><span data-stu-id="e46fa-295">This object has not been started or is currently stopped.</span></span>  
  
<span data-ttu-id="e46fa-296">- или -</span><span class="sxs-lookup"><span data-stu-id="e46fa-296">-or-</span></span> 
<span data-ttu-id="e46fa-297">Прослушиватель <see cref="T:System.Net.HttpListener" /> не имеет префиксов URI для ответа.</span><span class="sxs-lookup"><span data-stu-id="e46fa-297">The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-298">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-298">This object is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e46fa-299">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="e46fa-299">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e46fa-300">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e46fa-300">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetContextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt; GetContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.HttpListenerContext&gt; GetContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextAsync () As Task(Of HttpListenerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::HttpListenerContext ^&gt; ^ GetContextAsync();" />
      <MemberSignature Language="F#" Value="member this.GetContextAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;" Usage="httpListener.GetContextAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46fa-301">Ожидает входящего запроса как асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="e46fa-301">Waits for an incoming request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="e46fa-302">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="e46fa-302">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="e46fa-303">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает объект <see cref="T:System.Net.HttpListenerContext" />, представляющий запрос клиента.</span><span class="sxs-lookup"><span data-stu-id="e46fa-303">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-304">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="e46fa-304">This operation will not block.</span></span> <span data-ttu-id="e46fa-305">Возвращенный <xref:System.Threading.Tasks.Task%601> объект будет выполнен после получения входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="e46fa-305">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the incoming request has been received.</span></span>  
  
 <span data-ttu-id="e46fa-306">Перед вызовом этого метода необходимо вызвать <xref:System.Net.HttpListener.Start%2A> метод и добавить по крайней мере один префикс URI для прослушивания путем добавления строк URI в объект, <xref:System.Net.HttpListenerPrefixCollection> возвращаемый <xref:System.Net.HttpListener.Prefixes%2A> свойством.</span><span class="sxs-lookup"><span data-stu-id="e46fa-306">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="e46fa-307">Подробное описание префиксов см. в <xref:System.Net.HttpListener> разделе Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="e46fa-307">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListenerContext" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWriteExceptions">
      <MemberSignature Language="C#" Value="public bool IgnoreWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWriteExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWriteExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWriteExceptions : bool with get, set" Usage="System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-308">Возвращает или задает значение <see cref="T:System.Boolean" />, которое определяет, получает ли приложения исключения, которые возникают при отправке прослушивателем <see cref="T:System.Net.HttpListener" /> ответа клиенту.</span><span class="sxs-lookup"><span data-stu-id="e46fa-308">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span></span></summary>
        <value><span data-ttu-id="e46fa-309"><see langword="true" />значение, если не <see langword="false" /> должновозвращатьисключения,происходящиеприотправкеответаклиенту;впротивномслучае—.<see cref="T:System.Net.HttpListener" /></span><span class="sxs-lookup"><span data-stu-id="e46fa-309"><see langword="true" /> if this <see cref="T:System.Net.HttpListener" /> should not return exceptions that occur when sending the response to the client; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e46fa-310">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-310">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-311">Задайте для этого свойства `true` значение, если приложению не требуется, чтобы ответ был успешно отправлен каждому клиенту.</span><span class="sxs-lookup"><span data-stu-id="e46fa-311">Set this property to `true` if your application does not require that a response is successfully sent to each client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-312">В следующем примере кода показано задание этого свойства.</span><span class="sxs-lookup"><span data-stu-id="e46fa-312">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
 [!code-vb[Net_Listener_Basic#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-313">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-313">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsListening" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsListening { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsListening : bool" Usage="System.Net.HttpListener.IsListening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-314">Возвращает значение, показывающее, был ли запущен прослушиватель <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-314">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span></span></summary>
        <value><span data-ttu-id="e46fa-315">Значение <see langword="true" />, если прослушиватель <see cref="T:System.Net.HttpListener" /> был запущен; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-315"><see langword="true" /> if the <see cref="T:System.Net.HttpListener" /> was started; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-316">Чтобы запустить <xref:System.Net.HttpListener>, <xref:System.Net.HttpListener.Start%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="e46fa-316">To start an <xref:System.Net.HttpListener>, call the <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-317">В следующем примере кода показано использование этого свойства для определения состояния прослушивания экземпляра.</span><span class="sxs-lookup"><span data-stu-id="e46fa-317">The following code example demonstrates using this property to determine the listening state of an instance.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
 [!code-vb[Net_Listener_Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Net.HttpListener.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-318">Возвращает значение, которое указывает, можно ли использовать прослушиватель <see cref="T:System.Net.HttpListener" /> в текущей операционной системе.</span><span class="sxs-lookup"><span data-stu-id="e46fa-318">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span></span></summary>
        <value><span data-ttu-id="e46fa-319">Значение <see langword="true" />, если <see cref="T:System.Net.HttpListener" /> поддерживается; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-319"><see langword="true" /> if <see cref="T:System.Net.HttpListener" /> is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-320">Этот класс доступен только на компьютерах под управлением операционных систем Windows XP с пакетом обновления 2 (SP2) или Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="e46fa-320">This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-321">В следующем примере кода показано использование <xref:System.Net.HttpListener.IsSupported%2A> свойства для определения <xref:System.Net.HttpListener> возможности использования объекта в текущей операционной системе.</span><span class="sxs-lookup"><span data-stu-id="e46fa-321">The following code example demonstrates the use of the <xref:System.Net.HttpListener.IsSupported%2A> property to detect whether an <xref:System.Net.HttpListener> object can be used with the current operating system.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefixes">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerPrefixCollection Prefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerPrefixCollection Prefixes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Prefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefixes As HttpListenerPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerPrefixCollection ^ Prefixes { System::Net::HttpListenerPrefixCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefixes : System.Net.HttpListenerPrefixCollection" Usage="System.Net.HttpListener.Prefixes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-322">Возвращает префиксы URI, обрабатываемые этим объектом <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-322">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <value><span data-ttu-id="e46fa-323">Коллекция <see cref="T:System.Net.HttpListenerPrefixCollection" />, в которой содержатся префиксы URI, которые может обрабатывать этот объект <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-323">An <see cref="T:System.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes that this <see cref="T:System.Net.HttpListener" /> object is configured to handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-324">Префиксы представлены в канонической форме.</span><span class="sxs-lookup"><span data-stu-id="e46fa-324">The prefixes are in canonical form.</span></span> <span data-ttu-id="e46fa-325">Подробное описание префиксов см. в <xref:System.Net.HttpListener> разделе Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="e46fa-325">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-326">В следующем примере кода показано использование <xref:System.Net.HttpListener.Prefixes%2A> свойства для получения и печати обрабатываемых префиксов URI.</span><span class="sxs-lookup"><span data-stu-id="e46fa-326">The following code example demonstrates using the <xref:System.Net.HttpListener.Prefixes%2A> property to obtain and print the URI prefixes that are handled.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
 [!code-vb[Net_Listener_Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-327">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-327">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.Net.HttpListener.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-328">Возвращает или задает область или раздел ресурса, связанные с этим объектом <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-328">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <value><span data-ttu-id="e46fa-329">Значение <see cref="T:System.String" />, которое содержит имя области, связанной с этим объектом <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-329">A <see cref="T:System.String" /> value that contains the name of the realm associated with the <see cref="T:System.Net.HttpListener" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-330">Серверы используют сферы для секционирования защищенных ресурсов. Каждая секция может иметь собственную схему проверки подлинности и (или) базу данных авторизации.</span><span class="sxs-lookup"><span data-stu-id="e46fa-330">Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</span></span> <span data-ttu-id="e46fa-331">Области используются только для обычной проверки подлинности и дайджест-проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="e46fa-331">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="e46fa-332">После успешного прохождения клиентом проверки подлинности ее результаты действительны для всех ресурсов в данной области.</span><span class="sxs-lookup"><span data-stu-id="e46fa-332">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="e46fa-333">Подробное описание сфер см. в RFC 2617 по адресу [https://www.ietf.org/](https://www.ietf.org/).</span><span class="sxs-lookup"><span data-stu-id="e46fa-333">For a detailed description of realms, see RFC 2617 at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="e46fa-334"><xref:System.Net.HttpListener> У экземпляра есть только одна связанная область.</span><span class="sxs-lookup"><span data-stu-id="e46fa-334">An instance of <xref:System.Net.HttpListener> has only one associated realm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-335">В следующем примере кода показано задание <xref:System.Net.HttpListener.Realm%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="e46fa-335">The following code example demonstrates setting the <xref:System.Net.HttpListener.Realm%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#10)]  
 [!code-vb[Net_Listener_Basic#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-336">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-336">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="httpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46fa-337">Позволяет этому экземпляру получать входящие запросы.</span><span class="sxs-lookup"><span data-stu-id="e46fa-337">Allows this instance to receive incoming requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-338">Этот метод должен вызываться перед вызовом <xref:System.Net.HttpListener.GetContext%2A> метода или. <xref:System.Net.HttpListener.BeginGetContext%2A></span><span class="sxs-lookup"><span data-stu-id="e46fa-338">This method must be called before you call the <xref:System.Net.HttpListener.GetContext%2A> or <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
 <span data-ttu-id="e46fa-339">После запуска <xref:System.Net.HttpListener> объекта можно <xref:System.Net.HttpListener.Stop%2A> использовать метод, чтобы его отключить.</span><span class="sxs-lookup"><span data-stu-id="e46fa-339">After you have started an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Stop%2A> method to stop it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e46fa-340">Если этот экземпляр прослушивателя использует протокол HTTPS, необходимо установить и выбрать сертификат сервера.</span><span class="sxs-lookup"><span data-stu-id="e46fa-340">If this listener instance uses https, you must install and select a Server Certificate.</span></span> <span data-ttu-id="e46fa-341">В противном случае <xref:System.Net.HttpListener> запросбудетзавершатьсяснепредвиденнымзакрытиемсоединения.<xref:System.Net.HttpWebRequest></span><span class="sxs-lookup"><span data-stu-id="e46fa-341">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span> <span data-ttu-id="e46fa-342">Сертификаты сервера и другие параметры прослушивателя можно настроить с помощью HttpCfg. exe.</span><span class="sxs-lookup"><span data-stu-id="e46fa-342">You can configure Server Certificates and other listener options by using HttpCfg.exe.</span></span> <span data-ttu-id="e46fa-343">Дополнительные [http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](https://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) сведения см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="e46fa-343">See [http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](https://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) for more details.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-344">В следующем примере кода показано использование <xref:System.Net.HttpListener.Start%2A> метода для начала обработки входящих запросов.</span><span class="sxs-lookup"><span data-stu-id="e46fa-344">The following code example demonstrates using the <xref:System.Net.HttpListener.Start%2A> method to begin processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
 [!code-vb[Net_Listener_Basic#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="e46fa-345">Вызов функции Win32 завершился с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="e46fa-345">A Win32 function call failed.</span></span> <span data-ttu-id="e46fa-346">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span><span class="sxs-lookup"><span data-stu-id="e46fa-346">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-347">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-347">This object is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e46fa-348">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="e46fa-348">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e46fa-349">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e46fa-349">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="httpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46fa-350">Заставляет этот экземпляр прекратить получать входящие запросы.</span><span class="sxs-lookup"><span data-stu-id="e46fa-350">Causes this instance to stop receiving incoming requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-351">Если этот экземпляр уже остановлен, вызов этого метода не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="e46fa-351">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 <span data-ttu-id="e46fa-352">После остановки <xref:System.Net.HttpListener> объекта можно <xref:System.Net.HttpListener.Start%2A> использовать метод для его перезапуска.</span><span class="sxs-lookup"><span data-stu-id="e46fa-352">After you have stopped an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Start%2A> method to restart it.</span></span>  
  
   
  
## Examples  
 
<span data-ttu-id="e46fa-353">В следующем примере кода показано использование <xref:System.Net.HttpListener.Stop%2A> метода для отмены обработки входящих запросов.</span><span class="sxs-lookup"><span data-stu-id="e46fa-353">The following code example demonstrates using the <xref:System.Net.HttpListener.Stop%2A> method to stop processing incoming requests.</span></span>  
 
[!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
[!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-354">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-354">This object has been closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e46fa-355">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="e46fa-355">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e46fa-356">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e46fa-356">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46fa-357">Освобождает ресурсы, используемые этим объектом <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-357">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-358">Приложения должны использовать <xref:System.Net.HttpListener.Close%2A> метод вместо вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="e46fa-358">Applications should use the <xref:System.Net.HttpListener.Close%2A> method instead of calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutManager">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerTimeoutManager TimeoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerTimeoutManager TimeoutManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.TimeoutManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutManager As HttpListenerTimeoutManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerTimeoutManager ^ TimeoutManager { System::Net::HttpListenerTimeoutManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutManager : System.Net.HttpListenerTimeoutManager" Usage="System.Net.HttpListener.TimeoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerTimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-359">Диспетчер времени ожидания для этого экземпляра <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-359">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span></span></summary>
        <value><span data-ttu-id="e46fa-360">Диспетчер времени ожидания для этого экземпляра <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-360">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-361">Диспетчер времени ожидания определяет ограничения времени ожидания подключения для данного <xref:System.Net.HttpListener> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="e46fa-361">The timeout manager defines the connection timeout limits for this <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnsafeConnectionNtlmAuthentication : bool with get, set" Usage="System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Support for NTLM needs some loving.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46fa-362">Возвращает или задает значение <see cref="T:System.Boolean" />, которое управляет, должны ли дополнительные запросы, использующие TCP-подключение, проходить проверку подлинности при использовании протокола NTLM.</span><span class="sxs-lookup"><span data-stu-id="e46fa-362">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span></span></summary>
        <value><span data-ttu-id="e46fa-363">Значение <see langword="true" />, если сведения об идентификации <see cref="T:System.Security.Principal.IIdentity" /> первого запроса будут использоваться для последующих запросов на том же подключении, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-363"><see langword="true" /> if the <see cref="T:System.Security.Principal.IIdentity" /> of the first request will be used for subsequent requests on the same connection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e46fa-364">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e46fa-364">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46fa-365">Если для `true` этого свойства задано значение и первый запрос по конкретному TCP-соединению проходит проверку подлинности с помощью NTLM, последующие запросы по этому же TCP-соединению<xref:System.Security.Principal.IIdentity>обрабатываются с использованием сведений о проверке подлинности () начального значения получения.</span><span class="sxs-lookup"><span data-stu-id="e46fa-365">When this property is set to `true` and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<xref:System.Security.Principal.IIdentity>) of the initial request.</span></span>  
  
 <span data-ttu-id="e46fa-366">Это свойство не имеет значения, если NTLM не является протоколом проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="e46fa-366">This property has no effect when NTLM is not the authentication protocol.</span></span> <span data-ttu-id="e46fa-367">Если в качестве протокола проверки подлинности указано Negotiate, это свойство действует, только если NTLM — это фактический протокол, используемый для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="e46fa-367">When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e46fa-368">При задании этого свойства `true` для повышения производительности, <xref:System.Net.HttpListener> поскольку не отправляет дополнительные проблемы проверки подлинности NTLM, существует угроза безопасности, при которой не требуется, чтобы все запросы на предоставление сведений о проверке подлинности.</span><span class="sxs-lookup"><span data-stu-id="e46fa-368">While setting this property to `true` increases performance because the <xref:System.Net.HttpListener> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="e46fa-369">Необходимо определить, стоит ли снижать безопасность с целью увеличения производительности.</span><span class="sxs-lookup"><span data-stu-id="e46fa-369">You must determine whether the increase in performance is worth this risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46fa-370">В следующем примере кода показано задание этого свойства.</span><span class="sxs-lookup"><span data-stu-id="e46fa-370">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
 [!code-vb[Net_Listener_Basic#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e46fa-371">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="e46fa-371">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
