<Type Name="HttpListener" FullName="System.Net.HttpListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ed8342b6a4f9b27379dac13b40de5945ef9f64e" /><Meta Name="ms.sourcegitcommit" Value="f6fc130f7b9399b2b130a137d6b0b2b73c1d17b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/18/2019" /><Meta Name="ms.locfileid" Value="74154634" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListener sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c5257-101">Предоставляет простой программно управляемый прослушиватель протокола HTTP.</span><span class="sxs-lookup"><span data-stu-id="c5257-101">Provides a simple, programmatically controlled HTTP protocol listener.</span></span> <span data-ttu-id="c5257-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="c5257-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

 <span data-ttu-id="c5257-103">С помощью класса <xref:System.Net.HttpListener> можно создать простой прослушиватель протокола HTTP, отвечающий на HTTP-запросы.</span><span class="sxs-lookup"><span data-stu-id="c5257-103">Using the <xref:System.Net.HttpListener> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</span></span> <span data-ttu-id="c5257-104">Прослушиватель активен в течение времени существования объекта <xref:System.Net.HttpListener> и выполняется в приложении с его разрешениями.</span><span class="sxs-lookup"><span data-stu-id="c5257-104">The listener is active for the lifetime of the <xref:System.Net.HttpListener> object and runs within your application with its permissions.</span></span>
   
 <span data-ttu-id="c5257-105">Чтобы использовать <xref:System.Net.HttpListener>, создайте новый экземпляр класса с помощью конструктора <xref:System.Net.HttpListener> и используйте свойство <xref:System.Net.HttpListener.Prefixes%2A>, чтобы получить доступ к коллекции, содержащей строки, которые указывают, какие префиксы универсального кода ресурса (URI) должны обрабатываться <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-105">To use <xref:System.Net.HttpListener>, create a new instance of the class using the <xref:System.Net.HttpListener> constructor and use the <xref:System.Net.HttpListener.Prefixes%2A> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <xref:System.Net.HttpListener> should process.</span></span>
  
 <span data-ttu-id="c5257-106">Строка префикса URI состоит из схемы (HTTP или HTTPS), узла, дополнительного порта и необязательного пути.</span><span class="sxs-lookup"><span data-stu-id="c5257-106">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</span></span> <span data-ttu-id="c5257-107">Пример полной строки префикса — *http://www.contoso.com:8080/customerData/*.</span><span class="sxs-lookup"><span data-stu-id="c5257-107">An example of a complete prefix string is *http://www.contoso.com:8080/customerData/*.</span></span> <span data-ttu-id="c5257-108">Префиксы должны оканчиваться косой чертой ("/").</span><span class="sxs-lookup"><span data-stu-id="c5257-108">Prefixes must end in a forward slash ("/").</span></span> <span data-ttu-id="c5257-109">Объект <xref:System.Net.HttpListener> с префиксом, который наиболее близко соответствует запрошенному URI, отвечает на запрос.</span><span class="sxs-lookup"><span data-stu-id="c5257-109">The <xref:System.Net.HttpListener> object with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="c5257-110">Несколько <xref:System.Net.HttpListener> объектов не могут добавить один и тот же префикс; исключение <xref:System.ComponentModel.Win32Exception> возникает, если <xref:System.Net.HttpListener> добавляет префикс, который уже используется.</span><span class="sxs-lookup"><span data-stu-id="c5257-110">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix; a <xref:System.ComponentModel.Win32Exception> exception is thrown if a <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>
  
 <span data-ttu-id="c5257-111">Если указан порт, элемент Host можно заменить на "\*", чтобы указать, что <xref:System.Net.HttpListener> принимает запросы, отправляемые в порт, если запрашиваемый URI не совпадает ни с одним другим префиксом.</span><span class="sxs-lookup"><span data-stu-id="c5257-111">When a port is specified, the host element can be replaced with "\*" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="c5257-112">Например, чтобы получить все запросы, отправленные на порт 8080, если запрашиваемый URI не обрабатывается ни одним из <xref:System.Net.HttpListener>, префикс *http://\*: 8080/*.</span><span class="sxs-lookup"><span data-stu-id="c5257-112">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <xref:System.Net.HttpListener>, the prefix is *http://\*:8080/*.</span></span> <span data-ttu-id="c5257-113">Аналогично, чтобы указать, что <xref:System.Net.HttpListener> принимает все запросы, отправляемые в порт, замените элемент Host символом "+".</span><span class="sxs-lookup"><span data-stu-id="c5257-113">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "+" character.</span></span> <span data-ttu-id="c5257-114">Например, *https://+:8080*.</span><span class="sxs-lookup"><span data-stu-id="c5257-114">For example, *https://+:8080*.</span></span> <span data-ttu-id="c5257-115">Символы "\*" и "+" могут присутствовать в префиксах, включающих пути.</span><span class="sxs-lookup"><span data-stu-id="c5257-115">The "\*" and "+" characters can be present in prefixes that include paths.</span></span>
  
 <span data-ttu-id="c5257-116">Начиная с .NET Core 2,0 или .NET Framework 4,6 в Windows 10, поддомены с подстановочными знаками поддерживаются в префиксах URI, которые управляются объектом <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-116">Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="c5257-117">Чтобы указать поддомен с подстановочными знаками, используйте символ "\*" как часть имени узла в префиксе URI.</span><span class="sxs-lookup"><span data-stu-id="c5257-117">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix.</span></span> <span data-ttu-id="c5257-118">Например, *http://\*. foo.com/*.</span><span class="sxs-lookup"><span data-stu-id="c5257-118">For example, *http://\*.foo.com/*.</span></span> <span data-ttu-id="c5257-119">Передайте его в качестве аргумента в метод <xref:System.Net.HttpListenerPrefixCollection.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-119">Pass this as the argument to the <xref:System.Net.HttpListenerPrefixCollection.Add%2A> method.</span></span> <span data-ttu-id="c5257-120">Это работает начиная с .NET Core 2,0 или .NET Framework 4,6 в Windows 10; в более ранних версиях это приводит к созданию <xref:System.Net.HttpListenerException>.</span><span class="sxs-lookup"><span data-stu-id="c5257-120">This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <xref:System.Net.HttpListenerException>.</span></span>

 > [!WARNING]
 > <span data-ttu-id="c5257-121">**Не** следует использовать подстановочные привязки верхнего уровня (*http://\*: 8080/* и *http://+:8080*).</span><span class="sxs-lookup"><span data-stu-id="c5257-121">Top-level wildcard bindings (*http://\*:8080/* and *http://+:8080*) should **not** be used.</span></span> <span data-ttu-id="c5257-122">Это может создать уязвимость и поставить ваше приложение под угрозу.</span><span class="sxs-lookup"><span data-stu-id="c5257-122">Top-level wildcard bindings can open up your app to security vulnerabilities.</span></span> <span data-ttu-id="c5257-123">Сюда относятся и строгие, и нестрогие подстановочные знаки.</span><span class="sxs-lookup"><span data-stu-id="c5257-123">This applies to both strong and weak wildcards.</span></span> <span data-ttu-id="c5257-124">Вместо этого используйте имена узлов в явном виде.</span><span class="sxs-lookup"><span data-stu-id="c5257-124">Use explicit host names rather than wildcards.</span></span> <span data-ttu-id="c5257-125">Привязки с подстановочными знаками на уровне дочерних доменов (например `*.mysub.com`) не создают таких угроз безопасности, если вы полностью контролируете родительский домен (в отличие от варианта `*.com`, создающего уязвимость).</span><span class="sxs-lookup"><span data-stu-id="c5257-125">Subdomain wildcard binding (for example, `*.mysub.com`) doesn't have this security risk if you control the entire parent domain (as opposed to `*.com`, which is vulnerable).</span></span> <span data-ttu-id="c5257-126">Дополнительные сведения см. в документе [rfc7230, раздел 5.4](https://tools.ietf.org/html/rfc7230#section-5.4).</span><span class="sxs-lookup"><span data-stu-id="c5257-126">See [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) for more information.</span></span>
  
 <span data-ttu-id="c5257-127">Чтобы начать прослушивание запросов от клиентов, добавьте префиксы URI в коллекцию и вызовите метод <xref:System.Net.HttpListener.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-127">To begin listening for requests from clients, add the URI prefixes to the collection and call the <xref:System.Net.HttpListener.Start%2A> method.</span></span> <span data-ttu-id="c5257-128"><xref:System.Net.HttpListener> предлагает как синхронные, так и асинхронные модели для обработки клиентских запросов.</span><span class="sxs-lookup"><span data-stu-id="c5257-128"><xref:System.Net.HttpListener> offers both synchronous and asynchronous models for processing client requests.</span></span> <span data-ttu-id="c5257-129">Доступ к запросам и связанным с ними ответам осуществляется с помощью объекта <xref:System.Net.HttpListenerContext>, возвращаемого методом <xref:System.Net.HttpListener.GetContext%2A>, или его асинхронных аналогов, методов <xref:System.Net.HttpListener.BeginGetContext%2A> и <xref:System.Net.HttpListener.EndGetContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-129">Requests and their associated responses are accessed using the <xref:System.Net.HttpListenerContext> object returned by the <xref:System.Net.HttpListener.GetContext%2A> method or its asynchronous counterparts, the <xref:System.Net.HttpListener.BeginGetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods.</span></span>
  
 <span data-ttu-id="c5257-130">Синхронная модель подходит, если приложение должно блокироваться при ожидании запроса клиента и если требуется обработать только один запрос за раз.</span><span class="sxs-lookup"><span data-stu-id="c5257-130">The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</span></span> <span data-ttu-id="c5257-131">Используя синхронную модель, вызовите метод <xref:System.Net.HttpListener.GetContext%2A>, который ожидает отправки клиентом запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-131">Using the synchronous model, call the <xref:System.Net.HttpListener.GetContext%2A> method, which waits for a client to send a request.</span></span> <span data-ttu-id="c5257-132">Метод возвращает объект <xref:System.Net.HttpListenerContext> для обработки, когда происходит событие.</span><span class="sxs-lookup"><span data-stu-id="c5257-132">The method returns an <xref:System.Net.HttpListenerContext> object to you for processing when one occurs.</span></span>
  
 <span data-ttu-id="c5257-133">В более сложной асинхронной модели приложение не блокируется при ожидании запросов, и каждый запрос обрабатывается в собственном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="c5257-133">In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</span></span> <span data-ttu-id="c5257-134">Используйте метод <xref:System.Net.HttpListener.BeginGetContext%2A>, чтобы указать определяемый приложением метод, вызываемый для каждого входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-134">Use the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify an application-defined method to be called for each incoming request.</span></span> <span data-ttu-id="c5257-135">В этом методе вызовите метод <xref:System.Net.HttpListener.EndGetContext%2A>, чтобы получить запрос, обработать его и ответить.</span><span class="sxs-lookup"><span data-stu-id="c5257-135">Within that method, call the <xref:System.Net.HttpListener.EndGetContext%2A> method to obtain the request, process it, and respond.</span></span>
  
 <span data-ttu-id="c5257-136">В любой модели доступ к входящим запросам осуществляется с помощью свойства <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> и представляются <xref:System.Net.HttpListenerRequest>ными объектами.</span><span class="sxs-lookup"><span data-stu-id="c5257-136">In either model, incoming requests are accessed using the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerRequest> objects.</span></span> <span data-ttu-id="c5257-137">Аналогично, доступ к ответам осуществляется с помощью свойства <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> и представляются <xref:System.Net.HttpListenerResponse> объектами.</span><span class="sxs-lookup"><span data-stu-id="c5257-137">Similarly, responses are accessed using the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerResponse> objects.</span></span> <span data-ttu-id="c5257-138">Эти объекты совместно используют некоторые функциональные возможности с объектами <xref:System.Net.HttpWebRequest> и <xref:System.Net.HttpWebResponse>, но последние объекты не могут использоваться совместно с <xref:System.Net.HttpListener>, поскольку они реализуют клиент, а не сервер, поведение.</span><span class="sxs-lookup"><span data-stu-id="c5257-138">These objects share some functionality with the <xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> objects, but the latter objects cannot be used in conjunction with <xref:System.Net.HttpListener> because they implement client, not server, behaviors.</span></span>
  
 <span data-ttu-id="c5257-139"><xref:System.Net.HttpListener> может требовать проверку подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="c5257-139">An <xref:System.Net.HttpListener> can require client authentication.</span></span> <span data-ttu-id="c5257-140">Можно указать определенную схему, которая будет использоваться для проверки подлинности, или указать делегат, определяющий используемую схему.</span><span class="sxs-lookup"><span data-stu-id="c5257-140">You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</span></span> <span data-ttu-id="c5257-141">Для получения сведений об удостоверении клиента необходимо иметь некоторую форму проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="c5257-141">You must require some form of authentication to obtain information about the client's identity.</span></span> <span data-ttu-id="c5257-142">Дополнительные сведения см. в разделе Свойства <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>и <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-142">For additional information, see the <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, and <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> properties.</span></span>
  
> [!NOTE]
> <span data-ttu-id="c5257-143">При создании <xref:System.Net.HttpListener> по протоколу HTTPS необходимо выбрать сертификат сервера для этого прослушивателя.</span><span class="sxs-lookup"><span data-stu-id="c5257-143">If you create an <xref:System.Net.HttpListener> using https, you must select a Server Certificate for that listener.</span></span> <span data-ttu-id="c5257-144">В противном случае <xref:System.Net.HttpWebRequest> запрос этого <xref:System.Net.HttpListener> завершится ошибкой с непредвиденным закрытием соединения.</span><span class="sxs-lookup"><span data-stu-id="c5257-144">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span>
  
> [!NOTE]
> <span data-ttu-id="c5257-145">Можно настроить сертификаты сервера и другие параметры прослушивателя с помощью сетевой оболочки (Netsh. exe).</span><span class="sxs-lookup"><span data-stu-id="c5257-145">You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</span></span> <span data-ttu-id="c5257-146">Дополнительные сведения см. в разделе [Сетевая оболочка (Netsh)](/windows-server/networking/technologies/netsh/netsh) .</span><span class="sxs-lookup"><span data-stu-id="c5257-146">See [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) for more details.</span></span> <span data-ttu-id="c5257-147">Исполняемый файл начал доставляться с Windows Server 2008 и Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="c5257-147">The executable began shipping with Windows Server 2008 and Windows Vista.</span></span>
  
> [!NOTE]
> <span data-ttu-id="c5257-148">Если для <xref:System.Net.HttpListener>указана несколько схем проверки подлинности, прослушиватель будет выполнит клиенты в следующем порядке: `Negotiate`, `NTLM`, `Digest`, а затем `Basic`.</span><span class="sxs-lookup"><span data-stu-id="c5257-148">If you specify multiple authentication schemes for the <xref:System.Net.HttpListener>, the listener will challenge clients in the following order: `Negotiate`, `NTLM`, `Digest`, and then `Basic`.</span></span>

### <a name="httpsys"></a><span data-ttu-id="c5257-149">HTTP.sys</span><span class="sxs-lookup"><span data-stu-id="c5257-149">HTTP.sys</span></span>

<span data-ttu-id="c5257-150">Класс <xref:System.Net.HttpListener> построен на основе `HTTP.sys`, который является прослушивателем режима ядра, который обрабатывает весь трафик HTTP для Windows.</span><span class="sxs-lookup"><span data-stu-id="c5257-150">The <xref:System.Net.HttpListener> class is built on top of `HTTP.sys`, which is the kernel mode listener that handles all HTTP traffic for Windows.</span></span>
<span data-ttu-id="c5257-151">`HTTP.sys` обеспечивает управление подключениями, регулирование пропускной способности и ведение журнала веб-сервера.</span><span class="sxs-lookup"><span data-stu-id="c5257-151">`HTTP.sys` provides connection management, bandwidth throttling, and web server logging.</span></span>
<span data-ttu-id="c5257-152">Используйте средство [HttpCfg. exe](/windows/win32/http/httpcfg-exe) для добавления SSL-сертификатов.</span><span class="sxs-lookup"><span data-stu-id="c5257-152">Use the [HttpCfg.exe](/windows/win32/http/httpcfg-exe) tool to add SSL certificates.</span></span>
  
## Examples
 <span data-ttu-id="c5257-153">В следующем примере кода показано использование <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-153">The following code example demonstrates using a <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/network-programming/changes-to-ntlm-authentication-for-httpwebrequest-in-version-3-5-sp1.md"><span data-ttu-id="c5257-154">Изменения проверки подлинности NTLM для HTTPWebRequest в версии 3,5 SP1</span><span class="sxs-lookup"><span data-stu-id="c5257-154">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
    <related type="Article" href="/windows/win32/http/httpcfg-exe"><span data-ttu-id="c5257-155">HttpCfg.exe</span><span class="sxs-lookup"><span data-stu-id="c5257-155">HttpCfg.exe</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5257-156">Инициализирует новый экземпляр класса <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-156">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-157">Перед использованием экземпляра, возвращаемого этим конструктором, необходимо вызвать его метод <xref:System.Net.HttpListener.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-157">Before using the instance returned by this constructor, you must invoke its <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-158">В следующем примере кода показано использование конструктора <xref:System.Net.HttpListener> для создания нового объекта <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-158">The following code example demonstrates using the <xref:System.Net.HttpListener> constructor to create a new <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="c5257-159">Полный пример см. в разделе <xref:System.Net.HttpListener> Class.</span><span class="sxs-lookup"><span data-stu-id="c5257-159">For the complete example, see the <xref:System.Net.HttpListener> class topic.</span></span>  
  
 [!code-csharp[Net_listener_Basic#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#9)]  
 [!code-vb[Net_Listener_Basic#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="c5257-160">Этот класс не может использоваться в этой операционной системе.</span><span class="sxs-lookup"><span data-stu-id="c5257-160">This class cannot be used on the current operating system.</span></span> <span data-ttu-id="c5257-161">Для использования экземпляров этого класса требуется операционная система Windows Server 2003 или Windows XP с пакетом обновления 2.</span><span class="sxs-lookup"><span data-stu-id="c5257-161">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="c5257-162">Примечание. Этот элемент выводит данные трассировки при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c5257-162">Note: This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c5257-163">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c5257-163">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpListener.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5257-164">Незамедлительно завершает работу объекта <see cref="T:System.Net.HttpListener" />, отменяя все текущие запросы в очереди.</span><span class="sxs-lookup"><span data-stu-id="c5257-164">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-165">Этот метод уничтожает все ресурсы, удерживаемые этим прослушивателем.</span><span class="sxs-lookup"><span data-stu-id="c5257-165">This method disposes of all resources held by this listener.</span></span> <span data-ttu-id="c5257-166">Все ожидающие запросы не могут быть завершены.</span><span class="sxs-lookup"><span data-stu-id="c5257-166">Any pending requests are unable to complete.</span></span>  
  
 <span data-ttu-id="c5257-167">После вызова этого метода вы получите <xref:System.ObjectDisposedException>, если попытаться использовать этот <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-167">After calling this method, you will receive an <xref:System.ObjectDisposedException> if you attempt to use this <xref:System.Net.HttpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-168">В следующем примере кода демонстрируется вызов этого метода.</span><span class="sxs-lookup"><span data-stu-id="c5257-168">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
 [!code-vb[Net_Listener_Basic#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="c5257-169">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="c5257-169">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c5257-170">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c5257-170">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationSchemes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemes" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemes As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationSchemes { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemes : System.Net.AuthenticationSchemes with get, set" Usage="System.Net.HttpListener.AuthenticationSchemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-171">Возвращает или задает схему, используемую для аутентификации клиентов.</span><span class="sxs-lookup"><span data-stu-id="c5257-171">Gets or sets the scheme used to authenticate clients.</span></span></summary>
        <value><span data-ttu-id="c5257-172">Битовая комбинация значений перечисления <see cref="T:System.Net.AuthenticationSchemes" />, которая указывает, как клиенты должны проходить проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="c5257-172">A bitwise combination of <see cref="T:System.Net.AuthenticationSchemes" /> enumeration values that indicates how clients are to be authenticated.</span></span> <span data-ttu-id="c5257-173">Значение по умолчанию — <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-173">The default value is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-174"><xref:System.Net.HttpListener> использует указанную схему для проверки подлинности всех входящих запросов.</span><span class="sxs-lookup"><span data-stu-id="c5257-174">The <xref:System.Net.HttpListener> uses the specified scheme to authenticate all incoming requests.</span></span> <span data-ttu-id="c5257-175">Методы <xref:System.Net.HttpListener.GetContext%2A> и <xref:System.Net.HttpListener.EndGetContext%2A> возвращают входящий запрос клиента, только если <xref:System.Net.HttpListener> успешно проходит проверку подлинности запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-175">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming client request only if the <xref:System.Net.HttpListener> successfully authenticates the request.</span></span>  
  
 <span data-ttu-id="c5257-176">Вы можете запросить удостоверение успешно прошедшего проверку подлинности клиента с помощью свойства <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c5257-176">You can interrogate the identity of a successfully authenticated client by using the <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c5257-177">Если вы хотите, чтобы объект <xref:System.Net.HttpListener> использовал разные механизмы проверки подлинности на основе характеристик получаемых им запросов (например, свойство запроса <xref:System.Net.HttpListenerRequest.Url%2A> или <xref:System.Net.HttpListenerRequest.UserHostName%2A>), необходимо реализовать метод, который выбирает схему проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="c5257-177">If you want an <xref:System.Net.HttpListener> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostName%2A> property), you must implement a method that chooses the authentication scheme.</span></span> <span data-ttu-id="c5257-178">Инструкции по выполнению этой задачи см. в документации по свойству <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-178">For instructions about how to do this, see the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c5257-179">Чтобы задать для этого свойства включение дайджеста, NTLM или Negotiate, требуется <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="c5257-179">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-180">В следующем примере кода показано использование свойства <xref:System.Net.HttpListener.AuthenticationSchemes%2A> для указания схемы проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="c5257-180">The following code example demonstrates using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property to specify an authentication scheme.</span></span>  
  
 [!code-csharp[Net_listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
 [!code-vb[Net_Listener_Basic#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-181">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-181">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemeSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemeSelectorDelegate As AuthenticationSchemeSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemeSelector ^ AuthenticationSchemeSelectorDelegate { System::Net::AuthenticationSchemeSelector ^ get(); void set(System::Net::AuthenticationSchemeSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemeSelectorDelegate : System.Net.AuthenticationSchemeSelector with get, set" Usage="System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemeSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-182">Возвращает или задает делегата, вызываемого для определения протокола, который будет использоваться для проверки подлинности клиентов.</span><span class="sxs-lookup"><span data-stu-id="c5257-182">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span></span></summary>
        <value><span data-ttu-id="c5257-183">Делегат <see cref="T:System.Net.AuthenticationSchemeSelector" />, который вызывает метод, используемый для выбора протокола проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="c5257-183">An <see cref="T:System.Net.AuthenticationSchemeSelector" /> delegate that invokes the method used to select an authentication protocol.</span></span> <span data-ttu-id="c5257-184">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-184">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c5257-185">Если необходимо использовать один и тот же протокол проверки подлинности для всех запросов, обрабатываемых определенным экземпляром <xref:System.Net.HttpListener>, это свойство задавать не нужно.</span><span class="sxs-lookup"><span data-stu-id="c5257-185">If you want the same authentication protocol to be used for all requests handled by a particular instance of <xref:System.Net.HttpListener>, you do not need to set this property.</span></span> <span data-ttu-id="c5257-186">Чтобы указать протокол, используемый для всех клиентских запросов, используйте свойство <xref:System.Net.HttpListener.AuthenticationSchemes%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-186">To specify a protocol to be used for all client requests, use the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property.</span></span>  
  
 <span data-ttu-id="c5257-187">Если клиент не указал данные проверки подлинности в своих заголовках, <xref:System.Net.HttpListener> вызывает указанный делегат для каждого входящего запроса, не прошедшего проверку подлинности, чтобы определить, какой протокол следует использовать для проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="c5257-187">If the client has not specified authentication information in its headers, the <xref:System.Net.HttpListener> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</span></span> <span data-ttu-id="c5257-188">Методы <xref:System.Net.HttpListener.GetContext%2A> и <xref:System.Net.HttpListener.EndGetContext%2A> возвращают входящий запрос только в том случае, если <xref:System.Net.HttpListener> успешно прошел проверку подлинности запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-188">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming request only if the <xref:System.Net.HttpListener> successfully authenticated the request.</span></span> <span data-ttu-id="c5257-189">Если запрос не может пройти проверку подлинности, <xref:System.Net.HttpListener> автоматически отправляет ответ 401.</span><span class="sxs-lookup"><span data-stu-id="c5257-189">If a request cannot be authenticated, the <xref:System.Net.HttpListener> automatically sends back a 401 response.</span></span> <span data-ttu-id="c5257-190">Удостоверение успешно прошедшего проверку подлинности клиента можно получить с помощью свойства <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c5257-190">You can get the identity of a successfully authenticated client using the <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c5257-191">Возможность делегирования выбора протокола проверки подлинности в метод для конкретного приложения полезна, если требуется, чтобы экземпляр <xref:System.Net.HttpListener> использовал разные протоколы проверки подлинности в зависимости от характеристик получаемых запросов (например, <xref:System.Net.HttpListenerRequest.Url%2A> или <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> свойства запроса).</span><span class="sxs-lookup"><span data-stu-id="c5257-191">The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <xref:System.Net.HttpListener> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c5257-192">Чтобы задать для этого свойства включение дайджеста, NTLM или Negotiate, требуется <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="c5257-192">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-193">В следующем примере кода задается значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="c5257-193">The following code example sets the value of this property.</span></span>  
  
 [!code-csharp[NclListener#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#2)]
 [!code-vb[NclListener#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#2)]  
  
 <span data-ttu-id="c5257-194">В следующем примере кода показана реализация метода, вызываемого делегатом <xref:System.Net.AuthenticationSchemeSelector>.</span><span class="sxs-lookup"><span data-stu-id="c5257-194">The following code example provides an implementation of a method invoked by an <xref:System.Net.AuthenticationSchemeSelector> delegate.</span></span>  
  
 [!code-csharp[NclListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#1)]
 [!code-vb[NclListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-195">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-195">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetContext">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetContext (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetContext(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetContext (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetContext(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetContext : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListener.BeginGetContext (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c5257-196">Делегат <see cref="T:System.AsyncCallback" />, указывающий на метод, который следует вызвать при наличии клиентского запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-196">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span></span></param>
        <param name="state"><span data-ttu-id="c5257-197">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="c5257-197">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="c5257-198">Этот объект передается делегату <paramref name="callback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="c5257-198">This object is passed to the <paramref name="callback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="c5257-199">Начинает асинхронное получение входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-199">Begins asynchronously retrieving an incoming request.</span></span></summary>
        <returns><span data-ttu-id="c5257-200">Объект <see cref="T:System.IAsyncResult" />, представляющий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="c5257-200">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-201">Метод <xref:System.Net.HttpListener.BeginGetContext%2A> начинает асинхронный (не блокирующий) вызов для получения входящих клиентских запросов.</span><span class="sxs-lookup"><span data-stu-id="c5257-201">The <xref:System.Net.HttpListener.BeginGetContext%2A> method begins an asynchronous (non-blocking) call to receive incoming client requests.</span></span> <span data-ttu-id="c5257-202">Перед вызовом этого метода необходимо вызвать метод <xref:System.Net.HttpListener.Start%2A> и добавить по крайней мере один префикс универсального идентификатора ресурса (URI) для прослушивания путем добавления строк URI в <xref:System.Net.HttpListenerPrefixCollection>, возвращаемый свойством <xref:System.Net.HttpListener.Prefixes%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-202">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="c5257-203">Асинхронная операция должна быть завершена путем вызова метода <xref:System.Net.HttpListener.EndGetContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-203">The asynchronous operation must be completed by calling the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span> <span data-ttu-id="c5257-204">Как правило, метод вызывается делегатом `callback`.</span><span class="sxs-lookup"><span data-stu-id="c5257-204">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="c5257-205">Этот метод не блокируется при завершении операции.</span><span class="sxs-lookup"><span data-stu-id="c5257-205">This method does not block while the operation completes.</span></span> <span data-ttu-id="c5257-206">Чтобы получить входящий запрос и заблокировать его до завершения операции, вызовите метод <xref:System.Net.HttpListener.GetContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-206">To get an incoming request and block until the operation completes, call the <xref:System.Net.HttpListener.GetContext%2A> method.</span></span>  
  
 <span data-ttu-id="c5257-207">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c5257-207">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-208">В следующем примере кода показано использование метода <xref:System.Net.HttpListener.BeginGetContext%2A> для указания метода обратного вызова, который будет обрабатывать входящие клиентские запросы.</span><span class="sxs-lookup"><span data-stu-id="c5257-208">The following code example demonstrates using the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify a callback method that will handle incoming client requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
 [!code-vb[Net_Listener_Basic#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#12)]  
  
 <span data-ttu-id="c5257-209">В следующем примере кода реализуется метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="c5257-209">The following code example implements a callback method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
 [!code-vb[Net_Listener_Basic#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="c5257-210">Вызов функции Win32 завершился с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="c5257-210">A Win32 function call failed.</span></span> <span data-ttu-id="c5257-211">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span><span class="sxs-lookup"><span data-stu-id="c5257-211">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c5257-212">Этот объект не был запущен или в настоящее время остановлен.</span><span class="sxs-lookup"><span data-stu-id="c5257-212">This object has not been started or is currently stopped.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-213">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-213">This object is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="c5257-214">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="c5257-214">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c5257-215">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c5257-215">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="httpListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5257-216">Завершает работу <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-216">Shuts down the <see cref="T:System.Net.HttpListener" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-217">После вызова этого метода вы больше не можете использовать объект <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-217">After calling this method, you can no longer use the <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="c5257-218">Чтобы временно приостановить <xref:System.Net.HttpListener> объект, используйте метод <xref:System.Net.HttpListener.Stop%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-218">To temporarily pause an <xref:System.Net.HttpListener> object, use the <xref:System.Net.HttpListener.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="c5257-219">Этот метод завершает работу объекта <xref:System.Net.HttpListener> без обработки запросов в очереди.</span><span class="sxs-lookup"><span data-stu-id="c5257-219">This method shut downs the <xref:System.Net.HttpListener> object without processing queued requests.</span></span> <span data-ttu-id="c5257-220">Все ожидающие запросы не могут быть завершены.</span><span class="sxs-lookup"><span data-stu-id="c5257-220">Any pending requests are unable to complete.</span></span>  
  
## Examples  

<span data-ttu-id="c5257-221">В следующем примере кода демонстрируется вызов метода `Close`:</span><span class="sxs-lookup"><span data-stu-id="c5257-221">The following code example demonstrates calling the `Close` method:</span></span>
  
[!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
[!code-vb[Net_Listener_Basic#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="c5257-222">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="c5257-222">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c5257-223">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c5257-223">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DefaultServiceNames">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.DefaultServiceNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultServiceNames As ServiceNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ DefaultServiceNames { System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultServiceNames : System.Security.Authentication.ExtendedProtection.ServiceNameCollection" Usage="System.Net.HttpListener.DefaultServiceNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ServiceNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-224">Получает список имен поставщиков услуг (SPN) по умолчанию в соответствии с зарегистрированными префиксами.</span><span class="sxs-lookup"><span data-stu-id="c5257-224">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span></span></summary>
        <value><span data-ttu-id="c5257-225">Объект <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />, содержащий список SPN.</span><span class="sxs-lookup"><span data-stu-id="c5257-225">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains a list of SPNs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-226">Свойство <xref:System.Net.HttpListener.DefaultServiceNames%2A> используется со встроенной проверкой подлинности Windows для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="c5257-226">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="c5257-227">Список имен участников-служб инициализируется из свойства <xref:System.Net.HttpListener.Prefixes%2A> при доступе и очистке при добавлении новых префиксов к свойству <xref:System.Net.HttpListener.Prefixes%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-227">The list of SPNs is initialized from the <xref:System.Net.HttpListener.Prefixes%2A> property when accessed and cleared when new prefixes are added to the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="c5257-228">Свойство <xref:System.Net.HttpListener.DefaultServiceNames%2A> используется, если приложение не устанавливает свойство <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> для своей политики расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="c5257-228">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used if an application doesn't set the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> property on its extended protection policy.</span></span>  
  
 <span data-ttu-id="c5257-229"><xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection>, получаемый со свойством <xref:System.Net.HttpListener.DefaultServiceNames%2A>, строится на основе свойства <xref:System.Net.HttpListener.Prefixes%2A> в соответствии со следующими правилами:</span><span class="sxs-lookup"><span data-stu-id="c5257-229">The <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> that is retrieved with the <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is built from the <xref:System.Net.HttpListener.Prefixes%2A> property according to the following rules:</span></span>  
  
1.  <span data-ttu-id="c5257-230">Если имя узла — "+", "\*", или литерал IPv4 или IPv6 (эквивалентен "\*", но ограничен конкретным локальным интерфейсом), добавляется следующее имя участника-службы:</span><span class="sxs-lookup"><span data-stu-id="c5257-230">If the hostname is "+", "\*", or an IPv4 or IPv6 literal (equivalent to "\*" but restricted to a specific local interface), the following SPN is added:</span></span>  
  
 <span data-ttu-id="c5257-231">`"HTTP/"` и полное доменное имя компьютера.</span><span class="sxs-lookup"><span data-stu-id="c5257-231">`"HTTP/"` plus the fully qualified domain name of the computer.</span></span>  
  
1.  <span data-ttu-id="c5257-232">Если имя узла не содержит точек (домены или поддомены), предпринимается попытка разрешения полного доменного имени с помощью DNS (аналогичное поведение, используемое <xref:System.Net.HttpWebRequest>).</span><span class="sxs-lookup"><span data-stu-id="c5257-232">If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <xref:System.Net.HttpWebRequest>).</span></span> <span data-ttu-id="c5257-233">Если полное доменное имя можно разрешить, добавляются следующие имена участников-служб:</span><span class="sxs-lookup"><span data-stu-id="c5257-233">If the fully-qualified domain name can be resolved, the following SPNs are added:</span></span>  
  
 <span data-ttu-id="c5257-234">`"HTTP/"` и имя узла (короткое имя).</span><span class="sxs-lookup"><span data-stu-id="c5257-234">`"HTTP/"` plus the hostname (the short name).</span></span>  
  
 <span data-ttu-id="c5257-235">`"HTTP/"` и полное доменное имя узла.</span><span class="sxs-lookup"><span data-stu-id="c5257-235">`"HTTP/"` plus the fully qualified domain name for the hostname.</span></span>  
  
1.  <span data-ttu-id="c5257-236">Если имя узла содержит не точки (домены или поддомены) и полное доменное имя не удается разрешить, добавляется следующее имя участника-службы:</span><span class="sxs-lookup"><span data-stu-id="c5257-236">If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</span></span>  
  
 <span data-ttu-id="c5257-237">`"HTTP/"` и имя узла.</span><span class="sxs-lookup"><span data-stu-id="c5257-237">`"HTTP/"` plus the hostname.</span></span>  
  
1.  <span data-ttu-id="c5257-238">Если имя узла содержит точки (домены или поддомены), добавляется следующее имя участника-службы:</span><span class="sxs-lookup"><span data-stu-id="c5257-238">If the hostname contains dots (domains or subdomains), the following SPN is added:</span></span>  
  
 <span data-ttu-id="c5257-239">`"HTTP/"` и имя узла.</span><span class="sxs-lookup"><span data-stu-id="c5257-239">`"HTTP/"` plus the hostname.</span></span>  
  
 <span data-ttu-id="c5257-240">Свойство <xref:System.Net.HttpListener.DefaultServiceNames%2A> может использоваться приложением для просмотра списка имен участников-служб по умолчанию, которые будут использоваться для проверки подлинности, если пользовательский список не предоставляется.</span><span class="sxs-lookup"><span data-stu-id="c5257-240">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</span></span> <span data-ttu-id="c5257-241">Если требуются другие имена участников-служб, приложение может добавить их с помощью одного из методов <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-241">If other SPNs are needed, an application can add them using one of the <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> methods.</span></span>  
  
 <span data-ttu-id="c5257-242">Использование расширенной защиты для принятия решений по политике на основе запрошенного URL-адреса является ненадежным, так как это можно сделать подмену.</span><span class="sxs-lookup"><span data-stu-id="c5257-242">It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</span></span> <span data-ttu-id="c5257-243">Вместо этого приложения должны полагаться на свойства <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> или <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>, чтобы принимать такие решения по политике.</span><span class="sxs-lookup"><span data-stu-id="c5257-243">Rather, applications should rely on the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> or <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> properties to make such policy decisions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="c5257-244">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="c5257-244">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext EndGetContext (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext EndGetContext(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetContext (asyncResult As IAsyncResult) As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ EndGetContext(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetContext : IAsyncResult -&gt; System.Net.HttpListenerContext" Usage="httpListener.EndGetContext asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c5257-245">Объект <see cref="T:System.IAsyncResult" />, который был получен при запуске асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="c5257-245">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span></span></param>
        <summary><span data-ttu-id="c5257-246">Завершает асинхронную операцию получения входящего клиентского запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-246">Completes an asynchronous operation to retrieve an incoming client request.</span></span></summary>
        <returns><span data-ttu-id="c5257-247">Объект <see cref="T:System.Net.HttpListenerContext" />, представляющий клиентский запрос.</span><span class="sxs-lookup"><span data-stu-id="c5257-247">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-248">Метод <xref:System.Net.HttpListener.EndGetContext%2A> вызывается, как правило, в определяемом приложением методе обратного вызова, вызываемом делегатом, для получения объекта <xref:System.Net.HttpListenerContext>, содержащего входящий клиентский запрос и связанный с ним ответ.</span><span class="sxs-lookup"><span data-stu-id="c5257-248">The <xref:System.Net.HttpListener.EndGetContext%2A> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <xref:System.Net.HttpListenerContext> object that contains an incoming client request and its associated response.</span></span> <span data-ttu-id="c5257-249">Этот метод завершает операцию, ранее запущенную с помощью вызова метода <xref:System.Net.HttpListener.BeginGetContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-249">This method completes an operation previously started by calling the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="c5257-250">Если операция не завершена, этот метод блокируется до тех пор, пока он не завершится.</span><span class="sxs-lookup"><span data-stu-id="c5257-250">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="c5257-251">Поскольку для вызова метода <xref:System.Net.HttpListener.EndGetContext%2A> требуется объект <xref:System.Net.HttpListener>, этот объект обычно передается в метод обратного вызова с помощью объекта состояния, переданного в метод <xref:System.Net.HttpListener.BeginGetContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-251">Because calling the <xref:System.Net.HttpListener.EndGetContext%2A> method requires the <xref:System.Net.HttpListener> object, this object is typically passed into a callback method by using the state object passed into the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="c5257-252">Этот объект состояния можно получить с помощью свойства <xref:System.IAsyncResult.AsyncState%2A> объекта `asyncResult`.</span><span class="sxs-lookup"><span data-stu-id="c5257-252">You can obtain this state object by using the <xref:System.IAsyncResult.AsyncState%2A> property of the `asyncResult` object.</span></span>  
  
 <span data-ttu-id="c5257-253">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c5257-253">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-254">В следующем примере кода показана реализация метода обратного вызова, который вызывает метод <xref:System.Net.HttpListener.EndGetContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-254">The following code example shows the implementation of a callback method that calls the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
 [!code-vb[Net_Listener_Basic#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c5257-255">Значение параметра <paramref name="asyncResult" /> не получено вызовом метода <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-255"><paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c5257-256">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-256"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="c5257-257">Вызов функции Win32 завершился с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="c5257-257">A Win32 function call failed.</span></span> <span data-ttu-id="c5257-258">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span><span class="sxs-lookup"><span data-stu-id="c5257-258">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c5257-259">Метод <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> уже был вызван для указанного объекта <paramref name="asyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-259">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-260">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-260">This object is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="c5257-261">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="c5257-261">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c5257-262">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c5257-262">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionPolicy : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy with get, set" Usage="System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("not used anywhere in the implementation")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-263">Получает или задает объект <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который используется для расширенной защиты сеанса.</span><span class="sxs-lookup"><span data-stu-id="c5257-263">Gets or sets the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span></span></summary>
        <value><span data-ttu-id="c5257-264">Объект <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который задает политику для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="c5257-264">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-265">Свойство <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> используется со встроенной проверкой подлинности Windows для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="c5257-265">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="c5257-266">Свойство <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> позволяет настроить политику расширенной защиты для всего сеанса <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-266">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="c5257-267">Свойство <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> позволяет настроить политику расширенной защиты для каждого отдельного запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-267">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy for each individual request.</span></span>  
  
 <span data-ttu-id="c5257-268">Свойство <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> должно иметь значение `null`.</span><span class="sxs-lookup"><span data-stu-id="c5257-268">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="c5257-269">Экземпляр <xref:System.Net.HttpListener> получает маркер привязки канала (CBT) непосредственно из своего собственного сеанса TLS, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="c5257-269">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c5257-270">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />, но свойство <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> не имело значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-270">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c5257-271">Предпринята попытка задать свойству <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-271">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c5257-272">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> после вызова метода <see cref="M:System.Net.HttpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-272">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-273">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-273">This object is closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="c5257-274">Свойству <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> было присвоено значение <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> на платформе, не поддерживающей расширенную защиту.</span><span class="sxs-lookup"><span data-stu-id="c5257-274">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="c5257-275">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="c5257-275">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener.ExtendedProtectionSelector ExtendedProtectionSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener/ExtendedProtectionSelector ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionSelectorDelegate As HttpListener.ExtendedProtectionSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener::ExtendedProtectionSelector ^ ExtendedProtectionSelectorDelegate { System::Net::HttpListener::ExtendedProtectionSelector ^ get(); void set(System::Net::HttpListener::ExtendedProtectionSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionSelectorDelegate : System.Net.HttpListener.ExtendedProtectionSelector with get, set" Usage="System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener+ExtendedProtectionSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-276">Получает или задает делегат, вызываемый для определения объекта <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который следует использовать для каждого запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-276">Gets or sets the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span></span></summary>
        <value><span data-ttu-id="c5257-277">Объект <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который задает политику для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="c5257-277">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-278">Свойство <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> используется со встроенной проверкой подлинности Windows для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="c5257-278">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="c5257-279">Свойство <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> позволяет настроить политику расширенной защиты для всего сеанса <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-279">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="c5257-280">Свойство <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> позволяет настроить расширенную политику защиты для отдельного запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-280">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy per individual request.</span></span>  
  
 <span data-ttu-id="c5257-281">Свойство <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> должно иметь значение `null`.</span><span class="sxs-lookup"><span data-stu-id="c5257-281">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="c5257-282">Экземпляр <xref:System.Net.HttpListener> получает маркер привязки канала (CBT) непосредственно из своего собственного сеанса TLS, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="c5257-282">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 <span data-ttu-id="c5257-283">Для каждого запроса делегат может выбрать параметры, которые экземпляр <xref:System.Net.HttpListener> будет использовать для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="c5257-283">For each request, the delegate can choose the settings that the <xref:System.Net.HttpListener> instance will use to provide extended protection.</span></span>  
  
 <span data-ttu-id="c5257-284">Если делегат возвращает `null` для этого свойства, он представляет <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy>, для свойства <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> которого задано значение <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="c5257-284">If a delegate returns `null` for this property, this represents a <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> which the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> property set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c5257-285">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />, но свойство <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> должно иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-285">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c5257-286">Предпринята попытка задать свойству <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-286">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c5257-287">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> после вызова метода <see cref="M:System.Net.HttpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-287">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-288">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-288">This object is closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="c5257-289">Предпринята попытка задать свойство  <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> на платформе, не поддерживающей расширенную защиту.</span><span class="sxs-lookup"><span data-stu-id="c5257-289">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="c5257-290">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="c5257-290">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ GetContext();" />
      <MemberSignature Language="F#" Value="member this.GetContext : unit -&gt; System.Net.HttpListenerContext" Usage="httpListener.GetContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5257-291">Ожидает входящий запрос и выполняет возврат при получении такого запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-291">Waits for an incoming request and returns when one is received.</span></span></summary>
        <returns><span data-ttu-id="c5257-292">Объект <see cref="T:System.Net.HttpListenerContext" />, представляющий клиентский запрос.</span><span class="sxs-lookup"><span data-stu-id="c5257-292">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-293">Перед вызовом этого метода необходимо вызвать метод <xref:System.Net.HttpListener.Start%2A> и добавить по крайней мере один префикс URI для прослушивания путем добавления строк URI в <xref:System.Net.HttpListenerPrefixCollection>, возвращаемых свойством <xref:System.Net.HttpListener.Prefixes%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-293">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="c5257-294">Подробное описание префиксов см. в разделе Общие сведения о классе <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-294">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 <span data-ttu-id="c5257-295">Этот метод блокируется при ожидании входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-295">This method blocks while waiting for an incoming request.</span></span> <span data-ttu-id="c5257-296">Если требуется, чтобы входящие запросы обрабатывались асинхронно (в отдельных потоках), чтобы приложение не блокировалось, используйте метод <xref:System.Net.HttpListener.BeginGetContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-296">If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-297">В следующем примере кода демонстрируется вызов этого метода.</span><span class="sxs-lookup"><span data-stu-id="c5257-297">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="c5257-298">Вызов функции Win32 завершился с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="c5257-298">A Win32 function call failed.</span></span> <span data-ttu-id="c5257-299">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span><span class="sxs-lookup"><span data-stu-id="c5257-299">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c5257-300">Этот объект не был запущен или в настоящее время остановлен.</span><span class="sxs-lookup"><span data-stu-id="c5257-300">This object has not been started or is currently stopped.</span></span>  
  
<span data-ttu-id="c5257-301">- или -</span><span class="sxs-lookup"><span data-stu-id="c5257-301">-or-</span></span> 
<span data-ttu-id="c5257-302">Прослушиватель <see cref="T:System.Net.HttpListener" /> не имеет префиксов URI для ответа.</span><span class="sxs-lookup"><span data-stu-id="c5257-302">The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-303">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-303">This object is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="c5257-304">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="c5257-304">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c5257-305">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c5257-305">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetContextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt; GetContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.HttpListenerContext&gt; GetContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextAsync () As Task(Of HttpListenerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::HttpListenerContext ^&gt; ^ GetContextAsync();" />
      <MemberSignature Language="F#" Value="member this.GetContextAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;" Usage="httpListener.GetContextAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5257-306">Ожидает входящий запрос как асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c5257-306">Waits for an incoming request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c5257-307">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c5257-307">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="c5257-308">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> объекта задачи возвращает объект <see cref="T:System.Net.HttpListenerContext" />, представляющий запрос клиента.</span><span class="sxs-lookup"><span data-stu-id="c5257-308">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-309">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c5257-309">This operation will not block.</span></span> <span data-ttu-id="c5257-310">Возвращенный объект <xref:System.Threading.Tasks.Task%601> будет выполнен после получения входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-310">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the incoming request has been received.</span></span>  
  
 <span data-ttu-id="c5257-311">Перед вызовом этого метода необходимо вызвать метод <xref:System.Net.HttpListener.Start%2A> и добавить по крайней мере один префикс URI для прослушивания путем добавления строк URI в <xref:System.Net.HttpListenerPrefixCollection>, возвращаемых свойством <xref:System.Net.HttpListener.Prefixes%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-311">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="c5257-312">Подробное описание префиксов см. в разделе Общие сведения о классе <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-312">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListenerContext" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWriteExceptions">
      <MemberSignature Language="C#" Value="public bool IgnoreWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWriteExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWriteExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWriteExceptions : bool with get, set" Usage="System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-313">Возвращает или задает значение <see cref="T:System.Boolean" />, которое определяет, получает ли приложение исключения, которые возникают при отправке прослушивателем <see cref="T:System.Net.HttpListener" /> ответа клиенту.</span><span class="sxs-lookup"><span data-stu-id="c5257-313">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span></span></summary>
        <value><span data-ttu-id="c5257-314"><see langword="true" />, если эта <see cref="T:System.Net.HttpListener" /> не должна возвращать исключения, происходящие при отправке ответа клиенту; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-314"><see langword="true" /> if this <see cref="T:System.Net.HttpListener" /> should not return exceptions that occur when sending the response to the client; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c5257-315">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-315">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-316">Присвойте этому свойству значение `true`, если приложение не требует, чтобы ответ был успешно отправлен каждому клиенту.</span><span class="sxs-lookup"><span data-stu-id="c5257-316">Set this property to `true` if your application does not require that a response is successfully sent to each client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-317">В следующем примере кода показано задание этого свойства.</span><span class="sxs-lookup"><span data-stu-id="c5257-317">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
 [!code-vb[Net_Listener_Basic#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-318">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-318">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsListening" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsListening { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsListening : bool" Usage="System.Net.HttpListener.IsListening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-319">Возвращает значение, показывающее, был ли запущен прослушиватель <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-319">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span></span></summary>
        <value><span data-ttu-id="c5257-320">Значение <see langword="true" />, если прослушиватель <see cref="T:System.Net.HttpListener" /> был запущен; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-320"><see langword="true" /> if the <see cref="T:System.Net.HttpListener" /> was started; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-321">Чтобы запустить <xref:System.Net.HttpListener>, вызовите метод <xref:System.Net.HttpListener.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-321">To start an <xref:System.Net.HttpListener>, call the <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-322">В следующем примере кода показано использование этого свойства для определения состояния прослушивания экземпляра.</span><span class="sxs-lookup"><span data-stu-id="c5257-322">The following code example demonstrates using this property to determine the listening state of an instance.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
 [!code-vb[Net_Listener_Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Net.HttpListener.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-323">Возвращает значение, которое указывает, можно ли использовать прослушиватель <see cref="T:System.Net.HttpListener" /> в текущей операционной системе.</span><span class="sxs-lookup"><span data-stu-id="c5257-323">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span></span></summary>
        <value><span data-ttu-id="c5257-324">Значение <see langword="true" />, если <see cref="T:System.Net.HttpListener" /> поддерживается; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-324"><see langword="true" /> if <see cref="T:System.Net.HttpListener" /> is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-325">Этот класс доступен только на компьютерах под управлением операционных систем Windows XP с пакетом обновления 2 (SP2) или Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="c5257-325">This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-326">В следующем примере кода показано использование свойства <xref:System.Net.HttpListener.IsSupported%2A> для определения возможности использования объекта <xref:System.Net.HttpListener> в текущей операционной системе.</span><span class="sxs-lookup"><span data-stu-id="c5257-326">The following code example demonstrates the use of the <xref:System.Net.HttpListener.IsSupported%2A> property to detect whether an <xref:System.Net.HttpListener> object can be used with the current operating system.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefixes">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerPrefixCollection Prefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerPrefixCollection Prefixes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Prefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefixes As HttpListenerPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerPrefixCollection ^ Prefixes { System::Net::HttpListenerPrefixCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefixes : System.Net.HttpListenerPrefixCollection" Usage="System.Net.HttpListener.Prefixes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-327">Возвращает префиксы URI, обрабатываемые этим объектом <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-327">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <value><span data-ttu-id="c5257-328">Коллекция <see cref="T:System.Net.HttpListenerPrefixCollection" />, содержащая префиксы URI, которые может обрабатывать этот объект <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-328">An <see cref="T:System.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes that this <see cref="T:System.Net.HttpListener" /> object is configured to handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-329">Префиксы представлены в канонической форме.</span><span class="sxs-lookup"><span data-stu-id="c5257-329">The prefixes are in canonical form.</span></span> <span data-ttu-id="c5257-330">Подробное описание префиксов см. в разделе Общие сведения о классе <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-330">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-331">В следующем примере кода показано использование свойства <xref:System.Net.HttpListener.Prefixes%2A> для получения и печати обрабатываемых префиксов URI.</span><span class="sxs-lookup"><span data-stu-id="c5257-331">The following code example demonstrates using the <xref:System.Net.HttpListener.Prefixes%2A> property to obtain and print the URI prefixes that are handled.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
 [!code-vb[Net_Listener_Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-332">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-332">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.Net.HttpListener.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-333">Возвращает или задает область или раздел ресурса, связанные с этим объектом <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-333">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <value><span data-ttu-id="c5257-334">Значение <see cref="T:System.String" />, которое содержит имя области, связанной с этим объектом <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-334">A <see cref="T:System.String" /> value that contains the name of the realm associated with the <see cref="T:System.Net.HttpListener" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-335">Серверы используют сферы для секционирования защищенных ресурсов. Каждая секция может иметь собственную схему проверки подлинности и (или) базу данных авторизации.</span><span class="sxs-lookup"><span data-stu-id="c5257-335">Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</span></span> <span data-ttu-id="c5257-336">Области используются только для обычной проверки подлинности и дайджест-проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="c5257-336">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="c5257-337">После успешного прохождения клиентом проверки подлинности ее результаты действительны для всех ресурсов в данной области.</span><span class="sxs-lookup"><span data-stu-id="c5257-337">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="c5257-338">Подробное описание сфер см. в документе RFC 2617 по адресу [https://www.ietf.org/](https://www.ietf.org/).</span><span class="sxs-lookup"><span data-stu-id="c5257-338">For a detailed description of realms, see RFC 2617 at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="c5257-339">Экземпляр <xref:System.Net.HttpListener> имеет только одну связанную область.</span><span class="sxs-lookup"><span data-stu-id="c5257-339">An instance of <xref:System.Net.HttpListener> has only one associated realm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-340">В следующем примере кода показано задание свойства <xref:System.Net.HttpListener.Realm%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-340">The following code example demonstrates setting the <xref:System.Net.HttpListener.Realm%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#10)]  
 [!code-vb[Net_Listener_Basic#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-341">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-341">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="httpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5257-342">Позволяет этому экземпляру получать входящие запросы.</span><span class="sxs-lookup"><span data-stu-id="c5257-342">Allows this instance to receive incoming requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-343">Этот метод должен вызываться перед вызовом метода <xref:System.Net.HttpListener.GetContext%2A> или <xref:System.Net.HttpListener.BeginGetContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5257-343">This method must be called before you call the <xref:System.Net.HttpListener.GetContext%2A> or <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
 <span data-ttu-id="c5257-344">После запуска объекта <xref:System.Net.HttpListener> можно использовать метод <xref:System.Net.HttpListener.Stop%2A> для его отмены.</span><span class="sxs-lookup"><span data-stu-id="c5257-344">After you have started an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Stop%2A> method to stop it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c5257-345">Если этот экземпляр прослушивателя использует протокол HTTPS, необходимо установить и выбрать сертификат сервера.</span><span class="sxs-lookup"><span data-stu-id="c5257-345">If this listener instance uses https, you must install and select a Server Certificate.</span></span> <span data-ttu-id="c5257-346">В противном случае <xref:System.Net.HttpWebRequest> запрос этого <xref:System.Net.HttpListener> завершится ошибкой с непредвиденным закрытием соединения.</span><span class="sxs-lookup"><span data-stu-id="c5257-346">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span> <span data-ttu-id="c5257-347">Сертификаты сервера и другие параметры прослушивателя можно настроить с помощью HttpCfg. exe.</span><span class="sxs-lookup"><span data-stu-id="c5257-347">You can configure Server Certificates and other listener options by using HttpCfg.exe.</span></span> <span data-ttu-id="c5257-348">Дополнительные сведения см. в разделе [https://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](https://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) .</span><span class="sxs-lookup"><span data-stu-id="c5257-348">See [https://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](https://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) for more details.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-349">В следующем примере кода показано использование метода <xref:System.Net.HttpListener.Start%2A> для начала обработки входящих запросов.</span><span class="sxs-lookup"><span data-stu-id="c5257-349">The following code example demonstrates using the <xref:System.Net.HttpListener.Start%2A> method to begin processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
 [!code-vb[Net_Listener_Basic#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="c5257-350">Вызов функции Win32 завершился с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="c5257-350">A Win32 function call failed.</span></span> <span data-ttu-id="c5257-351">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span><span class="sxs-lookup"><span data-stu-id="c5257-351">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-352">Данный объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-352">This object is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="c5257-353">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="c5257-353">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c5257-354">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c5257-354">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="httpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5257-355">Заставляет этот экземпляр прекратить получать входящие запросы.</span><span class="sxs-lookup"><span data-stu-id="c5257-355">Causes this instance to stop receiving incoming requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-356">Если этот экземпляр уже остановлен, вызов этого метода не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="c5257-356">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 <span data-ttu-id="c5257-357">После остановки объекта <xref:System.Net.HttpListener> можно использовать метод <xref:System.Net.HttpListener.Start%2A> для его перезапуска.</span><span class="sxs-lookup"><span data-stu-id="c5257-357">After you have stopped an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Start%2A> method to restart it.</span></span>  
  
   
  
## Examples  
 
<span data-ttu-id="c5257-358">В следующем примере кода показано использование метода <xref:System.Net.HttpListener.Stop%2A> для отмены обработки входящих запросов.</span><span class="sxs-lookup"><span data-stu-id="c5257-358">The following code example demonstrates using the <xref:System.Net.HttpListener.Stop%2A> method to stop processing incoming requests.</span></span>  
 
[!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
[!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-359">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-359">This object has been closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="c5257-360">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="c5257-360">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c5257-361">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c5257-361">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5257-362">Освобождает ресурсы, удерживаемые этим объектом <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-362">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-363">Приложения должны использовать метод <xref:System.Net.HttpListener.Close%2A> вместо вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="c5257-363">Applications should use the <xref:System.Net.HttpListener.Close%2A> method instead of calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutManager">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerTimeoutManager TimeoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerTimeoutManager TimeoutManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.TimeoutManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutManager As HttpListenerTimeoutManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerTimeoutManager ^ TimeoutManager { System::Net::HttpListenerTimeoutManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutManager : System.Net.HttpListenerTimeoutManager" Usage="System.Net.HttpListener.TimeoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerTimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-364">Диспетчер времени ожидания для этого экземпляра <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-364">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span></span></summary>
        <value><span data-ttu-id="c5257-365">Диспетчер времени ожидания для этого экземпляра <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-365">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-366">Диспетчер времени ожидания определяет ограничения времени ожидания подключения для данного экземпляра <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c5257-366">The timeout manager defines the connection timeout limits for this <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnsafeConnectionNtlmAuthentication : bool with get, set" Usage="System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Support for NTLM needs some loving.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5257-367">Возвращает или задает значение <see cref="T:System.Boolean" />, которое определяет, должны ли дополнительные запросы, использующие то же TCP-подключение, проходить аутентификацию при использовании протокола NTLM.</span><span class="sxs-lookup"><span data-stu-id="c5257-367">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span></span></summary>
        <value><span data-ttu-id="c5257-368">Значение <see langword="true" />, если сведения об идентификации <see cref="T:System.Security.Principal.IIdentity" /> первого запроса будут использоваться для последующих запросов на том же подключении, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-368"><see langword="true" /> if the <see cref="T:System.Security.Principal.IIdentity" /> of the first request will be used for subsequent requests on the same connection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c5257-369">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c5257-369">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5257-370">Если для этого свойства задано значение `true` и первый запрос по конкретному TCP-соединению проходит проверку подлинности с помощью NTLM, последующие запросы к тому же подключению TCP обрабатываются с использованием сведений проверки подлинности (<xref:System.Security.Principal.IIdentity>) первоначального запроса.</span><span class="sxs-lookup"><span data-stu-id="c5257-370">When this property is set to `true` and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<xref:System.Security.Principal.IIdentity>) of the initial request.</span></span>  
  
 <span data-ttu-id="c5257-371">Это свойство не имеет значения, если NTLM не является протоколом проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="c5257-371">This property has no effect when NTLM is not the authentication protocol.</span></span> <span data-ttu-id="c5257-372">Если в качестве протокола проверки подлинности указано Negotiate, это свойство действует, только если NTLM — это фактический протокол, используемый для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="c5257-372">When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c5257-373">При установке этого свойства в `true` повышается производительность, поскольку <xref:System.Net.HttpListener> не отправляет дополнительные проблемы проверки подлинности NTLM, существует угроза безопасности, при которой не требуется, чтобы все запросы на предоставление сведений о проверке подлинности.</span><span class="sxs-lookup"><span data-stu-id="c5257-373">While setting this property to `true` increases performance because the <xref:System.Net.HttpListener> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="c5257-374">Необходимо определить, стоит ли снижать безопасность с целью увеличения производительности.</span><span class="sxs-lookup"><span data-stu-id="c5257-374">You must determine whether the increase in performance is worth this risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5257-375">В следующем примере кода показано задание этого свойства.</span><span class="sxs-lookup"><span data-stu-id="c5257-375">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
 [!code-vb[Net_Listener_Basic#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c5257-376">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="c5257-376">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
