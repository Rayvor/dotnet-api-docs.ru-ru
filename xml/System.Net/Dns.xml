<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f40db0fd3326b3453c170ec5a08d871305d2f3e1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69071859" /></Metadata><TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c4cfd-101">Предоставляет простые функциональные возможности разрешения доменных имен.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-101">Provides simple domain name resolution functionality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-102"><xref:System.Net.Dns> Класс является статическим классом, который получает сведения о конкретном узле из службы DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-102">The <xref:System.Net.Dns> class is a static class that retrieves information about a specific host from the Internet Domain Name System (DNS).</span></span>  
  
 <span data-ttu-id="c4cfd-103">Сведения об узле из запроса DNS возвращаются в экземпляре <xref:System.Net.IPHostEntry> класса.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-103">The host information from the DNS query is returned in an instance of the <xref:System.Net.IPHostEntry> class.</span></span> <span data-ttu-id="c4cfd-104">Если указанный узел содержит более одной записи в базе данных DNS, <xref:System.Net.IPHostEntry> содержит несколько IP-адресов и псевдонимов.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-104">If the specified host has more than one entry in the DNS database, <xref:System.Net.IPHostEntry> contains multiple IP addresses and aliases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cfd-105">В следующем примере запрашивается информация на узле `www.contoso.com`в базе данных DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-105">The following example queries the DNS database for information on the host `www.contoso.com`.</span></span>  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="c4cfd-106">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-106">The host name or IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="c4cfd-107">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-107">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="c4cfd-108">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-108">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="c4cfd-109">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-109">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="c4cfd-110">Асинхронно возвращает IP-адреса для указанного узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-110">Asynchronously returns the Internet Protocol (IP) addresses for the specified host.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-111">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-111">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-112"><xref:System.Net.Dns.BeginGetHostAddresses%2A> Метод асинхронно обращается к DNS-серверу для IP-адресов, связанных с именем узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-112">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method asynchronously queries a DNS server for the IP addresses that are associated with a host name.</span></span> <span data-ttu-id="c4cfd-113">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запроса DNS-сервера.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-113">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-114">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-114">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-115">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-115">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="c4cfd-116">Если в качестве `hostNameOrAddress` аргумента передается пустая строка, этот метод возвращает адреса IPv4 и IPv6 локального узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-116">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="c4cfd-117">Асинхронная <xref:System.Net.Dns.BeginGetHostAddresses%2A> операция должна быть завершена путем <xref:System.Net.Dns.EndGetHostAddresses%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-117">The asynchronous <xref:System.Net.Dns.BeginGetHostAddresses%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostAddresses%2A> method.</span></span> <span data-ttu-id="c4cfd-118">Как правило, метод вызывается `requestCallback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-118">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4cfd-119">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-119">This method does not block until the operation is complete.</span></span> <span data-ttu-id="c4cfd-120">Чтобы заблокировать блокировку до завершения операции, используйте <xref:System.Net.Dns.GetHostAddresses%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-120">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostAddresses%2A> method.</span></span>  
  
 <span data-ttu-id="c4cfd-121">Дополнительные сведения об использовании асинхронной модели программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c4cfd-121">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-122"><paramref name="hostNameOrAddress" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-122"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4cfd-123">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-123">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-124">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-124">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4cfd-125"><paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-125"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-126">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-126">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-127">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-127">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="c4cfd-128">DNS-имя узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-128">The DNS name of the host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="c4cfd-129">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-129">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="c4cfd-130">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-130">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="c4cfd-131">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-131">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="c4cfd-132">Начинает асинхронный запрос сведений <see cref="T:System.Net.IPHostEntry" /> об указанном DNS-имени узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-132">Begins an asynchronous request for <see cref="T:System.Net.IPHostEntry" /> information about the specified DNS host name.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-133">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-133">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-134">Асинхронная <xref:System.Net.Dns.BeginGetHostByName%2A> операция должна быть завершена путем <xref:System.Net.Dns.EndGetHostByName%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-134">The asynchronous <xref:System.Net.Dns.BeginGetHostByName%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostByName%2A> method.</span></span> <span data-ttu-id="c4cfd-135">Как правило, метод вызывается `requestCallback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-135">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4cfd-136">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-136">This method does not block until the operation is complete.</span></span> <span data-ttu-id="c4cfd-137">Чтобы заблокировать блокировку до завершения операции, используйте <xref:System.Net.Dns.GetHostByName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-137">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="c4cfd-138">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-138">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-139">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-139">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-140">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-140">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-141">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-141"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-142">При выполнении запроса DNS произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-142">An error was encountered executing the DNS query.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-143">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-143">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-144">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-144">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="c4cfd-145">Общие сведения о асинхронном программировании</span><span class="sxs-lookup"><span data-stu-id="c4cfd-145">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4cfd-146">Асинхронно разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-146">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="c4cfd-147">IP-адрес, который следует разрешить.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-147">The IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="c4cfd-148">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-148">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="c4cfd-149">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-149">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="c4cfd-150">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-150">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="c4cfd-151">Асинхронно разрешает IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-151">Asynchronously resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-152">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-152">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-153"><xref:System.Net.Dns.BeginGetHostEntry%2A> Метод асинхронно обращается к DNS-серверу для IP-адресов и псевдонимов, связанных с IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-153">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method asynchronously queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="c4cfd-154">**Примечание** . Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-154">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-155">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-155">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="c4cfd-156">Асинхронная <xref:System.Net.Dns.BeginGetHostEntry%2A> операция должна быть завершена путем <xref:System.Net.Dns.EndGetHostEntry%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-156">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="c4cfd-157">Как правило, метод вызывается `requestCallback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-157">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4cfd-158">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-158">This method does not block until the operation is complete.</span></span> <span data-ttu-id="c4cfd-159">Чтобы заблокировать блокировку до завершения операции, используйте <xref:System.Net.Dns.GetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-159">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="c4cfd-160">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c4cfd-160">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cfd-161">В следующем примере кода <xref:System.Net.Dns.BeginGetHostEntry%2A> метод используется для разрешения IP-адреса <xref:System.Net.IPHostEntry> в экземпляр.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-161">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-162">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-162"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-163">При разрешении <paramref name="address" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-163">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4cfd-164"><paramref name="address" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-164"><paramref name="address" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-165">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-165">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-166">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-166">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="c4cfd-167">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-167">The host name or IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="c4cfd-168">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-168">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="c4cfd-169">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-169">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="c4cfd-170">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-170">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="c4cfd-171">Асинхронно разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-171">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-172">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-172">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-173"><xref:System.Net.Dns.BeginGetHostEntry%2A> Метод запрашивает DNS-сервер для IP-адреса, связанного с именем узла или IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-173">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="c4cfd-174">**Примечание** . Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-174">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-175">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-175">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="c4cfd-176">Асинхронная <xref:System.Net.Dns.BeginGetHostEntry%2A> операция должна быть завершена путем <xref:System.Net.Dns.EndGetHostEntry%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-176">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="c4cfd-177">Как правило, метод вызывается `requestCallback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-177">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4cfd-178">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-178">This method does not block until the operation is complete.</span></span> <span data-ttu-id="c4cfd-179">Чтобы заблокировать блокировку до завершения операции, используйте <xref:System.Net.Dns.GetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-179">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="c4cfd-180">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-180">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cfd-181">В следующем примере кода <xref:System.Net.Dns.BeginGetHostEntry%2A> метод используется для разрешения IP-адреса <xref:System.Net.IPHostEntry> в экземпляр.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-181">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-182"><paramref name="hostNameOrAddress" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-182"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4cfd-183">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-183">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-184">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-184">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4cfd-185"><paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-185"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-186">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-186">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-187">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-187">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="c4cfd-188">DNS-имя узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-188">The DNS name of the host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="c4cfd-189">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-189">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="c4cfd-190">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-190">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="c4cfd-191">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-191">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="c4cfd-192">Начинает асинхронный запрос для разрешения DNS-имени узла или IP-адреса в экземпляр <see cref="T:System.Net.IPAddress" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-192">Begins an asynchronous request to resolve a DNS host name or IP address to an <see cref="T:System.Net.IPAddress" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-193">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-193">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-194">Асинхронная <xref:System.Net.Dns.BeginResolve%2A> операция должна быть завершена путем <xref:System.Net.Dns.EndResolve%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-194">The asynchronous <xref:System.Net.Dns.BeginResolve%2A> operation must be completed by calling the <xref:System.Net.Dns.EndResolve%2A> method.</span></span> <span data-ttu-id="c4cfd-195">Как правило, метод вызывается `requestCallback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-195">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4cfd-196">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-196">This method does not block until the operation is complete.</span></span> <span data-ttu-id="c4cfd-197">Чтобы заблокировать блокировку до завершения операции, используйте <xref:System.Net.Dns.Resolve%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-197">To block until the operation is complete, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
 <span data-ttu-id="c4cfd-198">Дополнительные сведения об использовании асинхронной модели программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-198">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-199">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-199">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-200">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cfd-201">В следующем примере используется <xref:System.Net.Dns.BeginResolve%2A> для разрешения имени узла DNS <xref:System.Net.IPAddress>в.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-201">The following example uses <xref:System.Net.Dns.BeginResolve%2A> to resolve a DNS host name to an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-202">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-202"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-203">Вызывающий код не имеет разрешения на доступ к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-203">The caller does not have permission to access DNS information.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-204">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-204">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-205">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-205">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="c4cfd-206">Общие сведения о асинхронном программировании</span><span class="sxs-lookup"><span data-stu-id="c4cfd-206">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c4cfd-207">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-207">An <see cref="T:System.IAsyncResult" /> instance returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="c4cfd-208">Завершает асинхронный запрос сведений DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-208">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-209">Массив типа <see cref="T:System.Net.IPAddress" />, в котором содержатся IP-адреса для узла, указанного в параметре <paramref name="hostNameOrAddress" /> объекта <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-209">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host specified by the <paramref name="hostNameOrAddress" /> parameter of <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-210"><xref:System.Net.Dns.BeginGetHostAddresses%2A> Метод запрашивает DNS-сервер для IP-адресов, связанных с именем узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-210">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="c4cfd-211">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запроса DNS-сервера.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-211">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 <span data-ttu-id="c4cfd-212">Если в качестве `hostNameOrAddress` аргумента передается пустая строка, этот метод возвращает адреса IPv4 и IPv6 локального узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-212">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-213">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-213">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-214">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-214">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c4cfd-215">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-215">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="c4cfd-216">Завершает асинхронный запрос сведений DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-216">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-217">Объект <see cref="T:System.Net.IPHostEntry" />, содержащий сведения DNS об узле.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-217">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-218">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-218">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="c4cfd-219">Чтобы выполнить эту операцию синхронно, используйте <xref:System.Net.Dns.GetHostByName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-219">To perform this operation synchronously, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="c4cfd-220">Если свойство имеет `true` <xref:System.Net.IPHostEntry.Aliases%2A> значение<xref:System.Net.IPHostEntry> , возвращаемое свойство экземпляра не заполняется этим методом и всегда будет пустым. <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4cfd-220">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-221">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-221">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-222">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-222">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-223">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-223"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="c4cfd-224">Общие сведения о асинхронном программировании</span><span class="sxs-lookup"><span data-stu-id="c4cfd-224">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c4cfd-225">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="Overload:System.Net.Dns.BeginGetHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-225">An <see cref="T:System.IAsyncResult" /> instance returned by a call to an <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> method.</span></span></param>
        <summary><span data-ttu-id="c4cfd-226">Завершает асинхронный запрос сведений DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-226">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-227">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-227">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-228">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-228">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="c4cfd-229"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство возвращаемогоэкземпляранезаполняетсяэтимметодом<xref:System.Net.IPHostEntry> и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-229">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="c4cfd-230">Чтобы выполнить эту операцию синхронно, используйте <xref:System.Net.Dns.GetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-230">To perform this operation synchronously, use a <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-231">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-231">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-232">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-232">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-233"><paramref name="asyncResult" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-233"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c4cfd-234">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-234">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="c4cfd-235">Завершает асинхронный запрос сведений DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-235">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-236">Объект <see cref="T:System.Net.IPHostEntry" />, содержащий сведения DNS об узле.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-236">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-237">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-237">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="c4cfd-238">Если параметр <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> имеет `true` <xref:System.Net.IPHostEntry.Aliases%2A> значение<xref:System.Net.IPHostEntry> , свойство возвращаемого экземпляра не заполняется этим методом и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-238">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="c4cfd-239">Чтобы выполнить эту операцию синхронно, используйте <xref:System.Net.Dns.Resolve%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-239">To perform this operation synchronously, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-240">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-240">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-241">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-241">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cfd-242">В следующем примере завершается асинхронный запрос сведений об узле DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-242">The following example ends an asynchronous request for DNS host information.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-243"><paramref name="asyncResult" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-243"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="c4cfd-244">Общие сведения о асинхронном программировании</span><span class="sxs-lookup"><span data-stu-id="c4cfd-244">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="c4cfd-245">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-245">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="c4cfd-246">Возвращает IP-адреса для указанного узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-246">Returns the Internet Protocol (IP) addresses for the specified host.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-247">Массив типа <see cref="T:System.Net.IPAddress" />, в котором содержатся IP-адреса для узла, указанного в параметре <paramref name="hostNameOrAddress" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-247">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-248"><xref:System.Net.Dns.GetHostAddresses%2A> Метод запрашивает у подсистемы DNS IP-адреса, связанные с именем узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-248">The <xref:System.Net.Dns.GetHostAddresses%2A> method queries the DNS subsystem for the IP addresses associated with a host name.</span></span> <span data-ttu-id="c4cfd-249">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запроса DNS-сервера.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-249">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>
  
 <span data-ttu-id="c4cfd-250">Если в качестве `hostNameOrAddress` аргумента передается пустая строка, этот метод возвращает адреса IPv4 и IPv6 локального узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-250">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="c4cfd-251">IPv6-адреса фильтруются по результатам <xref:System.Net.Dns.GetHostAddresses%2A> метода, если на локальном компьютере не установлен протокол IPv6.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-251">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostAddresses%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="c4cfd-252">В результате можно вернуть пустой <xref:System.Net.IPAddress> экземпляр, если `hostNameOrAddress` для параметра были доступны только результаты IPv6.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-252">As a result, it is possible to get back an empty <xref:System.Net.IPAddress> instance if only IPv6 results were available for the `hostNameOrAddress` parameter.</span></span>  
 
 <span data-ttu-id="c4cfd-253">Этот метод реализуется с помощью API разрешения имен базовой операционной системы (например, API Win32 функцию getaddrinfo в Windows и эквивалентных API на других платформах).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-253">This method is implemented using the underlying operating system's name resolution APIs (such as the Win32 API getaddrinfo on Windows, and equivalent APIs on other platforms).</span></span>  <span data-ttu-id="c4cfd-254">Если узел описан в `hosts` файле, IP-адрес или адреса будут возвращены без запроса к DNS-серверу.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-254">If a host is described in the `hosts` file, the IP address or addresses there will be returned without querying the DNS server.</span></span>

> [!NOTE]
>  <span data-ttu-id="c4cfd-255">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-255">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-256">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-256">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cfd-257">В следующем примере кода <xref:System.Net.Dns.GetHostAddresses%2A> метод используется для разрешения IP-адреса в массив типа. <xref:System.Net.IPAddress></span><span class="sxs-lookup"><span data-stu-id="c4cfd-257">The following code example uses the <xref:System.Net.Dns.GetHostAddresses%2A> method to resolve an IP address to an array of type <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-258">Свойство <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-258"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4cfd-259">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-259">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-260">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-260">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4cfd-261"><paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-261"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-262">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-262">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-263">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-263">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="c4cfd-264">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-264">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="c4cfd-265">Возвращает IP-адреса для указанного узла как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-265">Returns the Internet Protocol (IP) addresses for the specified host as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-266">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-266">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="c4cfd-267">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> объекта задачи возвращает Массив типа <see cref="T:System.Net.IPAddress" />, в котором содержатся IP-адреса для узла, указанного в параметре <paramref name="hostNameOrAddress" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-267">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-268">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-268">This operation will not block.</span></span> <span data-ttu-id="c4cfd-269">Возвращаемый <xref:System.Threading.Tasks.Task%601> объект будет завершен `hostNameOrAddress` после разрешения.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-269">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="c4cfd-270">Этот метод запрашивает у DNS-сервера IP-адреса, связанные с именем узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-270">This method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="c4cfd-271">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запроса DNS-сервера.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-271">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-272">Свойство <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-272"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4cfd-273">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-273">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-274">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-274">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4cfd-275"><paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-275"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4cfd-276">Возвращает сведения DNS об узле для IP-адреса.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-276">Gets DNS host information for an IP address.</span></span> <span data-ttu-id="c4cfd-277">В настоящее время эти методы считаются устаревшими.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-277">These methods are now obsolete.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="c4cfd-278">Объект <see cref="T:System.Net.IPAddress" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-278">An <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <summary><span data-ttu-id="c4cfd-279">Создает экземпляр <see cref="T:System.Net.IPHostEntry" /> из указанного объекта <see cref="T:System.Net.IPAddress" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-279">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from the specified <see cref="T:System.Net.IPAddress" />.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-280">Экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-280">An <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-281">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-281">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-282">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-282">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cfd-283">В следующем примере создается объект <xref:System.Net.IPHostEntry> <xref:System.Net.IPAddress>из.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-283">The following example creates a <xref:System.Net.IPHostEntry> from an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-284">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-284"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-285">При разрешении <paramref name="address" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-285">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-286">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-286">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-287">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-287">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="c4cfd-288">IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-288">An IP address.</span></span></param>
        <summary><span data-ttu-id="c4cfd-289">Создает экземпляр <see cref="T:System.Net.IPHostEntry" /> из IP-адреса.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-289">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from an IP address.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-290">Экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-290">An <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-291">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-291">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-292">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-292">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-293">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-293"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-294">При разрешении <paramref name="address" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-294">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c4cfd-295"><paramref name="address" /> не является допустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-295"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-296">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-296">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-297">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-297">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="c4cfd-298">DNS-имя узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-298">The DNS name of the host.</span></span></param>
        <summary><span data-ttu-id="c4cfd-299">Возвращает сведения DNS для указанного DNS-имени узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-299">Gets the DNS information for the specified DNS host name.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-300">Объект <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об узле для адреса, указанного в <paramref name="hostName" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-300">An <see cref="T:System.Net.IPHostEntry" /> object that contains host information for the address specified in <paramref name="hostName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-301"><xref:System.Net.Dns.GetHostByName%2A> Метод запрашивает у DNS-сервера Интернет сведения об узле.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-301">The <xref:System.Net.Dns.GetHostByName%2A> method queries the Internet DNS server for host information.</span></span> <span data-ttu-id="c4cfd-302">Если в качестве имени узла передается пустая строка, этот метод получает стандартное имя узла для локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-302">If you pass an empty string as the host name, this method retrieves the standard host name for the local computer.</span></span>  
  
 <span data-ttu-id="c4cfd-303">Для асинхронного доступа к сведениям DNS используйте <xref:System.Net.Dns.BeginGetHostByName%2A> методы <xref:System.Net.Dns.EndGetHostByName%2A> и.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-303">For asynchronous access to DNS information, use the <xref:System.Net.Dns.BeginGetHostByName%2A> and <xref:System.Net.Dns.EndGetHostByName%2A> methods.</span></span>  
  
 <span data-ttu-id="c4cfd-304">Если свойство имеет `true` <xref:System.Net.IPHostEntry.Aliases%2A> значение<xref:System.Net.IPHostEntry> , возвращаемое свойство экземпляра не заполняется этим методом и всегда будет пустым. <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4cfd-304">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-305">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-305">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-306">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-306">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cfd-307">В следующем примере используется <xref:System.Net.Dns.GetHostByName%2A> метод для получения сведений DNS для указанного имени узла DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-307">The following example uses the <xref:System.Net.Dns.GetHostByName%2A> method to get the DNS information for the specified DNS host name.</span></span>  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-308">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-308"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4cfd-309">Длина <paramref name="hostName" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-309">The length of <paramref name="hostName" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-310">При разрешении <paramref name="hostName" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-310">An error is encountered when resolving <paramref name="hostName" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-311">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-311">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-312">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-312">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4cfd-313">Разрешает имя узла или IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-313">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="c4cfd-314">IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-314">An IP address.</span></span></param>
        <summary><span data-ttu-id="c4cfd-315">Разрешает IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-315">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-316">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу, указанному в параметре <paramref name="address" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-316">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-317"><xref:System.Net.Dns.GetHostEntry%2A> Метод запрашивает у DNS-сервера IP-адреса и псевдонимы, связанные с IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-317">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="c4cfd-318">IPv6-адреса фильтруются по результатам <xref:System.Net.Dns.GetHostEntry%2A> метода, если на локальном компьютере не установлен протокол IPv6.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-318">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="c4cfd-319">В результате можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляр, если `address` для параметра были доступны только результаты IPv6.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-319">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results were available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="c4cfd-320"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство возвращаемогоэкземпляранезаполняетсяэтимметодом<xref:System.Net.IPHostEntry> и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-320">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-321">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-321">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-322">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-322">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  

## Examples  
 <span data-ttu-id="c4cfd-323">В следующем примере кода <xref:System.Net.Dns.GetHostEntry%2A> метод используется для разрешения IP-адреса <xref:System.Net.IPHostEntry> в экземпляр.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-323">The following code example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-324"><paramref name="address" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-324"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-325">При разрешении <paramref name="address" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-325">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4cfd-326"><paramref name="address" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-326"><paramref name="address" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-327">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-327">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-328">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-328">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="c4cfd-329">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-329">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="c4cfd-330">Разрешает имя узла или IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-330">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-331">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу, указанному в параметре <paramref name="hostNameOrAddress" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-331">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-332"><xref:System.Net.Dns.GetHostEntry%2A> Метод запрашивает DNS-сервер для IP-адреса, связанного с именем узла или IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-332">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="c4cfd-333">Если в качестве `hostNameOrAddress` аргумента передается пустая строка, этот метод возвращает адреса IPv4 и IPv6 локального узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-333">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="c4cfd-334">Если имя узла не найдено, <xref:System.Net.Sockets.SocketException> возвращается значение 11001 (ошибка сокетов Windows WSAHOST_NOT_FOUND).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-334">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="c4cfd-335">Это исключение может быть возвращено, если DNS-сервер не отвечает.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-335">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="c4cfd-336">Это исключение также может возвращаться, если имя не является официальным именем или псевдонимом узла или не может быть найдено в запрашиваемых базах данных.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-336">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="c4cfd-337">Исключение также возвращается, `hostNameOrAddress` если параметр содержит <xref:System.Net.IPAddress.Any> или <xref:System.Net.IPAddress.IPv6Any>. <xref:System.ArgumentException></span><span class="sxs-lookup"><span data-stu-id="c4cfd-337">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="c4cfd-338">Метод предполагает, что если строка литерала IP передается `hostNameOrAddress` в параметре <xref:System.Net.IPHostEntry> , что приложению требуется экземпляр, возвращенный со всеми заданными свойствами. <xref:System.Net.Dns.GetHostEntry%2A></span><span class="sxs-lookup"><span data-stu-id="c4cfd-338">The <xref:System.Net.Dns.GetHostEntry%2A> method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="c4cfd-339">Эти свойства включают в <xref:System.Net.IPHostEntry.AddressList%2A>себя <xref:System.Net.IPHostEntry.Aliases%2A>, и <xref:System.Net.IPHostEntry.HostName%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-339">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="c4cfd-340">В результате реализация <xref:System.Net.Dns.GetHostEntry%2A> метода реализует следующее поведение при передаче строкового литерала IP:</span><span class="sxs-lookup"><span data-stu-id="c4cfd-340">As a result, the implementation of the <xref:System.Net.Dns.GetHostEntry%2A> method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="c4cfd-341">Метод пытается проанализировать адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-341">The method tries to parse the address.</span></span> <span data-ttu-id="c4cfd-342">`hostNameOrAddress` Если параметр содержит допустимый строковый литерал IP-адреса, первый этап будет выполнен.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-342">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="c4cfd-343">Попытка обратного просмотра с использованием IP-адреса строкового литерала IP для получения имени узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-343">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="c4cfd-344">Этот результат задается в <xref:System.Net.IPHostEntry.HostName%2A> качестве свойства.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-344">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="c4cfd-345">Имя узла из этого обратного просмотра используется снова для получения всех возможных IP-адресов, связанных с именем и установленного в качестве <xref:System.Net.IPHostEntry.AddressList%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-345">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="c4cfd-346">Для строкового литерала IPv4 все три приведенные выше действия могут быть выполнены.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-346">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="c4cfd-347">Но для IPv4-адреса, который фактически принадлежит другому узлу, может быть возвращена устаревшая запись DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-347">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="c4cfd-348">Это может вызвать сбой шага #3 и создать исключение (запись типа PTR DNS для IPv4-адреса, но не запись A для IPv4-адреса).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-348">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="c4cfd-349">Для IPv6 шаг #2 выше может завершиться сбоем, так как большинство развертываний IPv6 не регистрируют обратную запись (PTR) для IPv6-адреса.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-349">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="c4cfd-350">Таким образом, этот метод может вернуть строку литерала IPv6 в качестве имени узла в <xref:System.Net.IPHostEntry.HostName%2A> свойстве с полным доменным именем (FQDN).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-350">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="c4cfd-351">Поведение <xref:System.Net.Dns.GetHostAddresses%2A> метода отличается в отношении литералов IP.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-351">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="c4cfd-352">Если шаг #1 выше успешно выполнен (он успешно анализируется как IP-адрес), этот адрес немедленно возвращается в качестве результата.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-352">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="c4cfd-353">Попытки обратного просмотра не попытаются.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-353">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="c4cfd-354">IPv6-адреса фильтруются по результатам <xref:System.Net.Dns.GetHostEntry%2A> метода, если на локальном компьютере не установлен протокол IPv6.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-354">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="c4cfd-355">В результате можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляр, если только результаты IPv6, `hostNameOrAddress`доступные для параметра.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-355">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="c4cfd-356"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство возвращаемогоэкземпляранезаполняетсяэтимметодом<xref:System.Net.IPHostEntry> и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-356">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-357">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-357">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-358">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-358">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cfd-359">В следующем примере <xref:System.Net.Dns.GetHostEntry%2A> метод используется для разрешения IP-адреса <xref:System.Net.IPHostEntry> в экземпляр.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-359">The following example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-360">Параметр <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-360">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4cfd-361">Длина параметра <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-361">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-362">При попытке разрешения параметра <paramref name="hostNameOrAddress" /> произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-362">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4cfd-363">Параметр <paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-363">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-364">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-364">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-365">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-365">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4cfd-366">Разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" /> как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-366">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="c4cfd-367">IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-367">An IP address.</span></span></param>
        <summary><span data-ttu-id="c4cfd-368">Разрешает IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" /> как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-368">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-369">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-369">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="c4cfd-370">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий информацию адреса об узле, указанного в <paramref name="address" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-370">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-371">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-371">This operation will not block.</span></span> <span data-ttu-id="c4cfd-372">Возвращаемый <xref:System.Threading.Tasks.Task%601> объект будет завершен `address` после разрешения.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-372">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `address` has been resolved.</span></span>  
  
 <span data-ttu-id="c4cfd-373">Этот метод запрашивает у DNS-сервера IP-адреса и псевдонимы, связанные с IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-373">This method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="c4cfd-374">IPv6-адреса фильтруются по результатам этого метода, если на локальном компьютере не установлен протокол IPv6.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-374">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="c4cfd-375">В результате можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляр, если `address` для параметра доступны только результаты IPv6.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-375">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="c4cfd-376"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство возвращаемогоэкземпляранезаполняетсяэтимметодом<xref:System.Net.IPHostEntry> и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-376">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-377">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-377">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-378">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-378">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-379"><paramref name="address" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-379"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-380">При разрешении <paramref name="address" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-380">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4cfd-381"><paramref name="address" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-381"><paramref name="address" /> is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="c4cfd-382">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-382">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="c4cfd-383">Разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" /> как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-383">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-384">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-384">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="c4cfd-385">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий информацию адреса об узле, указанного в <paramref name="hostNameOrAddress" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-385">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-386">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-386">This operation will not block.</span></span> <span data-ttu-id="c4cfd-387">Возвращаемый <xref:System.Threading.Tasks.Task%601> объект будет завершен `hostNameOrAddress` после разрешения.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-387">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="c4cfd-388">Этот метод запрашивает у DNS-сервера IP-адрес, связанный с именем узла или IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-388">This method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="c4cfd-389">Если в качестве `hostNameOrAddress` аргумента передается пустая строка, этот метод возвращает адреса IPv4 и IPv6 локального узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-389">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="c4cfd-390">Если имя узла не найдено, <xref:System.Net.Sockets.SocketException> возвращается значение 11001 (ошибка сокетов Windows WSAHOST_NOT_FOUND).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-390">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="c4cfd-391">Это исключение может быть возвращено, если DNS-сервер не отвечает.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-391">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="c4cfd-392">Это исключение также может возвращаться, если имя не является официальным именем или псевдонимом узла или не может быть найдено в запрашиваемых базах данных.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-392">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="c4cfd-393">Исключение также возвращается, `hostNameOrAddress` если параметр содержит <xref:System.Net.IPAddress.Any> или <xref:System.Net.IPAddress.IPv6Any>. <xref:System.ArgumentException></span><span class="sxs-lookup"><span data-stu-id="c4cfd-393">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="c4cfd-394">Этот метод предполагает, что если строка литерала IP передается `hostNameOrAddress` в параметре, что приложению <xref:System.Net.IPHostEntry> требуется экземпляр, возвращенный со всеми заданными свойствами.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-394">This method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="c4cfd-395">Эти свойства включают в <xref:System.Net.IPHostEntry.AddressList%2A>себя <xref:System.Net.IPHostEntry.Aliases%2A>, и <xref:System.Net.IPHostEntry.HostName%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-395">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="c4cfd-396">В результате реализация этого метода реализует следующее поведение при передаче строкового литерала IP:</span><span class="sxs-lookup"><span data-stu-id="c4cfd-396">As a result, the implementation of this method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="c4cfd-397">Метод пытается проанализировать адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-397">The method tries to parse the address.</span></span> <span data-ttu-id="c4cfd-398">`hostNameOrAddress` Если параметр содержит допустимый строковый литерал IP-адреса, первый этап будет выполнен.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-398">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="c4cfd-399">Попытка обратного просмотра с использованием IP-адреса строкового литерала IP для получения имени узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-399">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="c4cfd-400">Этот результат задается в <xref:System.Net.IPHostEntry.HostName%2A> качестве свойства.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-400">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="c4cfd-401">Имя узла из этого обратного просмотра используется снова для получения всех возможных IP-адресов, связанных с именем и установленного в качестве <xref:System.Net.IPHostEntry.AddressList%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-401">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="c4cfd-402">Для строкового литерала IPv4 все три приведенные выше действия могут быть выполнены.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-402">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="c4cfd-403">Но для IPv4-адреса, который фактически принадлежит другому узлу, может быть возвращена устаревшая запись DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-403">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="c4cfd-404">Это может вызвать сбой шага #3 и создать исключение (запись типа PTR DNS для IPv4-адреса, но не запись A для IPv4-адреса).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-404">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="c4cfd-405">Для IPv6 шаг #2 выше может завершиться сбоем, так как большинство развертываний IPv6 не регистрируют обратную запись (PTR) для IPv6-адреса.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-405">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="c4cfd-406">Таким образом, этот метод может вернуть строку литерала IPv6 в качестве имени узла в <xref:System.Net.IPHostEntry.HostName%2A> свойстве с полным доменным именем (FQDN).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-406">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="c4cfd-407">Поведение <xref:System.Net.Dns.GetHostAddresses%2A> метода отличается в отношении литералов IP.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-407">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="c4cfd-408">Если шаг #1 выше успешно выполнен (он успешно анализируется как IP-адрес), этот адрес немедленно возвращается в качестве результата.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-408">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="c4cfd-409">Попытки обратного просмотра не попытаются.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-409">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="c4cfd-410">IPv6-адреса фильтруются по результатам этого метода, если на локальном компьютере не установлен протокол IPv6.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-410">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="c4cfd-411">В результате можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляр, если только результаты IPv6, `hostNameOrAddress`доступные для параметра.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-411">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="c4cfd-412"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство возвращаемогоэкземпляранезаполняетсяэтимметодом<xref:System.Net.IPHostEntry> и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-412">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  

 <span data-ttu-id="c4cfd-413">Этот метод реализуется с помощью API разрешения имен базовой операционной системы (например, API Win32 функцию getaddrinfo в Windows и эквивалентных API на других платформах).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-413">This method is implemented using the underlying operating system's name resolution APIs (such as the Win32 API getaddrinfo on Windows, and equivalent APIs on other platforms).</span></span>  <span data-ttu-id="c4cfd-414">Если узел описан в `hosts` файле, IP-адрес или адреса будут возвращены без запроса к DNS-серверу.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-414">If a host is described in the `hosts` file, the IP address or addresses there will be returned without querying the DNS server.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-415">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-415">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-416">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-416">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-417">Параметр <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-417">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4cfd-418">Длина параметра <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-418">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-419">При попытке разрешения параметра <paramref name="hostNameOrAddress" /> произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-419">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4cfd-420">Параметр <paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-420">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4cfd-421">Возвращает имя узла локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-421">Gets the host name of the local computer.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-422">Строка, содержащая DNS-имя узла локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-422">A string that contains the DNS host name of the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4cfd-423">В следующем примере <xref:System.Net.Dns.GetHostName%2A> метод используется для получения имени узла локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-423">The following example uses the <xref:System.Net.Dns.GetHostName%2A> method to obtain the host name of the local computer.</span></span>  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-424">При преобразовании имени локального узла возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-424">An error is encountered when resolving the local host name.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-425">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-425">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-426">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-426">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="c4cfd-427">DNS-имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-427">A DNS-style host name or IP address.</span></span></param>
        <summary><span data-ttu-id="c4cfd-428">Разрешает DNS-имя узла или IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-428">Resolves a DNS host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c4cfd-429">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу, указанному в параметре <paramref name="hostName" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-429">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4cfd-430"><xref:System.Net.Dns.Resolve%2A> Метод запрашивает DNS-сервер для IP-адреса, связанного с именем узла или IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-430">The <xref:System.Net.Dns.Resolve%2A> method queries a DNS server for the IP address associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="c4cfd-431">Если `hostName` — это имя узла в стиле DNS, связанное с несколькими IP-адресами, возвращается только первый IP-адрес, который разрешается в это имя узла.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-431">When `hostName` is a DNS-style host name associated with multiple IP addresses, only the first IP address that resolves to that host name is returned.</span></span>  
  
 <span data-ttu-id="c4cfd-432">Если свойство имеет `true` <xref:System.Net.IPHostEntry.Aliases%2A> значение<xref:System.Net.IPHostEntry> , возвращаемое свойство экземпляра не заполняется этим методом и всегда будет пустым. <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4cfd-432">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4cfd-433">Этот элемент выдает сведения о трассировке при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-433">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c4cfd-434">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c4cfd-434">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4cfd-435">В следующем примере <xref:System.Net.Dns.Resolve%2A> метод используется для разрешения IP-адреса <xref:System.Net.IPHostEntry> в экземпляр.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-435">The following example uses the <xref:System.Net.Dns.Resolve%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4cfd-436">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-436"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4cfd-437">Длина <paramref name="hostName" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-437">The length of <paramref name="hostName" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c4cfd-438">При разрешении <paramref name="hostName" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-438">An error is encountered when resolving <paramref name="hostName" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="c4cfd-439">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="c4cfd-439">for accessing DNS information.</span></span> <span data-ttu-id="c4cfd-440">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c4cfd-440">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
