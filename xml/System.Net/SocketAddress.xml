<Type Name="SocketAddress" FullName="System.Net.SocketAddress">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6f825dcb129a19cd531f723530bbac5d5b80e9d" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75169896" /></Metadata><TypeSignature Language="C#" Value="public class SocketAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.SocketAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketAddress" />
  <TypeSignature Language="F#" Value="type SocketAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="01210-101">Сохраняет сведения о сериализации для производных классов <see cref="T:System.Net.EndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="01210-101">Stores serialized information from <see cref="T:System.Net.EndPoint" /> derived classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01210-102">Первые 2 байта базового буфера зарезервированы для <xref:System.Net.Sockets.AddressFamily> перечислимого значения.</span><span class="sxs-lookup"><span data-stu-id="01210-102">The first 2 bytes of the underlying buffer are reserved for the <xref:System.Net.Sockets.AddressFamily> enumerated value.</span></span> <span data-ttu-id="01210-103">Если <xref:System.Net.SocketAddress> используется для хранения сериализованных <xref:System.Net.IPEndPoint>, третий и четвертый байты используются для хранения сведений о номере порта.</span><span class="sxs-lookup"><span data-stu-id="01210-103">When the <xref:System.Net.SocketAddress> is used to store a serialized <xref:System.Net.IPEndPoint>, the third and fourth bytes are used to store port number information.</span></span> <span data-ttu-id="01210-104">Следующие байты используются для хранения IP-адреса.</span><span class="sxs-lookup"><span data-stu-id="01210-104">The next bytes are used to store the IP address.</span></span> <span data-ttu-id="01210-105">Доступ к любой информации в этом базовом буфере байтов можно получить, обратившись к его позиции индекса. буфер байтов использует индексирование, начинающееся с нуля.</span><span class="sxs-lookup"><span data-stu-id="01210-105">You can access any information within this underlying byte buffer by referring to its index position; the byte buffer uses zero-based indexing.</span></span> <span data-ttu-id="01210-106">Можно также использовать свойства <xref:System.Net.SocketAddress.Family%2A> и <xref:System.Net.SocketAddress.Size%2A>, чтобы получить значение <xref:System.Net.Sockets.AddressFamily> и размер буфера соответственно.</span><span class="sxs-lookup"><span data-stu-id="01210-106">You can also use the <xref:System.Net.SocketAddress.Family%2A> and <xref:System.Net.SocketAddress.Size%2A> properties to get the <xref:System.Net.Sockets.AddressFamily> value and the buffer size, respectively.</span></span> <span data-ttu-id="01210-107">Чтобы просмотреть эти сведения в виде строки, используйте метод <xref:System.Net.SocketAddress.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="01210-107">To view any of this information as a string, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01210-108">В следующем примере показано, как использовать <xref:System.Net.SocketAddress> для сериализации экземпляра класса <xref:System.Net.EndPoint>.</span><span class="sxs-lookup"><span data-stu-id="01210-108">The following example demonstrates how to use <xref:System.Net.SocketAddress> to serialize an instance of the <xref:System.Net.EndPoint> class.</span></span> <span data-ttu-id="01210-109">После сериализации базовый буфер байтов <xref:System.Net.SocketAddress> содержит все сведения о состоянии <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="01210-109">After serialization, the underlying byte buffer of the <xref:System.Net.SocketAddress> contains all of the <xref:System.Net.IPEndPoint> state information.</span></span>  
  
 [!code-cpp[Classic SocketAddressExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SocketAddressExample/CPP/source.cpp#1)]
 [!code-csharp[Classic SocketAddressExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SocketAddressExample/CS/source.cs#1)]
 [!code-vb[Classic SocketAddressExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SocketAddressExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01210-110">Создает новый экземпляр класса <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="01210-110">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.SocketAddress : System.Net.Sockets.AddressFamily -&gt; System.Net.SocketAddress" Usage="new System.Net.SocketAddress family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="01210-111">Перечислимое значение <see cref="T:System.Net.Sockets.AddressFamily" />.</span><span class="sxs-lookup"><span data-stu-id="01210-111">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span></span></param>
        <summary><span data-ttu-id="01210-112">Создает новый экземпляр класса <see cref="T:System.Net.SocketAddress" /> для указанного семейства адресов.</span><span class="sxs-lookup"><span data-stu-id="01210-112">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class for the given address family.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01210-113">Эта перегрузка устанавливает размер базового буфера равным 32 байт.</span><span class="sxs-lookup"><span data-stu-id="01210-113">This overload sets the underlying buffer size to 32 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family, int size);" />
      <MemberSignature Language="F#" Value="new System.Net.SocketAddress : System.Net.Sockets.AddressFamily * int -&gt; System.Net.SocketAddress" Usage="new System.Net.SocketAddress (family, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="01210-114">Перечислимое значение <see cref="T:System.Net.Sockets.AddressFamily" />.</span><span class="sxs-lookup"><span data-stu-id="01210-114">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span></span></param>
        <param name="size"><span data-ttu-id="01210-115">Количество байтов, выделяемое для соответствующего буфера.</span><span class="sxs-lookup"><span data-stu-id="01210-115">The number of bytes to allocate for the underlying buffer.</span></span></param>
        <summary><span data-ttu-id="01210-116">Создает новый экземпляр класса <see cref="T:System.Net.SocketAddress" />, используя указанные семейство адресов и размер буфера.</span><span class="sxs-lookup"><span data-stu-id="01210-116">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class using the specified address family and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01210-117">Используйте эту перегрузку для создания нового экземпляра класса <xref:System.Net.SocketAddress> с определенным размером базового буфера.</span><span class="sxs-lookup"><span data-stu-id="01210-117">Use this overload to create a new instance of the <xref:System.Net.SocketAddress> class with a particular underlying buffer size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01210-118">Значение параметра <paramref name="size" /> меньше 2.</span><span class="sxs-lookup"><span data-stu-id="01210-118"><paramref name="size" /> is less than 2.</span></span> <span data-ttu-id="01210-119">Эти 2 байта необходимы для хранения <paramref name="family" />.</span><span class="sxs-lookup"><span data-stu-id="01210-119">These 2 bytes are needed to store <paramref name="family" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="socketAddress.Equals comparand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand"><span data-ttu-id="01210-120">Объект <see cref="T:System.Object" />, с которым сравнивается текущий объект <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="01210-120">The <see cref="T:System.Object" /> to compare with the current <see langword="Object" />.</span></span></param>
        <summary><span data-ttu-id="01210-121">Определяет, равен ли указанный объект <see langword="Object" /> текущему объекту <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="01210-121">Determines whether the specified <see langword="Object" /> is equal to the current <see langword="Object" />.</span></span></summary>
        <returns><span data-ttu-id="01210-122">Значение <see langword="true" />, если указанный объект <see langword="Object" /> равен текущему объекту <see langword="Object" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="01210-122"><see langword="true" /> if the specified <see langword="Object" /> is equal to the current <see langword="Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Family">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.AddressFamily Family { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily Family" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Family" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Family As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::AddressFamily Family { System::Net::Sockets::AddressFamily get(); };" />
      <MemberSignature Language="F#" Value="member this.Family : System.Net.Sockets.AddressFamily" Usage="System.Net.SocketAddress.Family" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01210-123">Возвращает значение перечисления <see cref="T:System.Net.Sockets.AddressFamily" /> текущего <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="01210-123">Gets the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value of the current <see cref="T:System.Net.SocketAddress" />.</span></span></summary>
        <value><span data-ttu-id="01210-124">Одно из значений перечисления <see cref="T:System.Net.Sockets.AddressFamily" />.</span><span class="sxs-lookup"><span data-stu-id="01210-124">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01210-125">Этот метод возвращает <xref:System.Net.Sockets.AddressFamily> перечислимое значение, представляющее схему адресации текущего <xref:System.Net.SocketAddress>.</span><span class="sxs-lookup"><span data-stu-id="01210-125">This method gets the <xref:System.Net.Sockets.AddressFamily> enumerated value that represents the addressing scheme of the current <xref:System.Net.SocketAddress>.</span></span> <span data-ttu-id="01210-126">Если необходимо просмотреть соответствующее строковое представление <xref:System.Net.Sockets.AddressFamily>, используйте метод <xref:System.Net.SocketAddress.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="01210-126">If you want to view the corresponding string representation of <xref:System.Net.Sockets.AddressFamily>, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.AddressFamily" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="socketAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01210-127">Служит в качестве хэш-функции для конкретного типа и может использоваться в алгоритмах хэширования и структурах данных, подобных хэш-таблице.</span><span class="sxs-lookup"><span data-stu-id="01210-127">Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</span></span></summary>
        <returns><span data-ttu-id="01210-128">Хэш-код для текущего объекта <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="01210-128">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int offset] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(offset As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int offset); void set(int offset, System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : byte with get, set" Usage="System.Net.SocketAddress.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="01210-129">Элемент индекса массива нужных данных.</span><span class="sxs-lookup"><span data-stu-id="01210-129">The array index element of the desired information.</span></span></param>
        <summary><span data-ttu-id="01210-130">Возвращает или устанавливает элемент с указанным индексом в соответствующем буфере.</span><span class="sxs-lookup"><span data-stu-id="01210-130">Gets or sets the specified index element in the underlying buffer.</span></span></summary>
        <value><span data-ttu-id="01210-131">Значение элемента с указанным индексом в соответствующем буфере.</span><span class="sxs-lookup"><span data-stu-id="01210-131">The value of the specified index element in the underlying buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01210-132">Это свойство возвращает или задает указанную в базовом буфере точку в байте.</span><span class="sxs-lookup"><span data-stu-id="01210-132">This property gets or sets the specified byte position in the underlying buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01210-133">Не забудьте вызвать <xref:System.Net.SocketAddress.Size%2A> перед обращением к элементам в базовом буфере.</span><span class="sxs-lookup"><span data-stu-id="01210-133">Be sure to call <xref:System.Net.SocketAddress.Size%2A> before referring to elements in the underlying buffer.</span></span> <span data-ttu-id="01210-134">Ссылка на несуществующий индекс приведет к тому, что <xref:System.Net.SocketAddress> выдаст <xref:System.IndexOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="01210-134">Referring to an index that does not exist will cause the <xref:System.Net.SocketAddress> to throw an <xref:System.IndexOutOfRangeException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="01210-135">Указанный индекс не существует в буфере.</span><span class="sxs-lookup"><span data-stu-id="01210-135">The specified index does not exist in the buffer.</span></span></exception>
        <altmember cref="P:System.Net.SocketAddress.Size" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : int" Usage="System.Net.SocketAddress.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01210-136">Возвращает размер соответствующего буфера <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="01210-136">Gets the underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span></span></summary>
        <value><span data-ttu-id="01210-137">Размер соответствующего буфера <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="01210-137">The underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01210-138">Это свойство получает базовый размер буфера <xref:System.Net.SocketAddress> в байтах.</span><span class="sxs-lookup"><span data-stu-id="01210-138">This property gets the underlying buffer size of the <xref:System.Net.SocketAddress> in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="socketAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01210-139">Возвращает сведения об адресе сокета.</span><span class="sxs-lookup"><span data-stu-id="01210-139">Returns information about the socket address.</span></span></summary>
        <returns><span data-ttu-id="01210-140">Строка, содержащая сведения о <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="01210-140">A string that contains information about the <see cref="T:System.Net.SocketAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01210-141">Метод <xref:System.Net.SocketAddress.ToString%2A> возвращает строку, содержащую <xref:System.Net.Sockets.AddressFamily> перечислимое значение, размер базового буфера структуры <xref:System.Net.SocketAddress> и оставшееся содержимое буфера.</span><span class="sxs-lookup"><span data-stu-id="01210-141">The <xref:System.Net.SocketAddress.ToString%2A> method returns a string that contains the <xref:System.Net.Sockets.AddressFamily> enumerated value, the size of the underlying buffer of the <xref:System.Net.SocketAddress> structure, and the remaining contents of the buffer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
