<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b9d6bee92e508314a7a572464c67f943df2bdae" /><Meta Name="ms.sourcegitcommit" Value="0609891c89ddaa91e4c02970acb00072fcc29baf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/13/2019" /><Meta Name="ms.locfileid" Value="65558527" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9b884-101">Описывает Входящий HTTP-запроса к <see cref="T:System.Net.HttpListener" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="9b884-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span></span> <span data-ttu-id="9b884-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="9b884-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-103">Когда клиент отправляет запрос на универсальный код ресурса (URI) обрабатываются <xref:System.Net.HttpListener> объекта, <xref:System.Net.HttpListener> предоставляет <xref:System.Net.HttpListenerContext> , содержащий сведения о отправителя, запрос и ответ, который отправляется клиенту.</span><span class="sxs-lookup"><span data-stu-id="9b884-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="9b884-104"><xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> Возвращает <xref:System.Net.HttpListenerRequest> объект, который описывает запрос.</span><span class="sxs-lookup"><span data-stu-id="9b884-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="9b884-105"><xref:System.Net.HttpListenerRequest> Объект содержит сведения о запросе, например запрос <xref:System.Net.HttpListenerRequest.HttpMethod%2A> строку, <xref:System.Net.HttpListenerRequest.UserAgent%2A> строку и запросить данные основного текста (см. в разделе <xref:System.Net.HttpListenerRequest.InputStream%2A> свойство).</span><span class="sxs-lookup"><span data-stu-id="9b884-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="9b884-106">Чтобы ответить на запрос, необходимо получить ответ, связанный с помощью <xref:System.Net.HttpListenerContext.Response%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-107">В следующем примере кода показано, как получать и реагировать на них <xref:System.Net.HttpListenerRequest>.</span><span class="sxs-lookup"><span data-stu-id="9b884-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-108">Возвращает типы MIME, принятые клиентом.</span><span class="sxs-lookup"><span data-stu-id="9b884-108">Gets the MIME types accepted by the client.</span></span></summary>
        <value><span data-ttu-id="9b884-109">Объект <see cref="T:System.String" /> массив, содержащий имена типов, указанные в запросе <see langword="Accept" /> заголовок или <see langword="null" /> Если клиентский запрос не содержал <see langword="Accept" /> заголовка.</span><span class="sxs-lookup"><span data-stu-id="9b884-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-110">`Accept` Заголовок — это строка с разделителями-пробелами имен типов Multipurpose Internet Mail Extensions (MIME) (например, `image/jpeg`), которые указывают типы MIME, которые клиент готов для обработки в ответе.</span><span class="sxs-lookup"><span data-stu-id="9b884-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="9b884-111">`*/*` Запись указывает, что клиент принимает любой тип MIME.</span><span class="sxs-lookup"><span data-stu-id="9b884-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="9b884-112">Подробное описание `Accept` заголовок, см. в разделе RFC 2616, доступен на [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="9b884-112">For a detailed description of the `Accept` header, see RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="9b884-113">Полный список заголовков запросов, см. в разделе <xref:System.Net.HttpRequestHeader> перечисления.</span><span class="sxs-lookup"><span data-stu-id="9b884-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-114">В следующем примере кода демонстрируется использование этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetClientCertificate : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListenerRequest.BeginGetClientCertificate (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback"><span data-ttu-id="9b884-115">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="9b884-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="9b884-116">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="9b884-116">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="9b884-117">Этот объект передается в делегат обратного вызова при завершении операции.</span><span class="sxs-lookup"><span data-stu-id="9b884-117">This object is passed to the callback delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9b884-118">Начинает асинхронный запрос клиентского сертификата X.509 v.3.</span><span class="sxs-lookup"><span data-stu-id="9b884-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="9b884-119"><see cref="T:System.IAsyncResult" /> , Указывающее состояние операции.</span><span class="sxs-lookup"><span data-stu-id="9b884-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateError : int" Usage="System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-120">Возвращает код ошибки, который указывает на проблему с <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> предоставленных клиентом.</span><span class="sxs-lookup"><span data-stu-id="9b884-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span></span></summary>
        <value><span data-ttu-id="9b884-121"><see cref="T:System.Int32" /> Значение, содержащее код ошибки Windows.</span><span class="sxs-lookup"><span data-stu-id="9b884-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-122">Это свойство содержит код ошибки Windows, возвращаемых с безопасного канала (Schannel) поставщика поддержки безопасности интерфейс (SSPI), который используется для проверки сертификата.</span><span class="sxs-lookup"><span data-stu-id="9b884-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="9b884-123">Дополнительные сведения о поддержке SSPI Schannel, см. в разделе «Создание безопасного подключения с помощью Schannel» в документации по безопасности в [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library).</span><span class="sxs-lookup"><span data-stu-id="9b884-123">For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-124">В следующем примере кода проверяет это свойство, чтобы определить, содержит ли запрос действительный сертификат клиента.</span><span class="sxs-lookup"><span data-stu-id="9b884-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9b884-125">Сертификат клиента еще не была инициализирована с помощью вызова <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> или <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> методы</span><span class="sxs-lookup"><span data-stu-id="9b884-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods</span></span> 
<span data-ttu-id="9b884-126">-или-</span><span class="sxs-lookup"><span data-stu-id="9b884-126">-or -</span></span> 
<span data-ttu-id="9b884-127">Операция все еще выполняется.</span><span class="sxs-lookup"><span data-stu-id="9b884-127">The operation is still in progress.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding" Usage="System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-128">Возвращает кодировку содержимого, который может использоваться с данными, отправленный с запросом</span><span class="sxs-lookup"><span data-stu-id="9b884-128">Gets the content encoding that can be used with data sent with the request</span></span></summary>
        <value><span data-ttu-id="9b884-129"><see cref="T:System.Text.Encoding" /> Объект, подходящий для использования с данными в <see cref="P:System.Net.HttpListenerRequest.InputStream" /> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-129">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-130"><xref:System.Text.Encoding> Объект может использоваться для преобразования последовательности байтов в наборов символов (кодовые страницы) и символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="9b884-130">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="9b884-131">Это свойство использует значение charset `Content-Type` заголовка, чтобы определить кодировку.</span><span class="sxs-lookup"><span data-stu-id="9b884-131">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="9b884-132">Если эти сведения не доступна, это свойство возвращает <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9b884-132">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-133">В следующем примере кода показано использование <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-133">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength64 : int64" Usage="System.Net.HttpListenerRequest.ContentLength64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-134">Возвращает длину данных основного текста, содержащихся в запросе.</span><span class="sxs-lookup"><span data-stu-id="9b884-134">Gets the length of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="9b884-135">Значение из запроса <see langword="Content-Length" /> заголовка.</span><span class="sxs-lookup"><span data-stu-id="9b884-135">The value from the request's <see langword="Content-Length" /> header.</span></span> <span data-ttu-id="9b884-136">Это значение равно -1, если длина содержимого неизвестна.</span><span class="sxs-lookup"><span data-stu-id="9b884-136">This value is -1 if the content length is not known.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-137">`Content-Length` Заголовок выражает длина в байтах, который сопровождает запрос данных основного текста.</span><span class="sxs-lookup"><span data-stu-id="9b884-137">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="9b884-138">Полный список заголовков запросов, см. в разделе <xref:System.Net.HttpRequestHeader> перечисления.</span><span class="sxs-lookup"><span data-stu-id="9b884-138">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-139">В следующем примере кода используется <xref:System.Net.HttpListenerRequest.ContentLength64%2A> свойство при обработке данных основного текста.</span><span class="sxs-lookup"><span data-stu-id="9b884-139">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Net.HttpListenerRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-140">Возвращает тип MIME данных основного текста, содержащихся в запросе.</span><span class="sxs-lookup"><span data-stu-id="9b884-140">Gets the MIME type of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="9b884-141">Объект <see cref="T:System.String" /> , содержащее текст запроса <see langword="Content-Type" /> заголовка.</span><span class="sxs-lookup"><span data-stu-id="9b884-141">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-142">Если клиент включает данные основного текста в запросе, он объявляет тип Multipurpose Internet Mail Extensions (MIME) данных основного текста в `Content-Type` заголовка.</span><span class="sxs-lookup"><span data-stu-id="9b884-142">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="9b884-143">Например, тип MIME по умолчанию данные возвращаются из веб-формы с помощью `POST` метод `application/x-www-form-urlencoded`.</span><span class="sxs-lookup"><span data-stu-id="9b884-143">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="9b884-144">Полный список заголовков запросов, см. в разделе <xref:System.Net.HttpRequestHeader> перечисления и RFC 2616, доступен на [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="9b884-144">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="9b884-145"><xref:System.Net.HttpListenerRequest.ContentType%2A> Имеет значение null, если имеется не `Content-Type` заголовка в запросе.</span><span class="sxs-lookup"><span data-stu-id="9b884-145">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-146">В следующем примере кода показано, как использовать это свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-146">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Net.CookieCollection" Usage="System.Net.HttpListenerRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-147">Получает файлы cookie, отправленный с запросом.</span><span class="sxs-lookup"><span data-stu-id="9b884-147">Gets the cookies sent with the request.</span></span></summary>
        <value><span data-ttu-id="9b884-148">Объект <see cref="T:System.Net.CookieCollection" /> , содержащий файлы cookie, которые сопровождают запрос.</span><span class="sxs-lookup"><span data-stu-id="9b884-148">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span></span> <span data-ttu-id="9b884-149">Это свойство возвращает пустую коллекцию, если запрос не содержит файлы cookie.</span><span class="sxs-lookup"><span data-stu-id="9b884-149">This property returns an empty collection if the request does not contain cookies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-150">Файл cookie представляет имя/значение текстовые данные из веб-сервера, который хранится на компьютере локальную (клиентскую).</span><span class="sxs-lookup"><span data-stu-id="9b884-150">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-151">В следующем примере кода отображает значения файлов cookie, отправленный с запросом.</span><span class="sxs-lookup"><span data-stu-id="9b884-151">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
 [!code-vb[Net_Listener_Basic#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetClientCertificate : IAsyncResult -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.EndGetClientCertificate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="9b884-152">Незавершенный запрос сертификата.</span><span class="sxs-lookup"><span data-stu-id="9b884-152">The pending request for the certificate.</span></span></param>
        <summary><span data-ttu-id="9b884-153">Завершает асинхронный запрос клиентского сертификата X.509 v.3.</span><span class="sxs-lookup"><span data-stu-id="9b884-153">Ends an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="9b884-154"><see cref="T:System.IAsyncResult" /> Объект, который возвращается при начале операции.</span><span class="sxs-lookup"><span data-stu-id="9b884-154">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9b884-155">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9b884-155"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b884-156"><paramref name="asyncResult" /> не был получен путем вызова <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span><span class="sxs-lookup"><span data-stu-id="9b884-156"><paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9b884-157">Этот метод уже был вызван для операции, определяется <paramref name="asyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="9b884-157">This method was already called for the operation identified by <paramref name="asyncResult" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.GetClientCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b884-158">Извлекает сертификат X.509 v.3 клиента.</span><span class="sxs-lookup"><span data-stu-id="9b884-158">Retrieves the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="9b884-159">Объект <see cref="N:System.Security.Cryptography.X509Certificates" /> , содержащий сертификат X.509 v.3 клиента.</span><span class="sxs-lookup"><span data-stu-id="9b884-159">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-160">Этот метод блокируется до получения сертификата.</span><span class="sxs-lookup"><span data-stu-id="9b884-160">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9b884-161">Вызов этого метода для получения сертификата X.509 v.3 клиента выполняется, и поэтому нельзя сделать еще один вызов этого метода.</span><span class="sxs-lookup"><span data-stu-id="9b884-161">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span></span></exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificateAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="httpListenerRequest.GetClientCertificateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b884-162">Извлекает клиентский сертификат X.509 v.3 как асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="9b884-162">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9b884-163">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="9b884-163">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="9b884-164"><see cref="P:System.Threading.Tasks.Task`1.Result" /> Свойство в объекте задачи возвращает <see cref="N:System.Security.Cryptography.X509Certificates" /> , содержащий сертификат X.509 v.3 клиента.</span><span class="sxs-lookup"><span data-stu-id="9b884-164">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-165">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="9b884-165">This operation will not block.</span></span> <span data-ttu-id="9b884-166">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после получения сертификата.</span><span class="sxs-lookup"><span data-stu-id="9b884-166">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="9b884-167">Если вызов этого метода для получения сертификата X.509 v.3 клиента не выполняется, еще один вызов этого метода невозможно.</span><span class="sxs-lookup"><span data-stu-id="9b884-167">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEntityBody : bool" Usage="System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-168">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, ли запрос связанные данные основного текста.</span><span class="sxs-lookup"><span data-stu-id="9b884-168">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span></span></summary>
        <value><span data-ttu-id="9b884-169"><see langword="true" /> Если запрос связанные данные основного текста; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b884-169"><see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-170">Запрос, который отправляет данные на сервер с помощью `POST` метод, например, должен иметь тело сущности.</span><span class="sxs-lookup"><span data-stu-id="9b884-170">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-171">В следующем примере кода демонстрируется использование этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-171">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-172">Возвращает коллекцию пар "имя значение" заголовка, отправляются в запросе.</span><span class="sxs-lookup"><span data-stu-id="9b884-172">Gets the collection of header name/value pairs sent in the request.</span></span></summary>
        <value><span data-ttu-id="9b884-173">Объект <see cref="T:System.Net.WebHeaderCollection" /> , содержащий заголовки HTTP, включенное в запрос.</span><span class="sxs-lookup"><span data-stu-id="9b884-173">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-174">Заголовки запросов содержат сведения о метаданных.</span><span class="sxs-lookup"><span data-stu-id="9b884-174">Request headers contain metadata information.</span></span> <span data-ttu-id="9b884-175">Например заголовки могут содержать универсальный код ресурса (URI) ресурса, который перенаправляет клиент к серверу, удостоверение агента пользователя, применяемых клиентом, и допустимые MIME типов для данных в тексте ответа.</span><span class="sxs-lookup"><span data-stu-id="9b884-175">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="9b884-176">Полный список заголовков запросов, см. в разделе <xref:System.Net.HttpRequestHeader> перечисления.</span><span class="sxs-lookup"><span data-stu-id="9b884-176">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-177">В следующем примере кода отображает все данные в заданной <xref:System.Net.WebHeaderCollection> объекта.</span><span class="sxs-lookup"><span data-stu-id="9b884-177">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
 [!code-vb[Net_Listener_Basic#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Net.HttpListenerRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-178">Возвращает метод HTTP, указанный клиентом.</span><span class="sxs-lookup"><span data-stu-id="9b884-178">Gets the HTTP method specified by the client.</span></span></summary>
        <value><span data-ttu-id="9b884-179">Объект <see cref="T:System.String" /> , содержащий метод, используемый в запросе.</span><span class="sxs-lookup"><span data-stu-id="9b884-179">A <see cref="T:System.String" /> that contains the method used in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-180">Метод HTTP — обычно GET или POST, в зависимости от действия, предпочитает клиент.</span><span class="sxs-lookup"><span data-stu-id="9b884-180">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-181">В следующем примере кода демонстрируется использование этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-181">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Net.HttpListenerRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-182">Возвращает поток, который содержит данные основного текста, отправленные клиентом.</span><span class="sxs-lookup"><span data-stu-id="9b884-182">Gets a stream that contains the body data sent by the client.</span></span></summary>
        <value><span data-ttu-id="9b884-183">Доступный для чтения <see cref="T:System.IO.Stream" /> объект, который содержит байты, отправленные клиентом в тексте запроса.</span><span class="sxs-lookup"><span data-stu-id="9b884-183">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span></span> <span data-ttu-id="9b884-184">Это свойство возвращает <see cref="F:System.IO.Stream.Null" /> Если данные не отправляются с запросом.</span><span class="sxs-lookup"><span data-stu-id="9b884-184">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-185">Если клиент передает данные (например, с помощью HTTP `POST` метод), объект, возвращенный этим методом содержит эти данные.</span><span class="sxs-lookup"><span data-stu-id="9b884-185">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b884-186">Закрытие запроса не закрывает поток, возвращенный этим свойством.</span><span class="sxs-lookup"><span data-stu-id="9b884-186">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="9b884-187">Если вы больше не нужна потока, вы должны закрыть путем вызова <xref:System.IO.Stream.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="9b884-187">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-188">В следующем примере кода демонстрируется использование этого свойства для чтения данные, отправляемые вместе с запросом.</span><span class="sxs-lookup"><span data-stu-id="9b884-188">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="9b884-189">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="9b884-189">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9b884-190">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9b884-190">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Always returns false")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-191">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, прошел ли клиент, отправивший этот запрос.</span><span class="sxs-lookup"><span data-stu-id="9b884-191">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span></span></summary>
        <value><span data-ttu-id="9b884-192"><see langword="true" /> Если клиент прошел проверку подлинности; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b884-192"><see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-193">Приложение запрашивает проверку подлинности клиента с помощью <xref:System.Net.HttpListener.AuthenticationSchemes%2A> или <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-193">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="9b884-194">Приложение не получает <xref:System.Net.HttpListenerContext> запросов от клиентов, которые не прошли успешно.</span><span class="sxs-lookup"><span data-stu-id="9b884-194">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-195">В следующем примере кода отображает значение <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-195">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Net.HttpListenerRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-196">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, является ли запрос отправлен с локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="9b884-196">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span></span></summary>
        <value><span data-ttu-id="9b884-197"><see langword="true" /> Если создан запрос на том же компьютере, что <see cref="T:System.Net.HttpListener" /> объект, который запрос; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b884-197"><see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-198">Приложения могут использовать это свойство, чтобы выполнять специальную обработку, когда запросы с локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="9b884-198">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-199">В следующем примере кода показано использование <xref:System.Net.HttpListenerRequest.IsLocal%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-199">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-200">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, используется ли протокол Secure Sockets Layer (SSL) TCP-соединение, используемое для отправки запроса.</span><span class="sxs-lookup"><span data-stu-id="9b884-200">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span></span></summary>
        <value><span data-ttu-id="9b884-201"><see langword="true" /> Если подключения TCP используется SSL; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b884-201"><see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-202">Чтобы запросить безопасное подключение, использует запрос клиента <xref:System.Uri.UriSchemeHttps> вместо <xref:System.Uri.UriSchemeHttp>.</span><span class="sxs-lookup"><span data-stu-id="9b884-202">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="9b884-203">Если не удается подключиться с помощью протокола SSL, клиент получает <xref:System.Net.WebException> , предоставляющий сведения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="9b884-203">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-204">В следующем примере кода показано использование <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-204">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-205">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, было ли подключение TCP запросом WebSocket.</span><span class="sxs-lookup"><span data-stu-id="9b884-205">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span></span></summary>
        <value><span data-ttu-id="9b884-206">Возвращает <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="9b884-206">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="9b884-207"><see langword="true" /> Если подключение TCP — запрос WebSocket; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b884-207"><see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool" Usage="System.Net.HttpListenerRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-208">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, требует ли клиент постоянного подключения.</span><span class="sxs-lookup"><span data-stu-id="9b884-208">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span></span></summary>
        <value><span data-ttu-id="9b884-209"><see langword="true" /> Если подключение должно быть открытым; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b884-209"><see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-210">Если HTTP-клиент и сервер должны для обмена данными несколько раз за короткий промежуток времени, постоянное подключение ускорит связь, позволяя им избежать дополнительной нагрузки, необходимые для открытия и закрытия подключения TCP для каждого сообщения.</span><span class="sxs-lookup"><span data-stu-id="9b884-210">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="9b884-211">Для клиентов, использующих HTTP/1.1, значение по умолчанию для этого свойства — `true`.</span><span class="sxs-lookup"><span data-stu-id="9b884-211">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-212">В следующем примере кода демонстрируется использование этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-212">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-213">Возвращает сервер IP-адреса и порта номер, на который направляется запрос.</span><span class="sxs-lookup"><span data-stu-id="9b884-213">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="9b884-214"><see cref="T:System.Net.IPEndPoint" /> , Представляющий IP-адрес, который отправляется запрос.</span><span class="sxs-lookup"><span data-stu-id="9b884-214">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-215">Это свойство полезно в тех случаях, когда необходимо реагировать на запросы, основываясь на том, как они будут удовлетворены.</span><span class="sxs-lookup"><span data-stu-id="9b884-215">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-216">В следующем примере кода демонстрируется использование этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-216">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-217">Возвращает версию HTTP, используемую отправляющим запрос клиентом.</span><span class="sxs-lookup"><span data-stu-id="9b884-217">Gets the HTTP version used by the requesting client.</span></span></summary>
        <value><span data-ttu-id="9b884-218">Объект <see cref="T:System.Version" /> , идентифицирующий версию клиента HTTP.</span><span class="sxs-lookup"><span data-stu-id="9b884-218">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-219">Возможности различных версий HTTP указаны в документах, доступных на [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="9b884-219">The capabilities of different HTTP versions are specified in the documents available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-220">В следующем примере кода демонстрируется использование этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-220">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-221">Получает строку запроса, включенное в запрос.</span><span class="sxs-lookup"><span data-stu-id="9b884-221">Gets the query string included in the request.</span></span></summary>
        <value><span data-ttu-id="9b884-222">Объект <see cref="T:System.Collections.Specialized.NameValueCollection" /> объект, содержащий данные запроса, включенное в запрос <see cref="P:System.Net.HttpListenerRequest.Url" />.</span><span class="sxs-lookup"><span data-stu-id="9b884-222">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-223">В URL-адрес данные запроса отделяется от сведений пути знак вопроса (?).</span><span class="sxs-lookup"><span data-stu-id="9b884-223">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="9b884-224">Пары "имя/значение" разделяются точками знак равенства (=).</span><span class="sxs-lookup"><span data-stu-id="9b884-224">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="9b884-225">Для доступа к данным запроса как одну строку, получить <xref:System.Uri.Query%2A> значение свойства из <xref:System.Uri> объект, возвращаемый <xref:System.Net.HttpListenerRequest.Url%2A>.</span><span class="sxs-lookup"><span data-stu-id="9b884-225">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b884-226">Запросы без знака равенства (пример: [ http://www.contoso.com/query.htm?Name ](http://www.contoso.com/query.htm?Name) ) добавляются к `null` в <xref:System.Collections.Specialized.NameValueCollection>.</span><span class="sxs-lookup"><span data-stu-id="9b884-226">Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-227">В следующем примере кода показано использование <xref:System.Net.HttpListenerRequest.QueryString%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-227">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Net.HttpListenerRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-228">Получает информацию URL-адреса (без узла и порта), запрошенной клиентом.</span><span class="sxs-lookup"><span data-stu-id="9b884-228">Gets the URL information (without the host and port) requested by the client.</span></span></summary>
        <value><span data-ttu-id="9b884-229">Объект <see cref="T:System.String" /> , содержащий исходный URL-адрес для данного запроса.</span><span class="sxs-lookup"><span data-stu-id="9b884-229">A <see cref="T:System.String" /> that contains the raw URL for this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-230">Исходный URL-адрес определяется как часть URL-адрес следующие сведения о домене.</span><span class="sxs-lookup"><span data-stu-id="9b884-230">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="9b884-231">В строке URL-адрес `http://www.contoso.com/articles/recent.aspx`, исходный URL-адрес является `/articles/recent.aspx`.</span><span class="sxs-lookup"><span data-stu-id="9b884-231">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="9b884-232">Исходный URL-адрес включает строку запроса, при его наличии.</span><span class="sxs-lookup"><span data-stu-id="9b884-232">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="9b884-233">Для получения сведений узла и порта, использовать <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-233">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-234">В следующем примере кода показано использование <xref:System.Net.HttpListenerRequest.RawUrl%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-234">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
 [!code-vb[Net_Listener_Basic#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-235">Возвращает IP-адреса и порта номер, из которого создан запрос клиента.</span><span class="sxs-lookup"><span data-stu-id="9b884-235">Gets the client IP address and port number from which the request originated.</span></span></summary>
        <value><span data-ttu-id="9b884-236"><see cref="T:System.Net.IPEndPoint" /> , Представляющий IP-адрес и порт номер откуда поступил запрос.</span><span class="sxs-lookup"><span data-stu-id="9b884-236">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9b884-237">В следующем примере кода демонстрируется использование этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-237">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestTraceIdentifier : Guid" Usage="System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Always returns Guid.Empty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-238">Возвращает идентификатор запроса входящего HTTP-запроса.</span><span class="sxs-lookup"><span data-stu-id="9b884-238">Gets the request identifier of the incoming HTTP request.</span></span></summary>
        <value><span data-ttu-id="9b884-239">Объект <see cref="T:System.Guid" /> , содержащий идентификатор HTTP-запроса.</span><span class="sxs-lookup"><span data-stu-id="9b884-239">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="System.Net.HttpListenerRequest.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-240">Получает имя поставщика услуг (SPN), было отправлено клиентом в запросе.</span><span class="sxs-lookup"><span data-stu-id="9b884-240">Gets the Service Provider Name (SPN) that the client sent on the request.</span></span></summary>
        <value><span data-ttu-id="9b884-241">Объект <see cref="T:System.String" /> , содержащий имя участника-службы, отправленное клиентом в запросе.</span><span class="sxs-lookup"><span data-stu-id="9b884-241">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-242">Приложение может использовать <xref:System.Net.HttpListenerRequest.ServiceName%2A> для выполнения пользовательской проверки, укажите имя службы (SPN).</span><span class="sxs-lookup"><span data-stu-id="9b884-242">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9b884-243">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="9b884-243">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.HttpListenerRequest.TransportContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-244">Получает <see cref="T:System.Net.TransportContext" /> для клиентского запроса.</span><span class="sxs-lookup"><span data-stu-id="9b884-244">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span></span></summary>
        <value><span data-ttu-id="9b884-245">Объект <see cref="T:System.Net.TransportContext" /> для запроса клиента.</span><span class="sxs-lookup"><span data-stu-id="9b884-245">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-246"><xref:System.Net.TransportContext> Свойство может использоваться для получения токена привязки канала (CBT) для <xref:System.Net.HttpListenerRequest> которого было отправлено по протоколу HTTPS.</span><span class="sxs-lookup"><span data-stu-id="9b884-246">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="9b884-247">Приложение может использовать <xref:System.Net.TransportContext> для выполнения пользовательской проверки подлинности с помощью вызовов в машинном коде Win32 [AcceptSecurityContext](https://go.microsoft.com/fwlink/?LinkId=147021) функции.</span><span class="sxs-lookup"><span data-stu-id="9b884-247">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](https://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="9b884-248">Если приложение пытается получить токен привязки канала (CBT) из этого <xref:System.Net.HttpListenerRequest.TransportContext%2A> свойства с помощью <xref:System.Net.TransportContext.GetChannelBinding%2A> метод и <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> не <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, а затем <xref:System.Net.HttpListenerRequest> вызовет <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="9b884-248">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="9b884-249"><xref:System.Net.HttpListenerRequest> Переопределяет <xref:System.Net.TransportContext.GetChannelBinding%2A> метод с внутренней реализации.</span><span class="sxs-lookup"><span data-stu-id="9b884-249">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9b884-250">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="9b884-250">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Net.HttpListenerRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-251">Получает <see cref="T:System.Uri" /> объекта, запрошенной клиентом.</span><span class="sxs-lookup"><span data-stu-id="9b884-251">Gets the <see cref="T:System.Uri" /> object requested by the client.</span></span></summary>
        <value><span data-ttu-id="9b884-252">Объект <see cref="T:System.Uri" /> , идентифицирующий ресурс, запрошенный клиентом.</span><span class="sxs-lookup"><span data-stu-id="9b884-252">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-253"><xref:System.Net.HttpListenerRequest.Url%2A> Свойство позволяет получить всю информацию, доступные из <xref:System.Uri> объекта.</span><span class="sxs-lookup"><span data-stu-id="9b884-253">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="9b884-254">Если вам нужно знать только необработанный текст запроса URI, рассмотрите возможность использования <xref:System.Net.HttpListenerRequest.RawUrl%2A> свойство вместо этого.</span><span class="sxs-lookup"><span data-stu-id="9b884-254">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="9b884-255"><xref:System.Net.HttpListenerRequest.Url%2A> Свойство имеет значение null Если <xref:System.Uri> от клиента не может быть проанализировано.</span><span class="sxs-lookup"><span data-stu-id="9b884-255">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="9b884-256"><xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> Указывает свойство, если <xref:System.Net.HttpListener> использует преобразованный в escape-последовательность URI вместо преобразованного где преобразуются значения, закодированные и других нормализации действия предпринимаются.</span><span class="sxs-lookup"><span data-stu-id="9b884-256">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="9b884-257">Когда <xref:System.Net.HttpListener> экземпляр получает запрос через `http.sys` службы, она создает экземпляр в строке URI, предоставляемые `http.sys`и предоставляет его как <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-257">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="9b884-258">`http.sys` Служба предоставляет две строки URI запроса:</span><span class="sxs-lookup"><span data-stu-id="9b884-258">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="9b884-259">Преобразованный в URI</span><span class="sxs-lookup"><span data-stu-id="9b884-259">Raw URI</span></span>  
  
-   <span data-ttu-id="9b884-260">Преобразованный URI</span><span class="sxs-lookup"><span data-stu-id="9b884-260">Converted URI</span></span>  
  
 <span data-ttu-id="9b884-261">Необработанный URL-адрес является <xref:System.Uri?displayProperty=nameWithType> в строке запроса HTTP-запроса:</span><span class="sxs-lookup"><span data-stu-id="9b884-261">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="9b884-262">Преобразованный в URI, предоставляемые `http.sys` для запроса, упомянутого выше, является «/ path /».</span><span class="sxs-lookup"><span data-stu-id="9b884-262">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="9b884-263">Представляет строку, следующую команду HTTP, так как он был отправлен по сети.</span><span class="sxs-lookup"><span data-stu-id="9b884-263">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="9b884-264">`http.sys` Служба создает преобразованный URI из сведений, предоставленных в запросе, с помощью URI, предоставленный в строке запроса HTTP и должны быть переадресованы заголовок узла для определения сервера-источника запроса.</span><span class="sxs-lookup"><span data-stu-id="9b884-264">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="9b884-265">Это делается путем сравнения сведений из запроса с помощью набора зарегистрированных префиксов URI.</span><span class="sxs-lookup"><span data-stu-id="9b884-265">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="9b884-266">Чтобы иметь возможность сравнить эти значения, необходимо выполнить некоторую нормализацию запроса.</span><span class="sxs-lookup"><span data-stu-id="9b884-266">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="9b884-267">Для примера выше преобразованный URI будет выглядеть следующим образом:</span><span class="sxs-lookup"><span data-stu-id="9b884-267">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="9b884-268">`http.sys` Службы объединяет <xref:System.Uri.Host%2A?displayProperty=nameWithType> значение свойства и строку в строку запроса для создания преобразованный URI.</span><span class="sxs-lookup"><span data-stu-id="9b884-268">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="9b884-269">Кроме того `http.sys` и <xref:System.Uri?displayProperty=nameWithType> класс также сделайте следующее:</span><span class="sxs-lookup"><span data-stu-id="9b884-269">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="9b884-270">Отмена переходов все процентные значения.</span><span class="sxs-lookup"><span data-stu-id="9b884-270">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="9b884-271">Преобразует закодированные символы не из набора ASCII в представление символов UTF-16.</span><span class="sxs-lookup"><span data-stu-id="9b884-271">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="9b884-272">Обратите внимание на то, что символы UTF-8 и ANSI/DBCS поддерживаются, а также символы Юникода (кодировка Юникод с использованием формата % uXXXX).</span><span class="sxs-lookup"><span data-stu-id="9b884-272">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="9b884-273">Выполняет другие действия нормализации, такие как сжатие пути.</span><span class="sxs-lookup"><span data-stu-id="9b884-273">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="9b884-274">Так как запрос не содержит никакой информации о кодировку, используемую для значения, закодированные процентами, может оказаться невозможно определить правильную кодировку просто, путем синтаксического анализа закодированные значения.</span><span class="sxs-lookup"><span data-stu-id="9b884-274">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="9b884-275">Таким образом `http.sys` предоставляет два раздела реестра для изменения процесса:</span><span class="sxs-lookup"><span data-stu-id="9b884-275">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="9b884-276">Раздел реестра .</span><span class="sxs-lookup"><span data-stu-id="9b884-276">Registry Key</span></span>|<span data-ttu-id="9b884-277">Значение по умолчанию</span><span class="sxs-lookup"><span data-stu-id="9b884-277">Default Value</span></span>|<span data-ttu-id="9b884-278">Описание</span><span class="sxs-lookup"><span data-stu-id="9b884-278">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="9b884-279">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="9b884-279">EnableNonUTF8</span></span>|<span data-ttu-id="9b884-280">1</span><span class="sxs-lookup"><span data-stu-id="9b884-280">1</span></span>|<span data-ttu-id="9b884-281">Если значение равно нулю, `http.sys` принимает только URL-адреса в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9b884-281">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="9b884-282">Если ненулевое значение, `http.sys` также принимает URL-адреса в кодировке ANSI или кодировке (DBCS) в запросах.</span><span class="sxs-lookup"><span data-stu-id="9b884-282">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="9b884-283">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="9b884-283">FavorUTF8</span></span>|<span data-ttu-id="9b884-284">1</span><span class="sxs-lookup"><span data-stu-id="9b884-284">1</span></span>|<span data-ttu-id="9b884-285">Если ненулевое значение, `http.sys` всегда пытается декодировать URL-адрес как UTF-8; Если это преобразование завершается неудачей и EnableNonUTF8 не равно нулю, Http.sys, а затем пытается декодировать его как ANSI или DBCS.</span><span class="sxs-lookup"><span data-stu-id="9b884-285">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="9b884-286">Если значение равно нулю (и EnableNonUTF8 не равно нулю), `http.sys` пытается декодировать его как ANSI или DBCS; Если это не обнаруживаются, осуществляется попытка преобразования UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9b884-286">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="9b884-287">Когда <xref:System.Net.HttpListener> получает запрос, он использует URI, преобразованное из `http.sys` качестве входных данных для <xref:System.Net.HttpListenerRequest.Url%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-287">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="9b884-288">Нет необходимости поддерживать символы помимо символов и цифр в URI.</span><span class="sxs-lookup"><span data-stu-id="9b884-288">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="9b884-289">Например, следующий URI, который используется для получения данных о заказчике для клиента номер «1/3812»:</span><span class="sxs-lookup"><span data-stu-id="9b884-289">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="9b884-290">Обратите внимание, закодированные процентами косую черту в Uri (% 2F).</span><span class="sxs-lookup"><span data-stu-id="9b884-290">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="9b884-291">Это необходимо, так как в этом случае косая черта представляет данные, а не завершает путь.</span><span class="sxs-lookup"><span data-stu-id="9b884-291">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="9b884-292">Передачи строки конструктору Uri приведет к следующим URI:</span><span class="sxs-lookup"><span data-stu-id="9b884-292">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="9b884-293">Разделение на сегменты пути приведет к появлению следующих элементов:</span><span class="sxs-lookup"><span data-stu-id="9b884-293">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="9b884-294">Это не является целью отправителя запроса.</span><span class="sxs-lookup"><span data-stu-id="9b884-294">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="9b884-295">Если <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> свойство имеет значение false, то при <xref:System.Net.HttpListener> получает запрос, он использует преобразованный URI вместо преобразованного из `http.sys` качестве входных данных для <xref:System.Net.HttpListenerRequest.Url%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-295">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-296">В следующем примере кода показано использование <xref:System.Net.HttpListenerRequest.Url%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9b884-296">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md"><span data-ttu-id="9b884-297">Схема параметров сети</span><span class="sxs-lookup"><span data-stu-id="9b884-297">Network Settings Schema</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f121fd-3f2e-4033-bb39-48ae996bfbd9"><span data-ttu-id="9b884-298">&lt;httpListener&gt; (сетевые параметры)</span><span class="sxs-lookup"><span data-stu-id="9b884-298">&lt;httpListener&gt; Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-299">Получает универсальный код ресурса (URI) ресурса, который перенаправляет клиент к серверу.</span><span class="sxs-lookup"><span data-stu-id="9b884-299">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span></span></summary>
        <value><span data-ttu-id="9b884-300">Объект <see cref="T:System.Uri" /> , содержащий текст запроса <see cref="F:System.Net.HttpRequestHeader.Referer" /> заголовок, или <see langword="null" /> Если заголовок не был включен в запрос.</span><span class="sxs-lookup"><span data-stu-id="9b884-300">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-301">Если клиент выполнил гиперссылки к запрашиваемому URI, запрос может содержать `Referrer` заголовок, который определяет URI ресурса, который содержал гиперссылки.</span><span class="sxs-lookup"><span data-stu-id="9b884-301">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="9b884-302">Клиенты могут подделывать или отказаться от представления <xref:System.Net.HttpRequestHeader.Referer> заголовка.</span><span class="sxs-lookup"><span data-stu-id="9b884-302">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="9b884-303">Следовательно, тогда как <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> свойство можно использовать для определения основных тенденций в веб-трафика; не следует использовать его как часть схемы авторизации для управления доступом к данным.</span><span class="sxs-lookup"><span data-stu-id="9b884-303">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="9b884-304">Полный список заголовков запросов, см. в разделе <xref:System.Net.HttpRequestHeader> перечисления.</span><span class="sxs-lookup"><span data-stu-id="9b884-304">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="9b884-305"><xref:System.Net.HttpListenerRequest.UrlReferrer%2A> Имеет значение null, если имеется не `Referrer` заголовка в запросе или когда `Referrer` заголовок присутствует в запросе, но не выполняет анализ на допустимый <xref:System.Uri>.</span><span class="sxs-lookup"><span data-stu-id="9b884-305">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-306">В следующем примере кода демонстрируется использование этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-306">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Net.HttpListenerRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-307">Возвращает агента пользователя, предоставленного клиентом.</span><span class="sxs-lookup"><span data-stu-id="9b884-307">Gets the user agent presented by the client.</span></span></summary>
        <value><span data-ttu-id="9b884-308">Объект <see cref="T:System.String" /> , содержащий текст запроса <see langword="User-Agent" /> заголовка.</span><span class="sxs-lookup"><span data-stu-id="9b884-308">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-309">`User-Agent` Заголовок обычно содержит текст, который определяет имя и номер версии программного обеспечения, используемый для создания запроса.</span><span class="sxs-lookup"><span data-stu-id="9b884-309">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="9b884-310">Полный список заголовков запросов, см. в разделе <xref:System.Net.HttpRequestHeader> перечисления.</span><span class="sxs-lookup"><span data-stu-id="9b884-310">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="9b884-311"><xref:System.Net.HttpListenerRequest.UserAgent%2A> Имеет значение null, если имеется не `User-Agent` заголовка в запросе.</span><span class="sxs-lookup"><span data-stu-id="9b884-311">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-312">В следующем примере кода демонстрируется использование этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-312">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-313">Возвращает сервер IP-адреса и порта номер, на который направляется запрос.</span><span class="sxs-lookup"><span data-stu-id="9b884-313">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="9b884-314">Объект <see cref="T:System.String" /> , содержащий сведения об адресе узла.</span><span class="sxs-lookup"><span data-stu-id="9b884-314">A <see cref="T:System.String" /> that contains the host address information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-315">Сведения, возвращаемые этим свойством доступен также в <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-315">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-316">В следующем примере кода отображает значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-316">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Net.HttpListenerRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-317">Получает DNS-имя и, если указано, номер порта, указанный клиентом.</span><span class="sxs-lookup"><span data-stu-id="9b884-317">Gets the DNS name and, if provided, the port number specified by the client.</span></span></summary>
        <value><span data-ttu-id="9b884-318">Объект <see cref="T:System.String" /> значение, содержащее текст запроса <see langword="Host" /> заголовка.</span><span class="sxs-lookup"><span data-stu-id="9b884-318">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-319">`Host` Заголовок содержит имя запрашиваемый сервер узла и номер порта, если указано, разделенные двоеточием (например, `www.contoso.com:8080`).</span><span class="sxs-lookup"><span data-stu-id="9b884-319">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="9b884-320">Это свойство можно использовать для возвращения различных ответов в зависимости от того, имя узла, указанное в запросе.</span><span class="sxs-lookup"><span data-stu-id="9b884-320">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="9b884-321">Полный список заголовков запросов, см. в разделе <xref:System.Net.HttpRequestHeader> перечисления.</span><span class="sxs-lookup"><span data-stu-id="9b884-321">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-322">В следующем примере кода демонстрируется использование этого свойства.</span><span class="sxs-lookup"><span data-stu-id="9b884-322">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Net.HttpListenerRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b884-323">Возвращает естественные языки, предпочитаемые для ответа.</span><span class="sxs-lookup"><span data-stu-id="9b884-323">Gets the natural languages that are preferred for the response.</span></span></summary>
        <value><span data-ttu-id="9b884-324">Объект <see cref="T:System.String" /> массив, содержащий языки, указанные в запросе <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> заголовок или <see langword="null" /> Если клиентский запрос не содержал <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> заголовка.</span><span class="sxs-lookup"><span data-stu-id="9b884-324">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b884-325">Подробное описание `Accept-Language` заголовок, см. в разделе RFC 2616 14,4, найти по адресу [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="9b884-325">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="9b884-326">Полный список заголовков запросов, см. в разделе <xref:System.Net.HttpRequestHeader> перечисления.</span><span class="sxs-lookup"><span data-stu-id="9b884-326">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b884-327">В следующем примере кода отображаются языки из запроса `Accept-Language` заголовка.</span><span class="sxs-lookup"><span data-stu-id="9b884-327">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>