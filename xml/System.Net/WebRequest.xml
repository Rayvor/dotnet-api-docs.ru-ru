<Type Name="WebRequest" FullName="System.Net.WebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="567cf24ae0648d47567da00b234f4e53cfbf3b86" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67246008" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebRequest : MarshalByRefObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit WebRequest extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebRequest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebRequest&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequest abstract : MarshalByRefObject, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WebRequest = class&#xA;    inherit MarshalByRefObject&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Выполняет запрос к URI. Это класс <see langword="abstract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  Мы не рекомендуем использовать `WebRequest` или его производные классы для разработки новых приложений. Вместо этого используйте <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> класса.

 <xref:System.Net.WebRequest> является `abstract` базовый класс для. NET модели запрос ответ для доступа к данным из Интернета. Приложения, использующего модель запрос/ответ могут запрашивать данные из Интернета в виде зависит от протокола, в котором приложение работает с экземплярами <xref:System.Net.WebRequest> класса во время выполнения с определенным протоколом классы-потомки сведения о запрос.  
  
 Запросы, отправляемые из приложения для конкретного кода URI, таких как веб-страницы на сервере. URI определяет правильный вложенный класс для создания из списка <xref:System.Net.WebRequest> потомков, зарегистрированного для приложения. <xref:System.Net.WebRequest> потомки обычно регистрируются для обработки конкретного протокола, например HTTP или FTP, но могут быть зарегистрированы для обработки запросов к конкретному серверу или пути на сервере.  
  
 <xref:System.Net.WebRequest> Класса вызывает <xref:System.Net.WebException> при возникновении ошибок во время доступа к Интернет-ресурса. <xref:System.Net.WebException.Status%2A> Является одним из <xref:System.Net.WebExceptionStatus> значений, определяющее источник ошибки. Когда <xref:System.Net.WebException.Status%2A> — <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, <xref:System.Net.WebException.Response%2A> свойство содержит <xref:System.Net.WebResponse> полученных от Интернет-ресурса.  
  
 Так как <xref:System.Net.WebRequest> класс является `abstract` класса фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Используйте <xref:System.Net.WebRequest.Create%2A> метод для инициализации новых <xref:System.Net.WebRequest> экземпляров. Не используйте <xref:System.Net.WebRequest> конструктор.  
  
> [!NOTE]
>  Если приложение, создающее объект WebRequest, выполняется с учетными данными обычного пользователя, приложение не будет иметь доступ к сертификатам, установленным в хранилище локального компьютера, если только явным образом предоставлены разрешения для пользователя для этого.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Net.WebRequest> экземпляра и возврата ответа.  
  
 [!code-cpp[NclWebRequestSimple#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#1)]
 [!code-csharp[NclWebRequestSimple#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#1)]
 [!code-vb[NclWebRequestSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">для доступа к запрашиваемому URL-АДРЕСУ или любой URI, который перенаправляется запрос. Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Net.WebRequest" />, необходимо переопределить следующие члены: <see cref="P:System.Net.WebRequest.Method" />, <see cref="P:System.Net.WebRequest.RequestUri" />, <see cref="P:System.Net.WebRequest.Headers" />, <see cref="P:System.Net.WebRequest.ContentLength" />, <see cref="P:System.Net.WebRequest.ContentType" />, <see cref="P:System.Net.WebRequest.Credentials" />, <see cref="P:System.Net.WebRequest.PreAuthenticate" />, <see cref="M:System.Net.WebRequest.GetRequestStream" />, <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" /> , <see cref="M:System.Net.WebRequest.GetResponse" />, <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />, и <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />. Кроме того, необходимо предоставить реализацию <see cref="T:System.Net.IWebRequestCreate" /> интерфейс, который определяет <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> метод, используемый при вызове <see cref="M:System.Net.WebRequest.Create(System.Uri)" />. Необходимо зарегистрировать класс, реализующий <see cref="T:System.Net.IWebRequestCreate" /> интерфейс, с помощью <see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /> метода или файле конфигурации.</para></block>
    <altmember cref="T:System.Net.HttpWebRequest" />
    <related type="Article" href="~/docs/framework/network-programming/requesting-data.md">Запрос данных</related>
    <related type="Article" href="~/docs/framework/network-programming/programming-pluggable-protocols.md">программирование подключаемых протоколов</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.WebRequest" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.WebRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Net.WebRequest.Create%2A> метод для инициализации новых <xref:System.Net.WebRequest> экземпляров. Не используйте конструктор.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Net.WebRequest> экземпляра путем вызова <xref:System.Net.WebRequest.Create%2A> метод <xref:System.Net.WebRequest> класса.  
  
 [!code-cpp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic WebRequest.WebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.WebRequest : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.WebRequest" Usage="new System.Net.WebRequest (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации нового экземпляра класса <see cref="T:System.Net.WebRequest" />.</param>
        <param name="streamingContext"><see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник сериализованного потока, связанного с новым экземпляром <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.WebRequest" /> на основе указанных экземпляров классов <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При реализации в производном классе реализует этот конструктор <xref:System.Runtime.Serialization.ISerializable> интерфейс для <xref:System.Net.WebRequest> -потомков.  
  
 Обратите внимание, что приложение должно работать в режиме полного доверия, при использовании сериализации.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если данный конструктор не переопределен во вложенном классе, предпринимаются все возможные попытки получить к нему доступ.</exception>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">Сериализация XML и SOAP</related>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет запрос.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Abort%2A> Метод отменяет асинхронные запросы к Интернет-ресурсам, к работе с <xref:System.Net.WebRequest.BeginGetResponse%2A> метод.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если метод не переопределен во вложенном классе, предпринимаются все возможные попытки получить к нему доступ.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.AuthenticationLevel AuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.AuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationLevel As AuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::AuthenticationLevel AuthenticationLevel { System::Net::Security::AuthenticationLevel get(); void set(System::Net::Security::AuthenticationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationLevel : System.Net.Security.AuthenticationLevel with get, set" Usage="System.Net.WebRequest.AuthenticationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.AuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значения, указывающие уровень проверки подлинности и олицетворения, используемые для этого запроса.</summary>
        <value>Поразрядное сочетание значений <see cref="T:System.Net.Security.AuthenticationLevel" />. Значение по умолчанию — <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.  
  
При взаимной проверке подлинности как клиент, так и сервер предоставляют учетные данные для идентификации. Значения <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> и <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> применяются для проверки подлинности с использованием Kerberos. Проверка подлинности по протоколу Kerberos может поддерживаться напрямую или использоваться, если для выбора фактического протокола безопасности применяется протокол безопасности Negotiate. Дополнительные сведения о протоколах проверки подлинности см. в разделе [проверки подлинности через Интернет](https://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a).  
  
Чтобы определить, выполнена ли взаимная проверка подлинности, просмотрите свойство <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" />.  
  
Если указать значение флага проверки подлинности <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" />, и при этом не произойдет взаимной проверки подлинности, приложение получит исключение <see cref="T:System.IO.IOException" /> с внутренним исключением <see cref="T:System.Net.ProtocolViolationException" />, указывающим на сбой взаимной проверки подлинности.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода задает значение этого свойства.  
  
 [!code-cpp[NclCredPolicy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#1)]
 [!code-csharp[NclCredPolicy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">Делегат <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Объект, содержащий сведения о состоянии для данного асинхронного запроса.</param>
        <summary>При переопределении во вложенном классе предоставляет асинхронную версию метода <see cref="M:System.Net.WebRequest.GetRequestStream" />.</summary>
        <returns>Класс <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронный запрос.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.BeginGetRequestStream%2A> Метод начинает выполнение асинхронного запроса для потока, используемого для отправки данных в Интернет-ресурса. Метод обратного вызова, который реализует <xref:System.AsyncCallback> делегат использует <xref:System.Net.WebRequest.EndGetRequestStream%2A> метод для возврата потока запроса.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Net.WebRequest.BeginGetRequestStream%2A> асинхронно получить поток запроса.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если метод не переопределен во вложенном классе, предпринимаются все возможные попытки получить к нему доступ.</exception>
        <altmember cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md">Выполнение асинхронных запросов</related>
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">Делегат <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Объект, содержащий сведения о состоянии для данного асинхронного запроса.</param>
        <summary>При переопределении во вложенном классе начинает асинхронный запрос интернет-ресурса.</summary>
        <returns>Класс <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронный запрос.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.BeginGetResponse%2A> Метод начинает асинхронный запрос ответа. Метод обратного вызова, который реализует <xref:System.AsyncCallback> делегат использует <xref:System.Net.WebRequest.EndGetResponse%2A> метод для возврата <xref:System.Net.WebResponse> от Интернет-ресурса.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Если возникает исключение WebException используйте <xref:System.Net.WebException.Response%2A> и <xref:System.Net.WebException.Status%2A> свойств исключения, чтобы определить ответ от сервера.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Net.WebRequest.BeginGetResponse%2A> для асинхронного запроса целевого ресурса. После получения ресурса, будет выполняться указанный метод обратного вызова.  
  
 [!code-cpp[WebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#2)]
 [!code-csharp[WebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#2)]
 [!code-vb[WebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если метод не переопределен во вложенном классе, предпринимаются все возможные попытки получить к нему доступ.</exception>
        <altmember cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
        <altmember cref="M:System.Net.WebRequest.GetResponse" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md">Выполнение асинхронных запросов</related>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public virtual System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает политику кэширования для этого запроса.</summary>
        <value>Объект <see cref="T:System.Net.Cache.RequestCachePolicy" />, определяющий политику кэширования.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текущей политикой кэша и наличие запрошенного ресурса в кэше определяют, можно ли получить ответ из кэша. Использование кэшированных ответов обычно улучшает производительность приложения, но есть риск, что ответ в кэше не совпадает с ответа на сервере.  
  
 Политики кэша по умолчанию можно указать в файле конфигурации Machine.config или задав <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> свойство для запросов, использующих схему URI протокола передачи гипертекста (HTTP) или защищенный гипертекстовый протокол (HTTPS).  
  
 Копию ресурса добавляется в кэш, только если получен и чтения в конец потока в поток ответа для ресурса. Поэтому другой запрос для одного ресурса может использовать кэшированную копию, в зависимости от уровня политики кэша для этого запроса.  
  
   
  
## Examples  
 В следующем примере кода показано задание политику кэширования для веб-запроса.  
  
 [!code-cpp[NCLSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NCLSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.DefaultCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public virtual string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.WebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении во вложенном классе возвращает или задает имя группы подключения для данного запроса.</summary>
        <value>Имя группы подключения для запроса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.ConnectionGroupName%2A> Свойство связывает определенные запросы в приложении, чтобы один или несколько пулов соединений.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено во вложенном классе, предпринимаются все возможные попытки вернуть или задать его.</exception>
        <block subset="none" type="overrides"><para><see cref="P:System.Net.WebRequest.ConnectionGroupName" /> Свойство обычно связывает группу запросов, которые совместно используют набор учетных данных с подключением к Интернет-ресурса, чтобы избежать потенциальных нарушений безопасности.</para></block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
        <related type="Article" href="~/docs/framework/network-programming/connection-grouping.md">Группирование подключений</related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.WebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении во вложенный класс возвращает или задает длину содержимого запрошенных к передаче данных.</summary>
        <value>Число байтов посылаемых данных запроса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.ContentLength%2A> Свойство содержит число байтов данных, отправляемых в Интернет-ресурс, <xref:System.Net.WebRequest> экземпляра.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере задается <xref:System.Net.WebRequest.ContentLength%2A> свойства число байтов в выходном буфере.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено во вложенном классе, предпринимаются все возможные попытки вернуть или задать его.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.WebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении во вложенном классе возвращает или задает длину содержимого запрошенных к передаче данных.</summary>
        <value>Тип содержимого запрошенных данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.ContentType%2A> Свойство содержит тип мультимедиа запроса. Обычно это MIME кодировку содержимого.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере задается <xref:System.Net.WebRequest.ContentType%2A> свойство в соответствующий тип носителя.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено во вложенном классе, предпринимаются все возможные попытки вернуть или задать его.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый объект <see cref="T:System.Net.WebRequest" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUriString As String) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUriString">Универсальный код ресурса (URI), определяющий интернет-ресурс.</param>
        <summary>Инициализирует новый экземпляр <see cref="T:System.Net.WebRequest" /> для заданной схемы URI.</summary>
        <returns>Потомок <see cref="T:System.Net.WebRequest" /> для определенной схемы URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Create%2A> Метод возвращает потомком <xref:System.Net.WebRequest> определяется во время выполнения как ближайший из зарегистрированных для класса `requestUri`.  
  
 Например, когда URI, начинающийся с `http://` или `https://` передается в `requestUri`, <xref:System.Net.HttpWebRequest> возвращается <xref:System.Net.WebRequest.Create%2A>. Если URI, начинающийся с `ftp://` вместо этого передается <xref:System.Net.WebRequest.Create%2A> метод возвратит <xref:System.Net.FtpWebRequest> экземпляра. Если URI, начинающийся с `file://` вместо этого передается <xref:System.Net.WebRequest.Create%2A> метод возвратит <xref:System.Net.FileWebRequest> экземпляра.  
  
 Следующие типы предварительно зарегистрированный резерва уже зарегистрирован.  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 .NET включает в себя поддержку `http://`, `https://`, `ftp://`, и `file://` схемы URI. Custom <xref:System.Net.WebRequest> потомков для обработки других запросов регистрируются с <xref:System.Net.WebRequest.RegisterPrefix%2A> метод.  
  
 <xref:System.Net.WebRequest.Create%2A> Использует метод `requestUriString` параметр, чтобы создать <xref:System.Uri> экземпляр, который передается новый <xref:System.Net.WebRequest>.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).
  
   
  
## Examples  
 В следующем примере используется <xref:System.Net.WebRequest.Create%2A> для создания экземпляра <xref:System.Net.HttpWebRequest> экземпляра. Строка, представляющая целевой URL-адрес используется в качестве параметра конструктора.  
  
 [!code-cpp[WebResponse_ResponseUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ResponseUri/CPP/webresponse_responseuri.cpp#1)]
 [!code-csharp[WebResponse_ResponseUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ResponseUri/CS/webresponse_responseuri.cs#1)]
 [!code-vb[WebResponse_ResponseUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ResponseUri/VB/webresponse_responseuri.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Схема запроса, заданная в <paramref name="requestUriString" />, не зарегистрирована.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUriString" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта нет разрешения <see cref="T:System.Net.WebPermissionAttribute" /> на подключение к запрошенному универсальному коду ресурса (URI) или к универсальному коду ресурса (URI), к которому перенаправляется запрос.</exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para>  
 Вместо этого в <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET для приложений Магазина Windows</see> или в <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">переносимой библиотеке классов</see> перехватите исключение базового класса <see cref="T:System.FormatException" />.  
  
</para>
          </block>  
  
 Код URI, заданный в <paramref name="requestUriString" />, является недопустимым.</exception>
        <related type="Article" href="~/docs/framework/network-programming/programming-pluggable-protocols.md">программирование подключаемых протоколов</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri">Объект <see cref="T:System.Uri" />, содержащий код URI запрашиваемого ресурса.</param>
        <summary>Инициализирует новый экземпляр <see cref="T:System.Net.WebRequest" /> для заданной схемы URI.</summary>
        <returns>Наследник <see cref="T:System.Net.WebRequest" /> для указанной схемы URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Create%2A> Метод возвращает потомком <xref:System.Net.WebRequest> определяется во время выполнения как ближайший из зарегистрированных для класса `requestUri`.  
  
 Например, если вы создаете <xref:System.Net.WebRequest> потомка, Handler1, для обработки запросов к `http://www.contoso.com/text/` и другой с именем Handler2 для обработки запросов к `http://www.contoso.com/code/`, можно использовать <xref:System.Net.WebRequest.Create%2A> метод для возврата потомка WebRequest, связанные с любой Указанный URI.  
  
 Для возврата потомком <xref:System.Net.WebRequest> класса на основании только части схемы URI, используйте <xref:System.Net.WebRequest.CreateDefault%2A> метод.  
  
 Например, когда URI, начинающийся с `http://` или `https://` передается в `requestUri`, <xref:System.Net.HttpWebRequest> возвращается <xref:System.Net.WebRequest.Create%2A>. Если URI, начинающийся с `ftp://` вместо этого передается <xref:System.Net.WebRequest.Create%2A> метод возвратит <xref:System.Net.FileWebRequest> экземпляра. Если URI, начинающийся с `file://` вместо этого передается <xref:System.Net.WebRequest.Create%2A> метод возвратит <xref:System.Net.FileWebRequest> экземпляра.  
  
 Следующие типы предварительно зарегистрированный резерва уже зарегистрирован.  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 .NET включает в себя поддержку `http://`, `https://`, `ftp://`, и `file://` схемы URI. Custom <xref:System.Net.WebRequest> потомков для обработки других запросов регистрируются с <xref:System.Net.WebRequest.RegisterPrefix%2A> метод.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Net.WebRequest.Create%2A> для создания экземпляра <xref:System.Net.HttpWebRequest> экземпляра. Uri, представляющий целевой URL-адрес используется в качестве параметра конструктора.  
  
 [!code-cpp[WebRequest_Create#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Create/CPP/webrequest_create.cpp#1)]
 [!code-csharp[WebRequest_Create#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Create/CS/webrequest_create.cs#1)]
 [!code-vb[WebRequest_Create#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Create/VB/webrequest_create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Схема запроса, заданная в <paramref name="requestUri" />, не зарегистрирована.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта нет разрешения <see cref="T:System.Net.WebPermissionAttribute" /> на подключение к запрошенному универсальному коду ресурса (URI) или к универсальному коду ресурса (URI), к которому перенаправляется запрос.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest CreateDefault (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest CreateDefault(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateDefault(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ CreateDefault(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateDefault : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.CreateDefault requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="requestUri">Объект <see cref="T:System.Uri" />, содержащий код URI запрашиваемого ресурса.</param>
        <summary>Инициализирует новый экземпляр <see cref="T:System.Net.WebRequest" /> для заданной схемы URI.</summary>
        <returns>Наследник <see cref="T:System.Net.WebRequest" /> для указанной схемы URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.CreateDefault%2A> Возвращает метод <xref:System.Net.WebRequest> потомков экземпляра исходя только части схемы URI.  
  
 Например, когда URI, начинающийся с `http://` передается в `requestUri`, <xref:System.Net.HttpWebRequest> возвращается <xref:System.Net.WebRequest.CreateDefault%2A>. Если URI, начинающийся с `file://` вместо этого передается <xref:System.Net.WebRequest.CreateDefault%2A> метод возвратит <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [сетевая трассировка в .NET](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Схема запроса, заданная в <paramref name="requestUri" />, не зарегистрирована.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта нет разрешения <see cref="T:System.Net.WebPermissionAttribute" /> на подключение к запрошенному универсальному коду ресурса (URI) или к универсальному коду ресурса (URI), к которому перенаправляется запрос.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateHttp">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр <see cref="T:System.Net.HttpWebRequest" /> для заданного URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUriString As String) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : string -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUriString">Строка URI, определяющая интернет-ресурс.</param>
        <summary>Инициализирует новый экземпляр <see cref="T:System.Net.HttpWebRequest" /> для заданной строки URI.</summary>
        <returns>Экземпляр <see cref="T:System.Net.HttpWebRequest" /> для заданной строки URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.CreateHttp%28System.String%29> Метод возвращает экземпляр <xref:System.Net.HttpWebRequest> класса для `requestUriString`.  
  
 Если URI, который начинается с `http://` или `https://` передается в `requestUriString` параметра <xref:System.Net.HttpWebRequest> возвращается <xref:System.Net.WebRequest.CreateHttp%28System.String%29>. Любые другие схемы вызовет <xref:System.NotSupportedException>.  
  
 <xref:System.Net.WebRequest.CreateHttp%28System.String%29> Использует метод `requestUriString` параметр, чтобы создать <xref:System.Uri> экземпляр, который передается новый <xref:System.Net.HttpWebRequest>. Если метод выполнен успешно, <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> свойство в возвращенном <xref:System.Net.HttpWebRequest> экземпляра назначается `false`.  
  
 .NET включает в себя поддержку `http://` и `https://` схемы URI. Custom <xref:System.Net.WebRequest> потомков для обработки других запросов регистрируются с <xref:System.Net.WebRequest.RegisterPrefix%2A> метод. <xref:System.Net.WebRequest.Create%28System.String%29> Метод может быть использован для создания потомком <xref:System.Net.WebRequest> класс для других схем.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Схема запроса, указанная в <paramref name="requestUriString" />, является схемой http или https.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUriString" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта нет разрешения <see cref="T:System.Net.WebPermissionAttribute" /> на подключение к запрошенному универсальному коду ресурса (URI) или к универсальному коду ресурса (URI), к которому перенаправляется запрос.</exception>
        <exception cref="T:System.UriFormatException">Код URI, заданный в <paramref name="requestUriString" />, является недопустимым.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUri As Uri) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : Uri -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri">Идентификатор URI, определяющий интернет-ресурс.</param>
        <summary>Инициализирует новый экземпляр <see cref="T:System.Net.HttpWebRequest" /> для заданного URI.</summary>
        <returns>Экземпляр <see cref="T:System.Net.HttpWebRequest" /> для заданной строки URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> Метод возвращает экземпляр <xref:System.Net.HttpWebRequest> класса для `requestUri`.  
  
 Если URI, который начинается с `http://` или `http://` передается в `requestUri` параметра <xref:System.Net.HttpWebRequest> возвращается <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>. Другой другие схемы вызовет <xref:System.NotSupportedException>.  
  
 <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> Использует метод `requestUri` параметр, чтобы создать новую <xref:System.Net.HttpWebRequest> экземпляра. Если метод выполнен успешно, <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> свойство в возвращенном <xref:System.Net.HttpWebRequest> экземпляра назначается `false`.  
  
 .NET включает в себя поддержку `http://` и `https://` схемы URI. Custom <xref:System.Net.WebRequest> потомков для обработки других запросов регистрируются с <xref:System.Net.WebRequest.RegisterPrefix%2A> метод. <xref:System.Net.WebRequest.Create%28System.Uri%29> Метод может быть использован для создания потомком <xref:System.Net.WebRequest> класс для других схем.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Схема запроса, указанная в <paramref name="requestUri" />, является схемой http или https.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта нет разрешения <see cref="T:System.Net.WebPermissionAttribute" /> на подключение к запрошенному универсальному коду ресурса (URI) или к универсальному коду ресурса (URI), к которому перенаправляется запрос.</exception>
        <exception cref="T:System.UriFormatException">Код URI, заданный в <paramref name="requestUri" />, является недопустимым.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatorInstance">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebRequestCreate CreatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebRequestCreate CreatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CreatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CreatorInstance As IWebRequestCreate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebRequestCreate ^ CreatorInstance { System::Net::IWebRequestCreate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreatorInstance : System.Net.IWebRequestCreate" Usage="System.Net.WebRequest.CreatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebRequestCreate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе получает объект фабрики, производный от класса <see cref="T:System.Net.IWebRequestCreate" />, который служит для создания объекта <see cref="T:System.Net.WebRequest" /> для создания запроса по указанному универсальному коду ресурса (URI).</summary>
        <value>Производный тип <see cref="T:System.Net.WebRequest" />, возвращаемый методом <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Это свойство позволяет приложению определить, какие <xref:System.Net.IWebRequestCreate> объект производного фабрики был использован для создания запроса. Этот объект может быть [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) или [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)), но это также может быть пользовательский экземпляр, производный от <xref:System.Net.IWebRequestCreate>. Это позволяет приложению определить ли для браузера, на котором размещается [!INCLUDE[silverlight](~/includes/silverlight-md.md)], [!INCLUDE[silverlight](~/includes/silverlight-md.md)] клиента или некоторый пользовательский объект обрабатывает HTTP-запросы и отклики для <xref:System.Net.WebRequest> экземпляра. <xref:System.Net.WebRequest.RegisterPrefix%2A> Метод позволяет приложения для настройки, который производным <xref:System.Net.WebRequest> типа будет создаваться при выполнении запроса для указанного URI. <xref:System.Net.WebRequest> Создатели обычно регистрируются для обработки конкретного протокола, например HTTP или HTTPS, но могут быть зарегистрированы для обработки запросов к конкретному серверу или пути на сервере. Это полезно, когда несколько производных <xref:System.Net.WebRequest> тип могла обрабатывать запросы и тот же протокол. [!INCLUDE[sil3_first](~/includes/sil3-first-md.md)] И более поздней версии среды выполнения поддерживает несколько обработчиков HTTP для каждой из них разные возможности. Например, веб-службы, использующего Representational State Transfer (REST) может потребовать [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)) обработчика веб-службы SOAP может быть возможность использовать значение по умолчанию [ System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) обработчика.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении во вложенном классе возвращает или задает сетевые учетные данные, используемые для проверки подлинности запроса на интернет-ресурсе.</summary>
        <value>Свойство <see cref="T:System.Net.ICredentials" />, содержащее учетные записи проверки подлинности, связанные с запросом. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Credentials%2A> Свойство содержит учетные данные проверки подлинности, необходимые для доступа к Интернет-ресурса.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере задается <xref:System.Net.WebRequest.Credentials%2A> свойство, используя учетные данные текущего пользователя. При запросе учетных данных, хранящихся в этом свойстве, используются для проверки клиента. Этот подход аналогичен параметр <xref:System.Net.WebRequest.UseDefaultCredentials%2A> свойства `true`.  
  
 [!code-cpp[NclWebRequestSimple#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#2)]
 [!code-csharp[NclWebRequestSimple#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#2)]
 [!code-vb[NclWebRequestSimple#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено во вложенном классе, предпринимаются все возможные попытки вернуть или задать его.</exception>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.HttpWebRequest.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает политику кэширования для этого запроса.</summary>
        <value>Свойство <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />, которое указывает политику кэширования, действующую для этого запроса, если не применима любая другая политика.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта политика используется для данного запроса, если выполняются следующие условия:  
  
-   Существует не <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> свойство, указанное для данного запроса.  
  
-   Конфигурации компьютера и приложения, файлы не указать политику кэширования, которая будет применяться к универсальный код ресурса (URI) используется для создания данного запроса.  
  
 Политика кэширования, определяет ли запрошенный ресурс может браться из кэша вместо отправки запроса к главному компьютеру ресурсов.  
  
 Копию ресурса добавляется в кэш, только если получен и чтения в конец потока в поток ответа для ресурса. Поэтому другой запрос для одного ресурса может использовать кэшированную копию, в зависимости от уровня политики кэша для этого запроса.  
  
   
  
## Examples  
 В следующем примере кода показано задание политику кэширования по умолчанию для веб-запросов.  
  
 [!code-cpp[NCLSimpleCache#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#15)]
 [!code-csharp[NCLSimpleCache#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">для неограниченного доступа к сетевым ресурсам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy DefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.IWebProxy DefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultWebProxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::IWebProxy ^ DefaultWebProxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultWebProxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.DefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает глобальный прокси-сервер HTTP.</summary>
        <value>Объект <see cref="T:System.Net.IWebProxy" /> используется в каждом вызове экземпляра <see cref="T:System.Net.WebRequest" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.DefaultWebProxy%2A> Свойство получает или устанавливает глобальный прокси-сервер. <xref:System.Net.WebRequest.DefaultWebProxy%2A> Свойство определяет прокси-сервер по умолчанию, все <xref:System.Net.WebRequest> экземпляров использовать, если запрос поддерживает учетные записи-посредники и прокси-сервера не задается явным образом с помощью <xref:System.Net.HttpWebRequest.Proxy%2A> свойство. В настоящее время поддерживает учетные записи-посредники <xref:System.Net.FtpWebRequest> и <xref:System.Net.HttpWebRequest>.  
  
 <xref:System.Net.WebRequest.DefaultWebProxy%2A> Свойство считывает параметры прокси-сервера из файла app.config. Если отсутствует файл конфигурации, используются параметры прокси-сервера Internet Explorer (IE) текущего пользователя.  
  
 Если <xref:System.Net.WebRequest.DefaultWebProxy%2A> свойство имеет значение null, все последующие экземпляры <xref:System.Net.WebRequest> класс, созданный с <xref:System.Net.WebRequest.Create%2A> или <xref:System.Net.WebRequest.CreateDefault%2A> методы не имеют учетной записи-посредника.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">Для получения или задания глобального прокси-сервера HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream&#xA;override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="webRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" />, ссылающийся на отложенный запрос для потока.</param>
        <summary>При переопределении в производном классе возвращает <see cref="T:System.IO.Stream" /> для записи данных в этот интернет-ресурс.</summary>
        <returns><see cref="T:System.IO.Stream" /> для записи данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.EndGetRequestStream%2A> Метод завершает асинхронный запрос потока, запущенную <xref:System.Net.WebRequest.BeginGetRequestStream%2A> метод.  
  
> [!NOTE]
>  Чтобы избежать проблем синхронизации со сборкой мусора, не забудьте закрыть поток ответа, вызвав <xref:System.IO.Stream.Close%2A> метода в поток, возвращенный <xref:System.Net.WebResponse.GetResponseStream%2A> после вызова метода <xref:System.Net.WebRequest.EndGetResponse%2A>.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 Следующий пример получает и использует поток запроса путем вызова <xref:System.Net.WebRequest.EndGetRequestStream%2A>. <xref:System.Net.WebRequest.EndGetRequestStream%2A> Завершения асинхронного вызова метода <xref:System.Net.WebRequest.BeginGetRequestStream%2A>.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если метод не переопределен во вложенном классе, предпринимаются все возможные попытки получить к нему доступ.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md">Выполнение асинхронных запросов</related>
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="webRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Объект <see cref="T:System.IAsyncResult" />, ссылающийся на отложенный запрос ответа.</param>
        <summary>При переопределении в производном классе возвращает <see cref="T:System.Net.WebResponse" />.</summary>
        <returns><see cref="T:System.Net.WebResponse" />, содержащий ответ на интернет-запрос.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.EndGetResponse%2A> Метод завершает асинхронный запрос Интернет-ресурса, который был запущен с <xref:System.Net.WebRequest.BeginGetResponse%2A> метод.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.Net.WebRequest.EndGetResponse%2A> для получения целевого ресурса.  
  
 [!code-cpp[WebRequest_BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#1)]
 [!code-csharp[WebRequest_BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#1)]
 [!code-vb[WebRequest_BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если метод не переопределен во вложенном классе, предпринимаются все возможные попытки получить к нему доступ.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md">Выполнение асинхронных запросов</related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="webRequest.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
        <param name="streamingContext">Контекст <see cref="T:System.Runtime.Serialization.StreamingContext" />, определяющий целевой объект сериализации.</param>
        <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации целевого объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все объекты, включенные в <xref:System.Runtime.Serialization.SerializationInfo> автоматически отслеживаются и сериализовано модулем форматирования.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStream : unit -&gt; System.IO.Stream&#xA;override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="webRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе возвращает <see cref="T:System.IO.Stream" /> для записи данных в этот интернет-ресурс.</summary>
        <returns><see cref="T:System.IO.Stream" /> для записи данных в интернет-ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.GetRequestStream%2A> Метод инициирует запрос на отправку данных в Интернет-ресурс и возвращает <xref:System.IO.Stream> экземпляра для отправки данных в Интернет-ресурс.  
  
 <xref:System.Net.WebRequest.GetRequestStream%2A> Метод предоставляет синхронный доступ к <xref:System.IO.Stream>. Для асинхронного доступа используйте <xref:System.Net.WebRequest.BeginGetRequestStream%2A> и <xref:System.Net.WebRequest.EndGetRequestStream%2A> методы.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Net.WebRequest.GetRequestStream%2A> метод для получения потока и записывает данные этого потока.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если метод не переопределен во вложенном классе, предпринимаются все возможные попытки получить к нему доступ.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md">Использование потоков в сети</related>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRequestStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetRequestStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetRequestStreamAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webRequest.GetRequestStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении во вложенном классе возвращает <see cref="T:System.IO.Stream" /> для записи данных в интернет-ресурс в виде асинхронной операции.</summary>
        <returns>Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокировать. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена, когда <xref:System.IO.Stream> для записи данных в Интернете ресурс доступен.  
  
 После вызова метода <xref:System.Net.WebRequest.GetRequestStreamAsync%2A>, убедитесь, что закройте поток запроса перед вызовом метода <xref:System.Net.WebRequest.GetResponseAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="abstract member GetResponse : unit -&gt; System.Net.WebResponse&#xA;override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="webRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении во вложенном классе возвращает ответ на интернет-запрос.</summary>
        <returns><see cref="T:System.Net.WebResponse" />, содержащий ответ на интернет-запрос.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.GetResponse%2A> Метод отправляет запрос к Интернет-ресурса и возвращает <xref:System.Net.WebResponse> экземпляра. Если этот запрос уже инициирован вызов <xref:System.Net.WebRequest.GetRequestStream%2A>, <xref:System.Net.WebRequest.GetResponse%2A> метод выполняет запрос и возвращает любой ответ.  
  
 <xref:System.Net.WebRequest.GetResponse%2A> Метод предоставляет синхронный доступ к <xref:System.Net.WebResponse>. Для асинхронного доступа используйте <xref:System.Net.WebRequest.BeginGetResponse%2A> и <xref:System.Net.WebRequest.EndGetResponse%2A> методы.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Если возникает исключение WebException используйте <xref:System.Net.WebException.Response%2A> и <xref:System.Net.WebException.Status%2A> свойств исключения, чтобы определить ответ от сервера.  
  
   
  
## Examples  
 В следующем примере задается <xref:System.Net.WebRequest.Timeout%2A> значение 10000 миллисекунд. Если период времени ожидания может быть возвращен, <xref:System.Net.WebException> возникает исключение.  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если метод не переопределен во вложенном классе, предпринимаются все возможные попытки получить к нему доступ.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Net.WebResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt; GetResponseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebResponse&gt; GetResponseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponseAsync () As Task(Of WebResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::WebResponse ^&gt; ^ GetResponseAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;&#xA;override this.GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;" Usage="webRequest.GetResponseAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении во вложенном классе возвращает ответ на интернет-запрос в виде асинхронной операции.</summary>
        <returns>Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокировать. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет завершена после получен ответ на Интернет-запрос.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy GetSystemWebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy GetSystemWebProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetSystemWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemWebProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ GetSystemWebProxy();" />
      <MemberSignature Language="F#" Value="static member GetSystemWebProxy : unit -&gt; System.Net.IWebProxy" Usage="System.Net.WebRequest.GetSystemWebProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает прокси-сервер с уже установленными параметрами Internet Explorer для текущего олицетворенного пользователя.</summary>
        <returns>Объект <see cref="T:System.Net.IWebProxy" /> используется в каждом вызове экземпляра <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.GetSystemWebProxy%2A> метод считывает параметры прокси-сервера Internet Explorer (IE) текущего пользователя. Этот процесс включает в себя параметры IE, чтобы автоматически определять параметры прокси-сервера, используйте сценарий автоматической настройки, параметры сервера вручную прокси-сервера и дополнительные параметры сервера вручную прокси-сервера.  
  
 Если приложение олицетворяет несколько пользователей, можно использовать <xref:System.Net.WebRequest.GetSystemWebProxy%2A> метод для извлечения прокси-сервера для каждого олицетворенного пользователя.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">Для получения или задания глобального прокси-сервера HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении во вложенном классе возвращает или задает коллекцию связанных с данным запросом пар "имя-значение" для заголовка.</summary>
        <value>Коллекция <see cref="T:System.Net.WebHeaderCollection" />, содержащий пары "имя-значение" заголовков, связанных с данным запросом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Headers%2A> Свойство содержит <xref:System.Net.WebHeaderCollection> экземпляра, содержащего данные заголовка для отправки к Интернет-ресурсу.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере отображаются пары имя значение заголовка, связанные с этим запросом.  
  
 [!code-cpp[WebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Headers/CPP/webrequest_headers.cpp#1)]
 [!code-csharp[WebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Headers/CS/webrequest_headers.cs#1)]
 [!code-vb[WebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Headers/VB/webrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено во вложенном классе, предпринимаются все возможные попытки вернуть или задать его.</exception>
        <altmember cref="T:System.Net.WebHeaderCollection" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.Net.WebRequest.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает уровень олицетворения для текущего запроса.</summary>
        <value>Значение <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Уровень олицетворения определяет, как сервер может использовать учетные данные клиента.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.WebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении во вложенном классе возвращает или задает метод протокола для использования в данном запросе.</summary>
        <value>Метод протокола для использования в данном запросе.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При переопределении во вложенном классе, <xref:System.Net.WebRequest.Method%2A> свойство содержит метод запроса для использования в данном запросе.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере задается <xref:System.Net.WebRequest.Method%2A> значение POST, чтобы указать, что запрос будет отправлять данные для конечного узла.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено во вложенном классе, делаются все возможные попытки получить или задать это свойство.</exception>
        <block subset="none" type="overrides"><para><see cref="P:System.Net.WebRequest.Method" /> Свойство может содержать любой допустимый запрос метод для реализации протокола. Значение по умолчанию необходимо указать операцию запроса ответа по умолчанию, который не требует настройки свойств протокола.</para></block>
        <altmember cref="P:System.Net.HttpWebRequest.Method" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public virtual bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.WebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении во вложенном классе показывает, необходима ли предварительная проверка подлинности данного запроса.</summary>
        <value>Значение <see langword="true" /> — выполнять предварительную проверку подлинности; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 За исключением первого запроса <xref:System.Net.WebRequest.PreAuthenticate%2A> свойство указывает, следует ли отправлять сведения о проверке подлинности с последующими запросами без ожидания запроса сервером. Когда <xref:System.Net.WebRequest.PreAuthenticate%2A> — `false`, <xref:System.Net.WebRequest> ожидает запрос проверки подлинности перед отправкой сведения для проверки подлинности.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере задается <xref:System.Net.WebRequest.PreAuthenticate%2A> свойства `true` таким образом, чтобы <xref:System.Net.NetworkCredential> хранятся в <xref:System.Net.WebRequest.Credentials%2A> свойство будет отправляться вместе с запросом ресурса.  
  
 [!code-cpp[WebRequest_PreAuthenticate#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CPP/webrequest_preauthenticate.cpp#1)]
 [!code-csharp[WebRequest_PreAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CS/webrequest_preauthenticate.cs#1)]
 [!code-vb[WebRequest_PreAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_PreAuthenticate/VB/webrequest_preauthenticate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено во вложенном классе, предпринимаются все возможные попытки вернуть или задать его.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении во вложенном классе возвращает или задает сетевой прокси-сервер, используемый для доступа к данному интернет-ресурсу.</summary>
        <value><see cref="T:System.Net.IWebProxy" /> для доступа к данному интернет-ресурсу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Proxy%2A> Свойство идентифицирует сетевой прокси-сервер, запрос для доступа к Интернет-ресурса. Этот запрос выполняется через прокси-сервер, а не напрямую к Интернет-ресурсу.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере отображается текущий адрес прокси-сервера сети и пользователь может назначить новый сетевой прокси-сервер, адрес и номер порта.  
  
 [!code-cpp[WebRequest_Proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Proxy/CPP/webrequest_proxy.cpp#1)]
 [!code-csharp[WebRequest_Proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Proxy/CS/webrequest_proxy.cs#1)]
 [!code-vb[WebRequest_Proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Proxy/VB/webrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено во вложенном классе, предпринимаются все возможные попытки вернуть или задать его.</exception>
        <altmember cref="T:System.Net.IWebProxy" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="P:System.Net.HttpWebRequest.Proxy" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPortableWebRequestCreator">
      <MemberSignature Language="C#" Value="public static void RegisterPortableWebRequestCreator (System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterPortableWebRequestCreator(class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterPortableWebRequestCreator (creator As IWebRequestCreate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterPortableWebRequestCreator(System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPortableWebRequestCreator : System.Net.IWebRequestCreate -&gt; unit" Usage="System.Net.WebRequest.RegisterPortableWebRequestCreator creator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="creator">Регистрируемый объект <see cref="T:System.Net.IWebRequestCreate" />.</param>
        <summary>Регистрация объекта <see cref="T:System.Net.IWebRequestCreate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPrefix">
      <MemberSignature Language="C#" Value="public static bool RegisterPrefix (string prefix, System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RegisterPrefix(string prefix, class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RegisterPrefix (prefix As String, creator As IWebRequestCreate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RegisterPrefix(System::String ^ prefix, System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPrefix : string * System.Net.IWebRequestCreate -&gt; bool" Usage="System.Net.WebRequest.RegisterPrefix (prefix, creator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix">Полный URI или префикс URI, обслуживаемый потомком <see cref="T:System.Net.WebRequest" />.</param>
        <param name="creator">В этом методе для создания потомка <see cref="T:System.Net.WebRequest" /> вызывается <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Регистрирует потомок <see cref="T:System.Net.WebRequest" /> для заданной схемы URI.</summary>
        <returns>Значение <see langword="true" />, если регистрация успешна; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.RegisterPrefix%2A> Регистры метод <xref:System.Net.WebRequest> потомков для обслуживания запросов. <xref:System.Net.WebRequest> потомки обычно регистрируются для обработки конкретного протокола, например HTTP или FTP, но могут быть зарегистрированы для обработки запросов к конкретному серверу или пути на сервере.  
  
 Следующие типы предварительно зарегистрированный резерва уже зарегистрирован.  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 Дополнительные сведения см. в разделе <xref:System.Net.WebRequest.Create%28System.String%29> и <xref:System.Net.WebRequest.Create%28System.Uri%29> методы.  
  
 Повторяющиеся префиксы не разрешены. <xref:System.Net.WebRequest.RegisterPrefix%2A> Возвращает `false` если предпринята попытка зарегистрировать Повторяющийся префикс.  
  
> [!NOTE]
>  <xref:System.Net.HttpWebRequest> Класс регистрируется для обслуживания запросов для схем HTTP и HTTPS по умолчанию. Пытается зарегистрировать другой <xref:System.Net.WebRequest> потомка для этих схем завершится ошибкой.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="prefix" /> равно <see langword="null" />  
  
-или- 
 <paramref name="creator" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public virtual Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.WebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении во вложенном классе возвращает URI интернет-ресурса, связанного с данным запросом.</summary>
        <value><see cref="T:System.Uri" />, предоставляющий ресурс, связанный с данным запросом</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При переопределении во вложенном классе, <xref:System.Net.WebRequest.RequestUri%2A> свойство содержит <xref:System.Uri> экземпляр, на котором <xref:System.Net.WebRequest.Create%2A> метод использует для создания запроса.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере проверяется <xref:System.Net.WebRequest.RequestUri%2A> свойство для определения сайта, который первоначально запрошенную.  
  
 [!code-cpp[WebRequest_RequestUri1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_RequestUri1/CPP/webrequest_requesturi.cpp#1)]
 [!code-csharp[WebRequest_RequestUri1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_RequestUri1/CS/webrequest_requesturi.cs#1)]
 [!code-vb[WebRequest_RequestUri1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_RequestUri1/VB/webrequest_requesturi.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено во вложенном классе, предпринимаются все возможные попытки вернуть или задать его.</exception>
        <block subset="none" type="overrides"><para>
            <see cref="P:System.Net.WebRequest.RequestUri" /> должен содержать исходные <see cref="T:System.Uri" /> передается экземпляр <see cref="M:System.Net.WebRequest.Create(System.Uri)" /> метод. Если протокол может перенаправить запрос другой универсальный код ресурса для обслуживания запроса, потомок должен предоставить свойство может содержать URI, который фактически обслуживает запрос</para></block>
        <altmember cref="P:System.Net.HttpWebRequest.RequestUri" />
        <altmember cref="P:System.Net.HttpWebRequest.Address" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные для исключения <see cref="T:System.Net.WebRequest" />.</param>
        <param name="streamingContext">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий назначение сериализованного потока, связанного с новым запросом <see cref="T:System.Net.WebRequest" />.</param>
        <summary>При переопределении во вложенном классе заполняет экземпляр <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, которые необходимы для сериализации <see cref="T:System.Net.WebRequest" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Если интерфейс не переопределен во вложенном классе, делается попытка сериализовать объект.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.WebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает промежуток времени в миллисекундах до истечения срока действия вопроса.</summary>
        <value>Продолжительность задержки запроса в миллисекундах, или же значение <see cref="F:System.Threading.Timeout.Infinite" />, показывающее, что для данного запроса задержка не используется. Значение по умолчанию определяется вложенным классом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Timeout%2A> Свойство указывает продолжительность времени в миллисекундах, пока время ожидания запроса истекает и возникает исключение <xref:System.Net.WebException>. <xref:System.Net.WebRequest.Timeout%2A> Свойство затрагивает только синхронным запросам, выполняемым с <xref:System.Net.WebRequest.GetResponse%2A> метод. Для асинхронных запросов время ожидания, используйте <xref:System.Net.WebRequest.Abort%2A> метод.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Класс является `abstract` класса. Фактическое поведение <xref:System.Net.WebRequest> экземпляров во время выполнения определяется вложенным классом, возвращенный <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> метод. Дополнительные сведения о значениях по умолчанию и исключениях см. в документации для классов-потомков, таких как <xref:System.Net.HttpWebRequest> и <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 В следующем примере задается <xref:System.Net.WebRequest.Timeout%2A> значение 10000 миллисекунд. Если период времени ожидания может быть возвращен, <xref:System.Net.WebException> возникает исключение.  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено во вложенном классе, предпринимаются все возможные попытки вернуть или задать его.</exception>
        <block subset="none" type="overrides"><para>Вложенные классы указывают время ожидания, выдав <see cref="T:System.Net.WebException" /> с <see cref="P:System.Net.WebException.Status" /> поле "значение" <see cref="F:System.Net.WebExceptionStatus.Timeout" />. Когда <see cref="P:System.Net.WebRequest.Timeout" /> присваивается <see cref="F:System.Threading.Timeout.Infinite" /> класса-потомка не простаивает.</para></block>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public virtual bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении во вложенном классе возвращает или задает значение <see cref="T:System.Boolean" />, с помощью которого определяется, следует ли отправлять учетные данные <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> вместе с запросами.</summary>
        <value>Значение <see langword="true" />, если используются учетные данные по умолчанию; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Присвойте этому свойству значение `true` когда запросы, создаваемые этим <xref:System.Net.WebRequest> объекта должны по запросу сервера проходить проверку подлинности с использованием учетных данных пользователя, выполнившего вход. Для клиентских приложений это приемлемо в большинстве сценариев. Для приложений среднего уровня, таких как ASP.NET, вместо того чтобы использовать это свойство обычно устанавливается <xref:System.Net.WebRequest.Credentials%2A> свойства учетные данные клиента, от лица которого выполняется запрос.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Произведена попытка установки этого свойства после отправки запроса.</exception>
        <exception cref="T:System.NotImplementedException">Если свойство не переопределено в классе-потомке, делаются все возможные попытки обратиться к нему.</exception>
      </Docs>
    </Member>
  </Members>
</Type>