<Type Name="ExpandedWrapper&lt;TExpandedElement,TProperty0,TProperty1&gt;" FullName="System.Data.Services.Internal.ExpandedWrapper&lt;TExpandedElement,TProperty0,TProperty1&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d4739cdef9827abb0b2c82ee4b25a97cc7aa9e1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69370625" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExpandedWrapper&lt;TExpandedElement,TProperty0,TProperty1&gt; : System.Data.Services.Internal.ExpandedWrapper&lt;TExpandedElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpandedWrapper`3&lt;TExpandedElement, TProperty0, TProperty1&gt; extends System.Data.Services.Internal.ExpandedWrapper`1&lt;!TExpandedElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Internal.ExpandedWrapper`3" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpandedWrapper(Of TExpandedElement, TProperty0, TProperty1)&#xA;Inherits ExpandedWrapper(Of TExpandedElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TExpandedElement, typename TProperty0, typename TProperty1&gt;&#xA;public ref class ExpandedWrapper sealed : System::Data::Services::Internal::ExpandedWrapper&lt;TExpandedElement&gt;" />
  <TypeSignature Language="F#" Value="type ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1&gt; = class&#xA;    inherit ExpandedWrapper&lt;'ExpandedElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TExpandedElement" />
    <TypeParameter Name="TProperty0" />
    <TypeParameter Name="TProperty1" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Services.Internal.ExpandedWrapper&lt;TExpandedElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TExpandedElement">TExpandedElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TExpandedElement">Тип расширенного элемента.</typeparam>
    <typeparam name="TProperty0">Тип свойства, которое необходимо расширить.</typeparam>
    <typeparam name="TProperty1">Тип свойства, которое необходимо расширить.</typeparam>
    <summary>Этот класс используется внутри системы для реализации поддержки запросов с безотложной загрузкой связанных сущностей.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пространство имен включает несколько вариантов `ExpandedWrapper` класса.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpandedWrapper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Internal.ExpandedWrapper`3.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpandedWrapper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Создает экземпляр класса <see cref="T:System.Data.Services.Internal.ExpandedWrapper`3" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InternalGetExpandedPropertyValue">
      <MemberSignature Language="C#" Value="protected override object InternalGetExpandedPropertyValue (int nameIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object InternalGetExpandedPropertyValue(int32 nameIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Internal.ExpandedWrapper`3.InternalGetExpandedPropertyValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function InternalGetExpandedPropertyValue (nameIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ InternalGetExpandedPropertyValue(int nameIndex);" />
      <MemberSignature Language="F#" Value="override this.InternalGetExpandedPropertyValue : int -&gt; obj" Usage="expandedWrapper.InternalGetExpandedPropertyValue nameIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nameIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty0">
      <MemberSignature Language="C#" Value="public TProperty0 ProjectedProperty0 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty0 ProjectedProperty0" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`3.ProjectedProperty0" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty0 As TProperty0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty0 ProjectedProperty0 { TProperty0 get(); void set(TProperty0 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty0 : 'TProperty0 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1&gt;.ProjectedProperty0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TProperty0</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает разворачиваемое свойство.</summary>
        <value>Разворачиваемое свойство.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProjectedProperty1">
      <MemberSignature Language="C#" Value="public TProperty1 ProjectedProperty1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty1 ProjectedProperty1" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Internal.ExpandedWrapper`3.ProjectedProperty1" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectedProperty1 As TProperty1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TProperty1 ProjectedProperty1 { TProperty1 get(); void set(TProperty1 value); };" />
      <MemberSignature Language="F#" Value="member this.ProjectedProperty1 : 'TProperty1 with get, set" Usage="System.Data.Services.Internal.ExpandedWrapper&lt;'ExpandedElement, 'TProperty0, 'TProperty1&gt;.ProjectedProperty1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TProperty1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает разворачиваемое свойство.</summary>
        <value>Разворачиваемое свойство.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
