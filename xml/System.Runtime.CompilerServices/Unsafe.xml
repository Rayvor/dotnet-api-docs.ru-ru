<Type Name="Unsafe" FullName="System.Runtime.CompilerServices.Unsafe">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fbbb5e8f80ffcac3c0eaea6beda1f71de66e8f2e" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73390096" /></Metadata><TypeSignature Language="C#" Value="public static class Unsafe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Unsafe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.Unsafe" />
  <TypeSignature Language="VB.NET" Value="Public Class Unsafe" />
  <TypeSignature Language="C++ CLI" Value="public ref class Unsafe abstract sealed" />
  <TypeSignature Language="F#" Value="type Unsafe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.1</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="85545-101">Содержит универсальные низкоуровневые функции для работы с указателями.</span><span class="sxs-lookup"><span data-stu-id="85545-101">Contains generic, low-level functionality for manipulating pointers.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void* Add&lt;T&gt; (void* source, int elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void* Add&lt;T&gt;(void* source, int32 elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Add``1(System.Void*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void* Add(void* source, int elementOffset);" />
      <MemberSignature Language="F#" Value="static member Add : nativeptr&lt;unit&gt; * int -&gt; nativeptr&lt;unit&gt;" Usage="System.Runtime.CompilerServices.Unsafe.Add (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="elementOffset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-102">Тип указателя void.</span><span class="sxs-lookup"><span data-stu-id="85545-102">The type of void pointer.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-103">Пустой указатель, к которому требуется добавить смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-103">The void pointer to add the offset to.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85545-104">Добавляемое смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-104">The offset to add.</span></span></param>
        <summary><span data-ttu-id="85545-105">Добавляет смещение элемента для данного пустого указателя.</span><span class="sxs-lookup"><span data-stu-id="85545-105">Adds an element offset to the given void pointer.</span></span></summary>
        <returns><span data-ttu-id="85545-106">Новый пустой указатель, который отражает добавление смещения к указанному указателю.</span><span class="sxs-lookup"><span data-stu-id="85545-106">A new void pointer that reflects the addition of offset to the specified pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Add&lt;T&gt; (ref T source, int elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Add&lt;T&gt;(!!T&amp; source, int32 elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add(Of T) (ByRef source As T, elementOffset As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Add(T % source, int elementOffset);" />
      <MemberSignature Language="F#" Value="static member Add :  * int -&gt; " Usage="System.Runtime.CompilerServices.Unsafe.Add (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="elementOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-107">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-107">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-108">Ссылка, к которой требуется добавить смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-108">The reference to add the offset to.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85545-109">Добавляемое смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-109">The offset to add.</span></span></param>
        <summary><span data-ttu-id="85545-110">Добавляет смещение элемента для данной ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-110">Adds an element offset to the given reference.</span></span></summary>
        <returns><span data-ttu-id="85545-111">Новая ссылка, получающаяся при добавлении смещения к указателю.</span><span class="sxs-lookup"><span data-stu-id="85545-111">A new reference that reflects the addition of offset to pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Add&lt;T&gt; (ref T source, IntPtr elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Add&lt;T&gt;(!!T&amp; source, native int elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add(Of T) (ByRef source As T, elementOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Add(T % source, IntPtr elementOffset);" />
      <MemberSignature Language="F#" Value="static member Add :  * nativeint -&gt; " Usage="System.Runtime.CompilerServices.Unsafe.Add (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="elementOffset" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-112">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-112">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-113">Ссылка, к которой требуется добавить смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-113">The reference to add the offset to.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85545-114">Добавляемое смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-114">The offset to add.</span></span></param>
        <summary><span data-ttu-id="85545-115">Добавляет смещение элемента для данной ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-115">Adds an element offset to the given reference.</span></span></summary>
        <returns><span data-ttu-id="85545-116">Новая ссылка, получающаяся при добавлении смещения к указателю.</span><span class="sxs-lookup"><span data-stu-id="85545-116">A new reference that reflects the addition of offset to pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddByteOffset&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T AddByteOffset&lt;T&gt; (ref T source, IntPtr byteOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T AddByteOffset&lt;T&gt;(!!T&amp; source, native int byteOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddByteOffset(Of T) (ByRef source As T, byteOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % AddByteOffset(T % source, IntPtr byteOffset);" />
      <MemberSignature Language="F#" Value="static member AddByteOffset :  * nativeint -&gt; " Usage="System.Runtime.CompilerServices.Unsafe.AddByteOffset (source, byteOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="byteOffset" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-117">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-117">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-118">Ссылка, к которой требуется добавить смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-118">The reference to add the offset to.</span></span></param>
        <param name="byteOffset"><span data-ttu-id="85545-119">Добавляемое смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-119">The offset to add.</span></span></param>
        <summary><span data-ttu-id="85545-120">Добавляет смещение в байтах для данной ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-120">Adds a byte offset to the given reference.</span></span></summary>
        <returns><span data-ttu-id="85545-121">Новая ссылка, получающаяся при добавлении смещения в байтах к указателю.</span><span class="sxs-lookup"><span data-stu-id="85545-121">A new reference that reflects the addition of byte offset to pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreSame&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool AreSame&lt;T&gt; (ref T left, ref T right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreSame&lt;T&gt;(!!T&amp; left, !!T&amp; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreSame(Of T) (ByRef left As T, ByRef right As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool AreSame(T % left, T % right);" />
      <MemberSignature Language="F#" Value="static member AreSame : 'T * 'T -&gt; bool" Usage="System.Runtime.CompilerServices.Unsafe.AreSame (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-1.1;netcore-3.0" />
        <Parameter Name="right" Type="T" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-1.1;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-122">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-122">The type of reference.</span></span></typeparam>
        <param name="left"><span data-ttu-id="85545-123">Первая ссылка для сравнения.</span><span class="sxs-lookup"><span data-stu-id="85545-123">The first reference to compare.</span></span></param>
        <param name="right"><span data-ttu-id="85545-124">Вторая ссылка для сравнения.</span><span class="sxs-lookup"><span data-stu-id="85545-124">The second reference to compare.</span></span></param>
        <summary><span data-ttu-id="85545-125">Определяет, указывают ли данные ссылки на одно и то же расположение.</span><span class="sxs-lookup"><span data-stu-id="85545-125">Determines whether the specified references point to the same location.</span></span></summary>
        <returns><span data-ttu-id="85545-126"><see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> указывают на одно и то же расположение, иначе <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="85545-126"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> point to the same location; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T As&lt;T&gt; (object o) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T As&lt;class T&gt;(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function As(Of T As Class) (o As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static T As(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member As : obj -&gt; 'T (requires 'T : null)" Usage="System.Runtime.CompilerServices.Unsafe.As o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-127">Тип, к которому будет приведен объект.</span><span class="sxs-lookup"><span data-stu-id="85545-127">The type which the object will be cast to.</span></span></typeparam>
        <param name="o"><span data-ttu-id="85545-128">Объект для приведения.</span><span class="sxs-lookup"><span data-stu-id="85545-128">The object to cast.</span></span></param>
        <summary><span data-ttu-id="85545-129">Приводит заданный объект к указанному типу.</span><span class="sxs-lookup"><span data-stu-id="85545-129">Casts the given object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="85545-130">Исходный объект, приведенный к заданному типу.</span><span class="sxs-lookup"><span data-stu-id="85545-130">The original object, casted to the given type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As&lt;TFrom,TTo&gt;">
      <MemberSignature Language="C#" Value="public static TTo As&lt;TFrom,TTo&gt; (ref TFrom source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TTo As&lt;TFrom, TTo&gt;(!!TFrom&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function As(Of TFrom, TTo) (ByRef source As TFrom) As TTo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA; static TTo % As(TFrom % source);" />
      <MemberSignature Language="F#" Value="static member As :  -&gt; " Usage="System.Runtime.CompilerServices.Unsafe.As source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTo@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFrom" />
        <TypeParameter Name="TTo" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="TFrom&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="TFrom"><span data-ttu-id="85545-131">Тип ссылки для переинтерпретации.</span><span class="sxs-lookup"><span data-stu-id="85545-131">The type of reference to reinterpret.</span></span></typeparam>
        <typeparam name="TTo"><span data-ttu-id="85545-132">Требуемый тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-132">The desired type of the reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-133">Повторно интерпретируемая ссылка.</span><span class="sxs-lookup"><span data-stu-id="85545-133">The reference to reinterpret.</span></span></param>
        <summary><span data-ttu-id="85545-134">Повторно интерпретирует данную ссылку как ссылку на значение типа <typeparamref name="TTo" />.</span><span class="sxs-lookup"><span data-stu-id="85545-134">Reinterprets the given reference as a reference to a value of type <typeparamref name="TTo" />.</span></span></summary>
        <returns><span data-ttu-id="85545-135">Ссылка на значение типа <typeparamref name="TTo" />.</span><span class="sxs-lookup"><span data-stu-id="85545-135">A reference to a value of type <typeparamref name="TTo" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsPointer&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void* AsPointer&lt;T&gt; (ref T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void* AsPointer&lt;T&gt;(!!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void* AsPointer(T % value);" />
      <MemberSignature Language="F#" Value="static member AsPointer : 'T -&gt; nativeptr&lt;unit&gt;" Usage="System.Runtime.CompilerServices.Unsafe.AsPointer value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-136">Тип объекта.</span><span class="sxs-lookup"><span data-stu-id="85545-136">The type of object.</span></span></typeparam>
        <param name="value"><span data-ttu-id="85545-137">Объект, на который необходимо получить указатель.</span><span class="sxs-lookup"><span data-stu-id="85545-137">The object whose pointer is obtained.</span></span></param>
        <summary><span data-ttu-id="85545-138">Возвращает указатель на параметр, переданный по ссылке.</span><span class="sxs-lookup"><span data-stu-id="85545-138">Returns a pointer to the given by-ref parameter.</span></span></summary>
        <returns><span data-ttu-id="85545-139">Указатель на указанное значение.</span><span class="sxs-lookup"><span data-stu-id="85545-139">A pointer to the given value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T AsRef&lt;T&gt; (void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T AsRef&lt;T&gt;(void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % AsRef(void* source);" />
      <MemberSignature Language="F#" Value="static member AsRef : nativeptr&lt;unit&gt; -&gt; " Usage="System.Runtime.CompilerServices.Unsafe.AsRef source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-140">Тип интерпретируемого расположения.</span><span class="sxs-lookup"><span data-stu-id="85545-140">The type of the interpreted location.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-141">Расположение значения, на которое указывает ссылка.</span><span class="sxs-lookup"><span data-stu-id="85545-141">The location of the value to reference.</span></span></param>
        <summary><span data-ttu-id="85545-142">Повторно интерпретирует данное расположение как ссылку на значение типа <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="85545-142">Reinterprets the given location as a reference to a value of type <typeparamref name="T" />.</span></span></summary>
        <returns><span data-ttu-id="85545-143">Ссылка на значение типа <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="85545-143">A reference to a value of type <typeparamref name="T" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T AsRef&lt;T&gt; (ref T source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T AsRef&lt;T&gt;([in]!!T&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsRef(Of T) (ByRef source As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % AsRef(T % source);" />
      <MemberSignature Language="F#" Value="static member AsRef : 'T -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.AsRef source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-144">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-144">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-145">Повторно интерпретируемая ссылка с доступом только для чтения.</span><span class="sxs-lookup"><span data-stu-id="85545-145">The read-only reference to reinterpret.</span></span></param>
        <summary><span data-ttu-id="85545-146">Повторно интерпретирует ссылку, доступную только для чтения, как ссылку.</span><span class="sxs-lookup"><span data-stu-id="85545-146">Reinterprets the given read-only reference as a reference.</span></span></summary>
        <returns><span data-ttu-id="85545-147">Ссылка на значение типа <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="85545-147">A reference to a value of type <typeparamref name="T" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteOffset&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr ByteOffset&lt;T&gt; (ref T origin, ref T target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ByteOffset&lt;T&gt;(!!T&amp; origin, !!T&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ByteOffset(Of T) (ByRef origin As T, ByRef target As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr ByteOffset(T % origin, T % target);" />
      <MemberSignature Language="F#" Value="static member ByteOffset : 'T * 'T -&gt; nativeint" Usage="System.Runtime.CompilerServices.Unsafe.ByteOffset (origin, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="origin" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="target" Type="T" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-148">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-148">The type of reference.</span></span></typeparam>
        <param name="origin"><span data-ttu-id="85545-149">Ссылка на источник.</span><span class="sxs-lookup"><span data-stu-id="85545-149">The reference to origin.</span></span></param>
        <param name="target"><span data-ttu-id="85545-150">Ссылка на целевой объект.</span><span class="sxs-lookup"><span data-stu-id="85545-150">The reference to target.</span></span></param>
        <summary><span data-ttu-id="85545-151">Определяет смещение в байтах от источника до целевого объекта из данной ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-151">Determines the byte offset from origin to target from the given references.</span></span></summary>
        <returns><span data-ttu-id="85545-152">Смещение в байтах от источника до целевого объекта, то есть <paramref name="target" />  -  <paramref name="origin" />.</span><span class="sxs-lookup"><span data-stu-id="85545-152">Byte offset from origin to target i.e. <paramref name="target" /> - <paramref name="origin" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Copy&lt;T&gt; (void* destination, ref T source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy&lt;T&gt;(void* destination, !!T&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Copy(void* destination, T % source);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeptr&lt;unit&gt; * 'T -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.Copy (destination, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="source" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-153">Тип копируемого значения.</span><span class="sxs-lookup"><span data-stu-id="85545-153">The type of value to copy.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="85545-154">Расположение для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-154">The location to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85545-155">Ссылка на значение для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-155">A reference to the value to copy.</span></span></param>
        <summary><span data-ttu-id="85545-156">Копирует значение типа <typeparamref name="T" /> в заданное расположение.</span><span class="sxs-lookup"><span data-stu-id="85545-156">Copies a value of type <typeparamref name="T" /> to the given location.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Copy&lt;T&gt; (ref T destination, void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy&lt;T&gt;(!!T&amp; destination, void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Copy(T % destination, void* source);" />
      <MemberSignature Language="F#" Value="static member Copy : 'T * nativeptr&lt;unit&gt; -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.Copy (destination, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="T" RefType="ref" />
        <Parameter Name="source" Type="System.Void*" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-157">Тип копируемого значения.</span><span class="sxs-lookup"><span data-stu-id="85545-157">The type of value to copy.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="85545-158">Расположение для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-158">The location to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85545-159">Указатель на значение для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-159">A pointer to the value to copy.</span></span></param>
        <summary><span data-ttu-id="85545-160">Копирует значение типа <typeparamref name="T" /> в заданное расположение.</span><span class="sxs-lookup"><span data-stu-id="85545-160">Copies a value of type <typeparamref name="T" /> to the given location.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlock">
      <MemberSignature Language="C#" Value="public static void CopyBlock (ref byte destination, ref byte source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlock(unsigned int8&amp; destination, unsigned int8&amp; source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyBlock (ByRef destination As Byte, ByRef source As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlock(System::Byte % destination, System::Byte % source, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member CopyBlock : byte * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.CopyBlock (destination, source, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="source" Type="System.Byte" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="85545-161">Адрес назначения для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-161">The destination address to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85545-162">Адрес источника для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-162">The source address to copy from.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85545-163">Число байт для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-163">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="85545-164">Копирует байты из адреса источника в адрес назначения.</span><span class="sxs-lookup"><span data-stu-id="85545-164">Copies bytes from the source address to the destination address.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlock">
      <MemberSignature Language="C#" Value="public static void CopyBlock (void* destination, void* source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlock(void* destination, void* source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlock(void* destination, void* source, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member CopyBlock : nativeptr&lt;unit&gt; * nativeptr&lt;unit&gt; * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.CopyBlock (destination, source, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="source" Type="System.Void*" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="85545-165">Адрес назначения для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-165">The destination address to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85545-166">Адрес источника для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-166">The source address to copy from.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85545-167">Число байт для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-167">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="85545-168">Копирует байты из адреса источника в адрес назначения.</span><span class="sxs-lookup"><span data-stu-id="85545-168">Copies bytes from the source address to the destination address.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void CopyBlockUnaligned (ref byte destination, ref byte source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlockUnaligned(unsigned int8&amp; destination, unsigned int8&amp; source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyBlockUnaligned (ByRef destination As Byte, ByRef source As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlockUnaligned(System::Byte % destination, System::Byte % source, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member CopyBlockUnaligned : byte * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned (destination, source, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="source" Type="System.Byte" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="85545-169">Адрес назначения для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-169">The destination address to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85545-170">Адрес источника для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-170">The source address to copy from.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85545-171">Число байт для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-171">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="85545-172">Копирует байты из адреса источника в адрес назначения без учета архитектурно зависимого выравнивания адресов.</span><span class="sxs-lookup"><span data-stu-id="85545-172">Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void CopyBlockUnaligned (void* destination, void* source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlockUnaligned(void* destination, void* source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlockUnaligned(void* destination, void* source, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member CopyBlockUnaligned : nativeptr&lt;unit&gt; * nativeptr&lt;unit&gt; * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned (destination, source, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="source" Type="System.Void*" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="85545-173">Адрес назначения для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-173">The destination address to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85545-174">Адрес источника для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-174">The source address to copy from.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85545-175">Число байт для копирования.</span><span class="sxs-lookup"><span data-stu-id="85545-175">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="85545-176">Копирует байты из адреса источника в адрес назначения без учета архитектурно зависимого выравнивания адресов.</span><span class="sxs-lookup"><span data-stu-id="85545-176">Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlock">
      <MemberSignature Language="C#" Value="public static void InitBlock (ref byte startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlock(unsigned int8&amp; startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitBlock (ByRef startAddress As Byte, value As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlock(System::Byte % startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member InitBlock : byte * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.InitBlock (startAddress, value, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="startAddress"><span data-ttu-id="85545-177">Адрес начала блока памяти для инициализации.</span><span class="sxs-lookup"><span data-stu-id="85545-177">The address of the start of the memory block to initialize.</span></span></param>
        <param name="value"><span data-ttu-id="85545-178">Значение для инициализации блока.</span><span class="sxs-lookup"><span data-stu-id="85545-178">The value to initialize the block to.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85545-179">Число байтов для инициализации.</span><span class="sxs-lookup"><span data-stu-id="85545-179">The number of bytes to initialize.</span></span></param>
        <summary><span data-ttu-id="85545-180">Инициализирует блок памяти в указанном расположении с заданным начальным значением.</span><span class="sxs-lookup"><span data-stu-id="85545-180">Initializes a block of memory at the given location with a given initial value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlock">
      <MemberSignature Language="C#" Value="public static void InitBlock (void* startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlock(void* startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlock(void* startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member InitBlock : nativeptr&lt;unit&gt; * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.InitBlock (startAddress, value, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Void*" />
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="startAddress"><span data-ttu-id="85545-181">Адрес начала блока памяти для инициализации.</span><span class="sxs-lookup"><span data-stu-id="85545-181">The address of the start of the memory block to initialize.</span></span></param>
        <param name="value"><span data-ttu-id="85545-182">Значение для инициализации блока.</span><span class="sxs-lookup"><span data-stu-id="85545-182">The value to initialize the block to.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85545-183">Число байтов для инициализации.</span><span class="sxs-lookup"><span data-stu-id="85545-183">The number of bytes to initialize.</span></span></param>
        <summary><span data-ttu-id="85545-184">Инициализирует блок памяти в указанном расположении с заданным начальным значением.</span><span class="sxs-lookup"><span data-stu-id="85545-184">Initializes a block of memory at the given location with a given initial value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void InitBlockUnaligned (ref byte startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlockUnaligned(unsigned int8&amp; startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitBlockUnaligned (ByRef startAddress As Byte, value As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlockUnaligned(System::Byte % startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member InitBlockUnaligned : byte * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned (startAddress, value, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="startAddress"><span data-ttu-id="85545-185">Адрес начала блока памяти для инициализации.</span><span class="sxs-lookup"><span data-stu-id="85545-185">The address of the start of the memory block to initialize.</span></span></param>
        <param name="value"><span data-ttu-id="85545-186">Значение для инициализации блока.</span><span class="sxs-lookup"><span data-stu-id="85545-186">The value to initialize the block to.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85545-187">Число байтов для инициализации.</span><span class="sxs-lookup"><span data-stu-id="85545-187">The number of bytes to initialize.</span></span></param>
        <summary><span data-ttu-id="85545-188">Инициализирует блок памяти в указанном расположении с заданным начальным значением без учета архитектурно зависимого выравнивания адреса.</span><span class="sxs-lookup"><span data-stu-id="85545-188">Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void InitBlockUnaligned (void* startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlockUnaligned(void* startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlockUnaligned(void* startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member InitBlockUnaligned : nativeptr&lt;unit&gt; * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned (startAddress, value, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="startAddress"><span data-ttu-id="85545-189">Адрес начала блока памяти для инициализации.</span><span class="sxs-lookup"><span data-stu-id="85545-189">The address of the start of the memory block to initialize.</span></span></param>
        <param name="value"><span data-ttu-id="85545-190">Значение для инициализации блока.</span><span class="sxs-lookup"><span data-stu-id="85545-190">The value to initialize the block to.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85545-191">Число байтов для инициализации.</span><span class="sxs-lookup"><span data-stu-id="85545-191">The number of bytes to initialize.</span></span></param>
        <summary><span data-ttu-id="85545-192">Инициализирует блок памяти в указанном расположении с заданным начальным значением без учета архитектурно зависимого выравнивания адреса.</span><span class="sxs-lookup"><span data-stu-id="85545-192">Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddressGreaterThan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool IsAddressGreaterThan&lt;T&gt; (ref T left, ref T right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAddressGreaterThan&lt;T&gt;(!!T&amp; left, !!T&amp; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.IsAddressGreaterThan``1(``0@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAddressGreaterThan(Of T) (ByRef left As T, ByRef right As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool IsAddressGreaterThan(T % left, T % right);" />
      <MemberSignature Language="F#" Value="static member IsAddressGreaterThan : 'T * 'T -&gt; bool" Usage="System.Runtime.CompilerServices.Unsafe.IsAddressGreaterThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="right" Type="T" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-193">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-193">The type of the reference.</span></span></typeparam>
        <param name="left"><span data-ttu-id="85545-194">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="85545-194">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="85545-195">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="85545-195">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="85545-196">Возвращает значение, указывающее, действительно ли заданная ссылка больше другой заданной ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-196">Returns a value that indicates whether a specified reference is greater than another specified reference.</span></span></summary>
        <returns><span data-ttu-id="85545-197"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="85545-197"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddressLessThan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool IsAddressLessThan&lt;T&gt; (ref T left, ref T right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAddressLessThan&lt;T&gt;(!!T&amp; left, !!T&amp; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.IsAddressLessThan``1(``0@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAddressLessThan(Of T) (ByRef left As T, ByRef right As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool IsAddressLessThan(T % left, T % right);" />
      <MemberSignature Language="F#" Value="static member IsAddressLessThan : 'T * 'T -&gt; bool" Usage="System.Runtime.CompilerServices.Unsafe.IsAddressLessThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="right" Type="T" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-198">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-198">The type of the reference.</span></span></typeparam>
        <param name="left"><span data-ttu-id="85545-199">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="85545-199">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="85545-200">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="85545-200">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="85545-201">Возвращает значение, указывающее, действительно ли заданная ссылка меньше другой заданной ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-201">Returns a value that indicates whether a specified reference is less than another specified reference.</span></span></summary>
        <returns><span data-ttu-id="85545-202"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="85545-202"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Read&lt;T&gt; (void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Read&lt;T&gt;(void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T Read(void* source);" />
      <MemberSignature Language="F#" Value="static member Read : nativeptr&lt;unit&gt; -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.Read source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-203">Считываемый тип.</span><span class="sxs-lookup"><span data-stu-id="85545-203">The type to read.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-204">Расположение, из которого выполняется чтение.</span><span class="sxs-lookup"><span data-stu-id="85545-204">The location to read from.</span></span></param>
        <summary><span data-ttu-id="85545-205">Считывает значение типа <typeparamref name="T" /> из заданного расположения.</span><span class="sxs-lookup"><span data-stu-id="85545-205">Reads a value of type <typeparamref name="T" /> from the given location.</span></span></summary>
        <returns><span data-ttu-id="85545-206">Объект типа <typeparamref name="T" /> считывается из указанного расположения.</span><span class="sxs-lookup"><span data-stu-id="85545-206">An object of type <typeparamref name="T" /> read from the given location.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ReadUnaligned&lt;T&gt; (ref byte source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ReadUnaligned&lt;T&gt;(unsigned int8&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadUnaligned(Of T) (ByRef source As Byte) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T ReadUnaligned(System::Byte % source);" />
      <MemberSignature Language="F#" Value="static member ReadUnaligned : byte -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.ReadUnaligned source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-207">Считываемый тип.</span><span class="sxs-lookup"><span data-stu-id="85545-207">The type to read.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-208">Расположение, из которого выполняется чтение.</span><span class="sxs-lookup"><span data-stu-id="85545-208">The location to read from.</span></span></param>
        <summary><span data-ttu-id="85545-209">Считывает значение типа <typeparamref name="T" /> из заданного расположения без учета архитектурно зависимого выравнивания адресов.</span><span class="sxs-lookup"><span data-stu-id="85545-209">Reads a value of type <typeparamref name="T" /> from the given location without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <returns><span data-ttu-id="85545-210">Объект типа <typeparamref name="T" /> считывается из указанного расположения.</span><span class="sxs-lookup"><span data-stu-id="85545-210">An object of type <typeparamref name="T" /> read from the given location.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ReadUnaligned&lt;T&gt; (void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ReadUnaligned&lt;T&gt;(void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T ReadUnaligned(void* source);" />
      <MemberSignature Language="F#" Value="static member ReadUnaligned : nativeptr&lt;unit&gt; -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.ReadUnaligned source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-211">Считываемый тип.</span><span class="sxs-lookup"><span data-stu-id="85545-211">The type to read.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-212">Расположение, из которого выполняется чтение.</span><span class="sxs-lookup"><span data-stu-id="85545-212">The location to read from.</span></span></param>
        <summary><span data-ttu-id="85545-213">Считывает значение типа <typeparamref name="T" /> из заданного расположения без учета архитектурно зависимого выравнивания адресов.</span><span class="sxs-lookup"><span data-stu-id="85545-213">Reads a value of type <typeparamref name="T" /> from the given location without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <returns><span data-ttu-id="85545-214">Объект типа <typeparamref name="T" /> считывается из указанного расположения.</span><span class="sxs-lookup"><span data-stu-id="85545-214">An object of type <typeparamref name="T" /> read from the given location.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf();" />
      <MemberSignature Language="F#" Value="static member SizeOf : unit -&gt; int" Usage="System.Runtime.CompilerServices.Unsafe.SizeOf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-215">Тип объекта, размер которого извлекается.</span><span class="sxs-lookup"><span data-stu-id="85545-215">The type of object whose size is retrieved.</span></span></typeparam>
        <summary><span data-ttu-id="85545-216">Возвращает размер объекта данного параметра типа.</span><span class="sxs-lookup"><span data-stu-id="85545-216">Returns the size of an object of the given type parameter.</span></span></summary>
        <returns><span data-ttu-id="85545-217">Размер объекта типа <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="85545-217">The size of an object of type <typeparamref name="T" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void* Subtract&lt;T&gt; (void* source, int elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void* Subtract&lt;T&gt;(void* source, int32 elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(System.Void*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void* Subtract(void* source, int elementOffset);" />
      <MemberSignature Language="F#" Value="static member Subtract : nativeptr&lt;unit&gt; * int -&gt; nativeptr&lt;unit&gt;" Usage="System.Runtime.CompilerServices.Unsafe.Subtract (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="elementOffset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-218">Тип указателя void.</span><span class="sxs-lookup"><span data-stu-id="85545-218">The type of the void pointer.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-219">Пустой указатель, из которого требуется вычесть смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-219">The void pointer to subtract the offset from.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85545-220">Вычитаемое смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-220">The offset to subtract.</span></span></param>
        <summary><span data-ttu-id="85545-221">Вычитает смещение элемента из данного пустого указателя.</span><span class="sxs-lookup"><span data-stu-id="85545-221">Subtracts an element offset from the given void pointer.</span></span></summary>
        <returns><span data-ttu-id="85545-222">Новый пустой указатель, который отражает вычитание смещения из указанного указателя.</span><span class="sxs-lookup"><span data-stu-id="85545-222">A new void pointer that reflects the subtraction of offset from the specified pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Subtract&lt;T&gt; (ref T source, int elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Subtract&lt;T&gt;(!!T&amp; source, int32 elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract(Of T) (ByRef source As T, elementOffset As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Subtract(T % source, int elementOffset);" />
      <MemberSignature Language="F#" Value="static member Subtract :  * int -&gt; " Usage="System.Runtime.CompilerServices.Unsafe.Subtract (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="elementOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-223">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-223">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-224">Ссылка, из которой требуется вычесть смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-224">The reference to subtract the offset from.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85545-225">Вычитаемое смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-225">The offset to subtract.</span></span></param>
        <summary><span data-ttu-id="85545-226">Вычитает смещение элемента из данной ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-226">Subtracts an element offset from the given reference.</span></span></summary>
        <returns><span data-ttu-id="85545-227">Новая ссылка, получающаяся при вычитании смещения из указателя.</span><span class="sxs-lookup"><span data-stu-id="85545-227">A new reference that reflects the subtraction of offset from pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Subtract&lt;T&gt; (ref T source, IntPtr elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Subtract&lt;T&gt;(!!T&amp; source, native int elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract(Of T) (ByRef source As T, elementOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Subtract(T % source, IntPtr elementOffset);" />
      <MemberSignature Language="F#" Value="static member Subtract :  * nativeint -&gt; " Usage="System.Runtime.CompilerServices.Unsafe.Subtract (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="elementOffset" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-228">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-228">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-229">Ссылка, из которой требуется вычесть смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-229">The reference to subtract the offset from.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85545-230">Вычитаемое смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-230">The offset to subtract.</span></span></param>
        <summary><span data-ttu-id="85545-231">Вычитает смещение элемента из данной ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-231">Subtracts an element offset from the given reference.</span></span></summary>
        <returns><span data-ttu-id="85545-232">Новая ссылка, получающаяся при вычитании смещения из указателя.</span><span class="sxs-lookup"><span data-stu-id="85545-232">A new reference that reflects the subtraction of offset from pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractByteOffset&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SubtractByteOffset&lt;T&gt; (ref T source, IntPtr byteOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SubtractByteOffset&lt;T&gt;(!!T&amp; source, native int byteOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractByteOffset(Of T) (ByRef source As T, byteOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % SubtractByteOffset(T % source, IntPtr byteOffset);" />
      <MemberSignature Language="F#" Value="static member SubtractByteOffset :  * nativeint -&gt; " Usage="System.Runtime.CompilerServices.Unsafe.SubtractByteOffset (source, byteOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="byteOffset" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-233">Тип ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-233">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85545-234">Ссылка, из которой требуется вычесть смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-234">The reference to subtract the offset from.</span></span></param>
        <param name="byteOffset"><span data-ttu-id="85545-235">Вычитаемое смещение.</span><span class="sxs-lookup"><span data-stu-id="85545-235">The offset to subtract.</span></span></param>
        <summary><span data-ttu-id="85545-236">Вычитает смещение в байтах из данной ссылки.</span><span class="sxs-lookup"><span data-stu-id="85545-236">Subtracts a byte offset from the given reference.</span></span></summary>
        <returns><span data-ttu-id="85545-237">Новая ссылка, получающаяся при вычитании смещения в байтах из указателя.</span><span class="sxs-lookup"><span data-stu-id="85545-237">A new reference that reflects the subtraction of byte offset from pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unbox&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T Unbox&lt;T&gt; (object box) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Unbox&lt;struct .ctor (class System.ValueType) T&gt;(object box) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Unbox``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unbox(Of T As Structure) (box As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static T % Unbox(System::Object ^ box);" />
      <MemberSignature Language="F#" Value="static member Unbox : obj -&gt; 'T (requires 'T : struct)" Usage="System.Runtime.CompilerServices.Unsafe.Unbox box" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="box" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-238">Тип для распаковки.</span><span class="sxs-lookup"><span data-stu-id="85545-238">The type to be unboxed.</span></span></typeparam>
        <param name="box"><span data-ttu-id="85545-239">Значение для распаковки.</span><span class="sxs-lookup"><span data-stu-id="85545-239">The value to unbox.</span></span></param>
        <summary><span data-ttu-id="85545-240">Возвращает ссылку <see langword="mutable ref" /> на упакованное значение.</span><span class="sxs-lookup"><span data-stu-id="85545-240">Returns a <see langword="mutable ref" /> to a boxed value.</span></span></summary>
        <returns><span data-ttu-id="85545-241">Ссылка <see langword="mutable ref" /> на упакованное значение <paramref name="box" />.</span><span class="sxs-lookup"><span data-stu-id="85545-241">A <see langword="mutable ref" /> to the boxed value <paramref name="box" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="85545-242">Метод `Unbox<T>` — это просто оболочка для инструкции IL [распаковки](xref:System.Reflection.Emit.OpCodes.Unbox) .</span><span class="sxs-lookup"><span data-stu-id="85545-242">The `Unbox<T>` method is simply a wrapper for the IL [unbox](xref:System.Reflection.Emit.OpCodes.Unbox) instruction.</span></span> <span data-ttu-id="85545-243">Это полезно в качестве оптимизации производительности.</span><span class="sxs-lookup"><span data-stu-id="85545-243">It is useful as a performance optimization.</span></span> <span data-ttu-id="85545-244">Всякий раз, когда API, который принимает <xref:System.Object>, необходимо многократно вызывать с различными значениями типа значения, можно повторно использовать один и тот же объект Box, а не новый, который создается каждый раз.</span><span class="sxs-lookup"><span data-stu-id="85545-244">Whenever an API that takes an <xref:System.Object> needs to be called repeatedly with different values of a value type, the same box object can be reused rather than a new one created each time.</span></span>

<span data-ttu-id="85545-245">Метод `Unbox<T>` имеет важное ограничение использования, которое не применяется компиляторами языка и отвечает вызывающему объекту.</span><span class="sxs-lookup"><span data-stu-id="85545-245">The `Unbox<T>` method has an important usage constraint that is not enforced by language compilers and that is the responsibility of the caller.</span></span> <span data-ttu-id="85545-246">Инструкция IL `unbox` возвращает управляемый указатель, который управляется изменяемыми.</span><span class="sxs-lookup"><span data-stu-id="85545-246">The IL `unbox` instruction returns a controlled-mutability managed pointer.</span></span> <span data-ttu-id="85545-247">Поскольку компиляторы языка .NET и .NET не могут представлять это ограничение, метод `Unbox<T>` возвращает обычное изменяемое `ref T`.</span><span class="sxs-lookup"><span data-stu-id="85545-247">Because .NET and .NET language compilers cannot represent this constraint, the `Unbox<T>` method returns a normal mutable `ref T`.</span></span> <span data-ttu-id="85545-248">Однако разработчики **не должны** изменять возвращаемую ссылку, если только они не уверены, что `T` является изменяемым типом структуры.</span><span class="sxs-lookup"><span data-stu-id="85545-248">However developers **must not** mutate the returned reference unless they are certain that `T` is a mutable struct type.</span></span> <span data-ttu-id="85545-249">Например, поскольку числовые примитивы, такие как <xref:System.Int32>, не являются изменяемыми типами структуры, следующий код не поддерживается:</span><span class="sxs-lookup"><span data-stu-id="85545-249">For example, because the numeric primitives such as <xref:System.Int32> are not mutable struct types, the following code is not suppported:</span></span>

```csharp
Unsafe.Unbox<int>(obj) = 30;
```

<span data-ttu-id="85545-250">В отличие от этого, тип, такой как <xref:System.Drawing.Point?<displayProperty=nameWithType>, является изменяемой структурой с открытыми методами задания свойств, поэтому поддерживается следующий код:</span><span class="sxs-lookup"><span data-stu-id="85545-250">In contrast, a type such as <xref:System.Drawing.Point?<displayProperty=nameWithType> is a mutable struct with public property setters, so the following code is supported:</span></span>

```csharp
Unsafe.Unbox<System.Drawing.Point>(obj).X = 50;
```

<span data-ttu-id="85545-251">Дополнительные сведения см. в разделах III. 1.8.1.2.2 ("управляемые указатели управляемого муттабилити") и III. 4.32 ("распаковка-преобразование типа упакованного значения в его необработанную форму") в [ECMA-335: Common Language Infrastructure (CLI) разделы I в VI](https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-335.pdf).</span><span class="sxs-lookup"><span data-stu-id="85545-251">For more information, see sections III.1.8.1.2.2 ("Controlled-muttability managed pointers") and III.4.32 ("unbox -- convert boxed value type to its raw form") in [ECMA-335: Common Language Infrastructure (CLI) Partitions I to VI](https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-335.pdf).</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="85545-252">Значение <paramref name="box" /> — <see langword="null" />, а тип значения <typeparamref name="T" /> не поддерживает значение NULL.</span><span class="sxs-lookup"><span data-stu-id="85545-252"><paramref name="box" /> is <see langword="null" />, and <typeparamref name="T" /> is a non-nullable value type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="85545-253"><paramref name="box" /> не является типом упакованного значения.</span><span class="sxs-lookup"><span data-stu-id="85545-253"><paramref name="box" /> is not a boxed value type.</span></span>
         
<span data-ttu-id="85545-254">- или -</span><span class="sxs-lookup"><span data-stu-id="85545-254">-or-</span></span>

<span data-ttu-id="85545-255"><paramref name="box" /> не является упакованным значением <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="85545-255"><paramref name="box" /> is not a boxed <typeparamref name="T" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="85545-256"><typeparamref name="T" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="85545-256"><typeparamref name="T" /> cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Write&lt;T&gt; (void* destination, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write&lt;T&gt;(void* destination, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Write(void* destination, T value);" />
      <MemberSignature Language="F#" Value="static member Write : nativeptr&lt;unit&gt; * 'T -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.Write (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-257">Тип записываемого значения.</span><span class="sxs-lookup"><span data-stu-id="85545-257">The type of value to write.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="85545-258">Расположение для записи.</span><span class="sxs-lookup"><span data-stu-id="85545-258">The location to write to.</span></span></param>
        <param name="value"><span data-ttu-id="85545-259">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="85545-259">The value to write.</span></span></param>
        <summary><span data-ttu-id="85545-260">Записывает значение типа <typeparamref name="T" /> в заданное расположение.</span><span class="sxs-lookup"><span data-stu-id="85545-260">Writes a value of type <typeparamref name="T" /> to the given location.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void WriteUnaligned&lt;T&gt; (ref byte destination, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteUnaligned&lt;T&gt;(unsigned int8&amp; destination, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteUnaligned(Of T) (ByRef destination As Byte, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void WriteUnaligned(System::Byte % destination, T value);" />
      <MemberSignature Language="F#" Value="static member WriteUnaligned : byte * 'T -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.WriteUnaligned (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="value" Type="T" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-261">Тип записываемого значения.</span><span class="sxs-lookup"><span data-stu-id="85545-261">The type of value to write.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="85545-262">Расположение для записи.</span><span class="sxs-lookup"><span data-stu-id="85545-262">The location to write to.</span></span></param>
        <param name="value"><span data-ttu-id="85545-263">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="85545-263">The value to write.</span></span></param>
        <summary><span data-ttu-id="85545-264">Записывает значение типа <typeparamref name="T" /> в заданное расположение без учета архитектурно зависимого выравнивания адресов.</span><span class="sxs-lookup"><span data-stu-id="85545-264">Writes a value of type <typeparamref name="T" /> to the given location without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void WriteUnaligned&lt;T&gt; (void* destination, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteUnaligned&lt;T&gt;(void* destination, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void WriteUnaligned(void* destination, T value);" />
      <MemberSignature Language="F#" Value="static member WriteUnaligned : nativeptr&lt;unit&gt; * 'T -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.WriteUnaligned (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
        <Parameter Name="value" Type="T" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85545-265">Тип записываемого значения.</span><span class="sxs-lookup"><span data-stu-id="85545-265">The type of value to write.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="85545-266">Расположение для записи.</span><span class="sxs-lookup"><span data-stu-id="85545-266">The location to write to.</span></span></param>
        <param name="value"><span data-ttu-id="85545-267">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="85545-267">The value to write.</span></span></param>
        <summary><span data-ttu-id="85545-268">Записывает значение типа <typeparamref name="T" /> в заданное расположение без учета архитектурно зависимого выравнивания адресов.</span><span class="sxs-lookup"><span data-stu-id="85545-268">Writes a value of type <typeparamref name="T" /> to the given location without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
