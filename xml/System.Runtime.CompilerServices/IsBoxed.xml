<Type Name="IsBoxed" FullName="System.Runtime.CompilerServices.IsBoxed">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2503333681d066ed5e4b292a45b644853ea8d25" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70577705" /></Metadata><TypeSignature Language="C#" Value="public static class IsBoxed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsBoxed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsBoxed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsBoxed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsBoxed abstract sealed" />
  <TypeSignature Language="F#" Value="type IsBoxed = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="70784-101">Указывает, что измененный ссылочный тип является упакованным типом значения.</span><span class="sxs-lookup"><span data-stu-id="70784-101">Indicates that the modified reference type is a boxed value type.</span></span> <span data-ttu-id="70784-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="70784-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70784-103">Компилятор Майкрософт C++ поддерживает Упакованные типы значений непосредственно на языке.</span><span class="sxs-lookup"><span data-stu-id="70784-103">The Microsoft C++ compiler supports boxed value types directly in the language.</span></span>  <span data-ttu-id="70784-104">Сведения о упакованных типах значений поставляются в метаданные в виде пользовательского модификатора, где модификатор добавляет ссылку на упакованный тип значения.</span><span class="sxs-lookup"><span data-stu-id="70784-104">Information about boxed value types is emitted into metadata as a custom modifier, where the modifier decorates a reference to the value type being boxed.</span></span>  
  
 <span data-ttu-id="70784-105">Компиляторы создают пользовательские модификаторы в метаданных, чтобы изменить способ, которым JIT-компилятор обрабатывает значения, если поведение по умолчанию не подходит.</span><span class="sxs-lookup"><span data-stu-id="70784-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="70784-106">Когда JIT-компилятор встречает пользовательский модификатор, он обрабатывает значение таким образом, как указывает модификатор.</span><span class="sxs-lookup"><span data-stu-id="70784-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="70784-107">Компиляторы могут применять настраиваемые модификаторы к методам, параметрам и возвращаемым значениям.</span><span class="sxs-lookup"><span data-stu-id="70784-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="70784-108">JIT-компилятор должен реагировать на обязательные модификаторы, но может игнорировать необязательные модификаторы.</span><span class="sxs-lookup"><span data-stu-id="70784-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="70784-109">Пользовательские модификаторы можно создавать в метаданных с помощью одного из следующих методов:</span><span class="sxs-lookup"><span data-stu-id="70784-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="70784-110">Использование методов <xref:System.Reflection.Emit.TypeBuilder> в классе, таких как <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, и <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="70784-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="70784-111">Создание файла инструкций промежуточного языка MSIL, который содержит вызовы `modopt` и `modreq`и сборку файла с помощью [Ilasm. exe (ассемблер IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="70784-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="70784-112">Использование API неуправляемого отражения.</span><span class="sxs-lookup"><span data-stu-id="70784-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70784-113">В следующем примере показано, как выдать <xref:System.Runtime.CompilerServices.IsBoxed> объект в сборку с помощью отражения.</span><span class="sxs-lookup"><span data-stu-id="70784-113">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsBoxed> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsBoxed#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsBoxed/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
