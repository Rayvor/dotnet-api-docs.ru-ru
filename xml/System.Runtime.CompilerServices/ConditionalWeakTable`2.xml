<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1169271c14683df5d91196b145ec8be86b2bfbb" /><Meta Name="ms.sourcegitcommit" Value="cfc0e4215fd0d259582ada2141878befd7c3c8c6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/12/2019" /><Meta Name="ms.locfileid" Value="67855534" /></Metadata><TypeSignature Language="C#" Value="public sealed class ConditionalWeakTable&lt;TKey,TValue&gt; where TKey : class where TValue : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConditionalWeakTable`2&lt;class TKey, class TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalWeakTable(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA; where TKey : class where TValue : classpublic ref class ConditionalWeakTable sealed" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Dynamic.Runtime</AssemblyName>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="e3ad8-101">Ссылочный тип, к которому прикрепляется поле.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-101">The reference type to which the field is attached.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="e3ad8-102">Тип поля.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-102">The field's type.</span></span> <span data-ttu-id="e3ad8-103">Это должен быть ссылочный тип.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-103">This must be a reference type.</span></span></typeparam>
    <summary><span data-ttu-id="e3ad8-104">Позволяет компиляторам динамически прикреплять поля к управляемым объектам.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-104">Enables compilers to dynamically attach object fields to managed objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad8-105"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Класс позволяет языковые компиляторы для присоединения произвольных свойств к управляемым объектам во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class enables language compilers to attach arbitrary properties to managed objects at run time.</span></span> <span data-ttu-id="e3ad8-106">Объект <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> объект является словарем, который привязывается к его присоединенное свойство, которое представляется значением управляемого объекта, которое представляется с помощью ключа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-106">A <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object is a dictionary that binds a managed object, which is represented by a key, to its attached property, which is represented by a value.</span></span> <span data-ttu-id="e3ad8-107">Ключи объекта представляют собой отдельные экземпляры `TKey` класс, к которому присоединено свойство и его значения и значения свойств, которые назначены соответствующие объекты.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-107">The object's keys are the individual instances of the `TKey` class to which the property is attached, and its values are the property values that are assigned to the corresponding objects.</span></span>  
  
 <span data-ttu-id="e3ad8-108">Ключи должны быть уникальными; Другими словами <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> класс поддерживает одно вложенное значение на управляемый объект.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-108">Keys must be unique; in other words, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class supports one attached value per managed object.</span></span> <span data-ttu-id="e3ad8-109">Два ключа равны, если передачи их <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> возвращает метод `true`.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-109">Two keys are equal if passing them to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3ad8-110">Вы не можете управлять сравнения на равенство, переопределив <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> явно задать хэш-код для ключа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-110">You cannot control equality comparisons by overriding <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> to explicitly set the hash code for a key.</span></span> <span data-ttu-id="e3ad8-111"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Класс не использует <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> метод для вычисления хэш-коды и поэтому не вызывает <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> переопределяет.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-111">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class does not use the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method to compute hash codes, and therefore does not invoke <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> overrides.</span></span>  
  
 <span data-ttu-id="e3ad8-112">Несмотря на то что <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> класс содержит коллекцию пар "ключ значение", он будет лучше всего считать таблицу, а не объект словаря.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-112">Although the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class holds a collection of key/value pairs, it is best thought of as a table rather than a dictionary object.</span></span> <span data-ttu-id="e3ad8-113"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Класс отличается от словарь несколькими способами:</span><span class="sxs-lookup"><span data-stu-id="e3ad8-113">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from a dictionary in several ways:</span></span>  
  
-   <span data-ttu-id="e3ad8-114">Он не сохраняет ключи.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-114">It does not persist keys.</span></span> <span data-ttu-id="e3ad8-115">То есть ключ которого не поддерживается только в том случае, поскольку он является членом коллекции.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-115">That is, a key is not kept alive only because it is a member of the collection.</span></span>  
  
-   <span data-ttu-id="e3ad8-116">Он не включает все методы (такие как `GetEnumerator` или `Contains`), обычно имеет словарь.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-116">It does not include all the methods (such as `GetEnumerator` or `Contains`) that a dictionary typically has.</span></span>  
  
-   <span data-ttu-id="e3ad8-117">Он не реализует <xref:System.Collections.Generic.IDictionary%602> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-117">It does not implement the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span>  
  
 <span data-ttu-id="e3ad8-118"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Класс отличается от других объектов коллекции во управления временем жизни объекта ключей, хранящихся в коллекции.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-118">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from other collection objects in its management of the object lifetime of keys stored in the collection.</span></span> <span data-ttu-id="e3ad8-119">Как правило когда объект хранится в коллекции, время его существования продолжается, пока он удаляется (и нет дополнительных ссылок на объект), или не уничтожается сам объект коллекции.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-119">Ordinarily, when an object is stored in a collection, its lifetime lasts until it is removed (and there are no additional references to the object) or until the collection object itself is destroyed.</span></span> <span data-ttu-id="e3ad8-120">Однако в <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> класс, добавив пару "ключ значение" в таблицу не гарантирует, что ключ будет сохраняться, даже если его можно получить доступ непосредственно из значения, хранящегося в таблице (например, если таблица содержит один ключ, со значением V1 и второй ключ, B, со значением P2, которая содержит ссылку на объект).</span><span class="sxs-lookup"><span data-stu-id="e3ad8-120">However, in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class, adding a key/value pair to the table does not ensure that the key will persist, even if it can be reached directly from a value stored in the table (for example, if the table contains one key, A, with a value V1, and a second key, B, with a value P2 that contains a reference to A).</span></span> <span data-ttu-id="e3ad8-121">Вместо этого <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> автоматически удаляет запись ключ/значение сразу же нет других ссылок на ключ существует вне таблицы.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-121">Instead, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> automatically removes the key/value entry as soon as no other references to a key exist outside the table.</span></span> <span data-ttu-id="e3ad8-122">Иллюстрация приведена в примере.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-122">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad8-123">В следующем примере показано, что ключ хранится в <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы не сохраняется после удаления ссылки на него вне таблицы.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-123">The following example illustrates that a key stored in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table does not persist after references to it outside the table are destroyed.</span></span> <span data-ttu-id="e3ad8-124">В примере определяются два класса: `ManagedClass`, который представляет ключ в таблице, и `ClassData`, который представляет значение ключа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-124">The example defines two classes: `ManagedClass`, which represents the key in the table, and `ClassData`, which represents the key's value.</span></span> <span data-ttu-id="e3ad8-125">В примере создается экземпляр трех объектов каждого типа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-125">The example instantiates three objects of each type.</span></span> <span data-ttu-id="e3ad8-126">Он также создает <xref:System.WeakReference> , представляющий второй `ManagedClass`, а затем удаляет второй `ManagedClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-126">It also instantiates a <xref:System.WeakReference> object that represents the second `ManagedClass`, and then destroys the second `ManagedClass` instance.</span></span> <span data-ttu-id="e3ad8-127">Попытка получить второй `ManagedClass` объекта из <xref:System.WeakReference.Target%2A> свойство указывает, что остаться без ссылки на объект.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-127">The attempt to retrieve the second `ManagedClass` object from the <xref:System.WeakReference.Target%2A> property indicates that no references to the object remain.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/cs/example1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e3ad8-128">Экземпляры <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> класса являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-128">Instances of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class are thread safe.</span></span> <span data-ttu-id="e3ad8-129">Они не требуют объектов делать дополнительные блокировки каких-либо.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-129">They do not require callers to do any additional locking.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalWeakTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad8-130">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-130">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad8-131"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> Конструктор создает пустой <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы; то есть таблица содержит не пары "ключ значение".</span><span class="sxs-lookup"><span data-stu-id="e3ad8-131">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> constructor instantiates an empty <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table; that is, the table contains no key/value pairs.</span></span> <span data-ttu-id="e3ad8-132">Пары "ключ значение" можно добавить, вызвав <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, или <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-132">You can add key/value pairs by calling the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, or <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method.</span></span>  
  
 <span data-ttu-id="e3ad8-133">Каждый ключ в <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> объекта должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-133">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="e3ad8-134">Ключи не являются уникальными, если они ссылаются на тот же объект (то есть, в том случае, если их передача в качестве аргументов для <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> возвращает метод `true`).</span><span class="sxs-lookup"><span data-stu-id="e3ad8-134">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.Add : 'Key * 'Value -&gt; unit" Usage="conditionalWeakTable.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e3ad8-135">Добавляемый ключ.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-135">The key to add.</span></span> <span data-ttu-id="e3ad8-136"><paramref name="key" /> представляет объект, к которому присоединяется свойство.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-136"><paramref name="key" /> represents the object to which the property is attached.</span></span></param>
        <param name="value"><span data-ttu-id="e3ad8-137">Значение свойства ключа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-137">The key's property value.</span></span></param>
        <summary><span data-ttu-id="e3ad8-138">Добавляет ключ в таблицу.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-138">Adds a key to the table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad8-139">Каждый ключ в <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> объекта должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-139">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="e3ad8-140">Ключи не являются уникальными, если они ссылаются на тот же объект (то есть, в том случае, если их передача в качестве аргументов для <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> возвращает метод `true`).</span><span class="sxs-lookup"><span data-stu-id="e3ad8-140">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 <span data-ttu-id="e3ad8-141">Если ключ является сборщиком мусора во время операции добавления, удаления существующей пары «ключ значение» и новую пару ключ значение добавляется без создания исключения.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-141">If the key is garbage-collected during the addition operation, the existing key/value pair is removed and the new key/value pair is added without an exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad8-142">В следующем примере определяется `MainClass` класс и `MainInfo` класс, который предоставляет сведения о `MainClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-142">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="e3ad8-143">Затем в примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> метод, чтобы добавить `MainClass` объекта и его вложенных `MainInfo` объект <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-143">The example then calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="e3ad8-144">Этот пример также иллюстрирует вызовы <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> и <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> методы для добавления пары "ключ значение" для таблицы, а также <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод для извлечения значение существующего ключа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-144">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3ad8-145">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-145"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e3ad8-146"><paramref name="key" /> уже существует.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-146"><paramref name="key" /> already exists.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e3ad8-147">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-147">requires full trust for the immediate caller.</span></span> <span data-ttu-id="e3ad8-148">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-148">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public void AddOrUpdate (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrUpdate(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.AddOrUpdate(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrUpdate (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrUpdate(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * 'Value -&gt; unit" Usage="conditionalWeakTable.AddOrUpdate (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="TValue" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e3ad8-149">Ключ, который необходимо добавить или обновить.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-149">The key to add or update.</span></span> <span data-ttu-id="e3ad8-150">Не может быть <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-150">May not be <see langword="null" />.</span></span></param>
        <param name="value"><span data-ttu-id="e3ad8-151">Значение, связываемое с <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-151">The value to associate with <paramref name="key" />.</span></span></param>
        <summary><span data-ttu-id="e3ad8-152">Добавляет ключ и значение, если этот ключ не существует, или обновляет значение существующего ключа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-152">Adds the key and value if the key doesn't exist, or updates the existing key's value if it does exist.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3ad8-153">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-153"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="conditionalWeakTable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad8-154">Очищает все пары "ключ — значение".</span><span class="sxs-lookup"><span data-stu-id="e3ad8-154">Clears all the key/value pairs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ConditionalWeakTable`2 ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="conditionalWeakTable.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad8-155">Обеспечивает освобождение ресурсов и выполнение других завершающих операций, когда сборщик мусора восстанавливает объект <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-155">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad8-156">Сборщик мусора вызывает <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> когда текущий объект готов к завершению.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-156">The garbage collector calls <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateValue">
      <MemberSignature Language="C#" Value="public TValue GetOrCreateValue (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrCreateValue(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateValue (key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrCreateValue(TKey key);" />
      <MemberSignature Language="F#" Value="member this.GetOrCreateValue : 'Key -&gt; 'Value" Usage="conditionalWeakTable.GetOrCreateValue key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e3ad8-157">Ключ, который нужно найти.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-157">The key to search for.</span></span> <span data-ttu-id="e3ad8-158"><paramref name="key" /> представляет объект, к которому присоединяется свойство.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-158"><paramref name="key" /> represents the object to which the property is attached.</span></span></param>
        <summary><span data-ttu-id="e3ad8-159">Единым блоком выполняет поиск указанного ключа в таблице и возвращает соответствующее значение.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-159">Atomically searches for a specified key in the table and returns the corresponding value.</span></span> <span data-ttu-id="e3ad8-160">Если ключ в таблице не существует, метод вызывает конструктор класса по умолчанию, представляющего значение таблицы для создания значения, связанного с заданным ключом.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-160">If the key does not exist in the table, the method invokes the default constructor of the class that represents the table's value to create a value that is bound to the specified key.</span></span></summary>
        <returns><span data-ttu-id="e3ad8-161">Значение, соответствующее ключу <paramref name="key" />, если ключ <paramref name="key" /> существует в таблице; в противном случае — новое значение, созданное конструктором класса по умолчанию, определенного параметром универсального типа <paramref name="TValue" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-161">The value that corresponds to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, a new value created by the default constructor of the class defined by the <paramref name="TValue" /> generic type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad8-162">Если `key` не существует в таблице, метод добавляет его, а также объект, экземпляр которого создается путем вызова конструктора по умолчанию для класса, определенного с `TValue` параметр универсального типа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-162">If `key` does not exist in the table, the method adds it, along with the object that is instantiated by calling the default constructor of the class defined by the `TValue` generic type parameter.</span></span> <span data-ttu-id="e3ad8-163">Если `TValue` класс имеет конструктор по умолчанию, <xref:System.MissingMethodException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-163">If the `TValue` class has no default constructor, a <xref:System.MissingMethodException> is thrown.</span></span>  
  
 <span data-ttu-id="e3ad8-164">Это рекомендуемый способ получения существующее значение или Добавление нового значения для <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблица, если класс значения таблицы определяет конструктор по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-164">This is the recommended method of retrieving an existing value or adding a new value to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table if the class of the table's value defines a default constructor.</span></span> <span data-ttu-id="e3ad8-165">Если он не определяет конструктор по умолчанию, вместо этого можно вызвать <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> метод, который зависит от метода обратного вызова для создания экземпляра объекта, представляющего значение таблицы</span><span class="sxs-lookup"><span data-stu-id="e3ad8-165">If it does not define a default constructor, you can instead call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method, which relies on a callback-provided method to instantiate the object representing the table's value</span></span>  
  
 <span data-ttu-id="e3ad8-166">Чтобы получить значение существующего ключа без добавления пары "ключ/значение", если ключ не найден в таблице, вызовите <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-166">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad8-167">В следующем примере определяется `MainClass` класс и `MainInfo` класс, который предоставляет сведения о `MainClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-167">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="e3ad8-168">В примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> метод, чтобы добавить `MainClass` объекта и его вложенных `MainInfo` объект <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-168">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="e3ad8-169">Этот пример также иллюстрирует вызовы <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> и <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> методы для добавления пары "ключ значение" для таблицы, а также <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод для извлечения значение существующего ключа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-169">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3ad8-170">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-170"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="e3ad8-171">Вместо этого в <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET для приложений Магазина Windows</see> или в <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">переносимой библиотеке классов</see> перехватите исключение базового класса <see cref="T:System.MissingMemberException" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-171">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="e3ad8-172">Класс, представляющий значение в таблице, не определяет конструктор по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-172">The class that represents the table's value does not define a default constructor.</span></span></exception>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public TValue GetValue (TKey key, System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback createValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetValue(!TKey key, class System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback&lt;!TKey, !TValue&gt; createValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetValue(TKey key, System::Runtime::CompilerServices::ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback ^ createValueCallback);" />
      <MemberSignature Language="F#" Value="member this.GetValue : 'Key * System.Runtime.CompilerServices.ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback -&gt; 'Value" Usage="conditionalWeakTable.GetValue (key, createValueCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="createValueCallback" Type="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e3ad8-173">Ключ, который нужно найти.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-173">The key to search for.</span></span> <span data-ttu-id="e3ad8-174">Параметр <paramref name="key" /> представляет объект, в который вкладывается свойство.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-174"><paramref name="key" /> represents the object to which the property is attached.</span></span></param>
        <param name="createValueCallback"><span data-ttu-id="e3ad8-175">Делегат метода, который может создать значение для заданного ключа <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-175">A delegate to a method that can create a value for the given <paramref name="key" />.</span></span> <span data-ttu-id="e3ad8-176">Имеет один параметр типа <c>TKey</c> и возвращает значение типа <c>TValue</c>.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-176">It has a single parameter of type <c>TKey</c>, and returns a value of type <c>TValue</c>.</span></span></param>
        <summary><span data-ttu-id="e3ad8-177">Единым блоком выполняет поиск указанного ключа в таблице и возвращает соответствующее значение.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-177">Atomically searches for a specified key in the table and returns the corresponding value.</span></span> <span data-ttu-id="e3ad8-178">Если ключ в таблице не существует, метод вызывает метод обратного вызова для создания значения, связанного с заданным ключом.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-178">If the key does not exist in the table, the method invokes a callback method to create a value that is bound to the specified key.</span></span></summary>
        <returns><span data-ttu-id="e3ad8-179">Значение, прикрепляемое к <paramref name="key" />, если <paramref name="key" /> существует в таблице; в противном случае — новое значение, возвращаемое делегатом <paramref name="createValueCallback" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-179">The value attached to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, the new value returned by the <paramref name="createValueCallback" /> delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad8-180">Если `key` не существует в таблице, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> вызывает метод, который определяется `createValueCallback` параметра и передает его ключ.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-180">If `key` does not exist in the table, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> invokes the method that is defined by the `createValueCallback` parameter and passes it the key.</span></span> <span data-ttu-id="e3ad8-181">Новое значение связанного с ключом в таблице и возвращается как результат.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-181">A new value is bound to the key in the table and returned as a result.</span></span>  
  
 <span data-ttu-id="e3ad8-182">Этот метод следует используйте только в том случае, когда класс, представляющий значение в таблице не определяет конструктор по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-182">Use this method only when the class that represents the table's value does not define a default constructor.</span></span> <span data-ttu-id="e3ad8-183">Если он определен конструктор по умолчанию, используйте <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-183">If it does define a default constructor, use the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method instead.</span></span> <span data-ttu-id="e3ad8-184">Чтобы получить значение существующего ключа без добавления пары "ключ/значение", если ключ не найден в таблице, вызовите <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-184">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
 <span data-ttu-id="e3ad8-185">Если несколько потоков пытаются создать один и тот же ключ, `createValueCallback` может вызываться несколько раз с тем же ключом.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-185">If multiple threads try to create the same key, `createValueCallback` may be invoked multiple times with the same key.</span></span> <span data-ttu-id="e3ad8-186">Только один из этих вызовов будет выполнена успешно, и возвращаемое значение будет добавляться в таблицу.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-186">Only one of these calls will succeed, and its returned value will be added to the table.</span></span> <span data-ttu-id="e3ad8-187">Какой поток успешно создает значение не определено.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-187">Which thread succeeds in creating the value is indeterminate.</span></span> <span data-ttu-id="e3ad8-188">Это правило позволяет таблице вызывать `createValueCallback` вне внутренней блокировки таблицы для предотвращения взаимоблокировок.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-188">This rule permits the table to invoke `createValueCallback` outside the internal table lock to prevent deadlocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad8-189">В следующем примере определяется `MainClass` класс и `MainInfo` класс, который предоставляет сведения о `MainClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-189">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="e3ad8-190">Он также определяет статическую (`Shared` в Visual Basic) `CreateAttachedValue` метод, который может быть назначен <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> делегировать и передается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-190">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="e3ad8-191">В примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> метод, чтобы добавить `MainClass` объекта и его вложенных `MainInfo` объект <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-191">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="e3ad8-192">Этот пример также иллюстрирует вызовы <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> и <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> методы для добавления пары "ключ значение" для таблицы, а также <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод для извлечения значение существующего ключа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-192">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3ad8-193">Значение параметра <paramref name="key" /> или <paramref name="createValueCallback" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-193"><paramref name="key" /> or <paramref name="createValueCallback" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e3ad8-194">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-194">requires full trust for the immediate caller.</span></span> <span data-ttu-id="e3ad8-195">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-195">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
        <altmember cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="member this.Remove : 'Key -&gt; bool" Usage="conditionalWeakTable.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e3ad8-196">Удаляемый ключ.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-196">The key to remove.</span></span></param>
        <summary><span data-ttu-id="e3ad8-197">Удаляет ключ и его значение из таблицы.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-197">Removes a key and its value from the table.</span></span></summary>
        <returns><span data-ttu-id="e3ad8-198">Значение <see langword="true" />, если ключ найден и удален; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-198"><see langword="true" /> if the key is found and removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad8-199">Если ключ является сборщиком мусора во время этой операции, метод не вызывает исключение, и возвращаемое значение не определено.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-199">If the key is garbage-collected during this operation, the method does not raise an exception and the return value is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3ad8-200">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-200"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e3ad8-201">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-201">requires full trust for the immediate caller.</span></span> <span data-ttu-id="e3ad8-202">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-202">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="conditionalWeakTable.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e3ad8-203">Ключ, представляющий объект с вложенным свойством зависимостей.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-203">The key that represents an object with an attached property.</span></span></param>
        <param name="value"><span data-ttu-id="e3ad8-204">При возвращении этот метод содержит значение вложенного свойства.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-204">When this method returns, contains the attached property value.</span></span> <span data-ttu-id="e3ad8-205">Если ключ <paramref name="key" /> не найден, <paramref name="value" /> содержит значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-205">If <paramref name="key" /> is not found, <paramref name="value" /> contains the default value.</span></span></param>
        <summary><span data-ttu-id="e3ad8-206">Получает значение заданного ключа.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-206">Gets the value of the specified key.</span></span></summary>
        <returns><span data-ttu-id="e3ad8-207">Значение <see langword="true" />, если ключ <paramref name="key" /> найден; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-207"><see langword="true" /> if <paramref name="key" /> is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad8-208">Если ключ является сборщиком мусора во время этой операции, метод может возвратить `false` и задайте `value` по умолчанию значение (как если бы ключ не существовал).</span><span class="sxs-lookup"><span data-stu-id="e3ad8-208">If the key is garbage-collected during this operation, the method may return `false` and set `value` to the default value (as if the key were not present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad8-209">В следующем примере определяется `MainClass` класс и `MainInfo` класс, который предоставляет сведения о `MainClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-209">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="e3ad8-210">В примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, и <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> методы для добавления пары "ключ/значение" <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-210">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="e3ad8-211">В каждом случае в примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод, чтобы убедиться, что пары "ключ/значение" добавлен в таблицу.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-211">In each case, the example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to confirm that the key/value pair has been added to the table.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3ad8-212">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-212"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e3ad8-213">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-213">requires full trust for the immediate caller.</span></span> <span data-ttu-id="e3ad8-214">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="e3ad8-214">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
      </Docs>
    </Member>
  </Members>
</Type>
