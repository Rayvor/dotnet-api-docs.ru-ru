<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b34b35576273d0b5ef026967dc07d1dc04a9c196" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75166672" /></Metadata><TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">Ключ, которой принадлежит создаваемому значению.</param>
    <summary>Представляет метод, который создает значение не по умолчанию для добавления в качестве пары "ключ-значение" в объект <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</summary>
    <returns>Экземпляр ссылочного типа, который представляет значение для добавления к заданному ключу.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Делегат <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> инкапсулирует метод обратного вызова, который вызывается методом <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType>, когда ключ, переданный в метод, не найден в объекте <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>. Метод <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> передает метод обратного вызова с ключом, представляющим управляемый объект, к которому должно быть динамически присоединено значение свойства. Метод отвечает за возврат значения свойства вызывающему его объекту, который, в свою очередь, добавляет пару «ключ-значение» в таблицу.  
  
 Метод <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> используется для возврата экземпляра ссылочного типа, который можно присоединить к указанному ключу. Он позволяет инициализировать этот экземпляр, используя значения, отличные от значений по умолчанию. Если ключ не найден в таблице, метод <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> добавляет пару "ключ-значение", в которой значение инициализируется с помощью значений по умолчанию.  
  
   
  
## Examples  
 В следующем примере определяется класс `MainClass` и класс `MainInfo`. `MainInfo` предоставляет сведения об экземпляре `MainClass`. Он также определяет статический (`Shared` в Visual Basic) `CreateAttachedValue` метод, который можно назначить делегату <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> и передать в метод <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>. В примере вызывается метод <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> для добавления `MainClass` объекта и соответствующего `MainInfo` объекта в таблицу <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>. В примере также показаны вызовы методов <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> и <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> для добавления пар "ключ-значение" в таблицу и вызова метода <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> для получения значения, принадлежащего существующему ключу.  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>
