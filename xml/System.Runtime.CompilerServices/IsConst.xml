<Type Name="IsConst" FullName="System.Runtime.CompilerServices.IsConst">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44617ef45c040e7439b903cc0f796e2356d835a0" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75091961" /></Metadata><TypeSignature Language="C#" Value="public static class IsConst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsConst extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsConst" />
  <TypeSignature Language="VB.NET" Value="Public Class IsConst" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsConst abstract sealed" />
  <TypeSignature Language="F#" Value="type IsConst = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Указывает, что измененный тип имеет модификатор <see langword="const" />. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компилятор Майкрософт C++ создает этот модификатор в метаданных для любого параметра, типа возвращаемого значения или объявления объекта, объявленного как `const` в исходном коде.  
  
 Компиляторы создают пользовательские модификаторы в метаданных, чтобы изменить способ, которым JIT-компилятор обрабатывает значения, если поведение по умолчанию не подходит.  Когда JIT-компилятор встречает пользовательский модификатор, он обрабатывает значение таким образом, как указывает модификатор.  Компиляторы могут применять настраиваемые модификаторы к методам, параметрам и возвращаемым значениям.  JIT-компилятор должен реагировать на обязательные модификаторы, но может игнорировать необязательные модификаторы.  
  
 Пользовательские модификаторы можно создавать в метаданных с помощью одного из следующих методов:  
  
-   Использование методов в классе <xref:System.Reflection.Emit.TypeBuilder>, таких как <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>и <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Создание файла инструкций на языке MSIL, который содержит вызовы `modopt` и `modreq`, а также сборку файла с помощью [Ilasm. exe (АССЕМБЛЕР IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Использование API неуправляемого отражения.  
  
   
  
## Examples  
 В следующем примере показано, как выдать объект <xref:System.Runtime.CompilerServices.IsConst> в сборку с помощью отражения.  
  
 [!code-cpp[Runtime.CompilerServices.IsConst#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsConst/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
