<Type Name="IsCopyConstructed" FullName="System.Runtime.CompilerServices.IsCopyConstructed">
  <Metadata><Meta Name="ms.openlocfilehash" Value="411432f73e373cb97391c3594dd6abbf46b60376" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70507285" /></Metadata><TypeSignature Language="C#" Value="public static class IsCopyConstructed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsCopyConstructed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsCopyConstructed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsCopyConstructed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsCopyConstructed abstract sealed" />
  <TypeSignature Language="F#" Value="type IsCopyConstructed = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что при любом копировании значений данного типа необходимо использовать конструктор копий, предоставляемый этим типом.  Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любой тип, измененный <xref:System.Runtime.CompilerServices.IsCopyConstructed> классом, должен реализовать метод `MarshalCopy` с именем, который вызывает собственный конструктор копии.  
  
 Любой собственный C++ тип, который создается в метаданных с конструкторами копий, должен вызывать эти методы маршалером при копировании значений через границу упаковки.  Компилятор Майкрософт C++ изменяет все собственные C++ типы в параметрах метода и возвращаемых типах, которые имеют этот модификатор, чтобы активировать это поведение в коде маршалинга.  
  
 Компиляторы создают пользовательские модификаторы в метаданных, чтобы изменить способ, которым JIT-компилятор обрабатывает значения, если поведение по умолчанию не подходит.  Когда JIT-компилятор встречает пользовательский модификатор, он обрабатывает значение таким образом, как указывает модификатор.  Компиляторы могут применять настраиваемые модификаторы к методам, параметрам и возвращаемым значениям.  JIT-компилятор должен реагировать на обязательные модификаторы, но может игнорировать необязательные модификаторы.  
  
 Пользовательские модификаторы можно создавать в метаданных с помощью одного из следующих методов:  
  
-   Использование методов <xref:System.Reflection.Emit.TypeBuilder> в классе, таких как <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, и <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Создание файла инструкций промежуточного языка MSIL, который содержит вызовы `modopt` и `modreq`и сборку файла с помощью [Ilasm. exe (ассемблер IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Использование API неуправляемого отражения.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
