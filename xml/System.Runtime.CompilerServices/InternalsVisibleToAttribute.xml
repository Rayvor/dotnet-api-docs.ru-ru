<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bebb7f8a103a6c4b7ff056d3f0134291f0873425" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73357130" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8933f-101">Задает, что типы, видимые обычно только в пределах текущей сборки, являются видимыми для заданной сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-101">Specifies that types that are ordinarily visible only within the current assembly are visible to a specified assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8933f-102">Обычно типы и члены с областью `internal` или `private protected` (в C#), а также областью `Friend` и `Private Protected` (в Visual Basic) видимы только в той сборке, в которой они определены.</span><span class="sxs-lookup"><span data-stu-id="8933f-102">Ordinarily, types and members with `internal` or `private protected` scope (in C#) and `Friend` and `Private Protected` scope (in Visual Basic) are visible only in the assembly in which they are defined.</span></span> <span data-ttu-id="8933f-103">Атрибут <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> делает их видимыми для типов в указанной сборке, которая называется дружественной сборкой.</span><span class="sxs-lookup"><span data-stu-id="8933f-103">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute makes them also visible to the types in a specified assembly, which is known as a friend assembly.</span></span> <span data-ttu-id="8933f-104">Это применимо только к `internal` (`Friend` в VB) или только к методам `private protected`(`Private Protected` в VB), но не `private`.</span><span class="sxs-lookup"><span data-stu-id="8933f-104">This only applies to `internal` (`Friend` in VB) or `private protected`(`Private Protected` in VB) methods only, but not `private` ones.</span></span>
  
 <span data-ttu-id="8933f-105">Атрибут применяется на уровне сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-105">The attribute is applied at the assembly level.</span></span> <span data-ttu-id="8933f-106">Это означает, что он может быть добавлен в начало файла исходного кода, или его можно добавить в файл AssemblyInfo в проекте Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="8933f-106">This means that it can be included at the beginning of a source code file, or it can be included in the AssemblyInfo file in a Visual Studio project.</span></span> <span data-ttu-id="8933f-107">Атрибут можно использовать для указания одной дружественной сборки, которая может обращаться к внутренним типам и членам текущей сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-107">You can use the attribute to specify a single friend assembly that can access the internal types and members of the current assembly.</span></span> <span data-ttu-id="8933f-108">Можно определить несколько дружественных сборок двумя способами.</span><span class="sxs-lookup"><span data-stu-id="8933f-108">You can define multiple friend assemblies in two ways.</span></span> <span data-ttu-id="8933f-109">Они могут отображаться как отдельные атрибуты уровня сборки, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="8933f-109">They can appear as individual assembly-level attributes, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 <span data-ttu-id="8933f-110">Они также могут отображаться с отдельными тегами <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>, но с одним `assembly` ключевым словом, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="8933f-110">They can also appear with separate <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> tags but a single `assembly` keyword, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 <span data-ttu-id="8933f-111">Дружественная сборка определяется конструктором <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="8933f-111">The friend assembly is identified by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="8933f-112">Как текущая сборка, так и дружественная сборка должны быть неподписанными, либо обе сборки должны быть подписаны строгим именем.</span><span class="sxs-lookup"><span data-stu-id="8933f-112">Both the current assembly and the friend assembly must be unsigned, or both assemblies must be signed with a strong name.</span></span>  
  
 <span data-ttu-id="8933f-113">Если обе сборки не подписаны, аргумент `assemblyName` состоит из имени дружественной сборки, указанной без пути к каталогу или расширения имени файла.</span><span class="sxs-lookup"><span data-stu-id="8933f-113">If both assemblies are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file name extension.</span></span>  
  
 <span data-ttu-id="8933f-114">Если обе сборки подписаны строгим именем, аргумент в конструкторе <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> должен состоять из имени сборки без пути к каталогу или расширения имени файла вместе с полным открытым ключом (а не маркером открытого ключа).</span><span class="sxs-lookup"><span data-stu-id="8933f-114">If both assemblies are signed with a strong name, the argument to the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor must consist of the name of the assembly without its directory path or file name extension, along with the full public key (and not its public key token).</span></span> <span data-ttu-id="8933f-115">Чтобы получить полный открытый ключ сборки со строгим именем, ознакомьтесь с разделом [Получение полного открытого ключа](#Key) далее в этой статье.</span><span class="sxs-lookup"><span data-stu-id="8933f-115">To get the full public key of a strong-named assembly, see the [Getting the full public key](#Key) section later in this article.</span></span> <span data-ttu-id="8933f-116">Дополнительные сведения об использовании <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> со сборками со строгими именами см. в разделе Конструктор <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="8933f-116">For more information about using <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> with strong-named assemblies, see the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="8933f-117">Не включайте значения для поля <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>или <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> в аргументе. компиляторы Visual Basic C#,, C++ и обрабатывают это как ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="8933f-117">Do not include values for the <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, or <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> field in the argument; the Visual Basic, C#, and C++ compilers treat this as a compiler error.</span></span> <span data-ttu-id="8933f-118">Если вы используете компилятор, который не обрабатывает его как ошибку (например, [ассемблер IL (Ilasm. exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) и сборки имеют строгое имя, <xref:System.MethodAccessException> исключение создается при первом обращении указанной дружественной сборки к сборке, содержащей @no__t_2 версию.<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute></span><span class="sxs-lookup"><span data-stu-id="8933f-118">If you use a compiler that does not treat it as an error (such as the [IL Assembler (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) and the assemblies are strong-named, a <xref:System.MethodAccessException> exception is thrown the first time the specified friend assembly accesses the assembly that contains the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute.</span></span>  
  
 <span data-ttu-id="8933f-119">Дополнительные сведения об использовании этого атрибута см. в следующих разделах:</span><span class="sxs-lookup"><span data-stu-id="8933f-119">For more information about how to use this attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="8933f-120">Дружественные сборки (C++)</span><span class="sxs-lookup"><span data-stu-id="8933f-120">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="8933f-121">Дружественные сборки</span><span class="sxs-lookup"><span data-stu-id="8933f-121">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a><span data-ttu-id="8933f-122">Получение полного открытого ключа</span><span class="sxs-lookup"><span data-stu-id="8933f-122">Getting the full public key</span></span>  
 <span data-ttu-id="8933f-123">[Средство строгих имен (Sn. exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) можно использовать для получения полного открытого ключа из файла ключа с строгой подписью (. snk).</span><span class="sxs-lookup"><span data-stu-id="8933f-123">You can use the [Strong Name Tool (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="8933f-124">Для этого выполните следующие действия.</span><span class="sxs-lookup"><span data-stu-id="8933f-124">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="8933f-125">Извлеките открытый ключ из файла ключа со строгим именем в отдельный файл:</span><span class="sxs-lookup"><span data-stu-id="8933f-125">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="8933f-126">*Файл* \**sn-p\*\*\*snk_file*</span><span class="sxs-lookup"><span data-stu-id="8933f-126">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="8933f-127">Отобразите полный открытый ключ для консоли:</span><span class="sxs-lookup"><span data-stu-id="8933f-127">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="8933f-128">*Файл* **SN-TP**</span><span class="sxs-lookup"><span data-stu-id="8933f-128">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="8933f-129">Скопируйте и вставьте значение полного открытого ключа в исходный код.</span><span class="sxs-lookup"><span data-stu-id="8933f-129">Copy and paste the full public key value into your source code.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="8933f-130">Компиляция дружественной сборки с помощьюC#</span><span class="sxs-lookup"><span data-stu-id="8933f-130">Compiling the friend assembly with C#</span></span>  
 <span data-ttu-id="8933f-131">Если для компиляции дружественной сборки используется C# компилятор, необходимо явно указать имя выходного файла (exe или DLL) с помощью параметра компилятора **/out** .</span><span class="sxs-lookup"><span data-stu-id="8933f-131">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="8933f-132">Это необходимо потому, что компилятор еще не создал имя сборки, формируемой во время привязки к внешним ссылкам.</span><span class="sxs-lookup"><span data-stu-id="8933f-132">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="8933f-133">Параметр компилятора **/out** является необязательным для Visual Basic компилятора, и не следует использовать соответствующий параметр **компилятора или** **-o** при компиляции дружественных сборок с помощью F# компилятора.</span><span class="sxs-lookup"><span data-stu-id="8933f-133">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="8933f-134">Компиляция дружественной сборки с помощьюC++</span><span class="sxs-lookup"><span data-stu-id="8933f-134">Compiling the friend assembly with C++</span></span>  
 <span data-ttu-id="8933f-135">В C++для того, чтобы внутренние члены, включенные атрибутом <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>, были доступны для дружественной сборки, необходимо использовать атрибут `as_friend` в C++ директиве.</span><span class="sxs-lookup"><span data-stu-id="8933f-135">In C++, in order to make the internal members enabled by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute accessible to a friend assembly, you must use the `as_friend` attribute in the C++  directive.</span></span> <span data-ttu-id="8933f-136">Дополнительные сведения см. в разделе [дружественныеC++сборки ()](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span><span class="sxs-lookup"><span data-stu-id="8933f-136">For more information, see [Friend Assemblies (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8933f-137">**Подписанные сборки**</span><span class="sxs-lookup"><span data-stu-id="8933f-137">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="8933f-138">В следующем примере используется атрибут <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>, чтобы сделать `internal` метод с именем `AppendDirectorySeparator` в подписанной сборке видимым для другой подписанной сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-138">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="8933f-139">Он определяет класс `FileUtilities`, включающий внутренний метод `AppendDirectorySeparator`.</span><span class="sxs-lookup"><span data-stu-id="8933f-139">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="8933f-140">Атрибут <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> применяется к сборке, содержащей класс `FileUtilities`.</span><span class="sxs-lookup"><span data-stu-id="8933f-140">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="8933f-141">Атрибут позволяет сборке с именем `Friend1` получить доступ к этому внутреннему элементу.</span><span class="sxs-lookup"><span data-stu-id="8933f-141">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="8933f-142">Если следующий пример компилируется в сборку со строгим именем `Friend1`, метод `Example.Main` в `Friend1` может успешно вызвать метод `FileUtilities.AppendDirectorySeparator`, хотя метод является внутренним для сборки `Assembly1`.</span><span class="sxs-lookup"><span data-stu-id="8933f-142">If the following example is compiled into a strong-named assembly named `Friend1`, the `Example.Main` method in `Friend1` can successfully call the `FileUtilities.AppendDirectorySeparator` method, although the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="8933f-143">Обратите внимание, что при компиляции в C# из командной строки необходимо использовать параметр компилятора **/out** , чтобы убедиться, что имя дружественной сборки доступно, когда компилятор привязывается к внешним ссылкам.</span><span class="sxs-lookup"><span data-stu-id="8933f-143">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="8933f-144">**Неподписанные сборки**</span><span class="sxs-lookup"><span data-stu-id="8933f-144">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="8933f-145">В следующем примере атрибут <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> используется для того, чтобы сделать `internal` членом неподписанной сборки видимым для другой неподписанной сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-145">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="8933f-146">Атрибут гарантирует, что метод `internal` `StringLib.IsFirstLetterUpperCase` в сборке с именем `UtilityLib` является видимым для кода в сборке с именем `Friend2`.</span><span class="sxs-lookup"><span data-stu-id="8933f-146">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="8933f-147">Ниже приведен исходный код для Утилитилиб. dll:</span><span class="sxs-lookup"><span data-stu-id="8933f-147">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="8933f-148">В следующем примере показан исходный код для сборки `Friend2`.</span><span class="sxs-lookup"><span data-stu-id="8933f-148">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="8933f-149">Обратите внимание, что при компиляции в C# из командной строки необходимо использовать параметр компилятора **/out** , чтобы убедиться, что имя дружественной сборки доступно, когда компилятор привязывается к внешним ссылкам.</span><span class="sxs-lookup"><span data-stu-id="8933f-149">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="8933f-150">Имя дружественной сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-150">The name of a friend assembly.</span></span></param>
        <summary><span data-ttu-id="8933f-151">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> с именем заданной дружественной сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-151">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> class with the name of the specified friend assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8933f-152">Конструктор <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> определяет дружественную сборку, которая является сборкой, имеющей доступ к внутренним и закрытым защищенным типам и членам текущей сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-152">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor defines a friend assembly, which is an assembly that has access to the internal and private protected types and members of the current assembly.</span></span>  
  
 <span data-ttu-id="8933f-153">Как текущая сборка, так и дружественная сборка должны быть неподписанными, либо оба должны быть подписаны строгим именем.</span><span class="sxs-lookup"><span data-stu-id="8933f-153">Both the current assembly and the friend assembly must be unsigned, or both must be signed with a strong name.</span></span> <span data-ttu-id="8933f-154">(Дополнительные сведения о сборках со строгими именами см. в разделе [Создание и использование сборок со строгими именами](~/docs/standard/assembly/create-use-strong-named.md).) Если оба значения не подписаны, аргумент `assemblyName` состоит из имени дружественной сборки, указанной без пути к каталогу или расширения файла.</span><span class="sxs-lookup"><span data-stu-id="8933f-154">(For more information about strong-named assemblies, see [Creating and Using Strong-Named Assemblies](~/docs/standard/assembly/create-use-strong-named.md).) If both are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file extension.</span></span> <span data-ttu-id="8933f-155">Если обе функции подписаны, `assemblyName` состоять из имени дружественной сборки без пути к каталогу или расширения имени файла вместе с его полным открытым ключом (но не маркером открытого ключа).</span><span class="sxs-lookup"><span data-stu-id="8933f-155">If both are signed, `assemblyName` consists of the name of the friend assembly without its directory path or file name extension, along with its full public key (but not its public key token).</span></span> <span data-ttu-id="8933f-156">Другие компоненты строгого имени, например те, которые предоставляют язык и региональные параметры, версию или сведения об архитектуре процессора, не могут быть указаны в аргументе `assemblyName`.</span><span class="sxs-lookup"><span data-stu-id="8933f-156">The other components of a strong name, such as those that provide culture, version, or processor architecture information, cannot be specified in the `assemblyName` argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8933f-157">Если для компиляции дружественной сборки используется C# компилятор, необходимо явно указать имя выходного файла (exe или DLL) с помощью параметра компилятора **/out** .</span><span class="sxs-lookup"><span data-stu-id="8933f-157">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="8933f-158">Это необходимо потому, что компилятор еще не создал имя сборки, формируемой во время привязки к внешним ссылкам.</span><span class="sxs-lookup"><span data-stu-id="8933f-158">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="8933f-159">Параметр компилятора **/out** является необязательным для Visual Basic компилятора, и не следует использовать соответствующий параметр **компилятора или** **-o** при компиляции дружественных сборок с помощью F# компилятора.</span><span class="sxs-lookup"><span data-stu-id="8933f-159">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
 <span data-ttu-id="8933f-160">Вы можете использовать [Sn. exe (средство строгих имен)](~/docs/framework/tools/sn-exe-strong-name-tool.md) для получения полного открытого ключа из файла ключа с строгой подписью (. snk).</span><span class="sxs-lookup"><span data-stu-id="8933f-160">You can use [Sn.exe (Strong Name Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="8933f-161">Для этого выполните следующие действия.</span><span class="sxs-lookup"><span data-stu-id="8933f-161">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="8933f-162">Извлеките открытый ключ из файла ключа со строгим именем в отдельный файл:</span><span class="sxs-lookup"><span data-stu-id="8933f-162">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="8933f-163">*Файл* \**sn-p\*\*\*snk_file*</span><span class="sxs-lookup"><span data-stu-id="8933f-163">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="8933f-164">Отобразите полный открытый ключ для консоли:</span><span class="sxs-lookup"><span data-stu-id="8933f-164">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="8933f-165">*Файл* **SN-TP**</span><span class="sxs-lookup"><span data-stu-id="8933f-165">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="8933f-166">Скопируйте и вставьте значение полного открытого ключа в исходный код.</span><span class="sxs-lookup"><span data-stu-id="8933f-166">Copy and paste the full public key value into your source code.</span></span>  
  
 <span data-ttu-id="8933f-167">Дополнительные сведения об использовании атрибута <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> см. в следующих разделах:</span><span class="sxs-lookup"><span data-stu-id="8933f-167">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="8933f-168">Дружественные сборки (C++)</span><span class="sxs-lookup"><span data-stu-id="8933f-168">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="8933f-169">Дружественные сборки</span><span class="sxs-lookup"><span data-stu-id="8933f-169">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 <span data-ttu-id="8933f-170">**Подписанные сборки**</span><span class="sxs-lookup"><span data-stu-id="8933f-170">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="8933f-171">В следующем примере используется атрибут <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>, чтобы сделать `internal` метод с именем `AppendDirectorySeparator` в подписанной сборке видимым для другой подписанной сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-171">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="8933f-172">Он определяет класс `FileUtilities`, включающий внутренний метод `AppendDirectorySeparator`.</span><span class="sxs-lookup"><span data-stu-id="8933f-172">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="8933f-173">Атрибут <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> применяется к сборке, содержащей класс `FileUtilities`.</span><span class="sxs-lookup"><span data-stu-id="8933f-173">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="8933f-174">Атрибут позволяет сборке с именем `Friend1` получить доступ к этому внутреннему элементу.</span><span class="sxs-lookup"><span data-stu-id="8933f-174">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="8933f-175">Если следующий пример компилируется в сборку со строгим именем `Friend1`, он может успешно вызвать метод `FileUtilities.AppendDirectorySeparator`, несмотря на то, что метод является внутренним для сборки `Assembly1`.</span><span class="sxs-lookup"><span data-stu-id="8933f-175">If the following example is compiled into a strong-named assembly named `Friend1`, it can successfully call the `FileUtilities.AppendDirectorySeparator` method, even though the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="8933f-176">Обратите внимание, что при компиляции в C# из командной строки необходимо использовать параметр компилятора **/out** , чтобы убедиться, что имя дружественной сборки доступно, когда компилятор привязывается к внешним ссылкам.</span><span class="sxs-lookup"><span data-stu-id="8933f-176">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="8933f-177">В следующем примере атрибут <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> используется для того, чтобы сделать `internal` членом неподписанной сборки видимым для другой неподписанной сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-177">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="8933f-178">Атрибут гарантирует, что метод `internal` `StringLib.IsFirstLetterUpperCase` в сборке с именем `UtilityLib` является видимым для кода в сборке с именем `Friend2`.</span><span class="sxs-lookup"><span data-stu-id="8933f-178">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="8933f-179">Ниже приведен исходный код для Утилитилиб. dll:</span><span class="sxs-lookup"><span data-stu-id="8933f-179">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="8933f-180">**Неподписанные сборки**</span><span class="sxs-lookup"><span data-stu-id="8933f-180">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="8933f-181">В следующем примере показан исходный код для сборки `Friend2`.</span><span class="sxs-lookup"><span data-stu-id="8933f-181">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="8933f-182">Обратите внимание, что при компиляции в C# из командной строки необходимо использовать параметр компилятора **/out** , чтобы убедиться, что имя дружественной сборки доступно, когда компилятор привязывается к внешним ссылкам.</span><span class="sxs-lookup"><span data-stu-id="8933f-182">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8933f-183">Это свойство не реализовано.</span><span class="sxs-lookup"><span data-stu-id="8933f-183">This property is not implemented.</span></span></summary>
        <value><span data-ttu-id="8933f-184">Это свойство не возвращает значение.</span><span class="sxs-lookup"><span data-stu-id="8933f-184">This property does not return a value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8933f-185">Получает имя дружественной сборки, для которой будут сделаны доступными все типы и члены типов, помеченные ключевым словом <see langword="internal" />.</span><span class="sxs-lookup"><span data-stu-id="8933f-185">Gets the name of the friend assembly to which all types and type members that are marked with the <see langword="internal" /> keyword are to be made visible.</span></span></summary>
        <value><span data-ttu-id="8933f-186">Строка, представляющая имя дружественной сборки.</span><span class="sxs-lookup"><span data-stu-id="8933f-186">A string that represents the name of the friend assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8933f-187">Дополнительные сведения об использовании атрибута <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> см. в следующих разделах:</span><span class="sxs-lookup"><span data-stu-id="8933f-187">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="8933f-188">Дружественные сборки (C++)</span><span class="sxs-lookup"><span data-stu-id="8933f-188">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="8933f-189">Дружественные сборки</span><span class="sxs-lookup"><span data-stu-id="8933f-189">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
