<Type Name="DbProviderFactories" FullName="System.Data.Common.DbProviderFactories">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e5b7f29fa5f9ae7868a2239c1422690cd7d68662" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75142752" /></Metadata><TypeSignature Language="C#" Value="public static class DbProviderFactories" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbProviderFactories extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbProviderFactories" />
  <TypeSignature Language="VB.NET" Value="Public Class DbProviderFactories" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbProviderFactories abstract sealed" />
  <TypeSignature Language="F#" Value="type DbProviderFactories = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="daa0d-101">Представляет набор статических методов для создания одного или нескольких экземпляров классов <see cref="T:System.Data.Common.DbProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-101">Represents a set of static methods for creating one or more instances of <see cref="T:System.Data.Common.DbProviderFactory" /> classes.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="daa0d-102">Классы DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="daa0d-102">DbProviderFactories (ADO.NET)</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="daa0d-103">Общие сведения о ADO.NET</span><span class="sxs-lookup"><span data-stu-id="daa0d-103">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetFactory">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="daa0d-104">Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-104">Returns an instance of a <see cref="T:System.Data.Common.DbProviderFactory" />.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="daa0d-105">Классы DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="daa0d-105">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="daa0d-106">Общие сведения о ADO.NET</span><span class="sxs-lookup"><span data-stu-id="daa0d-106">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFactory">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderFactory GetFactory (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderFactory GetFactory(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFactory (connection As DbConnection) As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::DbProviderFactory ^ GetFactory(System::Data::Common::DbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member GetFactory : System.Data.Common.DbConnection -&gt; System.Data.Common.DbProviderFactory" Usage="System.Data.Common.DbProviderFactories.GetFactory connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="daa0d-107">Используемое подключение.</span><span class="sxs-lookup"><span data-stu-id="daa0d-107">The connection used.</span></span></param>
        <summary><span data-ttu-id="daa0d-108">Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-108">Returns an instance of a <see cref="T:System.Data.Common.DbProviderFactory" />.</span></span></summary>
        <returns><span data-ttu-id="daa0d-109">Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного подключения.</span><span class="sxs-lookup"><span data-stu-id="daa0d-109">An instance of a <see cref="T:System.Data.Common.DbProviderFactory" /> for a specified connection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFactory">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderFactory GetFactory (System.Data.DataRow providerRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderFactory GetFactory(class System.Data.DataRow providerRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFactory (providerRow As DataRow) As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::DbProviderFactory ^ GetFactory(System::Data::DataRow ^ providerRow);" />
      <MemberSignature Language="F#" Value="static member GetFactory : System.Data.DataRow -&gt; System.Data.Common.DbProviderFactory" Usage="System.Data.Common.DbProviderFactories.GetFactory providerRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="providerRow"><span data-ttu-id="daa0d-110">Объект <see cref="T:System.Data.DataRow" />, содержащий сведения о конфигурации поставщика.</span><span class="sxs-lookup"><span data-stu-id="daa0d-110"><see cref="T:System.Data.DataRow" /> containing the provider's configuration information.</span></span></param>
        <summary><span data-ttu-id="daa0d-111">Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-111">Returns an instance of a <see cref="T:System.Data.Common.DbProviderFactory" />.</span></span></summary>
        <returns><span data-ttu-id="daa0d-112">Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного объекта <see cref="T:System.Data.DataRow" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-112">An instance of a <see cref="T:System.Data.Common.DbProviderFactory" /> for a specified <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa0d-113">Параметр `providerRow` соответствует объекту <xref:System.Data.DataRow> таблицы, возвращенной методом <xref:System.Data.Common.DbProviderFactories.GetFactoryClasses%2A>.</span><span class="sxs-lookup"><span data-stu-id="daa0d-113">The `providerRow` parameter corresponds to the <xref:System.Data.DataRow> of a table returned by <xref:System.Data.Common.DbProviderFactories.GetFactoryClasses%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="daa0d-114">Классы DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="daa0d-114">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="daa0d-115">Общие сведения о ADO.NET</span><span class="sxs-lookup"><span data-stu-id="daa0d-115">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFactory">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderFactory GetFactory (string providerInvariantName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderFactory GetFactory(string providerInvariantName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFactory (providerInvariantName As String) As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::DbProviderFactory ^ GetFactory(System::String ^ providerInvariantName);" />
      <MemberSignature Language="F#" Value="static member GetFactory : string -&gt; System.Data.Common.DbProviderFactory" Usage="System.Data.Common.DbProviderFactories.GetFactory providerInvariantName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"><span data-ttu-id="daa0d-116">Инвариантное имя поставщика.</span><span class="sxs-lookup"><span data-stu-id="daa0d-116">Invariant name of a provider.</span></span></param>
        <summary><span data-ttu-id="daa0d-117">Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-117">Returns an instance of a <see cref="T:System.Data.Common.DbProviderFactory" />.</span></span></summary>
        <returns><span data-ttu-id="daa0d-118">Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного имени поставщика.</span><span class="sxs-lookup"><span data-stu-id="daa0d-118">An instance of a <see cref="T:System.Data.Common.DbProviderFactory" /> for a specified provider name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa0d-119">Параметр `providerInvariantName` соответствует столбцу **InvariantName** таблицы, возвращенной <xref:System.Data.Common.DbProviderFactories.GetFactoryClasses%2A>.</span><span class="sxs-lookup"><span data-stu-id="daa0d-119">The `providerInvariantName` parameter corresponds to the **InvariantName** column of a table returned by <xref:System.Data.Common.DbProviderFactories.GetFactoryClasses%2A>.</span></span>

 <span data-ttu-id="daa0d-120">Если передать значение для `providerInvariantName`, которое является недопустимым, появится исключение с сообщением "не удается найти запрошенного .NET Framework поставщика данных.</span><span class="sxs-lookup"><span data-stu-id="daa0d-120">If you pass a value for `providerInvariantName` that's not valid, an exception is raised with the message, "Unable to find the requested .NET Framework Data Provider.</span></span>  <span data-ttu-id="daa0d-121">Возможно, он не установлен. "</span><span class="sxs-lookup"><span data-stu-id="daa0d-121">It may not be installed."</span></span>
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="daa0d-122">Классы DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="daa0d-122">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="daa0d-123">Общие сведения о ADO.NET</span><span class="sxs-lookup"><span data-stu-id="daa0d-123">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFactoryClasses">
      <MemberSignature Language="C#" Value="public static System.Data.DataTable GetFactoryClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataTable GetFactoryClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderFactories.GetFactoryClasses" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFactoryClasses () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::DataTable ^ GetFactoryClasses();" />
      <MemberSignature Language="F#" Value="static member GetFactoryClasses : unit -&gt; System.Data.DataTable" Usage="System.Data.Common.DbProviderFactories.GetFactoryClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="daa0d-124">Возвращает объект <see cref="T:System.Data.DataTable" />, содержащий сведения обо всех установленных поставщиках, реализующих объект <see cref="T:System.Data.Common.DbProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-124">Returns a <see cref="T:System.Data.DataTable" /> that contains information about all installed providers that implement <see cref="T:System.Data.Common.DbProviderFactory" />.</span></span></summary>
        <returns><span data-ttu-id="daa0d-125">Объект <see cref="T:System.Data.DataTable" />, содержащий объекты <see cref="T:System.Data.DataRow" />, которые содержат следующие данные:</span><span class="sxs-lookup"><span data-stu-id="daa0d-125">A <see cref="T:System.Data.DataTable" /> containing <see cref="T:System.Data.DataRow" /> objects that contain the following data:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="daa0d-126">Порядковый номер столбца</span><span class="sxs-lookup"><span data-stu-id="daa0d-126">Column ordinal</span></span> 
 </term><description> <span data-ttu-id="daa0d-127">Имя столбца</span><span class="sxs-lookup"><span data-stu-id="daa0d-127">Column name</span></span> 
 </description><description> <span data-ttu-id="daa0d-128">Описание</span><span class="sxs-lookup"><span data-stu-id="daa0d-128">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="daa0d-129">0</span><span class="sxs-lookup"><span data-stu-id="daa0d-129">0</span></span> 
 </term><description> <span data-ttu-id="daa0d-130">**Name**  
  
 </span><span class="sxs-lookup"><span data-stu-id="daa0d-130">**Name**  
  
 </span></span></description><description> <span data-ttu-id="daa0d-131">Понятное имя поставщика данных.</span><span class="sxs-lookup"><span data-stu-id="daa0d-131">Human-readable name for the data provider.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="daa0d-132">1</span><span class="sxs-lookup"><span data-stu-id="daa0d-132">1</span></span> 
 </term><description> <span data-ttu-id="daa0d-133">**Описание**  
  
 </span><span class="sxs-lookup"><span data-stu-id="daa0d-133">**Description**  
  
 </span></span></description><description> <span data-ttu-id="daa0d-134">Понятное описание поставщика данных.</span><span class="sxs-lookup"><span data-stu-id="daa0d-134">Human-readable description of the data provider.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="daa0d-135">2</span><span class="sxs-lookup"><span data-stu-id="daa0d-135">2</span></span> 
 </term><description> <span data-ttu-id="daa0d-136">**InvariantName**  
  
 </span><span class="sxs-lookup"><span data-stu-id="daa0d-136">**InvariantName**  
  
 </span></span></description><description> <span data-ttu-id="daa0d-137">Имя, которое может быть использовано программным образом для ссылки на поставщика данных.</span><span class="sxs-lookup"><span data-stu-id="daa0d-137">Name that can be used programmatically to refer to the data provider.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="daa0d-138">3</span><span class="sxs-lookup"><span data-stu-id="daa0d-138">3</span></span> 
 </term><description> <span data-ttu-id="daa0d-139">**AssemblyQualifiedName**  
  
 </span><span class="sxs-lookup"><span data-stu-id="daa0d-139">**AssemblyQualifiedName**  
  
 </span></span></description><description> <span data-ttu-id="daa0d-140">Полное имя класса фабрики, содержащее достаточно сведений для создания экземпляра объекта.</span><span class="sxs-lookup"><span data-stu-id="daa0d-140">Fully qualified name of the factory class, which contains enough information to instantiate the object.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="daa0d-141">Классы DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="daa0d-141">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="daa0d-142">Общие сведения о ADO.NET</span><span class="sxs-lookup"><span data-stu-id="daa0d-142">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderInvariantNames">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; GetProviderInvariantNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetProviderInvariantNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProviderInvariantNames () As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetProviderInvariantNames();" />
      <MemberSignature Language="F#" Value="static member GetProviderInvariantNames : unit -&gt; seq&lt;string&gt;" Usage="System.Data.Common.DbProviderFactories.GetProviderInvariantNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="daa0d-143">Возвращает инвариантные имена поставщиков для всех зарегистрированных экземпляров <see cref="T:System.Data.Common.DbProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-143">Returns the invariant provider names for all registered instances of <see cref="T:System.Data.Common.DbProviderFactory" />.</span></span></summary>
        <returns><span data-ttu-id="daa0d-144">Инвариантные имена поставщиков для всех зарегистрированных экземпляров <see cref="T:System.Data.Common.DbProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-144">The invariant provider names for all registered instances of <see cref="T:System.Data.Common.DbProviderFactory" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterFactory">
      <MemberSignature Language="C#" Value="public static void RegisterFactory (string providerInvariantName, System.Data.Common.DbProviderFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterFactory(string providerInvariantName, class System.Data.Common.DbProviderFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterFactory (providerInvariantName As String, factory As DbProviderFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterFactory(System::String ^ providerInvariantName, System::Data::Common::DbProviderFactory ^ factory);" />
      <MemberSignature Language="F#" Value="static member RegisterFactory : string * System.Data.Common.DbProviderFactory -&gt; unit" Usage="System.Data.Common.DbProviderFactories.RegisterFactory (providerInvariantName, factory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="factory" Type="System.Data.Common.DbProviderFactory" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"><span data-ttu-id="daa0d-145">Инвариантное имя поставщика, под которым регистрируется поставщик.</span><span class="sxs-lookup"><span data-stu-id="daa0d-145">The invariant provider name under which to register the provider.</span></span></param>
        <param name="factory"><span data-ttu-id="daa0d-146">Экземпляр фабрики поставщика для регистрации.</span><span class="sxs-lookup"><span data-stu-id="daa0d-146">The instance of the provider factory to be registered.</span></span></param>
        <summary><span data-ttu-id="daa0d-147">Регистрирует экземпляр <see cref="T:System.Data.Common.DbProviderFactory" /> под указанным инвариантным именем поставщика.</span><span class="sxs-lookup"><span data-stu-id="daa0d-147">Registers an instance of <see cref="T:System.Data.Common.DbProviderFactory" /> under the specified invariant provider name.</span></span></summary>
        <remarks><span data-ttu-id="daa0d-148">Если поставщик уже зарегистрирован в <paramref name="providerInvariantName" />, эта регистрация будет перезаписана.</span><span class="sxs-lookup"><span data-stu-id="daa0d-148">If a provider is already registered under <paramref name="providerInvariantName" />, that registration will be overwritten.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterFactory">
      <MemberSignature Language="C#" Value="public static void RegisterFactory (string providerInvariantName, string factoryTypeAssemblyQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterFactory(string providerInvariantName, string factoryTypeAssemblyQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterFactory (providerInvariantName As String, factoryTypeAssemblyQualifiedName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterFactory(System::String ^ providerInvariantName, System::String ^ factoryTypeAssemblyQualifiedName);" />
      <MemberSignature Language="F#" Value="static member RegisterFactory : string * string -&gt; unit" Usage="System.Data.Common.DbProviderFactories.RegisterFactory (providerInvariantName, factoryTypeAssemblyQualifiedName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="factoryTypeAssemblyQualifiedName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"><span data-ttu-id="daa0d-149">Инвариантное имя поставщика, под которым регистрируется поставщик.</span><span class="sxs-lookup"><span data-stu-id="daa0d-149">The invariant provider name under which to register the provider.</span></span></param>
        <param name="factoryTypeAssemblyQualifiedName"><span data-ttu-id="daa0d-150">Имя с указанием сборки для <see cref="T:System.Data.Common.DbProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-150">The assembly-qualified name for a <see cref="T:System.Data.Common.DbProviderFactory" />.</span></span></param>
        <summary><span data-ttu-id="daa0d-151">Регистрирует <see cref="T:System.Data.Common.DbProviderFactory" /> с заданным именем с указанием сборки под указанным инвариантным именем поставщика.</span><span class="sxs-lookup"><span data-stu-id="daa0d-151">Registers a <see cref="T:System.Data.Common.DbProviderFactory" /> with the given assembly-qualified name under the specified invariant provider name.</span></span></summary>
        <remarks><span data-ttu-id="daa0d-152">Если поставщик уже зарегистрирован в <paramref name="providerInvariantName" />, эта регистрация будет перезаписана.</span><span class="sxs-lookup"><span data-stu-id="daa0d-152">If a provider is already registered under <paramref name="providerInvariantName" />, that registration will be overwritten.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterFactory">
      <MemberSignature Language="C#" Value="public static void RegisterFactory (string providerInvariantName, Type providerFactoryClass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterFactory(string providerInvariantName, class System.Type providerFactoryClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterFactory (providerInvariantName As String, providerFactoryClass As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterFactory(System::String ^ providerInvariantName, Type ^ providerFactoryClass);" />
      <MemberSignature Language="F#" Value="static member RegisterFactory : string * Type -&gt; unit" Usage="System.Data.Common.DbProviderFactories.RegisterFactory (providerInvariantName, providerFactoryClass)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="providerFactoryClass" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"><span data-ttu-id="daa0d-153">Инвариантное имя поставщика, под которым регистрируется поставщик.</span><span class="sxs-lookup"><span data-stu-id="daa0d-153">The invariant provider name under which to register the provider.</span></span></param>
        <param name="providerFactoryClass"><span data-ttu-id="daa0d-154">Тип, представляющий <see cref="T:System.Data.Common.DbProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-154">The type representing a <see cref="T:System.Data.Common.DbProviderFactory" />.</span></span></param>
        <summary><span data-ttu-id="daa0d-155">Регистрирует <see cref="T:System.Data.Common.DbProviderFactory" /> с заданным типом под указанным инвариантным именем поставщика.</span><span class="sxs-lookup"><span data-stu-id="daa0d-155">Registers a <see cref="T:System.Data.Common.DbProviderFactory" /> with the given type under the specified invariant provider name.</span></span></summary>
        <remarks><span data-ttu-id="daa0d-156">Если поставщик уже зарегистрирован в <paramref name="providerInvariantName" />, эта регистрация будет перезаписана.</span><span class="sxs-lookup"><span data-stu-id="daa0d-156">If a provider is already registered under <paramref name="providerInvariantName" />, that registration will be overwritten.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetFactory">
      <MemberSignature Language="C#" Value="public static bool TryGetFactory (string providerInvariantName, out System.Data.Common.DbProviderFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetFactory(string providerInvariantName, [out] class System.Data.Common.DbProviderFactory&amp; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetFactory (providerInvariantName As String, ByRef factory As DbProviderFactory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetFactory(System::String ^ providerInvariantName, [Runtime::InteropServices::Out] System::Data::Common::DbProviderFactory ^ % factory);" />
      <MemberSignature Language="F#" Value="static member TryGetFactory : string * DbProviderFactory -&gt; bool" Usage="System.Data.Common.DbProviderFactories.TryGetFactory (providerInvariantName, factory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="factory" Type="System.Data.Common.DbProviderFactory" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"><span data-ttu-id="daa0d-157">Инвариантное имя поставщика для поиска.</span><span class="sxs-lookup"><span data-stu-id="daa0d-157">The invariant provider name to look up.</span></span></param>
        <param name="factory"><span data-ttu-id="daa0d-158">При возвращении метода содержит значение <see cref="T:System.Data.Common.DbProviderFactory" />, связанное с заданным инвариантным именем поставщика, если имя найдено; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-158">When this method returns, contains the <see cref="T:System.Data.Common.DbProviderFactory" /> associated with the specified invariant provider name, if the name is found; otherwise, <see langword="null" />.</span></span> <span data-ttu-id="daa0d-159">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="daa0d-159">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="daa0d-160">Пытается получить <see cref="T:System.Data.Common.DbProviderFactory" />, зарегистрированный под указанным инвариантным именем поставщика.</span><span class="sxs-lookup"><span data-stu-id="daa0d-160">Attempts to get the <see cref="T:System.Data.Common.DbProviderFactory" /> registered under the specified invariant provider name.</span></span></summary>
        <returns><span data-ttu-id="daa0d-161">Значение <see langword="true" />, если поставщик зарегистрирован под указанным инвариантным именем поставщика; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-161"><see langword="true" /> if a provider is registered under the specified invariant provider name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterFactory">
      <MemberSignature Language="C#" Value="public static bool UnregisterFactory (string providerInvariantName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool UnregisterFactory(string providerInvariantName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnregisterFactory (providerInvariantName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool UnregisterFactory(System::String ^ providerInvariantName);" />
      <MemberSignature Language="F#" Value="static member UnregisterFactory : string -&gt; bool" Usage="System.Data.Common.DbProviderFactories.UnregisterFactory providerInvariantName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"><span data-ttu-id="daa0d-162">Инвариантное имя поставщика для удаляемой регистрации.</span><span class="sxs-lookup"><span data-stu-id="daa0d-162">The invariant provider name of the registration to remove.</span></span></param>
        <summary><span data-ttu-id="daa0d-163">Удаляет регистрацию <see cref="T:System.Data.Common.DbProviderFactory" /> для заданного инвариантного имени поставщика.</span><span class="sxs-lookup"><span data-stu-id="daa0d-163">Removes a <see cref="T:System.Data.Common.DbProviderFactory" /> registration for the given provider invariant name.</span></span></summary>
        <returns><span data-ttu-id="daa0d-164">Значение <see langword="true" />, если регистрация найдена и удалена; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="daa0d-164"><see langword="true" /> if the registration is successfully found and removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="daa0d-165">Этот метод возвращает <see langword="false" />, если регистрация для <paramref name="providerInvariantName" /> не найдена.</span><span class="sxs-lookup"><span data-stu-id="daa0d-165">This method returns <see langword="false" /> if a registration for <paramref name="providerInvariantName" /> is not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
