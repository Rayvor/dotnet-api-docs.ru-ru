<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata><Meta Name="ms.openlocfilehash" Value="913debbf33c072f348f77e7d349a334dc4e6de5a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70521155" /></Metadata><TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <TypeSignature Language="F#" Value="type Capture = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет результаты из одной успешной записи части выражения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.RegularExpressions.Capture> Объект является неизменяемым и не имеет открытого конструктора. Экземпляры возвращаются через <xref:System.Text.RegularExpressions.CaptureCollection> объект, который возвращается `Match.Captures` свойствами и <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> . Однако свойство предоставляет сведения о том же совпадении, <xref:System.Text.RegularExpressions.Match> что и объект. `Match.Captures`  
  
 Если не применить квантификатор <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> к захваченной группе, свойство <xref:System.Text.RegularExpressions.CaptureCollection> возвращает объект с одним <xref:System.Text.RegularExpressions.Capture> объектом, который <xref:System.Text.RegularExpressions.Group> предоставляет сведения о том же захвате, что и объект. Если к `Group.Index`захваченной группе применяется квантификатор, свойства, `Group.Length`и `Group.Value` предоставляют сведения только о последней захваченной <xref:System.Text.RegularExpressions.CaptureCollection> группе, а <xref:System.Text.RegularExpressions.Capture> объекты в содержат сведения обо всех захваты части выражения. Иллюстрация приведена в примере.  
  
   
  
## Examples  
 В следующем примере определяется регулярное выражение, совпадающее с предложениями, которые не содержат знаков препинания, за исключением точки (".").  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 Шаблон регулярного выражения `((\w+)[\s.])+` определяется, как показано в следующей таблице. Обратите внимание, что в этом регулярном выражении квантификатор (+) применяется ко всему регулярному выражению.  
  
|Шаблон|Описание|  
|-------------|-----------------|  
|`(\w+)`|Совпадение с одним или несколькими символами слова. Это вторая группа записи.|  
|`[\s.])`|Совпадение с символом пробела или точкой (".").|  
|`((\w+)[\s.])`|Совпадение с одним или несколькими символами слова, за которыми следует символ пробела или точка ("."). Это первая группа записи.|  
|`((\w+)[\s.])+`|Совпадение с одним или несколькими вхождениями слова или символов, за которыми следует символ пробела или точка (".").|  
  
 В этом примере входная строка состоит из двух предложений. Как видно из выходных данных, первое предложение состоит только из одного слова, поэтому <xref:System.Text.RegularExpressions.CaptureCollection> объект содержит один <xref:System.Text.RegularExpressions.Capture> объект, представляющий <xref:System.Text.RegularExpressions.Group> ту же запись, что и объект. Второе предложение состоит из нескольких слов, поэтому <xref:System.Text.RegularExpressions.Group> объекты содержат только сведения о последнем сопоставленном вложенном выражении. Группа 1, представляющая первую запись, содержит Последнее слово в предложении с закрывающим периодом. Группа 2, которая представляет второй захват, содержит Последнее слово в предложении. Однако объекты в <xref:System.Text.RegularExpressions.CaptureCollection> объекте группы захватывают каждую соответствующую часть выражения. <xref:System.Text.RegularExpressions.Capture> <xref:System.Text.RegularExpressions.Capture> Объекты в коллекции записей первой захваченной группы содержат сведения о каждом захваченном слове, пробелом или точке. <xref:System.Text.RegularExpressions.Capture> Объекты во второй коллекции записей захваченной группы содержат сведения о каждом записанном слове.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Text.RegularExpressions.Capture.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Позиция в исходной строке, в которой обнаружен первый символ записанной подстроки.</summary>
        <value>Начальная позиция с отсчетом с нуля в исходной строке, в которой обнаружена записанная подстрока.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Text.RegularExpressions.Capture.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает длину записанной подстроки.</summary>
        <value>Длина записанной подстроки.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="capture.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает записанную подстроку из входной строки путем вызова свойства <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
        <returns>Подстрока, записанная по совпадению.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ToString`фактически является внутренним вызовом <xref:System.Text.RegularExpressions.Capture.Value%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Text.RegularExpressions.Capture.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает записанную подстроку из входной строки.</summary>
        <value>Подстрока, записанная по совпадению.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если при вызове <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> метода или <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> не удается найти совпадение, возвращается `Match.Value` значение свойства <xref:System.String.Empty?displayProperty=nameWithType>. Значение, если обработчик регулярных выражений не может сопоставить группу записи. возвращаемое `Group.Value` свойство имеет <xref:System.String.Empty?displayProperty=nameWithType>значение. См. Второй пример для иллюстрации.  
  
   
  
## Examples  
 В следующем примере определяется регулярное выражение, совпадающее с предложениями, которые не содержат знаков препинания, за исключением точки ("."). `Match.Value` Свойство отображает результирующую строку, состоящую из совпадающего предложения, для каждого совпадения. `Group.Value` Свойство отображает результирующую строку для каждой захваченной группы. Она состоит из последней строки, захваченной этой группой записи. <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> Свойство отображает результирующую строку для каждой записи.  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 Шаблон регулярного выражения `((\w+)[\s.])+` определяется, как показано в следующей таблице. Обратите внимание, что в этом регулярном выражении квантификатор (+) применяется ко всему регулярному выражению.  
  
|Шаблон|Описание|  
|-------------|-----------------|  
|`(\w+)`|Совпадение с одним или несколькими символами слова. Это вторая группа записи.|  
|`[\s.])`|Совпадение с символом пробела или точкой (".").|  
|`((\w+)[\s.])`|Совпадение с одним или несколькими символами слова, за которыми следует символ пробела или точка ("."). Это первая группа записи.|  
|`((\w+)[\s.])+`|Совпадение с одним или несколькими вхождениями слова или символов, за которыми следует символ пробела или точка (".").|  
  
 В этом примере входная строка состоит из двух предложений. Как видно из выходных данных, первое предложение состоит только из одного слова, поэтому <xref:System.Text.RegularExpressions.CaptureCollection> объект содержит один <xref:System.Text.RegularExpressions.Capture> объект, представляющий <xref:System.Text.RegularExpressions.Group> ту же запись, что и объект. Второе предложение состоит из нескольких слов, поэтому <xref:System.Text.RegularExpressions.Group> объекты содержат только сведения о последнем сопоставленном вложенном выражении. Группа 1, представляющая первую запись, содержит Последнее слово в предложении с закрывающим периодом. Группа 2, которая представляет второй захват, содержит Последнее слово в предложении. Однако объекты в <xref:System.Text.RegularExpressions.CaptureCollection> объекте группы захватывают каждую соответствующую часть выражения. <xref:System.Text.RegularExpressions.Capture> <xref:System.Text.RegularExpressions.Capture> Объекты в коллекции записей первой захваченной группы содержат сведения о каждом захваченном слове, пробелом или точке. <xref:System.Text.RegularExpressions.Capture> Объекты во второй коллекции записей захваченной группы содержат сведения о каждом записанном слове.  
  
 В следующем примере шаблон `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`регулярного выражения используется для сопоставления номера продукта, состоящего из двух частей, разделенных точкой. Обе части состоят из алфавитных символов, за которыми следуют необязательные номера. Так как первая входная строка не соответствует шаблону, значение <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> `Value` свойства возвращенного объекта равно <xref:System.String.Empty?displayProperty=nameWithType>. Аналогично, если шаблон регулярного выражения не может сопоставить группу записи, <xref:System.Text.RegularExpressions.Group> `Value` свойство соответствующего объекта имеет <xref:System.String.Empty?displayProperty=nameWithType>значение.  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  
  
 Шаблон регулярного выражения определяется, как показано в следующей таблице.  
  
|Шаблон|Описание|  
|-------------|-----------------|  
|`^`|Начало совпадения в начале строки.|  
|`([a-z]+)`|Совпадение с одним или несколькими вхождениями любого символа от a до z. Поскольку обработчику регулярных выражений передается <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> параметр, это сравнение не учитывает регистр. Это первая группа записи.|  
|`(\d+)?`|Совпадение с нулем или одним вхождением одной или нескольких десятичных цифр. Это вторая группа записи.|  
|`\.`|Совпадение с символом литеральной точки.|  
|`([a-z]+`|Совпадение с одним или несколькими вхождениями любого символа от a до z. При сравнении регистр не учитывается.|  
|`(\d)*`|Соответствует нулю или нескольким десятичным числам. Одна совпадающая цифра — четвертая группа записи.|  
|`([a-z]+(\d)*)`|Совпадение с одной или несколькими алфавитными символами от a до z, за которыми следует ноль, одна или несколько десятичных цифр. Это четвертая группа записи.|  
|`$`|Завершите совпадение в конце строки.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
