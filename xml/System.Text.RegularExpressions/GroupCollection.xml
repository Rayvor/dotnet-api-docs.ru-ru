<Type Name="GroupCollection" FullName="System.Text.RegularExpressions.GroupCollection">
  <TypeSignature Language="C#" Value="public class GroupCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit GroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.GroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type GroupCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1522b-101">Возвращает набор записанных групп в одном сопоставлении.</span><span class="sxs-lookup"><span data-stu-id="1522b-101">Returns the set of captured groups in a single match.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1522b-102">Класс — это класс коллекции, начинающийся с нуля, который состоит из одного <xref:System.Text.RegularExpressions.Group> или нескольких объектов, предоставляющих сведения о захваченных группах в совпадении регулярных выражений. <xref:System.Text.RegularExpressions.GroupCollection></span><span class="sxs-lookup"><span data-stu-id="1522b-102">The <xref:System.Text.RegularExpressions.GroupCollection> class is a zero-based collection class that consists of one or more <xref:System.Text.RegularExpressions.Group> objects that provide information about captured groups in a regular expression match.</span></span> <span data-ttu-id="1522b-103">Коллекция является неизменяемой (только для чтения) и не имеет открытого конструктора.</span><span class="sxs-lookup"><span data-stu-id="1522b-103">The collection is immutable (read-only) and has no public constructor.</span></span> <span data-ttu-id="1522b-104"><xref:System.Text.RegularExpressions.GroupCollection> Объект возвращается<xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> свойством.</span><span class="sxs-lookup"><span data-stu-id="1522b-104">A <xref:System.Text.RegularExpressions.GroupCollection> object is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1522b-105">Коллекция содержит один или несколько <xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType> объектов.</span><span class="sxs-lookup"><span data-stu-id="1522b-105">The collection contains one or more <xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType> objects.</span></span> <span data-ttu-id="1522b-106">Если сопоставление выполнено успешно, первый элемент в коллекции содержит <xref:System.Text.RegularExpressions.Group> объект, соответствующий всему совпадению.</span><span class="sxs-lookup"><span data-stu-id="1522b-106">If the match is successful, the first element in the collection contains the <xref:System.Text.RegularExpressions.Group> object that corresponds to the entire match.</span></span> <span data-ttu-id="1522b-107">Каждый последующий элемент представляет захваченную группу, если регулярное выражение включает захваченные группы.</span><span class="sxs-lookup"><span data-stu-id="1522b-107">Each subsequent element represents a captured group, if the regular expression includes capturing groups.</span></span> <span data-ttu-id="1522b-108">Сопоставления пронумерованных (безымянных) групп записи отображаются в числовом порядке перед совпадениями именованных групп записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-108">Matches from numbered (unnamed) capturing groups appear in numeric order before matches from named capturing groups.</span></span> <span data-ttu-id="1522b-109">Если сопоставление завершается неудачно <xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType> , коллекция содержит один объект, <xref:System.Text.RegularExpressions.Group.Success%2A> свойство которого имеет `false` значение, а <xref:System.Text.RegularExpressions.Capture.Value%2A> свойство равно <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1522b-109">If the match is unsuccessful, the collection contains a single <xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType> object whose <xref:System.Text.RegularExpressions.Group.Success%2A> property is `false` and whose <xref:System.Text.RegularExpressions.Capture.Value%2A> property equals <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1522b-110">Дополнительные сведения см. в подразделе «конструкции группирования и объекты регулярных выражений» статьи [](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) о конструкциях группирования.</span><span class="sxs-lookup"><span data-stu-id="1522b-110">For more information, see the "Grouping Constructs and Regular Expression Objects" section in the [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) article.</span></span>  
  
 <span data-ttu-id="1522b-111">Для выполнения итерации по элементам коллекции следует использовать конструкцию итерации коллекции, предоставленную вашим языком (например `foreach` , в C# и `For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="1522b-111">To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="1522b-112">в Visual Basic) вместо получения перечислителя, возвращаемого <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="1522b-112">in Visual Basic) instead of retrieving the enumerator that is returned by the <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> method.</span></span> <span data-ttu-id="1522b-113">Кроме того, можно получить доступ к отдельным пронумерованным захваченным группам <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> из свойства (индексатор в C#), а также получить доступ к отдельным именованным <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> захваченным группам из свойства.</span><span class="sxs-lookup"><span data-stu-id="1522b-113">In addition, you can access individual numbered captured groups from the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> property (the indexer in C#), and you can access individual named captured groups from the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> property.</span></span> <span data-ttu-id="1522b-114">Обратите внимание, что можно извлечь массив, содержащий числа и имена всех групп записи, вызвав <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> методы и <xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType> соответственно.</span><span class="sxs-lookup"><span data-stu-id="1522b-114">Note that you can retrieve an array that contains the numbers and names of all capturing groups by calling the <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType> methods, respectively.</span></span> <span data-ttu-id="1522b-115">Оба метода являются методами экземпляра и нуждаются в создании экземпляра <xref:System.Text.RegularExpressions.Regex> объекта, представляющего регулярное выражение для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="1522b-115">Both are instance methods and require that you instantiate a <xref:System.Text.RegularExpressions.Regex> object that represents the regular expression to be matched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1522b-116">В следующем примере используется регулярное выражение с группами записи для извлечения сведений о товарных знаках и зарегистрированных товарных знаках, используемых в тексте.</span><span class="sxs-lookup"><span data-stu-id="1522b-116">The following example uses a regular expression with capturing groups to extract information about trademarks and registered trademarks used in text.</span></span> <span data-ttu-id="1522b-117">Шаблон регулярного выражения интерпретируется `\b(\w+?)([\u00AE\u2122])`, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1522b-117">The regular expression pattern is `\b(\w+?)([\u00AE\u2122])`, which is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="1522b-118">Шаблон</span><span class="sxs-lookup"><span data-stu-id="1522b-118">Pattern</span></span>|<span data-ttu-id="1522b-119">Описание</span><span class="sxs-lookup"><span data-stu-id="1522b-119">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="1522b-120">Найдите границу слова.</span><span class="sxs-lookup"><span data-stu-id="1522b-120">Look for a word boundary.</span></span>|  
|`(\w+?)`|<span data-ttu-id="1522b-121">Поиск одного или нескольких символов слов.</span><span class="sxs-lookup"><span data-stu-id="1522b-121">Look for one or more word characters.</span></span> <span data-ttu-id="1522b-122">Вместе они формируют имя с товарным знаком.</span><span class="sxs-lookup"><span data-stu-id="1522b-122">Together, these form the trademarked name.</span></span> <span data-ttu-id="1522b-123">(Обратите внимание, что это регулярное выражение предполагает, что товарный знак состоит из одного слова.) Это первая группа записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-123">(Note that this regular expression assumes that a trademark consists of a single word.) This is the first capturing group.</span></span>|  
|`([\u00AE\u2122])`|<span data-ttu-id="1522b-124">Найдите либо®, либо™ символ.</span><span class="sxs-lookup"><span data-stu-id="1522b-124">Look for either the ® or the ™ character.</span></span> <span data-ttu-id="1522b-125">Это вторая группа записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-125">This is the second capturing group.</span></span>|  
  
 <span data-ttu-id="1522b-126">Для каждого соответствия элемент <xref:System.Text.RegularExpressions.GroupCollection> содержит три <xref:System.Text.RegularExpressions.Group> объекта.</span><span class="sxs-lookup"><span data-stu-id="1522b-126">For each match, the <xref:System.Text.RegularExpressions.GroupCollection> contains three <xref:System.Text.RegularExpressions.Group> objects.</span></span> <span data-ttu-id="1522b-127">Первый объект содержит строку, соответствующую целому регулярному выражению.</span><span class="sxs-lookup"><span data-stu-id="1522b-127">The first object contains the string that matches the entire regular expression.</span></span> <span data-ttu-id="1522b-128">Второй объект, представляющий первую захваченную группу, содержит имя продукта.</span><span class="sxs-lookup"><span data-stu-id="1522b-128">The second object, which represents the first captured group, contains the product name.</span></span> <span data-ttu-id="1522b-129">Третий объект, представляющий вторую захваченную группу, содержит знак товарного знака или охраняемого товарного знака.</span><span class="sxs-lookup"><span data-stu-id="1522b-129">The third object, which represents the second captured group, contains the trademark or registered trademark symbol.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.GroupCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.GroupCollection/cs/Example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.GroupCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.GroupCollection/vb/Example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.Group" />
  </Docs>
  <Members>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="groupCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1522b-130">Строка с именем захватываемой группы, которую нужно найти.</span><span class="sxs-lookup"><span data-stu-id="1522b-130">A string with the name of the captured group to locate.</span></span></param>
        <summary><span data-ttu-id="1522b-131">Определяет, содержит ли коллекция группы захватываемую группу, обозначенную указанным именем.</span><span class="sxs-lookup"><span data-stu-id="1522b-131">Determines whether the group collection contains a captured group identified by the specified name.</span></span></summary>
        <returns><span data-ttu-id="1522b-132"><see langword="true"/>, если коллекция группы содержит захватываемую группу, обозначенную <paramref name="key" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-132"><see langword="true"/> if the group collection contains a captured group identified by <paramref name="key" />; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="groupCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="1522b-133">Массив, в который необходимо скопировать коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1522b-133">The array the collection is to be copied into.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="1522b-134">Позиция в конечном массиве, в которой необходимо начать копирование.</span><span class="sxs-lookup"><span data-stu-id="1522b-134">The position in the destination array where the copying is to begin.</span></span></param>
        <summary><span data-ttu-id="1522b-135">Копирует все элементы коллекции в данный массив, начиная с данного индекса.</span><span class="sxs-lookup"><span data-stu-id="1522b-135">Copies all the elements of the collection to the given array beginning at the given index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1522b-136">Поскольку вся коллекция копируется в массив, начиная с заданного индекса, массив назначения должен быть не меньше, чем коллекция.</span><span class="sxs-lookup"><span data-stu-id="1522b-136">Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="1522b-137">Этот элемент отсутствует в [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1522b-137">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="1522b-138">При разработке приложений, предназначенных для [!INCLUDE[net_portable](~/includes/net-portable-md.md)], <xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType> используйте вместо этого метод.</span><span class="sxs-lookup"><span data-stu-id="1522b-138">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType> method instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1522b-139">Следующий пример извлекает каждое слово из предложения и захватывает его в захваченной группе <xref:System.Text.RegularExpressions.GroupCollection.CopyTo%2A> . Затем метод используется для копирования элементов в каждом <xref:System.Text.RegularExpressions.GroupCollection> объекте соответствия в массив, содержащий захваченные группы из всех совпадений.</span><span class="sxs-lookup"><span data-stu-id="1522b-139">The following example extracts each word from a sentence and captures it in a capturing group, The <xref:System.Text.RegularExpressions.GroupCollection.CopyTo%2A> method is then used to copy the elements in each match's <xref:System.Text.RegularExpressions.GroupCollection> object to an array that contains the capturing groups from all matches.</span></span> <span data-ttu-id="1522b-140">Затем отдельные захваченные слова отображаются в консоли.</span><span class="sxs-lookup"><span data-stu-id="1522b-140">The individual captured words are then displayed to the console.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.GroupCollection.CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.copyto/cs/copyto1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.GroupCollection.CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.copyto/vb/copyto1.vb#1)]  
  
 <span data-ttu-id="1522b-141">Регулярное выражение определяется следующим образом:</span><span class="sxs-lookup"><span data-stu-id="1522b-141">The regular expression is defined as follows:</span></span>  
  
|<span data-ttu-id="1522b-142">Шаблон</span><span class="sxs-lookup"><span data-stu-id="1522b-142">Pattern</span></span>|<span data-ttu-id="1522b-143">Описание</span><span class="sxs-lookup"><span data-stu-id="1522b-143">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="1522b-144">Соответствует границе слова.</span><span class="sxs-lookup"><span data-stu-id="1522b-144">Match a word boundary.</span></span>|  
|`(\S+?)`|<span data-ttu-id="1522b-145">Совпадение с одним или несколькими символами, не являющимися пробелами.</span><span class="sxs-lookup"><span data-stu-id="1522b-145">Match one or more non-white space characters.</span></span> <span data-ttu-id="1522b-146">Назначьте их первой группе записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-146">Assign them to the first capturing group.</span></span>|  
|`\b`|<span data-ttu-id="1522b-147">Соответствует границе слова.</span><span class="sxs-lookup"><span data-stu-id="1522b-147">Match a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1522b-148"><paramref name="array" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-148"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="1522b-149">Значение параметра <paramref name="arrayIndex" /> выходит за пределы массива <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-149"><paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />.</span></span>

<span data-ttu-id="1522b-150">- или -</span><span class="sxs-lookup"><span data-stu-id="1522b-150">-or-</span></span>

<span data-ttu-id="1522b-151">Сумма значений <paramref name="arrayIndex" /> и <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> выходит за пределы массива <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-151"><paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> is outside the bounds of <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Text.RegularExpressions.Group[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Text.RegularExpressions.Group[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Group(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Text::RegularExpressions::Group ^&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Text.RegularExpressions.Group[] * int -&gt; unit&#xA;override this.CopyTo : System.Text.RegularExpressions.Group[] * int -&gt; unit" Usage="groupCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Text.RegularExpressions.Group[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="1522b-152">Одномерный массив, куда копируются элементы из данной коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-152">The one-dimensional array that is the destination of the elements copied from the group collection.</span></span> <span data-ttu-id="1522b-153">Индекс в массиве должен начинаться с нуля.</span><span class="sxs-lookup"><span data-stu-id="1522b-153">The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="1522b-154">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="1522b-154">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="1522b-155">Копирует элементы коллекции групп в массив <see cref="T:System.Text.RegularExpressions.Group[]" />, начиная с определенного индекса в массиве.</span><span class="sxs-lookup"><span data-stu-id="1522b-155">Copies the elements of the group collection to a <see cref="T:System.Text.RegularExpressions.Group[]" /> array, starting at a particular array index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1522b-156">Параметр <paramref name="array" /> имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="1522b-156"><paramref name="array" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1522b-157">Значение параметра <paramref name="arrayIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1522b-157"><paramref name="arrayIndex" /> is less than zero.</span></span>

<span data-ttu-id="1522b-158">-или-</span><span class="sxs-lookup"><span data-stu-id="1522b-158">-or-</span></span>

<span data-ttu-id="1522b-159">Значение <paramref name="arrayIndex" /> превышает длину <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-159"><paramref name="arrayIndex" /> is greater than the length of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1522b-160">Длина <paramref name="array" /> - <paramref name="arrayIndex" /> меньше количества коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-160">The length of <paramref name="array" /> - <paramref name="arrayIndex" /> is less than the group collection count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Text.RegularExpressions.GroupCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1522b-161">Возвращает количество групп в коллекции.</span><span class="sxs-lookup"><span data-stu-id="1522b-161">Returns the number of groups in the collection.</span></span></summary>
        <value><span data-ttu-id="1522b-162">Число групп в коллекции.</span><span class="sxs-lookup"><span data-stu-id="1522b-162">The number of groups in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1522b-163"><xref:System.Text.RegularExpressions.GroupCollection> Объект всегда имеет по крайней мере один член.</span><span class="sxs-lookup"><span data-stu-id="1522b-163">The <xref:System.Text.RegularExpressions.GroupCollection> object always has at least one member.</span></span> <span data-ttu-id="1522b-164">Если сопоставление завершается неудачно, <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> свойство <xref:System.Text.RegularExpressions.GroupCollection> возвращает объект, содержащий один элемент.</span><span class="sxs-lookup"><span data-stu-id="1522b-164">If a match is unsuccessful, the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property returns a <xref:System.Text.RegularExpressions.GroupCollection> object that contains a single member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="groupCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1522b-165">Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции.</span><span class="sxs-lookup"><span data-stu-id="1522b-165">Provides an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="1522b-166">Перечислитель, содержащий все объекты <see cref="T:System.Text.RegularExpressions.Group" /> в коллекции <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-166">An enumerator that contains all <see cref="T:System.Text.RegularExpressions.Group" /> objects in the <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1522b-167">Вместо <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> вызова метода для получения перечислителя, который позволяет выполнять итерацию C# `For Each` <xref:System.Text.RegularExpressions.Group> по объектам в коллекции, следует использовать конструкцию `foreach` итерации группы (например, в и...`Next`</span><span class="sxs-lookup"><span data-stu-id="1522b-167">Instead of calling the <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="1522b-168">в Visual Basic), предоставляемом вашим языком программирования.</span><span class="sxs-lookup"><span data-stu-id="1522b-168">in Visual Basic) that is provided by your programming language.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Text.RegularExpressions.GroupCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1522b-169">Возвращает значение, указывающее на то, доступна ли коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-169">Gets a value that indicates whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="1522b-170">Значение <see langword="true" /> во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="1522b-170"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Text.RegularExpressions.GroupCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1522b-171">Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Text.RegularExpressions.GroupCollection" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="1522b-171">Gets a value that indicates whether access to the <see cref="T:System.Text.RegularExpressions.GroupCollection" /> is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="1522b-172">Значение <see langword="false" /> во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="1522b-172"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="1522b-173">Этот элемент отсутствует в [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1522b-173">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="1522b-174">При разработке приложений, предназначенных для [!INCLUDE[net_portable](~/includes/net-portable-md.md)], <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType> используйте вместо этого свойство.</span><span class="sxs-lookup"><span data-stu-id="1522b-174">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.GroupCollection.SyncRoot" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1522b-175">Позволяет осуществлять доступ к отдельному элементу коллекции с помощью целочисленного или строкового индекса.</span><span class="sxs-lookup"><span data-stu-id="1522b-175">Enables access to a single member of the collection by integer or string index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Group this[int groupnum] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Group Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(groupnum As Integer) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::Group ^ default[int] { System::Text::RegularExpressions::Group ^ get(int groupnum); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Text.RegularExpressions.Group" Usage="System.Text.RegularExpressions.GroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupnum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupnum"><span data-ttu-id="1522b-176">Отсчитываемый от нуля индекс извлекаемого элемента коллекции.</span><span class="sxs-lookup"><span data-stu-id="1522b-176">The zero-based index of the collection member to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1522b-177">Включает доступ к члену коллекции с помощью целочисленного индекса.</span><span class="sxs-lookup"><span data-stu-id="1522b-177">Enables access to a member of the collection by integer index.</span></span></summary>
        <value><span data-ttu-id="1522b-178">Элемент коллекции, заданный параметром <paramref name="groupnum" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-178">The member of the collection specified by <paramref name="groupnum" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1522b-179">Свойство является индексом (в C#) или свойством по умолчанию (в <xref:System.Text.RegularExpressions.GroupCollection> Visual Basic) класса. <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29></span><span class="sxs-lookup"><span data-stu-id="1522b-179">The <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> property is the index (in C#) or the default property (in Visual Basic) of the <xref:System.Text.RegularExpressions.GroupCollection> class.</span></span> <span data-ttu-id="1522b-180">Он позволяет перечислять элементы коллекции с помощью `foreach` оператора в C# или `For Each` инструкции в Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1522b-180">It allows you to enumerate the members of the collection by using a `foreach` statement in C# or a `For Each` statement in Visual Basic.</span></span>  
  
 <span data-ttu-id="1522b-181">Это свойство также можно использовать для получения отдельных захваченных групп по номеру индекса.</span><span class="sxs-lookup"><span data-stu-id="1522b-181">You can also use this property to retrieve individual captured groups by their index number.</span></span> <span data-ttu-id="1522b-182">Вы можете получить массив, содержащий числа всех групп записи в регулярном выражении, вызвав метод экземпляра <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="1522b-182">You can retrieve an array that contains the numbers of all capturing groups in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1522b-183">Можно также сопоставлять именованные группы записи с их числами, вызывая метод <xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A?displayProperty=nameWithType> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1522b-183">You can also map named capturing groups to their numbers by calling the instance <xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1522b-184">Можно определить количество элементов в коллекции, извлекая значение <xref:System.Text.RegularExpressions.GroupCollection.Count%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1522b-184">You can determine the number of items in the collection by retrieving the value of the <xref:System.Text.RegularExpressions.GroupCollection.Count%2A> property.</span></span> <span data-ttu-id="1522b-185">Допустимые значения для `groupnum` параметра в диапазоне от 0 до 1 меньше числа элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="1522b-185">Valid values for the `groupnum` parameter range from 0 to one less than the number of items in the collection.</span></span>  
  
 <span data-ttu-id="1522b-186">Объект, возвращаемый свойством, всегда имеет по крайней мере один член. <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> <xref:System.Text.RegularExpressions.GroupCollection></span><span class="sxs-lookup"><span data-stu-id="1522b-186">The <xref:System.Text.RegularExpressions.GroupCollection> object returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property always has at least one member.</span></span> <span data-ttu-id="1522b-187">Если обработчик регулярных выражений не может найти совпадения в определенной входной строке, то для <xref:System.Text.RegularExpressions.Group> `false` одного объекта в коллекции <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> `Group.Value` свойство имеет значение, а свойству — значение <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1522b-187">If the regular expression engine cannot find any matches in a particular input string, the single <xref:System.Text.RegularExpressions.Group> object in the collection has its <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> property set to `false` and its `Group.Value` property set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1522b-188">Если `groupnum` не является индексом элемента коллекции `groupnum` или является индексом захваченной группы, которая не сопоставлена во входной строке <xref:System.Text.RegularExpressions.Group> , <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> метод возвращает объект, свойство которого имеет `false` значение и свойство имеет <xref:System.String.Empty?displayProperty=nameWithType>значение. `Group.Value`</span><span class="sxs-lookup"><span data-stu-id="1522b-188">If `groupnum` is not the index of a member of the collection, or if `groupnum` is the index of a capturing group that has not been matched in the input string, the method returns a <xref:System.Text.RegularExpressions.Group> object whose <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> property is `false` and whose `Group.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1522b-189">В следующем примере определяется регулярное выражение, состоящее из двух пронумерованных групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-189">The following example defines a regular expression that consists of two numbered groups.</span></span> <span data-ttu-id="1522b-190">Первая группа захватывает одну или несколько последовательных цифр.</span><span class="sxs-lookup"><span data-stu-id="1522b-190">The first group captures one or more consecutive digits.</span></span> <span data-ttu-id="1522b-191">Вторая группа соответствует одному символу.</span><span class="sxs-lookup"><span data-stu-id="1522b-191">The second group matches a single character.</span></span> <span data-ttu-id="1522b-192">Поскольку обработчик регулярных выражений ищет ноль или одно вхождение первой группы, он не всегда находит совпадение, даже если сопоставление регулярного выражения выполнено успешно.</span><span class="sxs-lookup"><span data-stu-id="1522b-192">Because the regular expression engine looks for zero or one occurrence of the first group, it does not always find a match even if the regular expression match is successful.</span></span> <span data-ttu-id="1522b-193">Затем в примере демонстрируется результат, когда <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> свойство используется для получения несопоставленной группы, сопоставленной группы и группы, не определенной в регулярном выражении.</span><span class="sxs-lookup"><span data-stu-id="1522b-193">The example then illustrates the result when the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression.</span></span> <span data-ttu-id="1522b-194">В примере определяется шаблон `(\d+)*(\w)\2`регулярного выражения, который интерпретируется, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1522b-194">The example defines a regular expression pattern `(\d+)*(\w)\2`, which is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="1522b-195">Шаблон</span><span class="sxs-lookup"><span data-stu-id="1522b-195">Pattern</span></span>|<span data-ttu-id="1522b-196">Описание</span><span class="sxs-lookup"><span data-stu-id="1522b-196">Description</span></span>|  
|-------------|-----------------|  
|`(\d+)*`|<span data-ttu-id="1522b-197">Совпадение с одним или несколькими вхождениями десятичной цифры.</span><span class="sxs-lookup"><span data-stu-id="1522b-197">Match one or more occurrence of a decimal digit.</span></span> <span data-ttu-id="1522b-198">Это первая группа записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-198">This is the first capturing group.</span></span> <span data-ttu-id="1522b-199">Совпадение с этим шаблоном — ноль или один раз.</span><span class="sxs-lookup"><span data-stu-id="1522b-199">Match this pattern either zero or one time.</span></span>|  
|`(\w)`|<span data-ttu-id="1522b-200">Это вторая группа записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-200">This is the second capturing group.</span></span>|  
|`\k`|<span data-ttu-id="1522b-201">Совпадение со строкой, захваченной второй группой записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-201">Match the string captured by the second capturing group.</span></span>|  
  
 [!code-csharp[System.Text.RegularExpressions.GroupCollection.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.item/cs/item3.cs#2)]
 [!code-vb[System.Text.RegularExpressions.GroupCollection.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.item/vb/item3.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b"><span data-ttu-id="1522b-202">Конструкции группирования</span><span class="sxs-lookup"><span data-stu-id="1522b-202">Grouping Constructs</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Group this[string groupname] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Group Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(groupname As String) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::Group ^ default[System::String ^] { System::Text::RegularExpressions::Group ^ get(System::String ^ groupname); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Text.RegularExpressions.Group" Usage="System.Text.RegularExpressions.GroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupname"><span data-ttu-id="1522b-203">Имя группы записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-203">The name of a capturing group.</span></span></param>
        <summary><span data-ttu-id="1522b-204">Включает доступ к члену коллекции с помощью строкового индекса.</span><span class="sxs-lookup"><span data-stu-id="1522b-204">Enables access to a member of the collection by string index.</span></span></summary>
        <value><span data-ttu-id="1522b-205">Элемент коллекции, заданный параметром <paramref name="groupname" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-205">The member of the collection specified by <paramref name="groupname" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1522b-206">`groupName`может быть либо именем захваченной группы, определенной `(?<`элементом *Name* `>)` в регулярном выражении, либо строковым представлением номера группы записи, определенной конструкцией группировки.</span><span class="sxs-lookup"><span data-stu-id="1522b-206">`groupName` can be either the name of a capturing group that is defined by the `(?<`*name*`>)` element in a regular expression, or the string representation of the number of a capturing group that is defined by a grouping construct.</span></span> <span data-ttu-id="1522b-207">Дополнительные сведения о группах в регулярных выражениях см. в разделе [конструкции группирования](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="1522b-207">For more information about groups in regular expressions, see [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md).</span></span>  
  
 <span data-ttu-id="1522b-208">Вы можете получить имена всех захваченных групп в <xref:System.Text.RegularExpressions.Regex> объекте, <xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType> вызвав метод.</span><span class="sxs-lookup"><span data-stu-id="1522b-208">You can retrieve the names of all the captured groups in a <xref:System.Text.RegularExpressions.Regex> object by calling the <xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1522b-209">Можно также сопоставлять число захваченных групп в регулярном выражении с их именами, вызывая <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1522b-209">You can also map the numbers of capturing groups in a regular expression to their names by calling the <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1522b-210">Затем отдельные имена из массива могут быть переданы <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> свойству для получения захваченной строки.</span><span class="sxs-lookup"><span data-stu-id="1522b-210">Individual names from the array can then be passed to the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> property to retrieve the captured string.</span></span>  
  
 <span data-ttu-id="1522b-211">Если `groupname` параметр не является именем захваченной группы в коллекции `groupname` или является именем захваченной группы, которая не сопоставлена во входной строке <xref:System.Text.RegularExpressions.Group> , метод возвращает объект, свойство которого <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> имеет `false` значение. свойство которого `Group.Value` имеет <xref:System.String.Empty?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="1522b-211">If `groupname` is not the name of a capturing group in the collection, or if `groupname` is the name of a capturing group that has not been matched in the input string, the method returns a <xref:System.Text.RegularExpressions.Group> object whose <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> property is `false` and whose `Group.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1522b-212">В следующем примере определяется регулярное выражение, состоящее из двух именованных групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-212">The following example defines a regular expression that consists of two named groups.</span></span> <span data-ttu-id="1522b-213">Первая группа, `numbers`, захватывает одну или несколько последовательных цифр.</span><span class="sxs-lookup"><span data-stu-id="1522b-213">The first group, `numbers`, captures one or more consecutive digits.</span></span> <span data-ttu-id="1522b-214">Вторая группа, `letter`, соответствует одному символу.</span><span class="sxs-lookup"><span data-stu-id="1522b-214">The second group, `letter`, matches a single character.</span></span> <span data-ttu-id="1522b-215">Так как обработчик регулярных выражений ищет ноль или одно вхождение шаблона `numbers` `numbers` , определенного группой, Группа не всегда будет присвоена даже при успешном совпадении.</span><span class="sxs-lookup"><span data-stu-id="1522b-215">Because the regular expression engine looks for zero or one occurrence of the pattern defined by the `numbers` group, the `numbers` group is not always present even if a match is successful.</span></span> <span data-ttu-id="1522b-216">Затем в примере демонстрируется результат, когда <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> свойство используется для получения несопоставленной группы, сопоставленной группы и группы, не определенной в регулярном выражении.</span><span class="sxs-lookup"><span data-stu-id="1522b-216">The example then illustrates the result when the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression.</span></span> <span data-ttu-id="1522b-217">В примере определяется шаблон `(?<numbers>\d+)*(?<letter>\w)\k<letter>`регулярного выражения, который интерпретируется, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1522b-217">The example defines a regular expression pattern `(?<numbers>\d+)*(?<letter>\w)\k<letter>`, which is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="1522b-218">Шаблон</span><span class="sxs-lookup"><span data-stu-id="1522b-218">Pattern</span></span>|<span data-ttu-id="1522b-219">Описание</span><span class="sxs-lookup"><span data-stu-id="1522b-219">Description</span></span>|  
|-------------|-----------------|  
|`(?<numbers>\d+)*`|<span data-ttu-id="1522b-220">Совпадение с одним или несколькими вхождениями десятичной цифры.</span><span class="sxs-lookup"><span data-stu-id="1522b-220">Match one or more occurrence of a decimal digit.</span></span> <span data-ttu-id="1522b-221">Назовите эту `numbers` группу записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-221">Name this the `numbers` capturing group.</span></span> <span data-ttu-id="1522b-222">Совпадение с этим шаблоном — ноль или один раз.</span><span class="sxs-lookup"><span data-stu-id="1522b-222">Match this pattern either zero or one time.</span></span>|  
|`(?<letter>\w)`|<span data-ttu-id="1522b-223">Совпадение с одним символом слова.</span><span class="sxs-lookup"><span data-stu-id="1522b-223">Match a single word character.</span></span> <span data-ttu-id="1522b-224">Назовите эту `letter` группу записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-224">Name this the `letter` capturing group.</span></span>|  
|`\k<letter>`|<span data-ttu-id="1522b-225">Совпадение со строкой, `letter` захваченной группой записи.</span><span class="sxs-lookup"><span data-stu-id="1522b-225">Match the string captured by the `letter` capturing group.</span></span>|  
  
 [!code-csharp[System.Text.RegularExpressions.GroupCollection.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.item/cs/item2.cs#1)]
 [!code-vb[System.Text.RegularExpressions.GroupCollection.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.item/vb/item2.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b"><span data-ttu-id="1522b-226">Конструкции группирования</span><span class="sxs-lookup"><span data-stu-id="1522b-226">Grouping Constructs</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ Keys { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : seq&lt;string&gt;" Usage="System.Text.RegularExpressions.GroupCollection.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1522b-227">Возвращает перечисление строк, содержащее ключи имени коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-227">Gets a string enumeration that contains the name keys of the group collection.</span></span></summary>
        <value><span data-ttu-id="1522b-228">Ключи имени коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-228">The name keys of the group collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Text.RegularExpressions.GroupCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1522b-229">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-229">Gets an object that can be used to synchronize access to the <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</span></span></summary>
        <value><span data-ttu-id="1522b-230">Копия объекта <see cref="T:System.Text.RegularExpressions.Match" /> для синхронизации.</span><span class="sxs-lookup"><span data-stu-id="1522b-230">A copy of the <see cref="T:System.Text.RegularExpressions.Match" /> object to synchronize.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="1522b-231">Этот элемент отсутствует в [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1522b-231">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="1522b-232">При разработке приложений, предназначенных для [!INCLUDE[net_portable](~/includes/net-portable-md.md)], <xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType> используйте вместо этого свойство.</span><span class="sxs-lookup"><span data-stu-id="1522b-232">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;Group&gt;.Add (System.Text.RegularExpressions.Group item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Add(class System.Text.RegularExpressions.Group item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Group&gt;#Add(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As Group) Implements ICollection(Of Group).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Add(System::Text::RegularExpressions::Group ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Group ^&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1522b-233">Группа, добавляемая в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1522b-233">The group to add to the collection.</span></span></param>
        <summary><span data-ttu-id="1522b-234">Добавляет <see cref="T:System.Text.RegularExpressions.Group" /> в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1522b-234">Adds a <see cref="T:System.Text.RegularExpressions.Group" /> to the collection.</span></span> <span data-ttu-id="1522b-235">При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-235">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-236">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-236">This method is not supported.</span></span> <span data-ttu-id="1522b-237">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-237">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;Group&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Group&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of Group).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Clear() = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Group ^&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1522b-238">Очищает коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1522b-238">Clears the collection.</span></span> <span data-ttu-id="1522b-239">При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-239">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-240">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-240">This method is not supported.</span></span> <span data-ttu-id="1522b-241">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-241">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Group&gt;.Contains (System.Text.RegularExpressions.Group item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Contains(class System.Text.RegularExpressions.Group item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Group&gt;#Contains(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Group) As Boolean Implements ICollection(Of Group).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Contains(System::Text::RegularExpressions::Group ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Group ^&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1522b-242">Группа, которую необходимо найти в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-242">The group to locate in the group collection.</span></span></param>
        <summary><span data-ttu-id="1522b-243">Определяет, содержит ли коллекция групп указанный элемент группы.</span><span class="sxs-lookup"><span data-stu-id="1522b-243">Determines whether the group collection contains a specific group item.</span></span></summary>
        <returns><span data-ttu-id="1522b-244">Значение <see langword="true" />, если элемент группы найден в коллекции. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-244"><see langword="true" /> if the group item is found in the group collection; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1522b-245">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1522b-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1522b-246">Он может использоваться, только если экземпляр <xref:System.Text.RegularExpressions.GroupCollection> приведен к типу интерфейса <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="1522b-246">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span> 

         ]]></format>
         </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Group&gt;.Remove (System.Text.RegularExpressions.Group item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Remove(class System.Text.RegularExpressions.Group item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Group&gt;#Remove(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As Group) As Boolean Implements ICollection(Of Group).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Remove(System::Text::RegularExpressions::Group ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Group ^&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1522b-247">Удаляемая группа.</span><span class="sxs-lookup"><span data-stu-id="1522b-247">The group to remove.</span></span></param>
        <summary><span data-ttu-id="1522b-248">Удаляет объект <see cref="T:System.Text.RegularExpressions.Group" /> из коллекции.</span><span class="sxs-lookup"><span data-stu-id="1522b-248">Removes a <see cref="T:System.Text.RegularExpressions.Group" /> from the collection.</span></span> <span data-ttu-id="1522b-249">При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-249">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="1522b-250">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-250">This method is not supported.</span></span> <span data-ttu-id="1522b-251">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="1522b-251">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-252">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-252">This method is not supported.</span></span> <span data-ttu-id="1522b-253">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-253">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Text.RegularExpressions.Group&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Text.RegularExpressions.Group&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,Group&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Text.RegularExpressions.Group&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Text.RegularExpressions.Group&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Text#RegularExpressions#Group&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Group)) Implements IEnumerable(Of KeyValuePair(Of String, Group)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Text::RegularExpressions::Group ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Text.RegularExpressions.Group&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Text::RegularExpressions::Group ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Text.RegularExpressions.Group&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1522b-254">Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-254">Provides an enumerator that iterates through the group collection.</span></span></summary>
        <returns><span data-ttu-id="1522b-255">Перечислитель, содержащий все имена и объекты, расположенные в коллекции <see cref="T:System.Text.RegularExpressions.Group" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-255">An enumerator that contains all names and objects in the <see cref="T:System.Text.RegularExpressions.Group" /> collection.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

## Remarks


<span data-ttu-id="1522b-256">Вместо вызова этого метода для получения перечислителя, который позволяет выполнять итерацию <xref:System.Text.RegularExpressions.Group> по объектам в коллекции, следует использовать конструкцию итерации группы ( `foreach` например, в C# и `For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="1522b-256">Instead of calling this method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="1522b-257">в Visual Basic), предоставляемом вашим языком программирования.</span><span class="sxs-lookup"><span data-stu-id="1522b-257">in Visual Basic) that is provided by your programming language.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Group&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Group&gt; IEnumerable&lt;Group&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Text.RegularExpressions.Group&gt; System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Group&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable&lt;System#Text#RegularExpressions#Group&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Group) Implements IEnumerable(Of Group).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Text::RegularExpressions::Group ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Group&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Text::RegularExpressions::Group ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Group&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1522b-258">Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-258">Provides an enumerator that iterates through the group collection.</span></span></summary>
        <returns><span data-ttu-id="1522b-259">Перечислитель, содержащий все расположенные в коллекции групп объекты <see cref="T:System.Text.RegularExpressions.Group" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-259">An enumerator that contains all <see cref="T:System.Text.RegularExpressions.Group" /> objects in the group collection.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="1522b-260">Вместо вызова этого метода для получения перечислителя, который позволяет выполнять итерацию <xref:System.Text.RegularExpressions.Group> по объектам в коллекции, следует использовать конструкцию итерации группы ( `foreach` например, в C# и `For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="1522b-260">Instead of calling this method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="1522b-261">в Visual Basic), предоставляемом вашим языком программирования.</span><span class="sxs-lookup"><span data-stu-id="1522b-261">in Visual Basic) that is provided by your programming language.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.IndexOf">
      <MemberSignature Language="C#" Value="int IList&lt;Group&gt;.IndexOf (System.Text.RegularExpressions.Group item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.IndexOf(class System.Text.RegularExpressions.Group item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Group&gt;#IndexOf(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Group) As Integer Implements IList(Of Group).IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.IndexOf(System::Text::RegularExpressions::Group ^ item) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Group ^&gt;::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1522b-262">Группа, которую необходимо найти в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-262">The group to locate in the group collection.</span></span></param>
        <summary><span data-ttu-id="1522b-263">Определяет индекс определенной группы в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-263">Determines the index of a specific group in the group collection.</span></span></summary>
        <returns><span data-ttu-id="1522b-264">Индекс <paramref. name="item" />, если он найден; в противном случае — значение –1.</span><span class="sxs-lookup"><span data-stu-id="1522b-264">The index of the <paramref. name="item" /> if found; otherwise, -1.</span></span></returns>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1522b-265">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1522b-265">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1522b-266">Он может использоваться, только если экземпляр <xref:System.Text.RegularExpressions.GroupCollection> приведен к типу интерфейса <xref:System.Collections.Generic.IList%601>.</span><span class="sxs-lookup"><span data-stu-id="1522b-266">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>

         ]]></format>
         </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;Group&gt;.Insert (int index, System.Text.RegularExpressions.Group item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Insert(int32 index, class System.Text.RegularExpressions.Group item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Group&gt;#Insert(System.Int32,System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Group) Implements IList(Of Group).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Insert(int index, System::Text::RegularExpressions::Group ^ item) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Group ^&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="item" Type="System.Text.RegularExpressions.Group" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1522b-267">Позиция, в которую вставляется группа.</span><span class="sxs-lookup"><span data-stu-id="1522b-267">The position at which to insert the group.</span></span></param>
        <param name="item"><span data-ttu-id="1522b-268">Вставляемая группа.</span><span class="sxs-lookup"><span data-stu-id="1522b-268">The group to insert.</span></span></param>
        <summary><span data-ttu-id="1522b-269">Вставляет <see cref="T:System.Text.RegularExpressions.Group" /> в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1522b-269">Inserts a <see cref="T:System.Text.RegularExpressions.Group" /> into the collection.</span></span> <span data-ttu-id="1522b-270">При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-270">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-271">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-271">This method is not supported.</span></span> <span data-ttu-id="1522b-272">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-272">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Item">
      <MemberSignature Language="C#" Value="System.Text.RegularExpressions.Group System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Group System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Group&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Group Implements IList(Of Group).Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Text::RegularExpressions::Group ^ System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Group&gt;::Item[int] { System::Text::RegularExpressions::Group ^ get(int index); void set(int index, System::Text::RegularExpressions::Group ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1522b-273">Отсчитываемый от нуля индекс группы в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-273">The zero-based index of the group in the group collection.</span></span></param>
        <summary><span data-ttu-id="1522b-274">Помещает группу в заданную позицию в коллекции.</span><span class="sxs-lookup"><span data-stu-id="1522b-274">Gets the group at the specified position in the collection.</span></span></summary>
        <value><span data-ttu-id="1522b-275">Группа в нужной должности.</span><span class="sxs-lookup"><span data-stu-id="1522b-275">The group in the desired position.</span></span></value>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1522b-276">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1522b-276">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1522b-277">Он может использоваться, только если экземпляр <xref:System.Text.RegularExpressions.GroupCollection> приведен к типу интерфейса <xref:System.Collections.Generic.IList%601>.</span><span class="sxs-lookup"><span data-stu-id="1522b-277">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>

         ]]></format>
         </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-278">Не удается задать элемент.</span><span class="sxs-lookup"><span data-stu-id="1522b-278">Cannot set an item.</span></span> <span data-ttu-id="1522b-279">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-279">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;Group&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Group&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of Group).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Group ^&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1522b-280">Отсчитываемый от нуля индекс удаляемой группы.</span><span class="sxs-lookup"><span data-stu-id="1522b-280">The zero-based index of the group to remove.</span></span></param>
        <summary><span data-ttu-id="1522b-281">Удаляет из коллекции <see cref="T:System.Text.RegularExpressions.Group" /> с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="1522b-281">Removes the <see cref="T:System.Text.RegularExpressions.Group" /> from the collection at the specified index.</span></span> <span data-ttu-id="1522b-282">При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-282">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-283">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-283">This method is not supported.</span></span> <span data-ttu-id="1522b-284">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-284">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="1522b-285">Одномерный массив, в который копируется коллекция.</span><span class="sxs-lookup"><span data-stu-id="1522b-285">The one-dimensional array the collection is to be copied into.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="1522b-286">Начинающийся с нуля индекс в массиве назначения, с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="1522b-286">The zero-based index in the destination array where copying is to begin.</span></span></param>
        <summary><span data-ttu-id="1522b-287">Копирует все элементы коллекции в указанный массив, начиная с указанного индекса.</span><span class="sxs-lookup"><span data-stu-id="1522b-287">Copies all the elements of the collection to the specified array beginning at the specified index.</span></span></summary>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1522b-288">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1522b-288">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1522b-289">Он может использоваться, только если экземпляр <xref:System.Text.RegularExpressions.GroupCollection> приведен к типу интерфейса <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="1522b-289">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span> 

         ]]></format>
         </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1522b-290">Параметр <paramref name="array" /> имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="1522b-290"><paramref name="array" /> is null.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="1522b-291">Значение <paramref name="arrayIndex" /> выходит за пределы массива <paramref name="array" />, или сумма значений <paramref name="arrayIndex" /> и <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> выходит за пределы массива <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-291"><paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />.-or-<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> is outside the bounds of <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1522b-292">Получает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="1522b-292">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="1522b-293">false во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="1522b-293">false in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1522b-294">Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</span><span class="sxs-lookup"><span data-stu-id="1522b-294">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="1522b-295">Объект, который можно использовать для синхронизации доступа к коллекции.</span><span class="sxs-lookup"><span data-stu-id="1522b-295">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1522b-296">Объект, добавляемый в коллекцию групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-296">The object to add to the group collection.</span></span></param>
        <summary><span data-ttu-id="1522b-297">Добавляет объект в коллекцию групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-297">Adds an object to the group collection.</span></span> <span data-ttu-id="1522b-298">При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-298">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-299">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-299">This method is not supported.</span></span> <span data-ttu-id="1522b-300">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-300">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1522b-301">Очищает коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1522b-301">Clears the collection.</span></span> <span data-ttu-id="1522b-302">При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-302">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-303">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-303">This method is not supported.</span></span> <span data-ttu-id="1522b-304">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-304">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1522b-305">Группа, которую необходимо найти в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-305">The group to locate in the group collection.</span></span></param>
        <summary><span data-ttu-id="1522b-306">Определяет, содержит ли коллекция групп указанный элемент группы.</span><span class="sxs-lookup"><span data-stu-id="1522b-306">Determines whether the group collection contains a specific group item.</span></span></summary>
        <returns><span data-ttu-id="1522b-307">Значение <see langword="true" />, если элемент группы найден в коллекции. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-307"><see langword="true" /> if the group item is found in the group collection; <see langword="false" /> otherwise.</span></span></returns>
         <remarks>
           <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1522b-308">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1522b-308">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1522b-309">Он может использоваться, только если экземпляр <xref:System.Text.RegularExpressions.GroupCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="1522b-309">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span> 

           ]]></format>
         </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1522b-310">Группа, которую необходимо найти в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-310">The group to locate in the group collection.</span></span></param>
        <summary><span data-ttu-id="1522b-311">Определяет индекс определенной группы в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-311">Determines the index of a specific group in the group collection.</span></span></summary>
        <returns><span data-ttu-id="1522b-312">Индекс <paramref. name="item" />, если он найден; в противном случае — значение –1.</span><span class="sxs-lookup"><span data-stu-id="1522b-312">The index of the <paramref. name="item" /> if found; otherwise, -1.</span></span></returns>
         <remarks>
           <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1522b-313">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1522b-313">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1522b-314">Он может использоваться, только если экземпляр <xref:System.Text.RegularExpressions.GroupCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="1522b-314">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span> 

           ]]></format>
         </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1522b-315">Позиция, в которую вставляется группа.</span><span class="sxs-lookup"><span data-stu-id="1522b-315">The position at which to insert the group.</span></span></param>
        <param name="value"><span data-ttu-id="1522b-316">Вставляемая группа.</span><span class="sxs-lookup"><span data-stu-id="1522b-316">The group to insert.</span></span></param>
        <summary><span data-ttu-id="1522b-317">Вставляет <see cref="T:System.Text.RegularExpressions.Group" /> в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1522b-317">Inserts a <see cref="T:System.Text.RegularExpressions.Group" /> into the collection.</span></span> <span data-ttu-id="1522b-318">При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-318">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-319">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-319">This method is not supported.</span></span> <span data-ttu-id="1522b-320">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-320">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1522b-321">Получает значение, указывающее, имеет ли коллекция групп фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="1522b-321">Gets a value indicating whether the group collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="1522b-322">Всегда <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-322"><see langword="true" /> always.</span></span></value>
         <remarks>
           <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1522b-323">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1522b-323">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1522b-324">Он может использоваться, только если экземпляр <xref:System.Text.RegularExpressions.GroupCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="1522b-324">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span> 

           ]]></format>
         </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1522b-325">Отсчитываемый от нуля индекс позиции группы в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-325">The zero-index position of the group in the group collection.</span></span></param>
        <summary><span data-ttu-id="1522b-326">Возвращает группу в желаемой позиции.</span><span class="sxs-lookup"><span data-stu-id="1522b-326">Gets the group in the desired position.</span></span></summary>
        <value><span data-ttu-id="1522b-327">Группа в нужной должности.</span><span class="sxs-lookup"><span data-stu-id="1522b-327">The group in the desired position.</span></span></value>
         <remarks>
           <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1522b-328">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1522b-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1522b-329">Он может использоваться, только если экземпляр <xref:System.Text.RegularExpressions.GroupCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="1522b-329">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span> 

           ]]></format>
         </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-330">Не удается задать элемент.</span><span class="sxs-lookup"><span data-stu-id="1522b-330">Cannot set an item.</span></span> <span data-ttu-id="1522b-331">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-331">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1522b-332">Удаляемая группа.</span><span class="sxs-lookup"><span data-stu-id="1522b-332">The group to remove.</span></span></param>
        <summary><span data-ttu-id="1522b-333">Удаляет объект <see cref="T:System.Text.RegularExpressions.Group" /> из коллекции.</span><span class="sxs-lookup"><span data-stu-id="1522b-333">Removes a <see cref="T:System.Text.RegularExpressions.Group" /> from the collection.</span></span> <span data-ttu-id="1522b-334">При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-334">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="1522b-335">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-335">This method is not supported.</span></span> <span data-ttu-id="1522b-336">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="1522b-336">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-337">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-337">This method is not supported.</span></span> <span data-ttu-id="1522b-338">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-338">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1522b-339">Отсчитываемый от нуля индекс удаляемой группы.</span><span class="sxs-lookup"><span data-stu-id="1522b-339">The zero-based index of the group to remove.</span></span></param>
        <summary><span data-ttu-id="1522b-340">Удаляет из коллекции <see cref="T:System.Text.RegularExpressions.Group" /> с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="1522b-340">Removes the <see cref="T:System.Text.RegularExpressions.Group" /> from the collection at the specified index.</span></span> <span data-ttu-id="1522b-341">При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-341">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1522b-342">Этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1522b-342">This method is not supported.</span></span> <span data-ttu-id="1522b-343">Данная коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1522b-343">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out System.Text.RegularExpressions.Group value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] class System.Text.RegularExpressions.Group&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As String, ByRef value As Group) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::String ^ key, [Runtime::InteropServices::Out] System::Text::RegularExpressions::Group ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : string *  -&gt; bool&#xA;override this.TryGetValue : string *  -&gt; bool" Usage="groupCollection.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="value" Type="System.Text.RegularExpressions.Group" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1522b-344">Строка с искомым ключом имени группы.</span><span class="sxs-lookup"><span data-stu-id="1522b-344">A string with the group name key to look for.</span></span></param>
        <param name="value"><span data-ttu-id="1522b-345">Метод возвращает группу, имя которой <paramref name="key" />, если она найдена; в противном случае — значение <see langword="null" />, если она не найдена.</span><span class="sxs-lookup"><span data-stu-id="1522b-345">When the method returns, the group whose name is <paramref name="key" />, if it is found; otherwise, <see langword="null" /> if not found.</span></span></param>
        <summary><span data-ttu-id="1522b-346">Пытается получить группу, определяемую предоставленным ключом имени, если она существует в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-346">Attempts to retrieve a group identified by the provided name key, if it exists in the group collection.</span></span></summary>
        <returns><span data-ttu-id="1522b-347"><see langword="true" />, если группа, определяемая предоставленным ключом имени, существует; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1522b-347"><see langword="true" /> if a group identified by the provided name key exists; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Group&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Text.RegularExpressions.Group&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IEnumerable(Of Group)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Text::RegularExpressions::Group ^&gt; ^ Values { System::Collections::Generic::IEnumerable&lt;System::Text::RegularExpressions::Group ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : seq&lt;System.Text.RegularExpressions.Group&gt;" Usage="System.Text.RegularExpressions.GroupCollection.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Group&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1522b-348">Возвращает перечисление групп со всеми группами в коллекции групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-348">Gets a group enumeration with all the groups in the group collection.</span></span></summary>
        <value><span data-ttu-id="1522b-349">Перечисление групп.</span><span class="sxs-lookup"><span data-stu-id="1522b-349">A group enumeration.</span></span></value>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1522b-350">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1522b-350">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1522b-351">Он может использоваться, только если экземпляр <xref:System.Text.RegularExpressions.GroupCollection> приведен к типу интерфейса <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="1522b-351">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span> 

         ]]></format>
         </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
