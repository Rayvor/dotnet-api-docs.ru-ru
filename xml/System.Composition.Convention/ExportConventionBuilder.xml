<Type Name="ExportConventionBuilder" FullName="System.Composition.Convention.ExportConventionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b84de195cd260313d8b16c4eb07f87b8156e0ff6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69130034" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExportConventionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExportConventionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Convention.ExportConventionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExportConventionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportConventionBuilder sealed" />
  <TypeSignature Language="F#" Value="type ExportConventionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Convention</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
    <AssemblyVersion>1.0.33.0</AssemblyVersion>
    <AssemblyVersion>1.0.34.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d8296-101">Настраивает экспорт, связанный с частью.</span><span class="sxs-lookup"><span data-stu-id="d8296-101">Configures an export that is associated with a part.</span></span></summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AddMetadata (string name, Func&lt;Type,object&gt; getValueFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AddMetadata(string name, class System.Func`2&lt;class System.Type, object&gt; getValueFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadata (name As String, getValueFromPartType As Func(Of Type, Object)) As ExportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ExportConventionBuilder ^ AddMetadata(System::String ^ name, Func&lt;Type ^, System::Object ^&gt; ^ getValueFromPartType);" />
      <MemberSignature Language="F#" Value="member this.AddMetadata : string * Func&lt;Type, obj&gt; -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AddMetadata (name, getValueFromPartType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getValueFromPartType" Type="System.Func&lt;System.Type,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d8296-102">Имя добавляемых метаданных.</span><span class="sxs-lookup"><span data-stu-id="d8296-102">The name of the metadata to add.</span></span></param>
        <param name="getValueFromPartType"><span data-ttu-id="d8296-103">Функция, которая предоставляет значение метаданных для добавления.</span><span class="sxs-lookup"><span data-stu-id="d8296-103">A function that provides the value of the metadata to add.</span></span></param>
        <summary><span data-ttu-id="d8296-104">Добавляет к экспорту метаданные, имеющие указанное имя и значение.</span><span class="sxs-lookup"><span data-stu-id="d8296-104">Adds metadata that has the specified name and value to the export.</span></span></summary>
        <returns><span data-ttu-id="d8296-105">Построитель экспорта, содержащий метаданные, которые позволяют выполнять дальнейшую конфигурацию.</span><span class="sxs-lookup"><span data-stu-id="d8296-105">An export builder containing the metadata that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AddMetadata (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AddMetadata(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AddMetadata(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadata (name As String, value As Object) As ExportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ExportConventionBuilder ^ AddMetadata(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddMetadata : string * obj -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AddMetadata (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d8296-106">Имя добавляемых метаданных.</span><span class="sxs-lookup"><span data-stu-id="d8296-106">The name of the metadata to add.</span></span></param>
        <param name="value"><span data-ttu-id="d8296-107">Добавляемое значение метаданных.</span><span class="sxs-lookup"><span data-stu-id="d8296-107">The value of the metadata to add.</span></span></param>
        <summary><span data-ttu-id="d8296-108">Добавляет к экспорту метаданные, имеющие указанное имя и значение.</span><span class="sxs-lookup"><span data-stu-id="d8296-108">Adds metadata that has the specified name and value to the export.</span></span></summary>
        <returns><span data-ttu-id="d8296-109">Построитель экспорта, содержащий метаданные, которые позволяют выполнять дальнейшую конфигурацию.</span><span class="sxs-lookup"><span data-stu-id="d8296-109">An export builder containing the metadata that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AsContractName (Func&lt;Type,string&gt; getContractNameFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AsContractName(class System.Func`2&lt;class System.Type, string&gt; getContractNameFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AsContractName(System.Func{System.Type,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (getContractNameFromPartType As Func(Of Type, String)) As ExportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ExportConventionBuilder ^ AsContractName(Func&lt;Type ^, System::String ^&gt; ^ getContractNameFromPartType);" />
      <MemberSignature Language="F#" Value="member this.AsContractName : Func&lt;Type, string&gt; -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AsContractName getContractNameFromPartType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getContractNameFromPartType" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="getContractNameFromPartType"><span data-ttu-id="d8296-110">Функция, которая предоставляет имя контракта.</span><span class="sxs-lookup"><span data-stu-id="d8296-110">The function that provides the contract name.</span></span></param>
        <summary><span data-ttu-id="d8296-111">Указывает имя контракта для экспорта на основании результатов применения заданной функции к типу экспорта.</span><span class="sxs-lookup"><span data-stu-id="d8296-111">Specifies the contract name for the export based on the result of the specified function on the export type.</span></span></summary>
        <returns><span data-ttu-id="d8296-112">Построитель экспорта, содержащий имя контракта, которое позволяет выполнять дальнейшую конфигурацию.</span><span class="sxs-lookup"><span data-stu-id="d8296-112">An export builder containing the contract name that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AsContractName (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AsContractName(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AsContractName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (contractName As String) As ExportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ExportConventionBuilder ^ AsContractName(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.AsContractName : string -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AsContractName contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="d8296-113">Имя контракта.</span><span class="sxs-lookup"><span data-stu-id="d8296-113">The contract name.</span></span></param>
        <summary><span data-ttu-id="d8296-114">Задает имя контракта для экспорта.</span><span class="sxs-lookup"><span data-stu-id="d8296-114">Specifies the contract name for the export.</span></span></summary>
        <returns><span data-ttu-id="d8296-115">Построитель экспорта, содержащий имя контракта, которое позволяет выполнять дальнейшую конфигурацию.</span><span class="sxs-lookup"><span data-stu-id="d8296-115">An export builder containing the contract name that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractType">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AsContractType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AsContractType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AsContractType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ExportConventionBuilder ^ AsContractType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.AsContractType : Type -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AsContractType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d8296-116">Тип.</span><span class="sxs-lookup"><span data-stu-id="d8296-116">The type.</span></span></param>
        <summary><span data-ttu-id="d8296-117">Задает тип контракта для экспорта.</span><span class="sxs-lookup"><span data-stu-id="d8296-117">Specifies the contract type for the export.</span></span></summary>
        <returns><span data-ttu-id="d8296-118">Построитель экспорта, содержащий тип контракта, которое позволяет выполнять дальнейшую конфигурацию.</span><span class="sxs-lookup"><span data-stu-id="d8296-118">An export builder containing the contract type that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AsContractType&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AsContractType&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AsContractType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractType(Of T) () As ExportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::ExportConventionBuilder ^ AsContractType();" />
      <MemberSignature Language="F#" Value="member this.AsContractType : unit -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AsContractType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="d8296-119">Универсальный тип.</span><span class="sxs-lookup"><span data-stu-id="d8296-119">The generic type.</span></span></typeparam>
        <summary><span data-ttu-id="d8296-120">Задает тип контракта для экспорта в виде универсального типа.</span><span class="sxs-lookup"><span data-stu-id="d8296-120">Specifies the contract type for the export as a generic type.</span></span></summary>
        <returns><span data-ttu-id="d8296-121">Построитель экспорта, содержащий тип контракта, которое позволяет выполнять дальнейшую конфигурацию.</span><span class="sxs-lookup"><span data-stu-id="d8296-121">An export builder containing the contract type that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
