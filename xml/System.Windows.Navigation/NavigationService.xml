<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5465045f81fd08794cfdddd88fdc0a3d3d839469" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70368387" /></Metadata><TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <TypeSignature Language="F#" Value="type NavigationService = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Содержит методы, свойства и события для поддержки переходов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService>инкапсулирует возможность загрузки содержимого в контексте навигации в стиле браузера.  
  
 Содержимым может быть любой тип .NET Frameworkного объекта и HTML-файлов. Однако в общем случае страницы являются предпочтительным способом упаковки содержимого для навигации (см. раздел <xref:System.Windows.Controls.Page>).  
  
 Переход к содержимому можно выполнить, предоставив экземпляр объекта и вызвав перегрузку <xref:System.Windows.Navigation.NavigationService.Navigate%2A> метода, принимающего объект:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 Кроме того, можно переходить к содержимому, передав относительный или абсолютный URI в <xref:System.Windows.Navigation.NavigationService.Navigate%2A> одну из перегрузок метода, принимающую URI:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 При переходе к содержимому по URI <xref:System.Windows.Navigation.NavigationService> возвращает объект, содержащий содержимое.  
  
 Время существования навигации можно контролировать с помощью следующих событий:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>.  
  
 Не все события возникают каждый раз при переходе; набор вызываемых событий определяется типом навигации (содержимым или фрагментом содержимого) и способом завершения навигации (отменен, остановлен или неудачно).  
  
 На следующем рисунке показана последовательность, в которой вызываются эти события:  
  
 ![Блок-схема навигации по страницам] (~/add/media/navigationoverviewfigure11.png "Блок-схема навигации по страницам")  
  
 Во время или после перехода <xref:System.Windows.Navigation.NavigationService> предоставляет сведения о содержимом, к которому осуществляется переход, включая URI содержимого, к которому осуществляется переход (<xref:System.Windows.Navigation.NavigationService.Source%2A>), URI текущего содержимого (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>) и объект, содержащий содержимое, к которому осуществлялся переход<xref:System.Windows.Navigation.NavigationService.Content%2A>().  
  
 При переходе к <xref:System.Windows.Navigation.NavigationService> содержимому записывает навигацию в виде записи в журнале навигации. Запись добавляется в журнал переходов назад, когда происходит новая навигация, путем вызова <xref:System.Windows.Navigation.NavigationService.Navigate%2A> метода или перехода к записи в журнале прямой навигации путем вызова. <xref:System.Windows.Navigation.NavigationService.GoForward%2A> Запись добавляется в журнал переходов вперед путем перехода к записи в журнале переходов назад путем вызова метода <xref:System.Windows.Navigation.NavigationService.GoBack%2A>. <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>и <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> сообщают, есть ли записи в журнале переходов назад и вперед соответственно. Кроме того, последнюю запись в журнале переходов назад можно удалить, вызвав <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>метод.  
  
 По умолчанию <xref:System.Windows.Navigation.NavigationService> не сохраняет экземпляр объекта содержимого в журнале переходов. Вместо этого <xref:System.Windows.Navigation.NavigationService> создает новый экземпляр объекта содержимого при каждом переходе к с помощью журнала навигации. Такое поведение предназначено для предотвращения чрезмерного потребления памяти при переходе к большим числам и большим фрагментам содержимого. Следовательно, состояние содержимого не запоминается при переходе к следующему. Однако WPF предоставляет несколько методов, с помощью которых можно хранить фрагмент содержимого в журнале переходов.  
  
 С <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>помощью можно также запомнить несколько наборов состояний для одного экземпляра страницы.  
  
 <xref:System.Windows.Navigation.NavigationService>является классом и поэтому не может быть создан. <xref:System.Windows.Navigation.NavigationService> вместо этого он используется навигаторами для включения навигации. `sealed` В WPF есть два навигатора: <xref:System.Windows.Navigation.NavigationWindow> и. <xref:System.Windows.Controls.Frame>  
  
 Визуально [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] используйте в качестве навигатора, чтобы обеспечить Интегрированное взаимодействие с пользователем. [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] Физически [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] , однако, используется <xref:System.Windows.Navigation.NavigationWindow> в <xref:System.Windows.Application.MainWindow%2A> качестве навигатора [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] ; свойство выполняемого в [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] возвращает ссылку <xref:System.Windows.Navigation.NavigationWindow>на, и журнал переходов, который управляется интегрирован с журналом навигации, который [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] управляется следующими способами: <xref:System.Windows.Navigation.NavigationWindow>  
  
-   При переходе к содержимому с помощью <xref:System.Windows.Navigation.NavigationService.Navigate%2A>вызова <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, и <xref:System.Windows.Navigation.NavigationService.GoForward%2A> из [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] соответствующих записей журнала навигации также добавляются в [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] журнал переходов.  
  
-   Если выбраны записи [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] в [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] области навигации, [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] происходит <xref:System.Windows.Navigation.NavigationService> переход назад или вперед к содержимому, связанному с этими записями.  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Frame> Может предоставить собственный журнал навигации или использовать журнал навигации навигатора, на котором размещается. Если <xref:System.Windows.Controls.Frame> предоставляет собственный журнал навигации, он может отображать собственную навигацию [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] для перемещения по записям в журнале навигации; эти записи не добавляются в журнал навигации главного навигатора (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame> [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] , [!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]) и, следовательно, невозможно перейти к переходу по каждой из них (см <xref:System.Windows.Controls.Frame.JournalOwnership%2A>.).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddBackEntry : System.Windows.Navigation.CustomContentState -&gt; unit" Usage="navigationService.AddBackEntry state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Windows.Navigation.CustomContentState" />, представляющий определенное приложением состояние, связанное с конкретным фрагментом содержимого.</param>
        <summary>Добавляет запись в журнал переходов назад, содержащий объект <see cref="T:System.Windows.Navigation.CustomContentState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, <xref:System.Windows.Navigation.CustomContentState> и<xref:System.Windows.Navigation.IProvideCustomContentState> используются для помощи в запоминании нескольких наборов состояний для текущего содержимого.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="state" /> содержит значение <see langword="null" />, и объект <see cref="T:System.Windows.Navigation.CustomContentState" /> не возвращается из <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, имеются ли записи в журнале переходов назад.</summary>
        <value><see langword="true" />, если в журнале переходов назад имеется хотя бы одна запись; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>для определения наличия хотя бы одной записи в журнале переходов назад. Это свойство должно быть проверено перед вызовом <xref:System.Windows.Navigation.NavigationService.GoBack%2A>; если <xref:System.Windows.Navigation.NavigationService.GoBack%2A> метод вызывается и в журнале переходов <xref:System.InvalidOperationException> назад нет записей, создается исключение.  
  
> [!NOTE]
>  Если журнал навигации совместно используется несколькими навигаторами (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), то последняя запись в журнале переходов назад может не быть добавлена <xref:System.Windows.Navigation.NavigationService> для текущего навигатора.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, имеются ли записи в журнале переходов вперед.</summary>
        <value><see langword="true" />, если в журнале переходов вперед имеется хотя бы одна запись; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>для определения наличия хотя бы одной записи в журнале переходов вперед. Это свойство должно быть проверено перед вызовом <xref:System.Windows.Navigation.NavigationService.GoForward%2A>; если <xref:System.Windows.Navigation.NavigationService.GoForward%2A> метод вызывается и в журнале переходов <xref:System.InvalidOperationException> вперед отсутствуют записи, создается исключение.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Navigation.NavigationService.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает указатель на объект с текущим содержимым.</summary>
        <value>Указатель на объект с текущим содержимым.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержимое может быть задано одним из двух способов:  
  
-   Непосредственно, задавая для него ссылку на объект.  
  
-   Косвенно, путем <xref:System.Windows.Navigation.NavigationService.Navigate%2A>вызова <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, или <xref:System.Windows.Navigation.NavigationService.GoForward%2A>.  
  
 Параметр <xref:System.Windows.Navigation.NavigationService> инициирует новую навигацию, так как переход выполняется асинхронно <xref:System.Windows.Navigation.NavigationService.Content%2A> , не возвращает значение, если оно проверяется сразу после установки.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSource : Uri" Usage="System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает универсальный код ресурса (URI) содержимого, к которому был осуществлен последний переход.</summary>
        <value>Для содержимого, к которому осуществлялось Последнее перемещение, при переходе к с помощью URI; <see langword="null" />в противном случае — значение. <see cref="T:System.Uri" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> свойства не изменяется до тех пор, пока переход на другой URI завершился успешно.  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>можно задать с помощью URI только для фрагмента.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberSignature Language="F#" Value="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " Usage="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда начинается переход к фрагменту содержимого, что происходит немедленно, если нужный фрагмент находится в текущем содержимом, или после загрузки исходного содержимого [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)], если нужный фрагмент находится в другом содержимом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию фрагмент содержимого — это содержимое, которое содержится в именованном <xref:System.Windows.UIElement>элементе, <xref:System.Windows.UIElement> атрибут которого <xref:System.Windows.FrameworkElement.Name%2A> задан, например:  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 Вы переходите к [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] фрагменту, указывая URI с суффиксом в следующем формате:  
  
 \#*фрагментнаме*  
  
 Ниже приведен пример URI, который ссылается на фрагмент содержимого:  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 После загрузки исходной страницы (после <xref:System.Windows.Navigation.NavigationService.LoadCompleted> возникновения события) начинается переход к фрагменту <xref:System.Windows.Navigation.NavigationService> и выполняется попытка поиска [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] фрагмента. Если фрагмент найден, <xref:System.Windows.Navigation.NavigationService> инструктирует навигатор содержимого (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), чтобы отобразить фрагмент. [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] Если необходимо изменить это поведение, можно выполнить обработку <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> , чтобы обеспечить собственный режим навигации по фрагментам. <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>передается <xref:System.Windows.Navigation.FragmentNavigationEventArgs> параметр, который предоставляет свойства, полезные для этой цели, в том числе:  
  
-   Навигатор, которому принадлежит эта служба навигации (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Имя фрагмента.  
  
 Можно выполнить обработку <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> , чтобы переопределить реализацию фрагмента WPF по умолчанию собственной пользовательской реализацией. В этом случае необходимо задать значение <xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> `true`; в противном случае применяется поведение обработки фрагментов WPF по умолчанию.  
  
 Следует избегать непосредственного инициирования навигации <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> в обработчике событий. Поскольку <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> вызывается во время существующей навигации, при инициации новой навигации <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> из обработчика событий создается вложенная <xref:System.ExecutionEngineException> Навигация, которая может вызвать исключение. Вместо этого можно косвенно инициировать навигацию, создав асинхронный рабочий элемент с <xref:System.Windows.Threading.Dispatcher>помощью.  
  
> [!NOTE]
>  При <xref:System.Windows.Navigation.NavigationService> вызове <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> <xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType> он<xref:System.Windows.Application> также создает событие для объекта.  
  
> [!IMPORTANT]
>  Навигация по фрагментам не поддерживается для [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] свободных страниц (файлы только [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] для разметки с `Page` корневым элементом) в следующих случаях:  
>   
>  • При переходе к фрагменту на свободной [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] странице.  
>   
>  • При переходе от свободной [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] страницы к фрагменту на другой свободной [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] странице.  
>   
>  Однако свободная [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] страница может переходить к собственным фрагментам.  
  
   
  
## Examples  
 В следующем примере показано, как выполнить <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> обработку для обеспечения поведения навигации пользовательской фрагмента. В этом случае в примере открывается страница ошибки [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] , если фрагмент кода на исходной [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] странице не найден.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNavigationService : System.Windows.DependencyObject -&gt; System.Windows.Navigation.NavigationService" Usage="System.Windows.Navigation.NavigationService.GetNavigationService dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><see cref="T:System.Windows.DependencyObject" /> в содержимом, размещенном в навигаторе.</param>
        <summary>Возвращает указатель на <see cref="T:System.Windows.Navigation.NavigationService" /> для навигатора, содержимое которого находится в заданном <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>Указатель на <see cref="T:System.Windows.Navigation.NavigationService" /> для навигатора, в содержимом которого есть указанный объект <see cref="T:System.Windows.DependencyObject" />; в некоторых случаях может быть <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Навигатор содержит объект, <xref:System.Windows.Navigation.NavigationService> который обрабатывает навигацию по содержимому. WPF имеет два навигатора: <xref:System.Windows.Navigation.NavigationWindow> и. <xref:System.Windows.Controls.Frame> Для обработки запросов навигации и управления временем существования навигации Навигатор использует службу навигации WPF, которая реализуется как <xref:System.Windows.Navigation.NavigationService> класс. Содержимое, размещенное в навигаторе, может получить ссылку на навигатор <xref:System.Windows.Navigation.NavigationService> , <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> вызвав метод.  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>Возвращает `null` ,`dependencyObject`когда:  
  
-   — Это <xref:System.Windows.Navigation.NavigationWindow>.  
  
-   Это то <xref:System.Windows.Controls.Frame> , что:  
  
    1.  Размещается в другом навигаторе.  
  
    2.  <xref:System.Windows.Controls.Frame.JournalOwnership%2A> Свойство имеет <xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>значение.  
  
-   Не является частью содержимого, размещенного в навигаторе.  
  
 WPF предлагает два сочетания клавиш для получения ссылки на <xref:System.Windows.Navigation.NavigationService>:  
  
-   Объект <xref:System.Windows.Navigation.NavigationService> , обрабатывающий навигацию с <xref:System.Windows.Controls.Page> объектом, <xref:System.Windows.Controls.Page> можно получить из самого себя, получая значение его <xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType> свойства.  
  
-   Объект <xref:System.Windows.Navigation.NavigationService> , используемый <xref:System.Windows.Controls.Frame> для навигации в Process, можно получить, <xref:System.Windows.Controls.Frame.NavigationService%2A> получая значение свойства.  
  
   
  
## Examples  
 В следующем примере показано, как <xref:System.Windows.Controls.UserControl> может получить службу навигации путем вызова. <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dependencyObject" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; unit" Usage="navigationService.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет переход к последней записи журнала переходов назад, если он содержит записи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед вызовом <xref:System.Windows.Navigation.NavigationService.GoBack%2A> <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> свойства можно проверить, чтобы определить, есть ли записи в журнале переходов назад.  
  
   
  
## Examples  
 В следующем примере выполняется переход к последней записи в журнале переходов назад, если она существует.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> вызывается, если в журнале переходов назад нет записей.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; unit" Usage="navigationService.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет переход к последней записи журнала переходов назад, если он содержит записи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед вызовом <xref:System.Windows.Navigation.NavigationService.GoForward%2A> <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> свойства можно проверить, чтобы определить наличие записей в журнале переходов вперед.  
  
   
  
## Examples  
 В следующем примере выполняется переход к самой последней записи в журнале прямой навигации, если она существует.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> вызван, когда в журнале переходов вперед нет ни одного элемента.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " Usage="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Генерируется, когда содержимое, к которому осуществлен переход, загружено, проанализировано и начинается его отрисовка.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы обрабатываете <xref:System.Windows.Navigation.NavigationService.LoadCompleted> , если вам нужно найти соответствующую информацию о запросе навигации после завершения загрузки. Эти сведения доступны из <xref:System.Windows.Navigation.NavigationEventArgs> объекта, который передается <xref:System.Windows.Navigation.NavigationService.LoadCompleted> в обработчик событий, и включает:  
  
-   Содержимое и его URI.  
  
-   Навигатор (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Дополнительные данные, если переход был инициирован с помощью вызова метода <xref:System.Windows.Navigation.NavigationService.Navigate%2A> или <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   Сведения об ответе ( <xref:System.Net.WebResponse> с использованием объекта).  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted>не вызывается, если не удается найти или загрузить исходную страницу, в этом случае <xref:System.Windows.Navigation.NavigationService.NavigationFailed> возникает исключение.  
  
> [!NOTE]
>  При <xref:System.Windows.Navigation.NavigationService> вызове <xref:System.Windows.Navigation.NavigationService.LoadCompleted> <xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType> он<xref:System.Windows.Application> также создает событие для объекта.  
  
   
  
## Examples  
 В следующем примере показано, как выполнить <xref:System.Windows.Navigation.NavigationService.LoadCompleted>обработку.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выполняет асинхронный переход к содержимому заданного источника.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj -&gt; bool" Usage="navigationService.Navigate root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">Объект с содержимым, к которому осуществляется переход.</param>
        <summary>Выполняет асинхронный переход к содержимому, которое находится в объекте.</summary>
        <returns><see langword="true" />, если переход не отменен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>перейдет к <xref:System.Object> указанному, `root` если выполняются следующие условия.  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> Событие не отменено.  
  
-   Можно создать веб-запрос <xref:System.Windows.Navigation.NavigationService.Navigating>(см.).  
  
 Если `root` параметр `null`имеет значение, то существующее<xref:System.Windows.Navigation.NavigationService.Content%2A>содержимое () удаляется.  
  
> [!NOTE]
>  При скачивании веб-содержимого может появиться веб-исключение (например, 404: Файл не найден). Эти исключения можно обрабатывали <xref:System.Windows.Navigation.NavigationService.NavigationFailed>из.  
  
   
  
## Examples  
 В следующем примере показано, как переходить к <xref:System.Windows.Controls.Page> объекту, содержащему дерево исходного содержимого.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; bool" Usage="navigationService.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">Объект <see cref="T:System.Uri" />, инициализированный с помощью URI для нужного содержимого.</param>
        <summary>Выполняет асинхронный переход к содержимому, идентифицируемому URI.</summary>
        <returns><see langword="true" />, если переход не отменен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `source` может быть веб- [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] кодом или допустимым URI типа "Pack" (см. раздел [Pack URI в WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>будет переходить к URI, указанному в, `source` если выполняются следующие условия.  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> Событие не отменено.  
  
-   Можно создать веб-запрос <xref:System.Windows.Navigation.NavigationService.Navigating>(см.).  
  
 Если `source` параметр `null`имеет значение, то существующее<xref:System.Windows.Navigation.NavigationService.Content%2A>содержимое () удаляется.  
  
> [!NOTE]
>  При скачивании веб-содержимого может появиться веб-исключение (например, 404: Файл не найден). Эти исключения можно обрабатывали <xref:System.Windows.Navigation.NavigationService.NavigationFailed>из.  
  
 Для перехода к <xref:System.Windows.Navigation.NavigationService.Navigate%2A> фрагменту содержимого можно использовать. Если содержимое, определяемое URI, является текущим, оно не загружается повторно.  
  
   
  
## Examples  
 В следующем примере показано, как переходить к URI.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj * obj -&gt; bool" Usage="navigationService.Navigate (root, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">Объект с содержимым, к которому осуществляется переход.</param>
        <param name="navigationState">Объект, содержащий данные для использования в процессе перехода.</param>
        <summary>Выполняет асинхронный переход к содержимому, которое находится в объекте, и передает объект с данными, предназначенными для использования в процессе перехода.</summary>
        <returns><see langword="true" />, если переход не отменен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод имеет то же поведение, <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>что и, хотя вместо URI передается объект.  
  
   
  
## Examples  
 В следующем примере показано, как перейти к <xref:System.Windows.Controls.Page> объекту, содержащему исходное содержимое, и передать состояние навигации.  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj -&gt; bool" Usage="navigationService.Navigate (source, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Объект <see cref="T:System.Uri" />, инициализированный с помощью URI для нужного содержимого.</param>
        <param name="navigationState">Объект, содержащий данные для использования в процессе перехода.</param>
        <summary>Выполняет асинхронный переход к содержимому источника с указанным URI и передает объект с данными, предназначенными для использования в процессе перехода.</summary>
        <returns><see langword="true" />, если переход не отменен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Так как переходы являются асинхронными, одновременно может выполняться несколько переходов. Например, если на одной странице есть два дочерних кадра, то можно перемещаться по обоим кадрам. В этом случае различные события навигации, вызванные <xref:System.Windows.Navigation.NavigationService> , могут вызываться несколько раз, по одному для каждого фрагмента содержимого, к которому осуществляется переход, и не обязательно в порядке, в котором были запрошены переходы. Следовательно, если определенный запрос навигации должен обрабатывать данные, относящиеся к отдельному запросу, он не может использовать данные, доступные для всех запросов навигации. Вместо этого можно использовать `navigationState` для передачи данных для обработки навигации, относящейся к одному запросу навигации.  
  
 Следующие аргументы события предоставляют доступ к состоянию навигации:  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A>(передается <xref:System.Windows.Navigation.NavigationService.Navigating> в событие).  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A>(передается <xref:System.Windows.Navigation.NavigationService.Navigated>обработчикам <xref:System.Windows.Navigation.NavigationService.LoadCompleted> событий, <xref:System.Windows.Navigation.NavigationService.NavigationStopped>,).  
  
   
  
## Examples  
 В следующем примере демонстрируется переход к URI и передача состояния навигации.  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj * bool -&gt; bool" Usage="navigationService.Navigate (source, navigationState, sandboxExternalContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">Объект <see cref="T:System.Uri" />, инициализированный с помощью URI для нужного содержимого.</param>
        <param name="navigationState">Объект, содержащий данные для использования в процессе перехода.</param>
        <param name="sandboxExternalContent">Если содержит значение <see langword="true" />, содержимое загружается в песочницу с частичным доверием (с разрешениями зоны Интернета по умолчанию). Значение по умолчанию — <see langword="false" />.</param>
        <summary>Выполняет асинхронный переход к содержимому источника с указанным URI, передает объект, содержащий состояние перехода для использования в процессе перехода, и выводит содержимое в песочнице.</summary>
        <returns><see langword="true" />, если переход не отменен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предназначен только для автономных приложений [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] и содержимого.  
  
 Этот метод действует так же, как <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>и, и расширяет его, гарантируя, что загружаемое содержимое помещается в песочницу безопасности с частичным доверием (с набором разрешений по умолчанию для зоны Интернета). см. раздел [Безопасность частичного доверия в WPF. ](~/docs/framework/wpf/wpf-partial-trust-security.md)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " Usage="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, когда содержимое, к которому осуществляется переход, найдено и доступно через свойство <see cref="P:System.Windows.Navigation.NavigationService.Content" />, хотя его загрузка, возможно, еще не завершена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы обрабатываете <xref:System.Windows.Navigation.NavigationService.Navigated> , если вам нужно найти соответствующую информацию о запросе навигации при скачивании. Эти сведения доступны из <xref:System.Windows.Navigation.NavigationEventArgs> объекта, который передается <xref:System.Windows.Navigation.NavigationService.Navigated> в обработчик событий, и включает:  
  
-   Исходная страница. Когда <xref:System.Windows.Navigation.NavigationService.Navigated> вызывается, по крайней мере часть [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] дерева исходной страницы была проанализирована и присоединена к целевому элементу управления содержимым.  
  
-   Запрошенный URI.  
  
-   Навигатор (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Дополнительные данные, если переход был инициирован с помощью вызова метода <xref:System.Windows.Navigation.NavigationService.Navigate%2A> или <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   Сведения об ответе ( <xref:System.Net.WebResponse> с использованием объекта).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated>не вызывается, если не удается найти или загрузить исходную страницу, в этом случае <xref:System.Windows.Navigation.NavigationService.NavigationFailed> возникает исключение.  
  
> [!NOTE]
>  При <xref:System.Windows.Navigation.NavigationService> вызове <xref:System.Windows.Navigation.NavigationService.NavigationFailed> <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType> он<xref:System.Windows.Application> также создает событие для объекта.  
  
   
  
## Examples  
 В следующем примере показано, как выполнить <xref:System.Windows.Navigation.NavigationService.Navigated>обработку.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " Usage="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Появляется, когда запрошен новый переход.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating>вызывается при запросе новой навигации, но перед запросом к исходному содержимому, в том числе:  
  
-   Вызывается метод <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A>или <xref:System.Windows.Navigation.NavigationService.GoForward%2A> вызывается (или выбирается запись из навигации [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]).  
  
-   Выполняется переход к фрагменту содержимого.  
  
 Вы выполняете обработку <xref:System.Windows.Navigation.NavigationService.Navigating> , если вам нужно найти соответствующую информацию о запросе навигации перед началом навигации. Эта информация доступна из <xref:System.Windows.Navigation.NavigatingCancelEventArgs> объекта, который передается <xref:System.Windows.Navigation.NavigationService.Navigating> в обработчик событий.  
  
 Объект для навигации создается и доступен <xref:System.Windows.Navigation.NavigatingCancelEventArgs> в параметре; поскольку на этом этапе фактический запрос не сделан, <xref:System.Net.WebRequest> при необходимости можно перенастроить объект. <xref:System.Net.WebRequest>  
  
 Вы также <xref:System.Windows.Navigation.NavigatingCancelEventArgs> можете отменять навигацию, если это необходимо <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> , установив значение true. При отмене навигации другие события навигации не вызываются.  
  
> [!NOTE]
>  Если приложение размещено в браузере, вы не сможете запретить пользователю переходить от приложения, <xref:System.Windows.Navigation.NavigationService.Navigating> отменив событие.  
  
 После перехода к первому фрагменту содержимого по навигатору (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) каждый фрагмент содержимого, к которому осуществляется переход из, добавляется в журнал переходов. Если необходимо сохранить сведения о состоянии содержимого, из которого вы переходите из, можно добавить состояние в запись журнала для этого содержимого, задав <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A> <xref:System.Windows.Navigation.CustomContentState> для объекта.  
  
> [!NOTE]
>  При <xref:System.Windows.Navigation.NavigationService> вызове <xref:System.Windows.Navigation.NavigationService.Navigating> <xref:System.Windows.Application.Navigating?displayProperty=nameWithType> он<xref:System.Windows.Application> также создает событие для объекта.  
  
   
  
## Examples  
 В следующем примере показано, как выполнить <xref:System.Windows.Navigation.NavigationService.Navigating> обработку запроса на обновление статического содержимого и, если это так, отменить запрос.  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationFailed As NavigationFailedEventHandler " FrameworkAlternate="netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberSignature Language="F#" Value="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " Usage="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Генерируется, когда происходит ошибка при переходе к запрошенному содержимому.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении исключения <xref:System.IO.IOException> <xref:System.Windows.Navigation.NavigationService.NavigationFailed>иливо время навигации возникает событие. <xref:System.Net.WebException> <xref:System.Windows.Navigation.NavigationService.NavigationFailed>передается <xref:System.Windows.Navigation.NavigationFailedEventArgs> объект, инкапсулирующий сведения об исключении и сведения о переходе, вызвавшем исключение.  
  
 Если исключение возникает из-за неудачной навигации и не обрабатывается, в указанном порядке выдаются следующие события:  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType> или <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>.  
  
 Если навигатор (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) размещается в одном или нескольких навигаторах, `NavigationFailed` он не вызывается ни для одного из них.  
  
   
  
## Examples  
 В следующем примере показано, как выполнить <xref:System.Windows.Navigation.NavigationService.NavigationFailed>обработку.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberSignature Language="F#" Value="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " Usage="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит периодически во время загрузки, тем самым предоставляя информацию о ходе процесса навигации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress>передается <xref:System.Windows.Navigation.NavigationProgressEventArgs> , который предоставляет следующие сведения о ходе выполнения:  
  
-   Число байтов, скачанных на данный<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>момент ().  
  
-   Общее число байтов для скачивания (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>).  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress>вызывается один раз для каждых 1024 байт содержимого и, если число оставшихся байт меньше 1024 байт. По этой причине обработка <xref:System.Windows.Navigation.NavigationService.NavigationProgress> предоставляет удобный способ отслеживания и просмотра хода выполнения текущего скачивания.  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress>не будет вызываться в некоторых случаях, например при переходе к тому же фрагменту содержимого или при переходе фрагмента содержимого к содержимому, которое в данный момент загружено (то есть значение <xref:System.Windows.Navigation.NavigationService.Content%2A> свойства).  
  
 При переходе к скомпилированному XAML-ресурсу Последнее <xref:System.Windows.Navigation.NavigationService.NavigationProgress> событие может не возникнуть. Это означает, что в конце загрузки Последнее сообщаемое <xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> значение может не совпадать со <xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A> значением. Обработайте <xref:System.Windows.Navigation.NavigationService.LoadCompleted> событие, чтобы получать уведомления о завершении навигации.  
  
> [!NOTE]
>  При <xref:System.Windows.Navigation.NavigationService> вызове <xref:System.Windows.Navigation.NavigationService.NavigationProgress> <xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType> он<xref:System.Windows.Application> также создает событие для объекта.  
  
   
  
## Examples  
 В следующем примере показано, как выполнить <xref:System.Windows.Navigation.NavigationService.NavigationProgress>обработку.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberSignature Language="F#" Value="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " Usage="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Генерируется, когда вызван метод <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> или во время выполнения текущего перехода запрошен новый переход.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы обрабатываете <xref:System.Windows.Navigation.NavigationService.NavigationStopped> , если вам нужно найти соответствующую информацию о запросе навигации при остановке загрузки. Эти сведения доступны из <xref:System.Windows.Navigation.NavigationEventArgs> объекта, который передается <xref:System.Windows.Navigation.NavigationService.NavigationStopped> в обработчик событий, и включает:  
  
-   Запрошенный URI.  
  
-   Навигатор (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Дополнительные данные, если переход был инициирован с помощью вызова метода <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType> или <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  При <xref:System.Windows.Navigation.NavigationService> вызове <xref:System.Windows.Navigation.NavigationService.NavigationStopped> <xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType> он<xref:System.Windows.Application> также создает событие для объекта.  
  
   
  
## Examples  
 В следующем примере показано, как выполнить <xref:System.Windows.Navigation.NavigationService.NavigationStopped>обработку.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="navigationService.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Заново загружает текущее содержимое.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если текущее содержимое (заданное значением <xref:System.Windows.Navigation.NavigationService.Source%2A> свойства) переходит к другому, <xref:System.Windows.Navigation.NavigationService> не скачивает содержимое повторно. Чтобы принудительно <xref:System.Windows.Navigation.NavigationService> выполнить повторное переход к содержимому, <xref:System.Windows.Navigation.NavigationService.Refresh%2A>вызовите.  
  
 Обратите внимание, что при повторном переходе к текущему содержимому <xref:System.Windows.Navigation.NavigationService.Navigate%2A> путем <xref:System.Windows.Navigation.NavigationService.Refresh%2A>вызова или новая запись не добавляется в журнал переходов.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberSignature Language="F#" Value="member this.RemoveBackEntry : unit -&gt; System.Windows.Navigation.JournalEntry" Usage="navigationService.RemoveBackEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет последнюю запись из журнала переходов назад.</summary>
        <returns>Последняя запись <see cref="T:System.Windows.Navigation.JournalEntry" /> журнала переходов назад, если в нем имеются записи.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если два или несколько навигаторов (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) совместно используют один и тот же журнал навигации, можно <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A> воспользоваться одним навигатором для получения записи журнала переходов назад для навигации, которая выполнялась в другом навигаторе.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.NavigationService.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает URI текущего содержимого или URI нового содержимого, к которому осуществляется переход.</summary>
        <value>Значение <see cref="T:System.Uri" /> типа, содержащее универсальный код ресурса (URI) для текущего содержимого или содержимое, к которому в данный момент осуществляется переход.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если для этого свойства задан другой URI, отличный от отображаемого в данный момент, навигатор (,<xref:System.Windows.Navigation.NavigationWindow> <xref:System.Windows.Controls.Frame>) переходит по указанному универсальному коду ресурса (URI).  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A>задается содержимое, которое загружается из URI, к которому осуществляется переход, если навигация не отменена.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A>можно задать с помощью URI только для `null`фрагмента, а также задать значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberSignature Language="F#" Value="member this.StopLoading : unit -&gt; unit" Usage="navigationService.StopLoading " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Останавливает дальнейшую загрузку содержимого для текущего запроса перехода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A>метод можно вызвать сразу же после <xref:System.Windows.Navigation.NavigationService.Navigate%2A> возврата и остановить навигацию, которая выполняется в дочерних кадрах.  
  
 (<xref:System.Windows.Controls.Frame>).  
  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> Вызов метода<xref:System.Windows.Navigation.NavigationService.NavigationStopped> вызывает событие.  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A>должен вызываться в том же потоке, который инициировал навигацию.  
  
   
  
## Examples  
 В следующем примере показано, как прерывать загрузку.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>
