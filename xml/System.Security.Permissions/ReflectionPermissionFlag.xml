<Type Name="ReflectionPermissionFlag" FullName="System.Security.Permissions.ReflectionPermissionFlag">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02892f031001e1c987bf04e7a87edb7430f29f8b" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75071980" /></Metadata><TypeSignature Language="C#" Value="public enum ReflectionPermissionFlag" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ReflectionPermissionFlag extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ReflectionPermissionFlag" />
  <TypeSignature Language="VB.NET" Value="Public Enum ReflectionPermissionFlag" />
  <TypeSignature Language="C++ CLI" Value="public enum class ReflectionPermissionFlag" />
  <TypeSignature Language="F#" Value="type ReflectionPermissionFlag = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fb7d8-101">Определяет допустимое использование значения <see cref="N:System.Reflection" /> и пространства имен <see cref="N:System.Reflection.Emit" />.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-101">Specifies the permitted use of the <see cref="N:System.Reflection" /> and <see cref="N:System.Reflection.Emit" /> namespaces.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb7d8-102">Это перечисление используется классами <xref:System.Security.Permissions.ReflectionPermission> и <xref:System.Security.Permissions.ReflectionPermissionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-102">This enumeration is used by the <xref:System.Security.Permissions.ReflectionPermission> and <xref:System.Security.Permissions.ReflectionPermissionAttribute> classes.</span></span> <span data-ttu-id="fb7d8-103">Если <xref:System.Security.Permissions.ReflectionPermission> не предоставлено, отражение разрешено для всех типов и членов, но операции вызова разрешены только для видимых типов и членов.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-103">If no <xref:System.Security.Permissions.ReflectionPermission> is granted, reflection is allowed on all types and members, but invocation operations are allowed only on visible types and members.</span></span> <span data-ttu-id="fb7d8-104">Дополнительные сведения см. в разделе [Соображения о безопасности для отражения](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span><span class="sxs-lookup"><span data-stu-id="fb7d8-104">For more information, see [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fb7d8-105">Поскольку <xref:System.Security.Permissions.ReflectionPermission> может предоставлять доступ к членам закрытого класса, рекомендуется предоставлять <xref:System.Security.Permissions.ReflectionPermission> в Интернете только с флагом `RestrictedMemberAccess`, а не с другими флагами.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-105">Because <xref:System.Security.Permissions.ReflectionPermission> can provide access to private class members, we recommend that you grant <xref:System.Security.Permissions.ReflectionPermission> to Internet code only with the `RestrictedMemberAccess` flag, and not with any other flags.</span></span>  
  
 <span data-ttu-id="fb7d8-106">В `RestrictedMemberAccess` появился флаг [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="fb7d8-106">The `RestrictedMemberAccess` flag is introduced in the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</span></span> <span data-ttu-id="fb7d8-107">Чтобы использовать этот флаг, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-107">To use this flag, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fb7d8-108">`AllFlags` не включает флаг `RestrictedMemberAccess`.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-108">`AllFlags` does not include the `RestrictedMemberAccess` flag.</span></span> <span data-ttu-id="fb7d8-109">Чтобы получить маску, включающую все флаги в этом перечислении, необходимо использовать сочетание `AllFlags` с `RestrictedMemberAccess`.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-109">To get a mask that includes all flags in this enumeration, you must use the combination of `AllFlags` with `RestrictedMemberAccess`.</span></span>  
  
 <span data-ttu-id="fb7d8-110">Начиная с [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]флаг `ReflectionEmit` больше не требуется для выдачи кода, если отладочные символы не создаются.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-110">Starting with the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], the `ReflectionEmit` flag is no longer required to emit code, unless debug symbols are emitted.</span></span> <span data-ttu-id="fb7d8-111">Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-111">To use this feature, your application should target the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] or later.</span></span>  
  
 <span data-ttu-id="fb7d8-112">Начиная с [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]флаг `TypeInformation` больше не требуется для отражения неоткрытых типов и членов. флаг помечен как устаревший.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-112">Starting with the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the `TypeInformation` flag is no longer required to reflect on nonpublic types and members; the flag has been marked obsolete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb7d8-113">В следующем примере показано, как использовать перечисление `ReflectionPermissionFlag` для инициализации нового экземпляра класса <xref:System.Security.Permissions.ReflectionPermission>, который представляет право для выполнения ограниченного доступа к членам.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-113">The following example shows how to use the `ReflectionPermissionFlag` enumeration to initialize a new instance of the <xref:System.Security.Permissions.ReflectionPermission> class that represents the right to perform restricted member access.</span></span> <span data-ttu-id="fb7d8-114">Этот пример является частью более крупного примера, предоставляемого для класса <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-114">This example is part of a larger example that is provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 <span data-ttu-id="fb7d8-115">Пример использования флага Рестриктедмемберакцесс с кодом Интернета см. [в разделе Пошаговое руководство. эмиссия кода в сценариях с частичным доверием](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md).</span><span class="sxs-lookup"><span data-stu-id="fb7d8-115">For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see [Walkthrough: Emitting Code in Partial Trust Scenarios](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md).</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />
    <related type="Article" href="~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md"><span data-ttu-id="fb7d8-116">Соображения о безопасности для отражения</span><span class="sxs-lookup"><span data-stu-id="fb7d8-116">Security Considerations for Reflection</span></span></related>
    <related type="Article" href="~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md"><span data-ttu-id="fb7d8-117">Вопросы безопасности в порождаемом отражении</span><span class="sxs-lookup"><span data-stu-id="fb7d8-117">Security Issues in Reflection Emit</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AllFlags">
      <MemberSignature Language="C#" Value="AllFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag AllFlags = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" />
      <MemberSignature Language="VB.NET" Value="AllFlags" />
      <MemberSignature Language="C++ CLI" Value="AllFlags" />
      <MemberSignature Language="F#" Value="AllFlags = 7" Usage="System.Security.Permissions.ReflectionPermissionFlag.AllFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("This permission has been deprecated. Use PermissionState.Unrestricted to get full access.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fb7d8-118">Заданы флаги <see langword="TypeInformation" />, <see langword="MemberAccess" /> и <see langword="ReflectionEmit" />.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-118"><see langword="TypeInformation" /> , <see langword="MemberAccess" />, and <see langword="ReflectionEmit" /> are set.</span></span> <span data-ttu-id="fb7d8-119">Значение <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> не включает флаг <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-119"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> does not include <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MemberAccess">
      <MemberSignature Language="C#" Value="MemberAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag MemberAccess = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />
      <MemberSignature Language="VB.NET" Value="MemberAccess" />
      <MemberSignature Language="C++ CLI" Value="MemberAccess" />
      <MemberSignature Language="F#" Value="MemberAccess = 2" Usage="System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fb7d8-120">Допустимы операции вызова на все элементы, независимо от набора привилегий.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-120">Invocation operations on all members are allowed, regardless of grant set.</span></span> <span data-ttu-id="fb7d8-121">Если этот флаг не установлен, операции вызова допустимы только на видимые элементы.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-121">If this flag is not set, invocation operations are allowed only on visible members.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoFlags">
      <MemberSignature Language="C#" Value="NoFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag NoFlags = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />
      <MemberSignature Language="VB.NET" Value="NoFlags" />
      <MemberSignature Language="C++ CLI" Value="NoFlags" />
      <MemberSignature Language="F#" Value="NoFlags = 0" Usage="System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fb7d8-122">Допускается перечисление типов и элементов.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-122">Enumeration of types and members is allowed.</span></span> <span data-ttu-id="fb7d8-123">Операции вызова допустимы только на видимые элементы.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-123">Invocation operations are allowed on visible types and members.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReflectionEmit">
      <MemberSignature Language="C#" Value="ReflectionEmit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag ReflectionEmit = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit" />
      <MemberSignature Language="VB.NET" Value="ReflectionEmit" />
      <MemberSignature Language="C++ CLI" Value="ReflectionEmit" />
      <MemberSignature Language="F#" Value="ReflectionEmit = 4" Usage="System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("This permission is no longer used by the CLR.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fb7d8-124">Разрешено генерирование символов отладки.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-124">Emitting debug symbols is allowed.</span></span> <span data-ttu-id="fb7d8-125">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот флаг больше не требуется для генерирования кода.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-125">Beginning with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this flag is no longer required to emit code.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RestrictedMemberAccess">
      <MemberSignature Language="C#" Value="RestrictedMemberAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag RestrictedMemberAccess = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />
      <MemberSignature Language="VB.NET" Value="RestrictedMemberAccess" />
      <MemberSignature Language="C++ CLI" Value="RestrictedMemberAccess" />
      <MemberSignature Language="F#" Value="RestrictedMemberAccess = 8" Usage="System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fb7d8-126">Для кода с неполным доверием предусмотрен ограниченный доступ к элементам.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-126">Restricted member access is provided for partially trusted code.</span></span> <span data-ttu-id="fb7d8-127">Код с неполным доверием может допускать неоткрытые типы и элементы, но только в том случае, если набор привилегий кода с неполным доверием включает все разрешения в наборе привилегий сборки, содержащей неоткрытые типы и элементы, к которым выполняется обращение.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-127">Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed.</span></span> <span data-ttu-id="fb7d8-128">Этот флаг является новым в [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="fb7d8-128">This flag is new in the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="TypeInformation">
      <MemberSignature Language="C#" Value="TypeInformation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag TypeInformation = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />
      <MemberSignature Language="VB.NET" Value="TypeInformation" />
      <MemberSignature Language="C++ CLI" Value="TypeInformation" />
      <MemberSignature Language="F#" Value="TypeInformation = 1" Usage="System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("not used anymore")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("This API has been deprecated. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API has been deprecated. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fb7d8-129">Этот флаг устарел.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-129">This flag is obsolete.</span></span> <span data-ttu-id="fb7d8-130">Чтобы перечислять типы и элементы и исследовать их метаданные, флаги не нужны.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-130">No flags are necessary to enumerate types and members and to examine their metadata.</span></span> <span data-ttu-id="fb7d8-131">Взамен рекомендуется использовать <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />.</span><span class="sxs-lookup"><span data-stu-id="fb7d8-131">Use <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /> instead.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
