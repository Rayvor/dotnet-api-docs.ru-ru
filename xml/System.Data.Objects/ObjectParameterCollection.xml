<Type Name="ObjectParameterCollection" FullName="System.Data.Objects.ObjectParameterCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="702cc13d11cebbadef10e0d0c7b69dfd73a91dff" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70596825" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectParameterCollection : System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;, System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameterCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameterCollection&#xA;Implements ICollection(Of ObjectParameter), IEnumerable(Of ObjectParameter)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameterCollection sealed : System::Collections::Generic::ICollection&lt;System::Data::Objects::ObjectParameter ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;" />
  <TypeSignature Language="F#" Value="type ObjectParameterCollection = class&#xA;    interface ICollection&lt;ObjectParameter&gt;&#xA;    interface seq&lt;ObjectParameter&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c4b58-101">Представляет параметры запроса в виде объектов <see cref="T:System.Data.Objects.ObjectParameter" />, определенных в <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-101">Represents the query parameters as <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are defined in an <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b58-102">Представляет параметры запроса в виде объектов <xref:System.Data.Objects.ObjectParameter>, определенных в <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="c4b58-102">Represents the query parameters as <xref:System.Data.Objects.ObjectParameter> objects defined in an <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="c4b58-103">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="c4b58-103">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="c4b58-104">Параметры, передаваемые методам построителя запроса, проходят статистическую обработку в следующих экземплярах <xref:System.Data.Objects.ObjectQuery%601> в последовательности.</span><span class="sxs-lookup"><span data-stu-id="c4b58-104">The parameters that are passed to query builder methods are aggregated by successive instances of an <xref:System.Data.Objects.ObjectQuery%601> in the sequence.</span></span> <span data-ttu-id="c4b58-105">Доступ к ним можно получить с помощью свойства <xref:System.Data.Objects.ObjectQuery.Parameters%2A>, которое возвращает коллекцию <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="c4b58-105">They can be accessed by using the <xref:System.Data.Objects.ObjectQuery.Parameters%2A> property, which returns the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="c4b58-106">После добавления параметров их можно удалить из коллекции и очистить коллекцию до того, как запрос будет скомпилирован или выполнен.</span><span class="sxs-lookup"><span data-stu-id="c4b58-106">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="c4b58-107">Имена параметров изменить нельзя, но значения можно изменить в любое время.</span><span class="sxs-lookup"><span data-stu-id="c4b58-107">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="c4b58-108">Параметры в коллекции <xref:System.Data.Objects.ObjectParameterCollection> должны быть уникальными.</span><span class="sxs-lookup"><span data-stu-id="c4b58-108">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="c4b58-109">Коллекция не может содержать два параметра с одинаковыми именами.</span><span class="sxs-lookup"><span data-stu-id="c4b58-109">There cannot be two parameters in the collection with the same name.</span></span>  
  
 <span data-ttu-id="c4b58-110">Если используется методы с композицией, такие как <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> и <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, выполняется слияние параметров.</span><span class="sxs-lookup"><span data-stu-id="c4b58-110">When using composition methods, such as <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> and <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, the parameters are merged.</span></span> <span data-ttu-id="c4b58-111">Если наборы параметров несовместимы или неполны, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="c4b58-111">An exception is thrown when the sets of parameters are incompatible or incomplete.</span></span> <span data-ttu-id="c4b58-112">Дополнительные сведения см. в разделе [методы конструктор запросов](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="c4b58-112">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b58-113">Пример в этом разделе основан на [модели AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="c4b58-113">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="c4b58-114">В примере добавляются новые параметры в коллекцию и возвращается число параметров в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-114">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="c4b58-115">Затем выполняется проход по коллекции <xref:System.Data.Objects.ObjectParameterCollection> и выводится имя, тип и значение каждого параметра в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-115">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="c4b58-116">Запрос данных в виде объектов и формирование результатов (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="c4b58-116">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (parameter As ObjectParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Data.Objects.ObjectParameter -&gt; unit&#xA;override this.Add : System.Data.Objects.ObjectParameter -&gt; unit" Usage="objectParameterCollection.Add parameter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="c4b58-117">Параметр для добавления в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="c4b58-117">The parameter to add to the collection.</span></span></param>
        <summary><span data-ttu-id="c4b58-118">Добавляет указанный параметр <see cref="T:System.Data.Objects.ObjectParameter" /> в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="c4b58-118">Adds the specified <see cref="T:System.Data.Objects.ObjectParameter" /> to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b58-119">После добавления параметров их можно удалить из коллекции и очистить коллекцию до того, как запрос будет скомпилирован или выполнен.</span><span class="sxs-lookup"><span data-stu-id="c4b58-119">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="c4b58-120">Имена параметров изменить нельзя, но значения можно изменить в любое время.</span><span class="sxs-lookup"><span data-stu-id="c4b58-120">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="c4b58-121">Параметры в коллекции <xref:System.Data.Objects.ObjectParameterCollection> должны быть уникальными.</span><span class="sxs-lookup"><span data-stu-id="c4b58-121">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="c4b58-122">Коллекция не может содержать два параметра с одинаковыми именами.</span><span class="sxs-lookup"><span data-stu-id="c4b58-122">There cannot be two parameters in the collection with the same name.</span></span> <span data-ttu-id="c4b58-123">Дополнительные сведения см. в разделе [методы конструктор запросов](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="c4b58-123">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b58-124">Пример в этом разделе основан на [модели AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="c4b58-124">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="c4b58-125">В примере добавляются новые параметры в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="c4b58-125">The example adds new parameters to the collection.</span></span> <span data-ttu-id="c4b58-126">Он проходит по коллекции <xref:System.Data.Objects.ObjectParameterCollection> и отображает имя, тип и значение каждого параметра в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-126">It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b58-127">Аргумент <paramref name="parameter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-127">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4b58-128">Аргумент <paramref name="parameter" /> уже присутствует в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-128">The <paramref name="parameter" /> argument already exists in the collection.</span></span> <span data-ttu-id="c4b58-129">Это условие отличается от большинства коллекций, в которых допускаются повторяющиеся записи.</span><span class="sxs-lookup"><span data-stu-id="c4b58-129">This behavior differs from that of most collections that allow duplicate entries.</span></span>  
  
<span data-ttu-id="c4b58-130">-или-</span><span class="sxs-lookup"><span data-stu-id="c4b58-130">-or-</span></span> 
<span data-ttu-id="c4b58-131">В коллекции уже присутствует другой параметр с тем же именем, что и у аргумента <paramref name="parameter" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-131">Another parameter with the same name as the <paramref name="parameter" /> argument already exists in the collection.</span></span> <span data-ttu-id="c4b58-132">Учтите, что в поиске не учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="c4b58-132">Note that the lookup is case-insensitive.</span></span> <span data-ttu-id="c4b58-133">Это условие отличается от большинства коллекции и близко к правилам словаря <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-133">This behavior differs from that of most collections, and is more like that of a <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b58-134">Недопустимый тип <paramref name="parameter" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-134">The type of the <paramref name="parameter" /> is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="c4b58-135">Запрос данных в виде объектов и формирование результатов (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="c4b58-135">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="objectParameterCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4b58-136">Удаляет все экземпляры <see cref="T:System.Data.Objects.ObjectParameter" /> из коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-136">Deletes all <see cref="T:System.Data.Objects.ObjectParameter" /> instances from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4b58-137">Проверяет наличие указанного параметра <see cref="T:System.Data.Objects.ObjectParameter" /> в коллекции по ссылке.</span><span class="sxs-lookup"><span data-stu-id="c4b58-137">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Data.Objects.ObjectParameter -&gt; bool&#xA;override this.Contains : System.Data.Objects.ObjectParameter -&gt; bool" Usage="objectParameterCollection.Contains parameter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="c4b58-138">Объект <see cref="T:System.Data.Objects.ObjectParameter" />, который нужно найти в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-138">The <see cref="T:System.Data.Objects.ObjectParameter" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="c4b58-139">Проверяет наличие указанного параметра <see cref="T:System.Data.Objects.ObjectParameter" /> в коллекции по ссылке.</span><span class="sxs-lookup"><span data-stu-id="c4b58-139">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span></span></summary>
        <returns><span data-ttu-id="c4b58-140">Значение <see langword="true" />, если объект параметра найден в коллекции; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-140"><see langword="true" /> if the parameter object was found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b58-141">Эта проверка основана на ссылке.</span><span class="sxs-lookup"><span data-stu-id="c4b58-141">This is a reference-based check.</span></span> <span data-ttu-id="c4b58-142">Это значит, что если <xref:System.Data.Objects.ObjectParameter> указан параметр, который содержит то же имя, что и объект параметра в коллекции, этот метод вернет `true` , только если это тот же объект.</span><span class="sxs-lookup"><span data-stu-id="c4b58-142">That is, if an <xref:System.Data.Objects.ObjectParameter> is specified that contains the same name as a parameter object in the collection, this method will only return `true` if it is the same object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b58-143">Аргумент <paramref name="parameter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-143">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="objectParameterCollection.Contains name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c4b58-144">Имя параметра, который необходимо найти в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-144">The name of the parameter to look for in the collection.</span></span> <span data-ttu-id="c4b58-145">Это имя не должно содержать маркер параметра "\@", используемый для инструкций Entity SQL, а только фактическое имя.</span><span class="sxs-lookup"><span data-stu-id="c4b58-145">This name should not include the "\@" parameter marker that is used in the Entity SQL statements, only the actual name.</span></span></param>
        <summary><span data-ttu-id="c4b58-146">Определяет, присутствует ли в коллекции объект <see cref="T:System.Data.Objects.ObjectParameter" /> с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="c4b58-146">Determines whether an <see cref="T:System.Data.Objects.ObjectParameter" /> with the specified name is in the collection.</span></span></summary>
        <returns><span data-ttu-id="c4b58-147">Значение <see langword="true" />, если параметр с указанным именем найден в коллекции; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-147"><see langword="true" /> if a parameter with the specified name was found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4b58-148">Пример в этом разделе основан на [модели AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="c4b58-148">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="c4b58-149">В примере используется метод <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A>, чтобы определить, находится ли указанный параметр в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-149">The example uses the <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> method to determine whether the specified parameter is in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_stringarg)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_stringarg)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b58-150">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-150">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Objects.ObjectParameter[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Data.Objects.ObjectParameter[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ObjectParameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Data.Objects.ObjectParameter[] * int -&gt; unit&#xA;override this.CopyTo : System.Data.Objects.ObjectParameter[] * int -&gt; unit" Usage="objectParameterCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Objects.ObjectParameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c4b58-151">Массив, в который копируются параметры.</span><span class="sxs-lookup"><span data-stu-id="c4b58-151">The array into which to copy the parameters.</span></span></param>
        <param name="index"><span data-ttu-id="c4b58-152">Индекс в массиве, с которого начинается копирование параметров.</span><span class="sxs-lookup"><span data-stu-id="c4b58-152">The index in the array at which to start copying the parameters.</span></span></param>
        <summary><span data-ttu-id="c4b58-153">Позволяет копировать параметры коллекции в указанный массив, начиная с объекта по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="c4b58-153">Allows the parameters in the collection to be copied into a supplied array, starting with the object at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4b58-154">Пример в этом разделе основан на [модели AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="c4b58-154">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="c4b58-155">В примере параметры копируются в указанный массив.</span><span class="sxs-lookup"><span data-stu-id="c4b58-155">The example copies the parameters into the specified array.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_copyto)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_copyto)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4b58-156">Возвращает число параметров, находящихся в коллекции в данный момент.</span><span class="sxs-lookup"><span data-stu-id="c4b58-156">Gets the number of parameters currently in the collection.</span></span></summary>
        <value><span data-ttu-id="c4b58-157">Число объектов <see cref="T:System.Data.Objects.ObjectParameter" />, находящихся в коллекции в данный момент.</span><span class="sxs-lookup"><span data-stu-id="c4b58-157">The number of <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are currently in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4b58-158">Пример в этом разделе основан на [модели AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="c4b58-158">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="c4b58-159">В примере добавляются новые параметры в коллекцию и возвращается число параметров в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-159">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="c4b58-160">Затем выполняется проход по коллекции <xref:System.Data.Objects.ObjectParameterCollection> и выводится имя, тип и значение каждого параметра в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-160">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="c4b58-161">Запрос данных в виде объектов и формирование результатов (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="c4b58-161">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameter this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As ObjectParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameter ^ default[System::String ^] { System::Data::Objects::ObjectParameter ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Data.Objects.ObjectParameter" Usage="System.Data.Objects.ObjectParameterCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c4b58-162">Имя искомого параметра.</span><span class="sxs-lookup"><span data-stu-id="c4b58-162">The name of the parameter to find.</span></span> <span data-ttu-id="c4b58-163">Это имя не должно содержать маркер параметра "\@", используемый для инструкций Entity SQL, а только фактическое имя.</span><span class="sxs-lookup"><span data-stu-id="c4b58-163">This name should not include the "\@" parameter marker that is used in the Entity SQL statements, only the actual name.</span></span></param>
        <summary><span data-ttu-id="c4b58-164">Представляет индексатор, который позволяет вызывающим методам получать параметры по имени.</span><span class="sxs-lookup"><span data-stu-id="c4b58-164">Provides an indexer that allows callers to retrieve parameters by name.</span></span></summary>
        <value><span data-ttu-id="c4b58-165">Экземпляр класса <see cref="T:System.Data.Objects.ObjectParameter" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-165">The <see cref="T:System.Data.Objects.ObjectParameter" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b58-166">В коллекции не найден параметр с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="c4b58-166">No parameter with the specified name is found in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Data.Objects.ObjectParameter -&gt; bool&#xA;override this.Remove : System.Data.Objects.ObjectParameter -&gt; bool" Usage="objectParameterCollection.Remove parameter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="c4b58-167">Объект, который должен быть удален из коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-167">An object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="c4b58-168">Удаляет экземпляр <see cref="T:System.Data.Objects.ObjectParameter" /> из коллекции по ссылке, если он существует в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-168">Removes an instance of an <see cref="T:System.Data.Objects.ObjectParameter" /> from the collection by reference if it exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="c4b58-169">Значение <see langword="true" />, если объект параметра найден и удален из коллекции; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-169"><see langword="true" /> if the parameter object was found and removed from the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b58-170">Это сравнение основано на ссылке.</span><span class="sxs-lookup"><span data-stu-id="c4b58-170">This is a reference-based comparison.</span></span> <span data-ttu-id="c4b58-171">Поэтому если указан объект-параметр запроса, содержащий то же имя, что объект-параметр в коллекции, то параметр в коллекции будет удален только в случае, если это тот же самый объект.</span><span class="sxs-lookup"><span data-stu-id="c4b58-171">That is, if a query parameter object is specified that contains the same name as a parameter object in the collection, the parameter in the collection will only be removed if it is the same object.</span></span> <span data-ttu-id="c4b58-172">Чтобы удалить объект по имени, сначала получите экземпляр параметра, используя индексатор, а затем удалите объект с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="c4b58-172">To remove an object by name, first use the indexer to retrieve the parameter instance, then remove it by using this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b58-173">Пример в этом разделе основан на [модели AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="c4b58-173">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="c4b58-174">В примере в коллекцию добавляются два параметра, а потом параметры удаляются.</span><span class="sxs-lookup"><span data-stu-id="c4b58-174">The example adds two parameters to the collection and then removes the parameters.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_remove)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_remove)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b58-175">Аргумент <paramref name="parameter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-175">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection&lt;System#Data#Objects#ObjectParameter&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of ObjectParameter).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Data::Objects::ObjectParameter&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4b58-176">Возвращает значение, которое определяет, является ли коллекция доступной только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c4b58-176">Gets a value that indicates whether the collection is read-only or can be modified.</span></span></summary>
        <value><span data-ttu-id="c4b58-177">Логическое значение <see langword="true" />, если коллекция доступна только для чтения; если коллекцию можно изменять — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-177">A Boolean value that is <see langword="true" /> if the collection is read-only and <see langword="false" /> of the collection can be modified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b58-178">Эта коллекция всегда доступна для чтения и записи. Параметры можно добавлять, удалять и изменять.</span><span class="sxs-lookup"><span data-stu-id="c4b58-178">This collection is always read/write; parameters can be added, removed, and modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt; IEnumerable&lt;ObjectParameter&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Data.Objects.ObjectParameter&gt; System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable&lt;System#Data#Objects#ObjectParameter&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ObjectParameter) Implements IEnumerable(Of ObjectParameter).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Data::Objects::ObjectParameter ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4b58-179">Возвращает типизированный перечислитель по коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-179">Returns a typed enumerator over the collection.</span></span></summary>
        <returns><span data-ttu-id="c4b58-180">Интерфейс <see cref="T:System.Collections.Generic.IEnumerator`1" /> типа <see cref="T:System.Data.Objects.ObjectParameter" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-180">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Data.Objects.ObjectParameter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b58-181">Возвращает экземпляр <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="c4b58-181">Returns an <xref:System.Collections.Generic.IEnumerator%601> instance.</span></span> <span data-ttu-id="c4b58-182">Это позволяет проходить по всей коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-182">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4b58-183">Возвращает нетипизированный перечислитель по коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-183">Returns an untyped enumerator over the collection.</span></span></summary>
        <returns><span data-ttu-id="c4b58-184">Экземпляр <see cref="T:System.Collections.IEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="c4b58-184">An <see cref="T:System.Collections.IEnumerator" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b58-185">Возвращает нетипизированный перечислитель по коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-185">Returns an untyped enumerator over the collection.</span></span> <span data-ttu-id="c4b58-186">Это позволяет проходить по всей коллекции.</span><span class="sxs-lookup"><span data-stu-id="c4b58-186">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
