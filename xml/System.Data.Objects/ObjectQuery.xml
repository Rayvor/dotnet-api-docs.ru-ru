<Type Name="ObjectQuery" FullName="System.Data.Objects.ObjectQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="392c3f1d81bb29ed8e45296c0611f8d46e0fec63" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69126648" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectQuery extends System.Object implements class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectQuery&#xA;Implements IEnumerable, IListSource, IOrderedQueryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectQuery abstract : System::Collections::IEnumerable, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable" />
  <TypeSignature Language="F#" Value="type ObjectQuery = class&#xA;    interface IEnumerable&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f63e5-101">Реализует общие функции для запросов в концептуальной модели с помощью LINQ to Entities и <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span><span class="sxs-lookup"><span data-stu-id="f63e5-101">Implements common functionality for queries against a conceptual model using both LINQ to Entities and <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-102"><xref:System.Data.Objects.ObjectQuery>является базовым классом для запросов к концептуальной модели.</span><span class="sxs-lookup"><span data-stu-id="f63e5-102"><xref:System.Data.Objects.ObjectQuery> is the base class for queries against a conceptual model.</span></span> <span data-ttu-id="f63e5-103"><xref:System.Data.Objects.ObjectQuery>предоставляется для обеспечения того, что LINQ to Entities запросы имеют те же функциональные возможности, что <xref:System.Data.Objects.ObjectQuery%601>и запросы, выполняемые с помощью.</span><span class="sxs-lookup"><span data-stu-id="f63e5-103"><xref:System.Data.Objects.ObjectQuery> is provided to ensure that LINQ to Entities queries have the same functionality as queries executed using <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="f63e5-104">Для запроса концептуальной модели необходимо использовать <xref:System.Data.Objects.ObjectQuery%601> с указанным типом.</span><span class="sxs-lookup"><span data-stu-id="f63e5-104">You must use <xref:System.Data.Objects.ObjectQuery%601> with a specified type to query a conceptual model.</span></span> <span data-ttu-id="f63e5-105">Дополнительные сведения см. в разделе [запросы объектов](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span><span class="sxs-lookup"><span data-stu-id="f63e5-105">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/641f9b68-9046-47a1-abb0-1c8eaeda0e2d"><span data-ttu-id="f63e5-106">LINQ to Entities</span><span class="sxs-lookup"><span data-stu-id="f63e5-106">LINQ to Entities</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="System.Data.Objects.ObjectQuery.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63e5-107">Возвращает текст команды запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-107">Returns the command text for the query.</span></span></summary>
        <value><span data-ttu-id="f63e5-108">Значение <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="f63e5-108">A <see langword="string" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ObjectContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContext ^ Context { System::Data::Objects::ObjectContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Data.Objects.ObjectContext" Usage="System.Data.Objects.ObjectQuery.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63e5-109">Возвращает контекст объекта, ассоциированный с этим запросом объектов.</span><span class="sxs-lookup"><span data-stu-id="f63e5-109">Gets the object context associated with this object query.</span></span></summary>
        <value><span data-ttu-id="f63e5-110">Объект <see cref="T:System.Data.Objects.ObjectContext" />, ассоциированный с этим экземпляром <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span><span class="sxs-lookup"><span data-stu-id="f63e5-110">The <see cref="T:System.Data.Objects.ObjectContext" /> associated with this <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-111">Контекст запроса включает соединение, кэш и метаданные.</span><span class="sxs-lookup"><span data-stu-id="f63e5-111">The context for the query includes the connection, cache, and metadata.</span></span> <span data-ttu-id="f63e5-112">Дополнительные сведения см. в разделе [Обзор служб объектов (Entity Framework)](https://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).</span><span class="sxs-lookup"><span data-stu-id="f63e5-112">For more information, see [Object Services Overview (Entity Framework)](https://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).</span></span>  
  
 <span data-ttu-id="f63e5-113">Свойство соединения является изменяемым, его необходимо задавать перед тем, как запрос можно будет выполнить.</span><span class="sxs-lookup"><span data-stu-id="f63e5-113">The connection property is mutable and must be set before a query can be executed.</span></span> <span data-ttu-id="f63e5-114">Дополнительные сведения см. [в разделе Управление подключениями в службы объектов (Entity Framework)](https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="f63e5-114">For more information, see [Managing Connections in Object Services (Entity Framework)](https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f63e5-115">Пример в этом разделе основан на [модели AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="f63e5-115">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="f63e5-116">В этом примере возвращается объект <xref:System.Data.Objects.ObjectContext>, ассоциированный с этим объектом <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="f63e5-116">The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_context)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_context)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="f63e5-117">Запрос данных в виде объектов и формирование результатов (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="f63e5-117">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnablePlanCaching">
      <MemberSignature Language="C#" Value="public bool EnablePlanCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePlanCaching" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePlanCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePlanCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePlanCaching : bool with get, set" Usage="System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63e5-118">Возвращает или задает значение, указывающее, должен ли быть кэширован план запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-118">Gets or sets a value that indicates whether the query plan should be cached.</span></span></summary>
        <value><span data-ttu-id="f63e5-119">Значение, указывающее, должен ли быть кэширован план запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-119">A value that indicates whether the query plan should be cached.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-120">Дополнительные сведения см. в разделе [кэширование планов запросов](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span><span class="sxs-lookup"><span data-stu-id="f63e5-120">For more information, see [Query Plan Caching](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="f63e5-121">Запросы к данным как к объектам (платформа Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="f63e5-121">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="f63e5-122">Параметр <see cref="T:System.Data.Objects.MergeOption" /> для использования при выполнении запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-122">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="f63e5-123">Значение по умолчанию — <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span><span class="sxs-lookup"><span data-stu-id="f63e5-123">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="f63e5-124">Выполняет нетипизированный запрос объектов с указанным параметром слияния.</span><span class="sxs-lookup"><span data-stu-id="f63e5-124">Executes the untyped object query with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="f63e5-125">Объект <see cref="T:System.Data.Objects.ObjectResult`1" />, который содержит коллекцию объектов сущности, возвращенных запросом.</span><span class="sxs-lookup"><span data-stu-id="f63e5-125">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-126">Параметр слияния по умолчанию для запросов объектов — <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="f63e5-126">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="f63e5-127">Дополнительные сведения см. в разделе [разрешение удостоверений, управление состоянием и отслеживание изменений](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span><span class="sxs-lookup"><span data-stu-id="f63e5-127">For more information, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 <span data-ttu-id="f63e5-128">Вызовите <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> <xref:System.Data.Objects.ObjectQuery%601> метод для запросов типизированных объектов.</span><span class="sxs-lookup"><span data-stu-id="f63e5-128">Call the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method on <xref:System.Data.Objects.ObjectQuery%601> for typed object queries.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="f63e5-129">Запросы к данным как к объектам (платформа Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="f63e5-129">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetResultType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage GetResultType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.TypeUsage GetResultType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.GetResultType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResultType () As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::TypeUsage ^ GetResultType();" />
      <MemberSignature Language="F#" Value="member this.GetResultType : unit -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="objectQuery.GetResultType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f63e5-130">Возвращает сведения о результирующем типе запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-130">Returns information about the result type of the query.</span></span></summary>
        <returns><span data-ttu-id="f63e5-131">Значение <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, которое содержит сведения об результирующем типе запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-131">A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> value that contains information about the result type of the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f63e5-132">Этот пример основан на [модели AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="f63e5-132">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="f63e5-133">В этом примере создается запрос <xref:System.Data.Objects.ObjectQuery%601> типа <xref:System.Data.Common.DbDataRecord> и используется тип <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> для определения, представляет ли возвращенный тип строку.</span><span class="sxs-lookup"><span data-stu-id="f63e5-133">The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> to determine whether the type returned represents a row.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#GetResultType](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#getresulttype)]
 [!code-vb[DP ObjectServices Concepts#GetResultType](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#getresulttype)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)"><span data-ttu-id="f63e5-134">Управление подключениями в службах объектов (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="f63e5-134">Managing Connections in Object Services (Entity Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5"><span data-ttu-id="f63e5-135">Метаданные ADO.NET</span><span class="sxs-lookup"><span data-stu-id="f63e5-135">ADO.NET Metadata</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Objects.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Objects.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::MergeOption MergeOption { System::Data::Objects::MergeOption get(); void set(System::Data::Objects::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Objects.MergeOption with get, set" Usage="System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63e5-136">Возвращает или задает способ добавления к контексту объекта объектов, возвращенных запросом.</span><span class="sxs-lookup"><span data-stu-id="f63e5-136">Gets or sets how objects returned from a query are added to the object context.</span></span></summary>
        <value><span data-ttu-id="f63e5-137">Свойство <see cref="T:System.Data.Objects.MergeOption" /> запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-137">The query <see cref="T:System.Data.Objects.MergeOption" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-138">Если значение <xref:System.Data.Objects.MergeOption> не указано, значение по умолчанию — <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="f63e5-138">If no <xref:System.Data.Objects.MergeOption> is specified, the default value is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="f63e5-139">Дополнительные сведения см. в разделе [разрешение удостоверений, управление состоянием и отслеживание изменений](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span><span class="sxs-lookup"><span data-stu-id="f63e5-139">For more information, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="f63e5-140">Запрос данных в виде объектов и формирование результатов (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="f63e5-140">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ObjectParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameterCollection ^ Parameters { System::Data::Objects::ObjectParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.Objects.ObjectParameterCollection" Usage="System.Data.Objects.ObjectQuery.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63e5-141">Возвращает коллекцию параметров для этого запроса объектов.</span><span class="sxs-lookup"><span data-stu-id="f63e5-141">Gets the parameter collection for this object query.</span></span></summary>
        <value><span data-ttu-id="f63e5-142">Коллекция параметров для этого запроса <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span><span class="sxs-lookup"><span data-stu-id="f63e5-142">The parameter collection for this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-143">Используйте возвращаемую коллекцию <xref:System.Data.Objects.ObjectParameterCollection>, чтобы указывать параметры, которые передаются запросу.</span><span class="sxs-lookup"><span data-stu-id="f63e5-143">Use the returned <xref:System.Data.Objects.ObjectParameterCollection> to specify parameters that are passed to the query.</span></span> <span data-ttu-id="f63e5-144">Дополнительные сведения см. в разделе [методы конструктор запросов](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="f63e5-144">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f63e5-145">Этот пример основан на [модели AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="f63e5-145">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="f63e5-146">В этом примере новые параметры добавляются в коллекцию, после чего коллекция параметров возвращается для запроса <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="f63e5-146">The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="f63e5-147">Затем выполняется проход по коллекции <xref:System.Data.Objects.ObjectParameterCollection> и выводится имя, тип и значение каждого параметра в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f63e5-147">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="f63e5-148">Запросы к данным как к объектам (платформа Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="f63e5-148">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f63e5-149">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="f63e5-149">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="f63e5-150">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="f63e5-150">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-151">Вызов перечислителя <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> выполняет запрос с параметром слияния, который указан свойством <xref:System.Data.Objects.ObjectQuery.MergeOption%2A>.</span><span class="sxs-lookup"><span data-stu-id="f63e5-151">Calling <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> executes the query with the merge option that is specified by the <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> property.</span></span>  
  
 <span data-ttu-id="f63e5-152">Инструкция `foreach` языка C# (`For Each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="f63e5-152">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="f63e5-153">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="f63e5-153">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f63e5-154">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="f63e5-154">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="f63e5-155">Запросы к данным как к объектам (платформа Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="f63e5-155">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63e5-156">Возвращает значение, которое показывает, содержит ли коллекция, возвращенная запросом, объекты-коллекции.</span><span class="sxs-lookup"><span data-stu-id="f63e5-156">Gets a value that indicates whether the collection returned by the query contains collection objects.</span></span></summary>
        <value><span data-ttu-id="f63e5-157">Значение типа Boolean.</span><span class="sxs-lookup"><span data-stu-id="f63e5-157">A Boolean value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-158">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-158">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f63e5-159">Он может использоваться, только если экземпляр <xref:System.Data.Objects.ObjectQuery%601> приведен к типу интерфейса <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="f63e5-159">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="f63e5-160">Это свойство всегда возвращает `false` значение, так как коллекция, возвращаемая запросом, содержит объекты, а не коллекции.</span><span class="sxs-lookup"><span data-stu-id="f63e5-160">This property always returns `false` because the collection returned by the query contains objects and not collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f63e5-161">Возвращает коллекцию в виде объекта <see cref="T:System.Collections.IList" />, используемого для привязки данных.</span><span class="sxs-lookup"><span data-stu-id="f63e5-161">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span></span></summary>
        <returns><span data-ttu-id="f63e5-162">Интерфейс <see cref="T:System.Collections.IList" /> объектов сущностей.</span><span class="sxs-lookup"><span data-stu-id="f63e5-162">An <see cref="T:System.Collections.IList" /> of entity objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-163">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-163">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f63e5-164">Он может использоваться, только если экземпляр <xref:System.Data.Objects.ObjectQuery%601> приведен к типу интерфейса <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="f63e5-164">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="f63e5-165">Этот метод позволяет привязывать данные к результату запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-165">This method enables data binding to the result of the query.</span></span> <span data-ttu-id="f63e5-166">Он вызывается элементом управления, привязанным к коллекции.</span><span class="sxs-lookup"><span data-stu-id="f63e5-166">It is called by the control bound to the collection.</span></span> <span data-ttu-id="f63e5-167">Дополнительные сведения см. [в разделе Привязка объектов к элементам управления](https://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span><span class="sxs-lookup"><span data-stu-id="f63e5-167">For more information, see [Binding Objects to Controls](https://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.ElementType">
      <MemberSignature Language="C#" Value="Type System.Linq.IQueryable.ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ElementType As Type Implements IQueryable.ElementType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Linq::IQueryable::ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.ElementType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.ElementType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63e5-168">Возвращает результирующий тип элемента для этого экземпляра запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-168">Gets the result element type for this query instance.</span></span></summary>
        <value><span data-ttu-id="f63e5-169">Тип <see cref="T:System.Type" />, который является результирующим типом элемента для этого экземпляра запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-169">A <see cref="T:System.Type" /> that is the result element type for this query instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-170">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-170">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f63e5-171">Он может использоваться, только если экземпляр <xref:System.Data.Objects.ObjectQuery%601> приведен к типу интерфейса <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="f63e5-171">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Expression">
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression System.Linq.IQueryable.Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expression As Expression Implements IQueryable.Expression" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::Expressions::Expression ^ System::Linq::IQueryable::Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Expression" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.Expression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63e5-172">Возвращает выражение, описывающее этот запрос.</span><span class="sxs-lookup"><span data-stu-id="f63e5-172">Gets the expression describing this query.</span></span></summary>
        <value><span data-ttu-id="f63e5-173">Выражение LINQ типа <see cref="T:System.Linq.Expressions.Expression" />, которое описывает этот запрос.</span><span class="sxs-lookup"><span data-stu-id="f63e5-173">The LINQ <see cref="T:System.Linq.Expressions.Expression" /> that describes this query.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-174">Запросам, построенным с помощью шаблонов построителя LINQ, возвращается полное дерево выражений LINQ; в противном случае возвращается постоянное выражение, которое упаковывает этот запрос.</span><span class="sxs-lookup"><span data-stu-id="f63e5-174">For queries built by using LINQ builder patterns, this returns a full LINQ expression tree; otherwise, it returns a constant expression that wraps this query.</span></span> <span data-ttu-id="f63e5-175">Следует отметить, что выражение по умолчанию не кэшируется.</span><span class="sxs-lookup"><span data-stu-id="f63e5-175">Note that the default expression is not cached.</span></span> <span data-ttu-id="f63e5-176">Благодаря этому платформа может различать запросы LINQ и Entity SQL.</span><span class="sxs-lookup"><span data-stu-id="f63e5-176">This allows the framework to differentiate between LINQ and Entity SQL queries.</span></span>  
  
 <span data-ttu-id="f63e5-177">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-177">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f63e5-178">Он может использоваться, только если экземпляр <xref:System.Data.Objects.ObjectQuery%601> приведен к типу интерфейса <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="f63e5-178">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Provider">
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider System.Linq.IQueryable.Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Provider As IQueryProvider Implements IQueryable.Provider" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::IQueryProvider ^ System::Linq::IQueryable::Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Provider" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63e5-179">Возвращает поставщик LINQ типа <see cref="T:System.Linq.IQueryProvider" />, ассоциированный с этим экземпляром запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-179">Gets the LINQ <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span></span></summary>
        <value><span data-ttu-id="f63e5-180">Поставщик <see cref="T:System.Linq.IQueryProvider" />, ассоциированный с этим экземпляром запроса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-180">The <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63e5-181">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f63e5-181">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f63e5-182">Он может использоваться, только если экземпляр <xref:System.Data.Objects.ObjectQuery%601> приведен к типу интерфейса <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="f63e5-182">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTraceString">
      <MemberSignature Language="C#" Value="public string ToTraceString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToTraceString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.ToTraceString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTraceString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToTraceString();" />
      <MemberSignature Language="F#" Value="member this.ToTraceString : unit -&gt; string" Usage="objectQuery.ToTraceString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f63e5-183">Возвращает команды для выполнения относительно источника данных.</span><span class="sxs-lookup"><span data-stu-id="f63e5-183">Returns the commands to execute against the data source.</span></span></summary>
        <returns><span data-ttu-id="f63e5-184">Строка <see langword="string" />, представляющая команды, которые запрос выполняет относительно источника данных.</span><span class="sxs-lookup"><span data-stu-id="f63e5-184">A <see langword="string" /> that represents the commands that the query executes against the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f63e5-185">Пример в этом разделе основан на [модели AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="f63e5-185">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_totracestring)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_totracestring)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="f63e5-186">Запрос данных в виде объектов и формирование результатов (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="f63e5-186">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
