<Type Name="CompiledQuery" FullName="System.Data.Objects.CompiledQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c81d6064e0148344a6f0c021d208521e09b84c16" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70576085" /></Metadata><TypeSignature Language="C#" Value="public sealed class CompiledQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompiledQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.CompiledQuery" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompiledQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompiledQuery sealed" />
  <TypeSignature Language="F#" Value="type CompiledQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет кэшируемый запрос LINQ to Entities.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обеспечивает компиляцию и кэширование запросов для повторного использования. Концептуально этот класс содержит единственный метод `Compile`, имеющий несколько перегружаемых реализаций. Метод `Compile` вызывается для создания нового делегата, представляющего скомпилированный запрос. Этот делегат, будучи вызванным с входным параметром <xref:System.Data.Objects.ObjectContext> и другими значениями параметров, формирует некоторый результат (такой как экземпляр <xref:System.Linq.IQueryable%601>). Запрос преобразуется и кэшируется при первом вызове делегата.  
  
   
  
## Examples  
 В следующем примере компилируется и вызывается запрос, который принимает входные параметры типа <xref:System.DateTime> и <xref:System.Decimal> и возвращает последовательность заказов с датой позднее 8 марта 2003 г. и суммой заказа меньше 300 долларов США:  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery5)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery5)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8025ba1d-29c7-4407-841b-d5a3bed40b7a">Компилированные запросы (LINQ to Entities)</related>
  </Docs>
  <Members>
    <Member MemberName="Compile&lt;TArg0,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TResult&gt; Compile&lt;TArg0,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TArg0, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TArg0, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TResult))) As Func(Of TArg0, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`2" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
   
  
## Examples  
 В следующем примере компилируется и вызывается запрос, возвращающий экземпляр элемента <xref:System.Data.Objects.ObjectQuery%601>:  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery1_MQ](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery1_mq)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery1_MQ](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery1_mq)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TResult&gt; Compile&lt;TArg0,TArg1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TResult))) As Func(Of TArg0, TArg1, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`3" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
   
  
## Examples  
 В следующем примере компилируется и вызывается запрос, принимающий входной параметр типа <xref:System.Decimal> и возвращающий последовательность заказов, сумма заказа которых больше или равна 200 долларам США:  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery2](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery2)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery2](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TResult))) As Func(Of TArg0, TArg1, TArg2, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`4" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
   
  
## Examples  
 В следующем примере компилируется и вызывается запрос, который принимает входные параметры типа <xref:System.DateTime> и <xref:System.Decimal> и возвращает последовательность заказов с датой позднее 8 марта 2003 г. и суммой заказа меньше 300 долларов США:  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery5)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`5" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`6" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`7" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg6">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg6" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`8" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg6">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg6" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg7">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg7" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`9" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg6">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg6" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg7">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg7" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg8">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg8" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`10" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg6">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg6" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg7">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg7" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg8">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg8" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg9">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg9" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`11" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg6">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg6" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg7">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg7" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg8">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg8" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg9">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg9" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg10">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg10" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`12" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg6">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg6" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg7">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg7" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg8">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg8" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg9">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg9" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg10">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg10" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg11">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg11" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`13" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg6">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg6" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg7">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg7" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg8">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg8" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg9">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg9" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg10">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg10" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg11">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg11" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg12">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg12" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`14" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg6">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg6" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg7">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg7" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg8">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg8" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg9">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg9" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg10">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg10" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg11">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg11" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg12">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg12" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg13">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg13" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`15" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TArg14 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TArg14, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg6">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg6" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg7">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg7" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg8">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg8" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg9">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg9" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg10">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg10" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg11">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg11" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg12">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg12" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg13">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg13" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg14">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg14" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`16" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TArg14 As ObjectContext, TArg15 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TArg14, typename TArg15, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'TArg15, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'TArg15, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TArg15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg1" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg2">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg2" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg3">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg3" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg4">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg4" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg5">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg5" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg6">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg6" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg7">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg7" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg8">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg8" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg9">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg9" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg10">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg10" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg11">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg11" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg12">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg12" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg13">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg13" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg14">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg14" />должен быть примитивным типом.</typeparam>
        <typeparam name="TArg15">Представляет тип параметра, который передается при выполнении делегата, возвращенного этим методом. <typeparamref name="TArg15" />должен быть примитивным типом.</typeparam>
        <typeparam name="TResult">Тип результатов запроса, возвращаемый при выполнении делегата, возвращенного <see cref="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" /> методом.</typeparam>
        <param name="query">Лямбда-выражение, предназначенное для компиляции.</param>
        <summary>Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.</summary>
        <returns><see cref="T:System.Func`17" />, универсальный метод-делегат, представляющий скомпилированный запрос LINQ to Entities.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения и примеры см. в разделе [скомпилированные запросы (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
