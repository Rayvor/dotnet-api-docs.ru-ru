<Type Name="GestureRecognizer" FullName="System.Windows.Ink.GestureRecognizer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27d8b2e1a0cc7e5e1dbeabcdb6ac726828528496" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004772" /></Metadata><TypeSignature Language="C#" Value="public sealed class GestureRecognizer : System.Windows.DependencyObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GestureRecognizer extends System.Windows.DependencyObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.GestureRecognizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GestureRecognizer&#xA;Inherits DependencyObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GestureRecognizer sealed : System::Windows::DependencyObject, IDisposable" />
  <TypeSignature Language="F#" Value="type GestureRecognizer = class&#xA;    inherit DependencyObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Распознает жесты рукописного ввода.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Ink.GestureRecognizer> идентифицирует рукописном графическом знаке. Можно задать <xref:System.Windows.Ink.GestureRecognizer> для распознавания всех или их подмножество жесты приложений. Чтобы задать <xref:System.Windows.Ink.GestureRecognizer> распознает подмножество доступных жесты, передайте <xref:System.Windows.Ink.ApplicationGesture> массива в конструктор или используйте <xref:System.Windows.Ink.GestureRecognizer.SetEnabledGestures%2A> метод. Чтобы определить, является ли <xref:System.Windows.Ink.StrokeCollection> содержит жест, вызов <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> метод.  
  
<a name="xamlTextUsage_GestureRecognizer"></a>   
## <a name="xaml-text-usage"></a>Использование текста XAML  
 Нельзя использовать этот класс в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
   
  
## Examples  
 Следующий пример демонстрирует, как определить, является ли <xref:System.Windows.Ink.Stroke> является <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> жест.  
  
 [!code-csharp[GestureControl#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#8)]
 [!code-vb[GestureControl#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Ink.GestureRecognizer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GestureRecognizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GestureRecognizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Ink.GestureRecognizer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При его создании с помощью этого конструктора <xref:System.Windows.Ink.GestureRecognizer> распознает все жесты приложений.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GestureRecognizer (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; enabledApplicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; enabledApplicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enabledApplicationGestures As IEnumerable(Of ApplicationGesture))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GestureRecognizer(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::ApplicationGesture&gt; ^ enabledApplicationGestures);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.GestureRecognizer : seq&lt;System.Windows.Ink.ApplicationGesture&gt; -&gt; System.Windows.Ink.GestureRecognizer" Usage="new System.Windows.Ink.GestureRecognizer enabledApplicationGestures" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enabledApplicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="enabledApplicationGestures">Массив объектов типа <see cref="T:System.Windows.Ink.ApplicationGesture" /> , указывающий, какие жесты приложений <see cref="T:System.Windows.Ink.GestureRecognizer" /> распознает.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Ink.GestureRecognizer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Ink.GestureRecognizer.%23ctor%2A> конструктор для создания <xref:System.Windows.Ink.GestureRecognizer> , распознает подмножество жесты приложений.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Windows.Ink.GestureRecognizer> , распознает только <xref:System.Windows.Ink.ApplicationGesture.Down>, <xref:System.Windows.Ink.ApplicationGesture.Right>, и <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> жестов.  
  
 [!code-csharp[GestureControl#4](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#4)]
 [!code-vb[GestureControl#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="gestureRecognizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.Windows.Ink.GestureRecognizer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A> окончании использования <xref:System.Windows.Ink.GestureRecognizer>. Метод <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A> оставляет класс <xref:System.Windows.Ink.GestureRecognizer> в непригодном для использования состоянии. Таким образом, после вызова метода <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Windows.Ink.GestureRecognizer> , сборщик мусора мог освободить память, <xref:System.Windows.Ink.GestureRecognizer> занимаемую.  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Windows.Ink.GestureRecognizer>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Windows.Ink.GestureRecognizer> метод `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledGestures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.GetEnabledGestures" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnabledGestures () As ReadOnlyCollection(Of ApplicationGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Ink::ApplicationGesture&gt; ^ GetEnabledGestures();" />
      <MemberSignature Language="F#" Value="member this.GetEnabledGestures : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;" Usage="gestureRecognizer.GetEnabledGestures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает жесты, <see cref="T:System.Windows.Ink.GestureRecognizer" /> распознает.</summary>
        <returns>Массив объектов типа <see cref="T:System.Windows.Ink.ApplicationGesture" /> , содержащий жесты <see cref="T:System.Windows.Ink.GestureRecognizer" /> устанавливается для распознавания.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример демонстрирует, как получить приложения жестов, которые <xref:System.Windows.Ink.GestureRecognizer> распознает.  
  
 [!code-csharp[GestureControl#6](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#6)]
 [!code-vb[GestureControl#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRecognizerAvailable">
      <MemberSignature Language="C#" Value="public bool IsRecognizerAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecognizerAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRecognizerAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRecognizerAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRecognizerAvailable : bool" Usage="System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает логическое значение, указывающее, доступно ли средство распознавания жестов в системе пользователя.</summary>
        <value><see langword="true" /> Если компонент распознавания доступен; в противном случае <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Приведенный ниже показано, как определить, доступно ли средство распознавания жестов перед вызовом <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> метод.  
  
 [!code-csharp[GestureControl#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#8)]
 [!code-vb[GestureControl#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recognize">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.GestureRecognitionResult&gt; Recognize (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Ink.GestureRecognitionResult&gt; Recognize(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.Recognize(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Recognize (strokes As StrokeCollection) As ReadOnlyCollection(Of GestureRecognitionResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Ink::GestureRecognitionResult ^&gt; ^ Recognize(System::Windows::Ink::StrokeCollection ^ strokes);" />
      <MemberSignature Language="F#" Value="member this.Recognize : System.Windows.Ink.StrokeCollection -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.GestureRecognitionResult&gt;" Usage="gestureRecognizer.Recognize strokes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.GestureRecognitionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes"><see cref="T:System.Windows.Ink.StrokeCollection" /> Необходимо выполнить поиск жестов.</param>
        <summary>Выполняет поиск жестов в указанном <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>Массив объектов типа <see cref="T:System.Windows.Ink.GestureRecognitionResult" /> , содержащий приложение жестов, которые <see cref="T:System.Windows.Ink.GestureRecognizer" /> распознан.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Массив, возвращаемый <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> метод сортируется по <xref:System.Windows.Ink.GestureRecognitionResult.RecognitionConfidence%2A?displayProperty=nameWithType> свойство. Например <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> может возвращать <xref:System.Windows.Ink.GestureRecognitionResult> массив со следующими значениями:  
  
|Индекс|ApplicationGesture|RecognitionConfidence|  
|-----------|------------------------|---------------------------|  
|0|<xref:System.Windows.Ink.ApplicationGesture.Check>|<xref:System.Windows.Ink.RecognitionConfidence.Strong>|  
|1|<xref:System.Windows.Ink.ApplicationGesture.NoGesture>|<xref:System.Windows.Ink.RecognitionConfidence.Intermediate>|  
|2|<xref:System.Windows.Ink.ApplicationGesture.Curlicue>|<xref:System.Windows.Ink.RecognitionConfidence.Poor>|  
|3|<xref:System.Windows.Ink.ApplicationGesture.DoubleCurlicue>|<xref:System.Windows.Ink.RecognitionConfidence.Poor>|  
  
 Это означает, что <xref:System.Windows.Ink.GestureRecognizer> распознает, что это скорее всего, <xref:System.Windows.Ink.Stroke> устанавливается флажок, относительно скорее всего, <xref:System.Windows.Ink.Stroke> не жестов и совсем не скорее всего, <xref:System.Windows.Ink.Stroke> узор или двойной узор.  
  
> [!NOTE]
>  <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> Метод может возвращать массив, содержащий <xref:System.Windows.Ink.ApplicationGesture.NoGesture> выше <xref:System.Windows.Ink.RecognitionConfidence> чем другие жесты приложений. Это означает, что более вероятно, <xref:System.Windows.Ink.Stroke> не жест, в отличие от жест, который имеет более низкий <xref:System.Windows.Ink.RecognitionConfidence>.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как определить, является ли <xref:System.Windows.Ink.Stroke> является <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> жест.  
  
 [!code-csharp[GestureControl#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#8)]
 [!code-vb[GestureControl#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledGestures">
      <MemberSignature Language="C#" Value="public void SetEnabledGestures (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; applicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnabledGestures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; applicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEnabledGestures (applicationGestures As IEnumerable(Of ApplicationGesture))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEnabledGestures(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::ApplicationGesture&gt; ^ applicationGestures);" />
      <MemberSignature Language="F#" Value="member this.SetEnabledGestures : seq&lt;System.Windows.Ink.ApplicationGesture&gt; -&gt; unit" Usage="gestureRecognizer.SetEnabledGestures applicationGestures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationGestures">Массив объектов типа <see cref="T:System.Windows.Ink.ApplicationGesture" /> , указывающий, какие жесты приложений, вы хотите <see cref="T:System.Windows.Ink.GestureRecognizer" /> для распознавания.</param>
        <summary>Устанавливает жесты приложений, <see cref="T:System.Windows.Ink.GestureRecognizer" /> распознает.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Windows.Ink.GestureRecognizer> , распознает только <xref:System.Windows.Ink.ApplicationGesture.Down>, <xref:System.Windows.Ink.ApplicationGesture.Right>, и <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> жестов.  
  
 [!code-csharp[GestureControl#5](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#5)]
 [!code-vb[GestureControl#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>