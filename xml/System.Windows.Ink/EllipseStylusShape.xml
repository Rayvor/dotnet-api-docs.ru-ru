<Type Name="EllipseStylusShape" FullName="System.Windows.Ink.EllipseStylusShape">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ced656f1fee477ae8e09ebf735be5b685afedd8a" /><Meta Name="ms.sourcegitcommit" Value="0528148687f8b0e0a3d0f550431a777fbe5346bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/25/2019" /><Meta Name="ms.locfileid" Value="64443319" /></Metadata><TypeSignature Language="C#" Value="public sealed class EllipseStylusShape : System.Windows.Ink.StylusShape" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EllipseStylusShape extends System.Windows.Ink.StylusShape" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.EllipseStylusShape" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EllipseStylusShape&#xA;Inherits StylusShape" />
  <TypeSignature Language="C++ CLI" Value="public ref class EllipseStylusShape sealed : System::Windows::Ink::StylusShape" />
  <TypeSignature Language="F#" Value="type EllipseStylusShape = class&#xA;    inherit StylusShape" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Ink.StylusShape</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет собой кончик пера в форме эллипса.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Windows.Ink.EllipseStylusShape> и передать его в <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> метод, чтобы удалить часть <xref:System.Windows.Ink.Stroke>. В этом примере предполагается, что имеется <xref:System.Windows.Ink.IncrementalStrokeHitTester> вызывается `eraseTester` и что его <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> событий был подключен к обработчику событий, определенный в этом примере. Чтобы создать элемент управления, который позволяет пользователю удаление данных рукописного ввода, см. в разделе [как: Удаление данных рукописного ввода на пользовательский элемент управления](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Ink.EllipseStylusShape" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Следующий пример демонстрирует создание <xref:System.Windows.Ink.EllipseStylusShape> и передать его в <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> метод, чтобы удалить часть <xref:System.Windows.Ink.Stroke>. В этом примере предполагается, что имеется <xref:System.Windows.Ink.IncrementalStrokeHitTester> вызывается `eraseTester` и что его <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> событий был подключен к обработчику событий, определенный в этом примере. Чтобы создать элемент управления, который позволяет пользователю удаление данных рукописного ввода, см. в разделе [как: Удаление данных рукописного ввода на пользовательский элемент управления](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EllipseStylusShape (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.EllipseStylusShape.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EllipseStylusShape(double width, double height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.EllipseStylusShape : double * double -&gt; System.Windows.Ink.EllipseStylusShape" Usage="new System.Windows.Ink.EllipseStylusShape (width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">Ширина формы пера.</param>
        <param name="height">Высота формы стилуса.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Ink.EllipseStylusShape" /> с заданной шириной и высотой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Windows.Ink.EllipseStylusShape> и передать его в <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> метод, чтобы удалить часть <xref:System.Windows.Ink.Stroke>. В этом примере предполагается, что имеется <xref:System.Windows.Ink.IncrementalStrokeHitTester> вызывается `eraseTester` и что его <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> событий был подключен к обработчику событий, определенный в этом примере. Чтобы создать элемент управления, который позволяет пользователю удаление данных рукописного ввода, см. в разделе [как: Удаление данных рукописного ввода на пользовательский элемент управления](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EllipseStylusShape (double width, double height, double rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 width, float64 height, float64 rotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.EllipseStylusShape.#ctor(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Double, height As Double, rotation As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EllipseStylusShape(double width, double height, double rotation);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.EllipseStylusShape : double * double * double -&gt; System.Windows.Ink.EllipseStylusShape" Usage="new System.Windows.Ink.EllipseStylusShape (width, height, rotation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="rotation" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">Ширина формы пера.</param>
        <param name="height">Высота формы пера.</param>
        <param name="rotation">Угол формы стилуса.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Ink.EllipseStylusShape" /> с заданными шириной, высотой и углом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Windows.Ink.EllipseStylusShape> и передать его в <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> метод, чтобы удалить часть <xref:System.Windows.Ink.Stroke>. В этом примере предполагается, что имеется <xref:System.Windows.Ink.IncrementalStrokeHitTester> вызывается `eraseTester` и что его <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> событий был подключен к обработчику событий, определенный в этом примере. Чтобы создать элемент управления, который позволяет пользователю удаление данных рукописного ввода, см. в разделе [как: Удаление данных рукописного ввода на пользовательский элемент управления](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>