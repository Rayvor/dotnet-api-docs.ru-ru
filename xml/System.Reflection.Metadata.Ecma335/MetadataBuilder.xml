<Type Name="MetadataBuilder" FullName="System.Reflection.Metadata.Ecma335.MetadataBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec84fc8ef9042c23699f5c3af365ac70214727f7" /><Meta Name="ms.sourcegitcommit" Value="6c0b6310824199ff476e4a9eec6e9ed0bd1a51c9" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/06/2019" /><Meta Name="ms.locfileid" Value="74875012" /></Metadata><TypeSignature Language="C#" Value="public sealed class MetadataBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.Ecma335.MetadataBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataBuilder sealed" />
  <TypeSignature Language="F#" Value="type MetadataBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ad16c-101">Класс MetadataBuilder считывает и записывает метаданные для сборки с высокой производительностью.</span><span class="sxs-lookup"><span data-stu-id="ad16c-101">The MetadataBuilder class reads and writes metadata for an assembly in a highly performant manner.</span></span> <span data-ttu-id="ad16c-102">Он предназначен для использования компиляторами и другими средствами создания сборок.</span><span class="sxs-lookup"><span data-stu-id="ad16c-102">It is designed for use by compilers and other assembly generation tools.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataBuilder (int userStringHeapStartOffset = 0, int stringHeapStartOffset = 0, int blobHeapStartOffset = 0, int guidHeapStartOffset = 0);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 userStringHeapStartOffset, int32 stringHeapStartOffset, int32 blobHeapStartOffset, int32 guidHeapStartOffset) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional userStringHeapStartOffset As Integer = 0, Optional stringHeapStartOffset As Integer = 0, Optional blobHeapStartOffset As Integer = 0, Optional guidHeapStartOffset As Integer = 0)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="new System.Reflection.Metadata.Ecma335.MetadataBuilder : int * int * int * int -&gt; System.Reflection.Metadata.Ecma335.MetadataBuilder" Usage="new System.Reflection.Metadata.Ecma335.MetadataBuilder (userStringHeapStartOffset, stringHeapStartOffset, blobHeapStartOffset, guidHeapStartOffset)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userStringHeapStartOffset" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="stringHeapStartOffset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="blobHeapStartOffset" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="guidHeapStartOffset" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="userStringHeapStartOffset"><span data-ttu-id="ad16c-103">Начальное смещение кучи пользовательских строк.</span><span class="sxs-lookup"><span data-stu-id="ad16c-103">The start offset of the User String heap.</span></span> <span data-ttu-id="ad16c-104">Совокупный размер куч пользовательских строк для всех предыдущих поколений EnC должен быть равен 0, если только метаданные не являются разностными метаданными EnC.</span><span class="sxs-lookup"><span data-stu-id="ad16c-104">The cumulative size of User String heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.</span></span></param>
        <param name="stringHeapStartOffset"><span data-ttu-id="ad16c-105">Начальное смещение кучи строк.</span><span class="sxs-lookup"><span data-stu-id="ad16c-105">The start offset of the String heap.</span></span> <span data-ttu-id="ad16c-106">Совокупный размер куч строк для всех предыдущих поколений EnC должен быть равен 0, если только метаданные не являются разностными метаданными EnC.</span><span class="sxs-lookup"><span data-stu-id="ad16c-106">The cumulative size of String heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.</span></span></param>
        <param name="blobHeapStartOffset"><span data-ttu-id="ad16c-107">Начальное смещение кучи больших двоичных объектов.</span><span class="sxs-lookup"><span data-stu-id="ad16c-107">The start offset of the Blob heap.</span></span> <span data-ttu-id="ad16c-108">Совокупный размер куч больших двоичных объектов для всех предыдущих поколений EnC должен быть равен 0, если только метаданные не являются разностными метаданными EnC.</span><span class="sxs-lookup"><span data-stu-id="ad16c-108">The cumulative size of Blob heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.</span></span></param>
        <param name="guidHeapStartOffset"><span data-ttu-id="ad16c-109">Начальное смещение кучи идентификаторов GUID.</span><span class="sxs-lookup"><span data-stu-id="ad16c-109">The start offset of the Guid heap.</span></span> <span data-ttu-id="ad16c-110">Совокупный размер куч идентификаторов GUID для всех предыдущих поколений EnC должен быть равен 0, если только метаданные не являются разностными метаданными EnC.</span><span class="sxs-lookup"><span data-stu-id="ad16c-110">The cumulative size of Guid heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.</span></span></param>
        <summary><span data-ttu-id="ad16c-111">Создает построитель для таблиц и куч метаданных.</span><span class="sxs-lookup"><span data-stu-id="ad16c-111">Creates a builder for metadata tables and heaps.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.AssemblyDefinitionHandle AddAssembly (System.Reflection.Metadata.StringHandle name, Version version, System.Reflection.Metadata.StringHandle culture, System.Reflection.Metadata.BlobHandle publicKey, System.Reflection.AssemblyFlags flags, System.Reflection.AssemblyHashAlgorithm hashAlgorithm);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.AssemblyDefinitionHandle AddAssembly(valuetype System.Reflection.Metadata.StringHandle name, class System.Version version, valuetype System.Reflection.Metadata.StringHandle culture, valuetype System.Reflection.Metadata.BlobHandle publicKey, valuetype System.Reflection.AssemblyFlags flags, valuetype System.Reflection.AssemblyHashAlgorithm hashAlgorithm) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.AssemblyHashAlgorithm)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::AssemblyDefinitionHandle AddAssembly(System::Reflection::Metadata::StringHandle name, Version ^ version, System::Reflection::Metadata::StringHandle culture, System::Reflection::Metadata::BlobHandle publicKey, System::Reflection::AssemblyFlags flags, System::Reflection::AssemblyHashAlgorithm hashAlgorithm);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddAssembly : System.Reflection.Metadata.StringHandle * Version * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * System.Reflection.AssemblyFlags * System.Reflection.AssemblyHashAlgorithm -&gt; System.Reflection.Metadata.AssemblyDefinitionHandle" Usage="metadataBuilder.AddAssembly (name, version, culture, publicKey, flags, hashAlgorithm)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.AssemblyDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="version" Type="System.Version" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="culture" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="publicKey" Type="System.Reflection.Metadata.BlobHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="flags" Type="System.Reflection.AssemblyFlags" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Reflection.AssemblyHashAlgorithm" Index="5" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="version">To be added.</param>
        <param name="culture">To be added.</param>
        <param name="publicKey">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssemblyFile">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.AssemblyFileHandle AddAssemblyFile (System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle hashValue, bool containsMetadata);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.AssemblyFileHandle AddAssemblyFile(valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle hashValue, bool containsMetadata) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Boolean)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAssemblyFile (name As StringHandle, hashValue As BlobHandle, containsMetadata As Boolean) As AssemblyFileHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::AssemblyFileHandle AddAssemblyFile(System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle hashValue, bool containsMetadata);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyFile : System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * bool -&gt; System.Reflection.Metadata.AssemblyFileHandle" Usage="metadataBuilder.AddAssemblyFile (name, hashValue, containsMetadata)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.AssemblyFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hashValue" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="containsMetadata" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="hashValue">To be added.</param>
        <param name="containsMetadata">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.AssemblyReferenceHandle AddAssemblyReference (System.Reflection.Metadata.StringHandle name, Version version, System.Reflection.Metadata.StringHandle culture, System.Reflection.Metadata.BlobHandle publicKeyOrToken, System.Reflection.AssemblyFlags flags, System.Reflection.Metadata.BlobHandle hashValue);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.AssemblyReferenceHandle AddAssemblyReference(valuetype System.Reflection.Metadata.StringHandle name, class System.Version version, valuetype System.Reflection.Metadata.StringHandle culture, valuetype System.Reflection.Metadata.BlobHandle publicKeyOrToken, valuetype System.Reflection.AssemblyFlags flags, valuetype System.Reflection.Metadata.BlobHandle hashValue) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::AssemblyReferenceHandle AddAssemblyReference(System::Reflection::Metadata::StringHandle name, Version ^ version, System::Reflection::Metadata::StringHandle culture, System::Reflection::Metadata::BlobHandle publicKeyOrToken, System::Reflection::AssemblyFlags flags, System::Reflection::Metadata::BlobHandle hashValue);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Metadata.StringHandle * Version * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * System.Reflection.AssemblyFlags * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.AssemblyReferenceHandle" Usage="metadataBuilder.AddAssemblyReference (name, version, culture, publicKeyOrToken, flags, hashValue)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.AssemblyReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="version" Type="System.Version" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="culture" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="publicKeyOrToken" Type="System.Reflection.Metadata.BlobHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="flags" Type="System.Reflection.AssemblyFlags" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hashValue" Type="System.Reflection.Metadata.BlobHandle" Index="5" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="version">To be added.</param>
        <param name="culture">To be added.</param>
        <param name="publicKeyOrToken">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="hashValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConstant">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ConstantHandle AddConstant (System.Reflection.Metadata.EntityHandle parent, object value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ConstantHandle AddConstant(valuetype System.Reflection.Metadata.EntityHandle parent, object value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant(System.Reflection.Metadata.EntityHandle,System.Object)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddConstant (parent As EntityHandle, value As Object) As ConstantHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ConstantHandle AddConstant(System::Reflection::Metadata::EntityHandle parent, System::Object ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddConstant : System.Reflection.Metadata.EntityHandle * obj -&gt; System.Reflection.Metadata.ConstantHandle" Usage="metadataBuilder.AddConstant (parent, value)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ConstantHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="ad16c-112">Дескриптор родительской сущности, который может быть следующим: <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" /> или <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-112">The parent entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, or <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />.</span></span></param>
        <param name="value"><span data-ttu-id="ad16c-113">Значение константы.</span><span class="sxs-lookup"><span data-stu-id="ad16c-113">The constant value.</span></span></param>
        <summary><span data-ttu-id="ad16c-114">Добавляет значение по умолчанию для параметра, поля или свойства.</span><span class="sxs-lookup"><span data-stu-id="ad16c-114">Adds a default value for a parameter, field or property.</span></span></summary>
        <returns><span data-ttu-id="ad16c-115">Дескриптор добавляемой константы.</span><span class="sxs-lookup"><span data-stu-id="ad16c-115">A handle to the added constant.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-116">Записи можно добавлять в любом порядке.</span><span class="sxs-lookup"><span data-stu-id="ad16c-116">Entries may be added in any order.</span></span> <span data-ttu-id="ad16c-117">Таблица автоматически сортируется при сериализации.</span><span class="sxs-lookup"><span data-stu-id="ad16c-117">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttribute">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.CustomAttributeHandle AddCustomAttribute (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.EntityHandle constructor, System.Reflection.Metadata.BlobHandle value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.CustomAttributeHandle AddCustomAttribute(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.EntityHandle constructor, valuetype System.Reflection.Metadata.BlobHandle value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCustomAttribute (parent As EntityHandle, constructor As EntityHandle, value As BlobHandle) As CustomAttributeHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::CustomAttributeHandle AddCustomAttribute(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::EntityHandle constructor, System::Reflection::Metadata::BlobHandle value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddCustomAttribute : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.CustomAttributeHandle" Usage="metadataBuilder.AddCustomAttribute (parent, constructor, value)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.CustomAttributeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="constructor" Type="System.Reflection.Metadata.EntityHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="ad16c-118">Сущность, к которой необходимо присоединить настраиваемый атрибут: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />, <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, <see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" /> или <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-118">An entity to attach the custom attribute to: a <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />, <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, <see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" />, or a <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />.</span></span></param>
        <param name="constructor"><span data-ttu-id="ad16c-119">Конструктор настраиваемого атрибута: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> или <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-119">A custom attribute constructor: a <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span></span></param>
        <param name="value"><span data-ttu-id="ad16c-120">Большой двоичный объект со значением настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="ad16c-120">A custom attribute value blob.</span></span></param>
        <summary><span data-ttu-id="ad16c-121">Добавляет настраиваемый атрибут.</span><span class="sxs-lookup"><span data-stu-id="ad16c-121">Adds a custom attribute.</span></span></summary>
        <returns><span data-ttu-id="ad16c-122">Дескриптор добавляемого настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="ad16c-122">A handle to the added custom attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-123">Записи можно добавлять в любом порядке.</span><span class="sxs-lookup"><span data-stu-id="ad16c-123">Entries may be added in any order.</span></span> <span data-ttu-id="ad16c-124">Таблица автоматически сортируется при сериализации.</span><span class="sxs-lookup"><span data-stu-id="ad16c-124">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomDebugInformation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.CustomDebugInformationHandle AddCustomDebugInformation (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.GuidHandle kind, System.Reflection.Metadata.BlobHandle value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.CustomDebugInformationHandle AddCustomDebugInformation(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.GuidHandle kind, valuetype System.Reflection.Metadata.BlobHandle value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCustomDebugInformation (parent As EntityHandle, kind As GuidHandle, value As BlobHandle) As CustomDebugInformationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::CustomDebugInformationHandle AddCustomDebugInformation(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::GuidHandle kind, System::Reflection::Metadata::BlobHandle value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddCustomDebugInformation : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.CustomDebugInformationHandle" Usage="metadataBuilder.AddCustomDebugInformation (parent, kind, value)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.CustomDebugInformationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="kind" Type="System.Reflection.Metadata.GuidHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="ad16c-125">Сущность, к которой необходимо присоединить отладочную информацию: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />, <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, <see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" />, <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.DocumentHandle" />, <see cref="T:System.Reflection.Metadata.LocalScopeHandle" />, <see cref="T:System.Reflection.Metadata.LocalVariableHandle" />, <see cref="T:System.Reflection.Metadata.LocalConstantHandle" /> или <see cref="T:System.Reflection.Metadata.ImportScopeHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-125">An entity to attach the debug information to: a <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />, <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, <see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" />, <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.DocumentHandle" />, <see cref="T:System.Reflection.Metadata.LocalScopeHandle" />, <see cref="T:System.Reflection.Metadata.LocalVariableHandle" />, <see cref="T:System.Reflection.Metadata.LocalConstantHandle" />, or a <see cref="T:System.Reflection.Metadata.ImportScopeHandle" />.</span></span></param>
        <param name="kind"><span data-ttu-id="ad16c-126">Тип информации.</span><span class="sxs-lookup"><span data-stu-id="ad16c-126">The information kind.</span></span> <span data-ttu-id="ad16c-127">Определяет структуру большого двоичного объекта <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-127">Determines the structure of the <paramref name="value" /> blob.</span></span></param>
        <param name="value"><span data-ttu-id="ad16c-128">Большой двоичный объект с пользовательской отладочной информацией.</span><span class="sxs-lookup"><span data-stu-id="ad16c-128">The custom debug information blob.</span></span></param>
        <summary><span data-ttu-id="ad16c-129">Добавляет пользовательскую отладочную информацию.</span><span class="sxs-lookup"><span data-stu-id="ad16c-129">Adds custom debug information.</span></span></summary>
        <returns><span data-ttu-id="ad16c-130">Дескриптор добавляемой пользовательской отладочной информации.</span><span class="sxs-lookup"><span data-stu-id="ad16c-130">A handle to the added custom debug information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-131">Записи можно добавлять в любом порядке.</span><span class="sxs-lookup"><span data-stu-id="ad16c-131">Entries may be added in any order.</span></span> <span data-ttu-id="ad16c-132">Таблица автоматически сортируется при сериализации.</span><span class="sxs-lookup"><span data-stu-id="ad16c-132">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeclarativeSecurityAttribute">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.DeclarativeSecurityAttributeHandle AddDeclarativeSecurityAttribute (System.Reflection.Metadata.EntityHandle parent, System.Reflection.DeclarativeSecurityAction action, System.Reflection.Metadata.BlobHandle permissionSet);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.DeclarativeSecurityAttributeHandle AddDeclarativeSecurityAttribute(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.DeclarativeSecurityAction action, valuetype System.Reflection.Metadata.BlobHandle permissionSet) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.DeclarativeSecurityAction,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDeclarativeSecurityAttribute (parent As EntityHandle, action As DeclarativeSecurityAction, permissionSet As BlobHandle) As DeclarativeSecurityAttributeHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::DeclarativeSecurityAttributeHandle AddDeclarativeSecurityAttribute(System::Reflection::Metadata::EntityHandle parent, System::Reflection::DeclarativeSecurityAction action, System::Reflection::Metadata::BlobHandle permissionSet);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddDeclarativeSecurityAttribute : System.Reflection.Metadata.EntityHandle * System.Reflection.DeclarativeSecurityAction * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" Usage="metadataBuilder.AddDeclarativeSecurityAttribute (parent, action, permissionSet)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.DeclarativeSecurityAttributeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="action" Type="System.Reflection.DeclarativeSecurityAction" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="permissionSet" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="ad16c-133">Дескриптор родительской сущности, который может быть следующим: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> или <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-133">The parent entity handle, which can be one of the following: a <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, or a <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />.</span></span></param>
        <param name="action"><span data-ttu-id="ad16c-134">Декларативное действие безопасности.</span><span class="sxs-lookup"><span data-stu-id="ad16c-134">A declarative security action.</span></span></param>
        <param name="permissionSet"><span data-ttu-id="ad16c-135">Большой двоичный объект с набором разрешений.</span><span class="sxs-lookup"><span data-stu-id="ad16c-135">The permission set blob.</span></span></param>
        <summary><span data-ttu-id="ad16c-136">Добавляет атрибут декларативной безопасности к типу, методу или сборке.</span><span class="sxs-lookup"><span data-stu-id="ad16c-136">Adds a declarative security attribute to a type, method, or assembly.</span></span></summary>
        <returns><span data-ttu-id="ad16c-137">Дескриптор добавляемого атрибута декларативной безопасности.</span><span class="sxs-lookup"><span data-stu-id="ad16c-137">A handle to the added declarative security attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-138">Записи можно добавлять в любом порядке.</span><span class="sxs-lookup"><span data-stu-id="ad16c-138">Entries may be added in any order.</span></span> <span data-ttu-id="ad16c-139">Таблица автоматически сортируется при сериализации.</span><span class="sxs-lookup"><span data-stu-id="ad16c-139">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.DocumentHandle AddDocument (System.Reflection.Metadata.BlobHandle name, System.Reflection.Metadata.GuidHandle hashAlgorithm, System.Reflection.Metadata.BlobHandle hash, System.Reflection.Metadata.GuidHandle language);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.DocumentHandle AddDocument(valuetype System.Reflection.Metadata.BlobHandle name, valuetype System.Reflection.Metadata.GuidHandle hashAlgorithm, valuetype System.Reflection.Metadata.BlobHandle hash, valuetype System.Reflection.Metadata.GuidHandle language) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDocument (name As BlobHandle, hashAlgorithm As GuidHandle, hash As BlobHandle, language As GuidHandle) As DocumentHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::DocumentHandle AddDocument(System::Reflection::Metadata::BlobHandle name, System::Reflection::Metadata::GuidHandle hashAlgorithm, System::Reflection::Metadata::BlobHandle hash, System::Reflection::Metadata::GuidHandle language);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddDocument : System.Reflection.Metadata.BlobHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.BlobHandle * System.Reflection.Metadata.GuidHandle -&gt; System.Reflection.Metadata.DocumentHandle" Usage="metadataBuilder.AddDocument (name, hashAlgorithm, hash, language)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.DocumentHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.BlobHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Reflection.Metadata.GuidHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hash" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="language" Type="System.Reflection.Metadata.GuidHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ad16c-140">Большой двоичный объект с именем документа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-140">The document name blob.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="ad16c-141">Идентификатор GUID хэш-алгоритма, используемого для вычисления значения <paramref name="hash" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-141">THe GUID of the hash algorithm used to calculate the value of <paramref name="hash" />.</span></span></param>
        <param name="hash"><span data-ttu-id="ad16c-142">Хэш-код содержимого документа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-142">The hash of the document content.</span></span></param>
        <param name="language"><span data-ttu-id="ad16c-143">Идентификатор GUID языка.</span><span class="sxs-lookup"><span data-stu-id="ad16c-143">The GUID of the language.</span></span></param>
        <summary><span data-ttu-id="ad16c-144">Добавляет сведения об отладке документа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-144">Adds document debug information.</span></span></summary>
        <returns><span data-ttu-id="ad16c-145">Дескриптор добавляемого документа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-145">A handle to the added document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-146">Дополнительные сведения о `name` см. в разделе <https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#document-name-blob>.</span><span class="sxs-lookup"><span data-stu-id="ad16c-146">For more information about `name`, see <https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#document-name-blob>.</span></span>

<span data-ttu-id="ad16c-147">Дополнительные сведения об общих значениях для `hashAlgorithm`см. в разделе <https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#document-table-0x30>.</span><span class="sxs-lookup"><span data-stu-id="ad16c-147">For more information about common values for `hashAlgorithm`, see <https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#document-table-0x30>.</span></span>

<span data-ttu-id="ad16c-148">Дополнительные сведения об общих значениях для `language`см. в разделе <https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#document-table-0x30>.</span><span class="sxs-lookup"><span data-stu-id="ad16c-148">For more information about common values for `language`, see <https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#document-table-0x30>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEncLogEntry">
      <MemberSignature Language="C#" Value="public void AddEncLogEntry (System.Reflection.Metadata.EntityHandle entity, System.Reflection.Metadata.Ecma335.EditAndContinueOperation code);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEncLogEntry(valuetype System.Reflection.Metadata.EntityHandle entity, valuetype System.Reflection.Metadata.Ecma335.EditAndContinueOperation code) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.Ecma335.EditAndContinueOperation)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEncLogEntry (entity As EntityHandle, code As EditAndContinueOperation)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEncLogEntry(System::Reflection::Metadata::EntityHandle entity, System::Reflection::Metadata::Ecma335::EditAndContinueOperation code);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddEncLogEntry : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.Ecma335.EditAndContinueOperation -&gt; unit" Usage="metadataBuilder.AddEncLogEntry (entity, code)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="code" Type="System.Reflection.Metadata.Ecma335.EditAndContinueOperation" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="code">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEncMapEntry">
      <MemberSignature Language="C#" Value="public void AddEncMapEntry (System.Reflection.Metadata.EntityHandle entity);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEncMapEntry(valuetype System.Reflection.Metadata.EntityHandle entity) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry(System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEncMapEntry (entity As EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEncMapEntry(System::Reflection::Metadata::EntityHandle entity);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddEncMapEntry : System.Reflection.Metadata.EntityHandle -&gt; unit" Usage="metadataBuilder.AddEncMapEntry entity" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEvent">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.EventDefinitionHandle AddEvent (System.Reflection.EventAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle type);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.EventDefinitionHandle AddEvent(valuetype System.Reflection.EventAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle type) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent(System.Reflection.EventAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEvent (attributes As EventAttributes, name As StringHandle, type As EntityHandle) As EventDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::EventDefinitionHandle AddEvent(System::Reflection::EventAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle type);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddEvent : System.Reflection.EventAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.EventDefinitionHandle" Usage="metadataBuilder.AddEvent (attributes, name, type)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.EventDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.EventAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="type" Type="System.Reflection.Metadata.EntityHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ad16c-149">Атрибуты события.</span><span class="sxs-lookup"><span data-stu-id="ad16c-149">The event attributes.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-150">Имя события.</span><span class="sxs-lookup"><span data-stu-id="ad16c-150">The event name.</span></span></param>
        <param name="type"><span data-ttu-id="ad16c-151">Тип события: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> или <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-151">The type of the event: a <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <summary><span data-ttu-id="ad16c-152">Добавляет определение события.</span><span class="sxs-lookup"><span data-stu-id="ad16c-152">Adds an event definition.</span></span></summary>
        <returns><span data-ttu-id="ad16c-153">Дескриптор добавляемого определения события.</span><span class="sxs-lookup"><span data-stu-id="ad16c-153">A handle to the added event definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventMap">
      <MemberSignature Language="C#" Value="public void AddEventMap (System.Reflection.Metadata.TypeDefinitionHandle declaringType, System.Reflection.Metadata.EventDefinitionHandle eventList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEventMap(valuetype System.Reflection.Metadata.TypeDefinitionHandle declaringType, valuetype System.Reflection.Metadata.EventDefinitionHandle eventList) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventMap (declaringType As TypeDefinitionHandle, eventList As EventDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventMap(System::Reflection::Metadata::TypeDefinitionHandle declaringType, System::Reflection::Metadata::EventDefinitionHandle eventList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddEventMap : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.EventDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddEventMap (declaringType, eventList)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="declaringType" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="eventList" Type="System.Reflection.Metadata.EventDefinitionHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="declaringType">To be added.</param>
        <param name="eventList">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExportedType">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ExportedTypeHandle AddExportedType (System.Reflection.TypeAttributes attributes, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle implementation, int typeDefinitionId);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ExportedTypeHandle AddExportedType(valuetype System.Reflection.TypeAttributes attributes, valuetype System.Reflection.Metadata.StringHandle namespace, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle implementation, int32 typeDefinitionId) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExportedType (attributes As TypeAttributes, namespace As StringHandle, name As StringHandle, implementation As EntityHandle, typeDefinitionId As Integer) As ExportedTypeHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ExportedTypeHandle AddExportedType(System::Reflection::TypeAttributes attributes, System::Reflection::Metadata::StringHandle namespace, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle implementation, int typeDefinitionId);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddExportedType : System.Reflection.TypeAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle * int -&gt; System.Reflection.Metadata.ExportedTypeHandle" Usage="metadataBuilder.AddExportedType (attributes, namespace, name, implementation, typeDefinitionId)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ExportedTypeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.TypeAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="namespace" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="implementation" Type="System.Reflection.Metadata.EntityHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="typeDefinitionId" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ad16c-154">Атрибуты типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-154">The type attributes.</span></span></param>
        <param name="namespace"><span data-ttu-id="ad16c-155">Пространство имен типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-155">The type namespace.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-156">Имя типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-156">The type name.</span></span></param>
        <param name="implementation"><span data-ttu-id="ad16c-157">Дескриптор сущности реализации, который может быть следующим: <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" /> или <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-157">The implementation entity handle, which can be one of the following: an <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, or <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />.</span></span></param>
        <param name="typeDefinitionId"><span data-ttu-id="ad16c-158">Идентификатор определения типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-158">The type definition ID.</span></span></param>
        <summary><span data-ttu-id="ad16c-159">Добавляет экспортируемый тип.</span><span class="sxs-lookup"><span data-stu-id="ad16c-159">Adds an exported type.</span></span></summary>
        <returns><span data-ttu-id="ad16c-160">Дескриптор добавляемого экспортируемого типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-160">A handle to the added exported type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFieldDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.FieldDefinitionHandle AddFieldDefinition (System.Reflection.FieldAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.FieldDefinitionHandle AddFieldDefinition(valuetype System.Reflection.FieldAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition(System.Reflection.FieldAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFieldDefinition (attributes As FieldAttributes, name As StringHandle, signature As BlobHandle) As FieldDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::FieldDefinitionHandle AddFieldDefinition(System::Reflection::FieldAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddFieldDefinition : System.Reflection.FieldAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.FieldDefinitionHandle" Usage="metadataBuilder.AddFieldDefinition (attributes, name, signature)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.FieldDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ad16c-161">Атрибуты поля.</span><span class="sxs-lookup"><span data-stu-id="ad16c-161">The field attributes.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-162">Имя поля.</span><span class="sxs-lookup"><span data-stu-id="ad16c-162">The field name.</span></span></param>
        <param name="signature"><span data-ttu-id="ad16c-163">Подпись поля.</span><span class="sxs-lookup"><span data-stu-id="ad16c-163">The field signature.</span></span> <span data-ttu-id="ad16c-164">Используйте <see cref="M:System.Reflection.Metadata.Ecma335.BlobEncoder.FieldSignature" /> для создания большого двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-164">Use <see cref="M:System.Reflection.Metadata.Ecma335.BlobEncoder.FieldSignature" /> to construct the blob.</span></span></param>
        <summary><span data-ttu-id="ad16c-165">Добавляет определение поля.</span><span class="sxs-lookup"><span data-stu-id="ad16c-165">Adds a field definition.</span></span></summary>
        <returns><span data-ttu-id="ad16c-166">Дескриптор добавляемого определения поля.</span><span class="sxs-lookup"><span data-stu-id="ad16c-166">A handle to the added field definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFieldLayout">
      <MemberSignature Language="C#" Value="public void AddFieldLayout (System.Reflection.Metadata.FieldDefinitionHandle field, int offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFieldLayout(valuetype System.Reflection.Metadata.FieldDefinitionHandle field, int32 offset) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFieldLayout (field As FieldDefinitionHandle, offset As Integer)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFieldLayout(System::Reflection::Metadata::FieldDefinitionHandle field, int offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddFieldLayout : System.Reflection.Metadata.FieldDefinitionHandle * int -&gt; unit" Usage="metadataBuilder.AddFieldLayout (field, offset)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Reflection.Metadata.FieldDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="field"><span data-ttu-id="ad16c-167">Дескриптор определения поля.</span><span class="sxs-lookup"><span data-stu-id="ad16c-167">The field definition handle.</span></span></param>
        <param name="offset"><span data-ttu-id="ad16c-168">Смещение поля в байтах внутри экземпляра объявляющего типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-168">The byte offset of the field within the declaring type instance.</span></span></param>
        <summary><span data-ttu-id="ad16c-169">Определяет макет поля для определения поля.</span><span class="sxs-lookup"><span data-stu-id="ad16c-169">Defines a field layout of a field definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-170">Записи должны добавляться в том же порядке, что и соответствующие определения полей.</span><span class="sxs-lookup"><span data-stu-id="ad16c-170">Entries must be added in the same order as the corresponding field definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFieldRelativeVirtualAddress">
      <MemberSignature Language="C#" Value="public void AddFieldRelativeVirtualAddress (System.Reflection.Metadata.FieldDefinitionHandle field, int offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFieldRelativeVirtualAddress(valuetype System.Reflection.Metadata.FieldDefinitionHandle field, int32 offset) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFieldRelativeVirtualAddress (field As FieldDefinitionHandle, offset As Integer)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFieldRelativeVirtualAddress(System::Reflection::Metadata::FieldDefinitionHandle field, int offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddFieldRelativeVirtualAddress : System.Reflection.Metadata.FieldDefinitionHandle * int -&gt; unit" Usage="metadataBuilder.AddFieldRelativeVirtualAddress (field, offset)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Reflection.Metadata.FieldDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="field"><span data-ttu-id="ad16c-171">Дескриптор определения поля.</span><span class="sxs-lookup"><span data-stu-id="ad16c-171">The field definition handle.</span></span></param>
        <param name="offset"><span data-ttu-id="ad16c-172">Смещение внутри блока в образе PE, по которому хранятся начальные значения сопоставленных полей (обычно в разделе .text).</span><span class="sxs-lookup"><span data-stu-id="ad16c-172">The offset within the block in the PE image that stores initial values of mapped fields (usually in the .text section).</span></span></param>
        <summary><span data-ttu-id="ad16c-173">Добавляет сопоставление поля с его начальным значением, хранящимся в образе PE.</span><span class="sxs-lookup"><span data-stu-id="ad16c-173">Adds a mapping from a field to its initial value stored in the PE image.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-174">Целые поля должны добавляться в том же порядке, что и соответствующие определения полей.</span><span class="sxs-lookup"><span data-stu-id="ad16c-174">Entires must be added in the same order as the corresponding field definitions.</span></span>

<span data-ttu-id="ad16c-175">Окончательный относительный виртуальный адрес, хранящийся в метаданных, вычисляется при сериализации метаданных путем добавления смещения к виртуальному адресу начала блока.</span><span class="sxs-lookup"><span data-stu-id="ad16c-175">The final relative virtual address stored in the metadata is calculated when the metadata is serialized by adding the offset to the virtual address of the block start.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGenericParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.GenericParameterHandle AddGenericParameter (System.Reflection.Metadata.EntityHandle parent, System.Reflection.GenericParameterAttributes attributes, System.Reflection.Metadata.StringHandle name, int index);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.GenericParameterHandle AddGenericParameter(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.GenericParameterAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, int32 index) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter(System.Reflection.Metadata.EntityHandle,System.Reflection.GenericParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddGenericParameter (parent As EntityHandle, attributes As GenericParameterAttributes, name As StringHandle, index As Integer) As GenericParameterHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::GenericParameterHandle AddGenericParameter(System::Reflection::Metadata::EntityHandle parent, System::Reflection::GenericParameterAttributes attributes, System::Reflection::Metadata::StringHandle name, int index);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddGenericParameter : System.Reflection.Metadata.EntityHandle * System.Reflection.GenericParameterAttributes * System.Reflection.Metadata.StringHandle * int -&gt; System.Reflection.Metadata.GenericParameterHandle" Usage="metadataBuilder.AddGenericParameter (parent, attributes, name, index)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.GenericParameterHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.GenericParameterAttributes" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="ad16c-176">Дескриптор родительской сущности, который может быть <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" /> или <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-176">The parent entity handle, which can be either a <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />.</span></span></param>
        <param name="attributes"><span data-ttu-id="ad16c-177">Атрибуты универсального параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-177">The generic parameter attributes.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-178">Имя параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-178">The parameter name.</span></span></param>
        <param name="index"><span data-ttu-id="ad16c-179">Отсчитываемый от нуля индекс параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-179">The zero-based parameter index.</span></span></param>
        <summary><span data-ttu-id="ad16c-180">Добавляет определение универсального параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-180">Adds a generic parameter definition.</span></span></summary>
        <returns><span data-ttu-id="ad16c-181">Дескриптор добавляемого универсального параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-181">A handle to the added generic parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-182">Универсальные параметры должны добавляться в порядке, определенном с помощью закодированного индекса их родительской сущности (<xref:System.Reflection.Metadata.Ecma335.CodedIndex.TypeOrMethodDef(System.Reflection.Metadata.EntityHandle)?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="ad16c-182">Generic parameters must be added in an order determined by the coded index of their parent entity (<xref:System.Reflection.Metadata.Ecma335.CodedIndex.TypeOrMethodDef(System.Reflection.Metadata.EntityHandle)?displayProperty=nameWithType>).</span></span>

<span data-ttu-id="ad16c-183">Универсальные параметры с одним и тем же родителем должны упорядочиваться по `index`.</span><span class="sxs-lookup"><span data-stu-id="ad16c-183">Generic parameters with the same parent must be ordered by their `index`.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGenericParameterConstraint">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.GenericParameterConstraintHandle AddGenericParameterConstraint (System.Reflection.Metadata.GenericParameterHandle genericParameter, System.Reflection.Metadata.EntityHandle constraint);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.GenericParameterConstraintHandle AddGenericParameterConstraint(valuetype System.Reflection.Metadata.GenericParameterHandle genericParameter, valuetype System.Reflection.Metadata.EntityHandle constraint) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddGenericParameterConstraint (genericParameter As GenericParameterHandle, constraint As EntityHandle) As GenericParameterConstraintHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::GenericParameterConstraintHandle AddGenericParameterConstraint(System::Reflection::Metadata::GenericParameterHandle genericParameter, System::Reflection::Metadata::EntityHandle constraint);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddGenericParameterConstraint : System.Reflection.Metadata.GenericParameterHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.GenericParameterConstraintHandle" Usage="metadataBuilder.AddGenericParameterConstraint (genericParameter, constraint)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.GenericParameterConstraintHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericParameter" Type="System.Reflection.Metadata.GenericParameterHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="constraint" Type="System.Reflection.Metadata.EntityHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="genericParameter"><span data-ttu-id="ad16c-184">Ограничиваемый универсальный параметр.</span><span class="sxs-lookup"><span data-stu-id="ad16c-184">The generic parameter to constrain.</span></span></param>
        <param name="constraint"><span data-ttu-id="ad16c-185">Ограничение типа, которое может быть следующим: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> или <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-185">The type constraint, which can be one of the following: a <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> or a <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <summary><span data-ttu-id="ad16c-186">Добавляет ограничение типа к универсальному параметру.</span><span class="sxs-lookup"><span data-stu-id="ad16c-186">Adds a type constraint to a generic parameter.</span></span></summary>
        <returns><span data-ttu-id="ad16c-187">Дескриптор добавляемого ограничения универсального параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-187">A handle to the added generic parameter constraint.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-188">Ограничения должны добавляться в том же порядке, что и соответствующие универсальные параметры.</span><span class="sxs-lookup"><span data-stu-id="ad16c-188">Constraints must be added in the same order as the corresponding generic parameters.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportScope">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ImportScopeHandle AddImportScope (System.Reflection.Metadata.ImportScopeHandle parentScope, System.Reflection.Metadata.BlobHandle imports);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ImportScopeHandle AddImportScope(valuetype System.Reflection.Metadata.ImportScopeHandle parentScope, valuetype System.Reflection.Metadata.BlobHandle imports) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddImportScope (parentScope As ImportScopeHandle, imports As BlobHandle) As ImportScopeHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ImportScopeHandle AddImportScope(System::Reflection::Metadata::ImportScopeHandle parentScope, System::Reflection::Metadata::BlobHandle imports);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddImportScope : System.Reflection.Metadata.ImportScopeHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.ImportScopeHandle" Usage="metadataBuilder.AddImportScope (parentScope, imports)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ImportScopeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentScope" Type="System.Reflection.Metadata.ImportScopeHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="imports" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parentScope"><span data-ttu-id="ad16c-189">Дескриптор родительской области.</span><span class="sxs-lookup"><span data-stu-id="ad16c-189">The parent scope handle.</span></span></param>
        <param name="imports"><span data-ttu-id="ad16c-190">Дескриптор области импорта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-190">The import scope handle.</span></span></param>
        <summary><span data-ttu-id="ad16c-191">Добавляет сведения об отладке локальной области.</span><span class="sxs-lookup"><span data-stu-id="ad16c-191">Adds local scope debug information.</span></span></summary>
        <returns><span data-ttu-id="ad16c-192">Дескриптор добавляемой области импорта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-192">A handle to the added import scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-193">Дополнительные сведения о `imports` см. в разделе <https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#imports-blob>.</span><span class="sxs-lookup"><span data-stu-id="ad16c-193">For more information about `imports`, see <https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#imports-blob>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInterfaceImplementation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.InterfaceImplementationHandle AddInterfaceImplementation (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.EntityHandle implementedInterface);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.InterfaceImplementationHandle AddInterfaceImplementation(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, valuetype System.Reflection.Metadata.EntityHandle implementedInterface) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddInterfaceImplementation (type As TypeDefinitionHandle, implementedInterface As EntityHandle) As InterfaceImplementationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::InterfaceImplementationHandle AddInterfaceImplementation(System::Reflection::Metadata::TypeDefinitionHandle type, System::Reflection::Metadata::EntityHandle implementedInterface);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddInterfaceImplementation : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.InterfaceImplementationHandle" Usage="metadataBuilder.AddInterfaceImplementation (type, implementedInterface)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.InterfaceImplementationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="implementedInterface" Type="System.Reflection.Metadata.EntityHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ad16c-194">Тип, реализующий интерфейс.</span><span class="sxs-lookup"><span data-stu-id="ad16c-194">The type implementing the interface.</span></span></param>
        <param name="implementedInterface"><span data-ttu-id="ad16c-195">Реализуемый интерфейс, который может быть следующим: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> или <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-195">The interface being implemented, which can be one of the following: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <summary><span data-ttu-id="ad16c-196">Добавляет реализацию интерфейса к типу.</span><span class="sxs-lookup"><span data-stu-id="ad16c-196">Adds an interface implementation to a type.</span></span></summary>
        <returns><span data-ttu-id="ad16c-197">Дескриптор добавляемой реализации интерфейса.</span><span class="sxs-lookup"><span data-stu-id="ad16c-197">A handle to the added interface implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-198">Реализации интерфейса должны добавляться в том же порядке, что и соответствующие определения типов, реализующие интерфейс.</span><span class="sxs-lookup"><span data-stu-id="ad16c-198">Interface implementations must be added in the same order as the corresponding type definitions implementing the interface.</span></span>

<span data-ttu-id="ad16c-199">Если тип реализует несколько интерфейсов, соответствующие записи должны быть добавлены в порядке, определяемом их закодированными индексами (<xref:System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRefOrSpec(System.Reflection.Metadata.EntityHandle)?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="ad16c-199">If a type implements multiple interfaces, the corresponding entries must be added in the order determined by their coded indices (<xref:System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRefOrSpec(System.Reflection.Metadata.EntityHandle)?displayProperty=nameWithType>).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLocalConstant">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.LocalConstantHandle AddLocalConstant (System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.LocalConstantHandle AddLocalConstant(valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLocalConstant (name As StringHandle, signature As BlobHandle) As LocalConstantHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::LocalConstantHandle AddLocalConstant(System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddLocalConstant : System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.LocalConstantHandle" Usage="metadataBuilder.AddLocalConstant (name, signature)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.LocalConstantHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ad16c-200">Имя переменной.</span><span class="sxs-lookup"><span data-stu-id="ad16c-200">The name of the variable.</span></span></param>
        <param name="signature"><span data-ttu-id="ad16c-201">Большой двоичный объект LocalConstantSig.</span><span class="sxs-lookup"><span data-stu-id="ad16c-201">The LocalConstantSig blob.</span></span></param>
        <summary><span data-ttu-id="ad16c-202">Добавляет сведения об отладке локальной константы.</span><span class="sxs-lookup"><span data-stu-id="ad16c-202">Adds local constant debug information.</span></span></summary>
        <returns><span data-ttu-id="ad16c-203">Дескриптор добавляемой локальной константы.</span><span class="sxs-lookup"><span data-stu-id="ad16c-203">A handle to the added local constant.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-204">Дополнительные сведения о `signature`см. в разделе [BLOB-объект локалконстантсиг](https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#localconstantsig-blob) на сайте GitHub.</span><span class="sxs-lookup"><span data-stu-id="ad16c-204">For more information about `signature`, see: [LocalConstantSig Blob](https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#localconstantsig-blob) on GitHub.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLocalScope">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.LocalScopeHandle AddLocalScope (System.Reflection.Metadata.MethodDefinitionHandle method, System.Reflection.Metadata.ImportScopeHandle importScope, System.Reflection.Metadata.LocalVariableHandle variableList, System.Reflection.Metadata.LocalConstantHandle constantList, int startOffset, int length);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.LocalScopeHandle AddLocalScope(valuetype System.Reflection.Metadata.MethodDefinitionHandle method, valuetype System.Reflection.Metadata.ImportScopeHandle importScope, valuetype System.Reflection.Metadata.LocalVariableHandle variableList, valuetype System.Reflection.Metadata.LocalConstantHandle constantList, int32 startOffset, int32 length) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalConstantHandle,System.Int32,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLocalScope (method As MethodDefinitionHandle, importScope As ImportScopeHandle, variableList As LocalVariableHandle, constantList As LocalConstantHandle, startOffset As Integer, length As Integer) As LocalScopeHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::LocalScopeHandle AddLocalScope(System::Reflection::Metadata::MethodDefinitionHandle method, System::Reflection::Metadata::ImportScopeHandle importScope, System::Reflection::Metadata::LocalVariableHandle variableList, System::Reflection::Metadata::LocalConstantHandle constantList, int startOffset, int length);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddLocalScope : System.Reflection.Metadata.MethodDefinitionHandle * System.Reflection.Metadata.ImportScopeHandle * System.Reflection.Metadata.LocalVariableHandle * System.Reflection.Metadata.LocalConstantHandle * int * int -&gt; System.Reflection.Metadata.LocalScopeHandle" Usage="metadataBuilder.AddLocalScope (method, importScope, variableList, constantList, startOffset, length)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.LocalScopeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="importScope" Type="System.Reflection.Metadata.ImportScopeHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="variableList" Type="System.Reflection.Metadata.LocalVariableHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="constantList" Type="System.Reflection.Metadata.LocalConstantHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="startOffset" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="5" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="ad16c-205">Содержащий метод.</span><span class="sxs-lookup"><span data-stu-id="ad16c-205">The containing method.</span></span></param>
        <param name="importScope"><span data-ttu-id="ad16c-206">Дескриптор связанной области импорта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-206">The handle of the associated import scope.</span></span></param>
        <param name="variableList"><span data-ttu-id="ad16c-207">Если в области объявляются переменные, укажите дескриптор первой из них.</span><span class="sxs-lookup"><span data-stu-id="ad16c-207">If the scope declares variables, set this to the handle of the first one.</span></span> <span data-ttu-id="ad16c-208">В противном случае укажите дескриптор первой переменной, объявляемой в следующем определении области.</span><span class="sxs-lookup"><span data-stu-id="ad16c-208">Otherwise, set this to the handle of the first variable declared by the next scope definition.</span></span> <span data-ttu-id="ad16c-209"><see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.LocalVariableHandle(1)" />, если переменные не объявляются ни в одной области.</span><span class="sxs-lookup"><span data-stu-id="ad16c-209">If no scope defines any variables, <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.LocalVariableHandle(1)" />.</span></span></param>
        <param name="constantList"><span data-ttu-id="ad16c-210">Если в области объявляются константы, укажите дескриптор первой из них.</span><span class="sxs-lookup"><span data-stu-id="ad16c-210">If the scope declares constants, set this the handle of the first one.</span></span> <span data-ttu-id="ad16c-211">В противном случае укажите дескриптор первой константы, объявляемой в следующем определении области.</span><span class="sxs-lookup"><span data-stu-id="ad16c-211">Otherwise, set this to the handle of the first constant declared by the next scope definition.</span></span> <span data-ttu-id="ad16c-212"><see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.LocalConstantHandle(1)" />, если константы не объявляются ни в одной области.</span><span class="sxs-lookup"><span data-stu-id="ad16c-212">If no scope defines any constants, <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.LocalConstantHandle(1)" />.</span></span></param>
        <param name="startOffset"><span data-ttu-id="ad16c-213">Смещение первой инструкции, входящей в область.</span><span class="sxs-lookup"><span data-stu-id="ad16c-213">The offset of the first instruction covered by the scope.</span></span></param>
        <param name="length"><span data-ttu-id="ad16c-214">Длина области (в байтах).</span><span class="sxs-lookup"><span data-stu-id="ad16c-214">The length (in bytes) of the scope.</span></span></param>
        <summary><span data-ttu-id="ad16c-215">Добавляет сведения об отладке локальной области.</span><span class="sxs-lookup"><span data-stu-id="ad16c-215">Adds local scope debug information.</span></span></summary>
        <returns><span data-ttu-id="ad16c-216">Дескриптор добавляемой локальной области.</span><span class="sxs-lookup"><span data-stu-id="ad16c-216">A handle to the added local scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-217">Локальные области должны добавляться в том же порядке, что и соответствующее определение метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-217">Local scopes should be added in the same order as the corresponding method definition.</span></span>

<span data-ttu-id="ad16c-218">В методе они должны упорядочиваться по возрастанию `startOffset` а затем по убыванию `length`.</span><span class="sxs-lookup"><span data-stu-id="ad16c-218">Within a method, they should be ordered by ascending `startOffset` and then by descending `length`.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLocalVariable">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.LocalVariableHandle AddLocalVariable (System.Reflection.Metadata.LocalVariableAttributes attributes, int index, System.Reflection.Metadata.StringHandle name);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.LocalVariableHandle AddLocalVariable(valuetype System.Reflection.Metadata.LocalVariableAttributes attributes, int32 index, valuetype System.Reflection.Metadata.StringHandle name) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable(System.Reflection.Metadata.LocalVariableAttributes,System.Int32,System.Reflection.Metadata.StringHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLocalVariable (attributes As LocalVariableAttributes, index As Integer, name As StringHandle) As LocalVariableHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::LocalVariableHandle AddLocalVariable(System::Reflection::Metadata::LocalVariableAttributes attributes, int index, System::Reflection::Metadata::StringHandle name);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddLocalVariable : System.Reflection.Metadata.LocalVariableAttributes * int * System.Reflection.Metadata.StringHandle -&gt; System.Reflection.Metadata.LocalVariableHandle" Usage="metadataBuilder.AddLocalVariable (attributes, index, name)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.LocalVariableHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.Metadata.LocalVariableAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ad16c-219">Атрибуты локальной переменной.</span><span class="sxs-lookup"><span data-stu-id="ad16c-219">The local variable attributes.</span></span></param>
        <param name="index"><span data-ttu-id="ad16c-220">Отсчитываемый от нуля индекс локальной переменной в локальной сигнатуре.</span><span class="sxs-lookup"><span data-stu-id="ad16c-220">The zero-base index of the local variable in the local signature.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-221">Имя переменной.</span><span class="sxs-lookup"><span data-stu-id="ad16c-221">The name of the variable.</span></span></param>
        <summary><span data-ttu-id="ad16c-222">Добавляет сведения об отладке локальной переменной.</span><span class="sxs-lookup"><span data-stu-id="ad16c-222">Adds local variable debug information.</span></span></summary>
        <returns><span data-ttu-id="ad16c-223">Дескриптор добавляемой локальной переменной.</span><span class="sxs-lookup"><span data-stu-id="ad16c-223">A handle to the added local variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddManifestResource">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ManifestResourceHandle AddManifestResource (System.Reflection.ManifestResourceAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle implementation, uint offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ManifestResourceHandle AddManifestResource(valuetype System.Reflection.ManifestResourceAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle implementation, unsigned int32 offset) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource(System.Reflection.ManifestResourceAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.UInt32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddManifestResource (attributes As ManifestResourceAttributes, name As StringHandle, implementation As EntityHandle, offset As UInteger) As ManifestResourceHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ManifestResourceHandle AddManifestResource(System::Reflection::ManifestResourceAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle implementation, System::UInt32 offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddManifestResource : System.Reflection.ManifestResourceAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle * uint32 -&gt; System.Reflection.Metadata.ManifestResourceHandle" Usage="metadataBuilder.AddManifestResource (attributes, name, implementation, offset)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ManifestResourceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.ManifestResourceAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="implementation" Type="System.Reflection.Metadata.EntityHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="offset" Type="System.UInt32" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ad16c-224">Атрибуты ресурса манифеста.</span><span class="sxs-lookup"><span data-stu-id="ad16c-224">The manifest resource attributes.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-225">Имя ресурса манифеста.</span><span class="sxs-lookup"><span data-stu-id="ad16c-225">The name of the manifest resource.</span></span></param>
        <param name="implementation"><span data-ttu-id="ad16c-226">Дескриптор сущности реализации, который может быть следующим: <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-226">The implementation entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, or <see langword="null" />.</span></span></param>
        <param name="offset"><span data-ttu-id="ad16c-227">Задает смещение в байтах, с которого начинается эта запись ресурса в указанном файле.</span><span class="sxs-lookup"><span data-stu-id="ad16c-227">Specifies the byte offset within the referenced file at which this resource record begins.</span></span></param>
        <summary><span data-ttu-id="ad16c-228">Добавляет ресурс манифеста.</span><span class="sxs-lookup"><span data-stu-id="ad16c-228">Adds a manifest resource.</span></span></summary>
        <returns><span data-ttu-id="ad16c-229">Дескриптор добавляемого ресурса манифеста.</span><span class="sxs-lookup"><span data-stu-id="ad16c-229">A handle to the added manifest resource.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMarshallingDescriptor">
      <MemberSignature Language="C#" Value="public void AddMarshallingDescriptor (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.BlobHandle descriptor);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMarshallingDescriptor(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.BlobHandle descriptor) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMarshallingDescriptor (parent As EntityHandle, descriptor As BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMarshallingDescriptor(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::BlobHandle descriptor);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMarshallingDescriptor : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.BlobHandle -&gt; unit" Usage="metadataBuilder.AddMarshallingDescriptor (parent, descriptor)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="descriptor" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="ad16c-230">Дескриптор родительской сущности, который может быть следующим: <see cref="T:System.Reflection.Metadata.ParameterHandle" /> или <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-230">The parent entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.ParameterHandle" /> or <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />.</span></span></param>
        <param name="descriptor"><span data-ttu-id="ad16c-231">Большой двоичный объект дескриптора.</span><span class="sxs-lookup"><span data-stu-id="ad16c-231">The descriptor blob.</span></span></param>
        <summary><span data-ttu-id="ad16c-232">Добавляет сведения о маршалинге к полю или параметру.</span><span class="sxs-lookup"><span data-stu-id="ad16c-232">Adds marshalling information to a field or a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-233">Записи можно добавлять в любом порядке.</span><span class="sxs-lookup"><span data-stu-id="ad16c-233">Entries may be added in any order.</span></span> <span data-ttu-id="ad16c-234">Таблица автоматически сортируется при сериализации.</span><span class="sxs-lookup"><span data-stu-id="ad16c-234">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMemberReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MemberReferenceHandle AddMemberReference (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MemberReferenceHandle AddMemberReference(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMemberReference (parent As EntityHandle, name As StringHandle, signature As BlobHandle) As MemberReferenceHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MemberReferenceHandle AddMemberReference(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMemberReference : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.MemberReferenceHandle" Usage="metadataBuilder.AddMemberReference (parent, name, signature)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MemberReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="ad16c-235">Содержащая сущность, которая может быть следующей: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> или <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-235">The containing entity, which can be one of the following: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-236">Имя элемента.</span><span class="sxs-lookup"><span data-stu-id="ad16c-236">The member name.</span></span></param>
        <param name="signature"><span data-ttu-id="ad16c-237">Сигнатура элемента.</span><span class="sxs-lookup"><span data-stu-id="ad16c-237">The member signature.</span></span></param>
        <summary><span data-ttu-id="ad16c-238">Добавляет строку в таблицу MemberRef.</span><span class="sxs-lookup"><span data-stu-id="ad16c-238">Adds a MemberRef table row.</span></span></summary>
        <returns><span data-ttu-id="ad16c-239">Дескриптор добавляемой ссылки на элемент.</span><span class="sxs-lookup"><span data-stu-id="ad16c-239">A handle to the added member reference.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodDebugInformation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodDebugInformationHandle AddMethodDebugInformation (System.Reflection.Metadata.DocumentHandle document, System.Reflection.Metadata.BlobHandle sequencePoints);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodDebugInformationHandle AddMethodDebugInformation(valuetype System.Reflection.Metadata.DocumentHandle document, valuetype System.Reflection.Metadata.BlobHandle sequencePoints) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodDebugInformation (document As DocumentHandle, sequencePoints As BlobHandle) As MethodDebugInformationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodDebugInformationHandle AddMethodDebugInformation(System::Reflection::Metadata::DocumentHandle document, System::Reflection::Metadata::BlobHandle sequencePoints);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodDebugInformation : System.Reflection.Metadata.DocumentHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.MethodDebugInformationHandle" Usage="metadataBuilder.AddMethodDebugInformation (document, sequencePoints)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodDebugInformationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Reflection.Metadata.DocumentHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="sequencePoints" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="ad16c-240">Дескриптор отдельного документа, содержащего все точки последовательности метода, или значение <see langword="null" />, если метод не имеет точек последовательности или охватывает несколько документов.</span><span class="sxs-lookup"><span data-stu-id="ad16c-240">The handle of a single document containing all sequence points of the method, or <see langword="null" /> if the method doesn't have sequence points or spans multiple documents.</span></span></param>
        <param name="sequencePoints"><span data-ttu-id="ad16c-241">Большой двоичный объект с точками последовательности или значение <see langword="null" />, если метод не имеет точек последовательности.</span><span class="sxs-lookup"><span data-stu-id="ad16c-241">The sequence Points blob, or <see langword="null" /> if the method doesn't have sequence points.</span></span></param>
        <summary><span data-ttu-id="ad16c-242">Добавляет сведения об отладке метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-242">Adds method debug information.</span></span></summary>
        <returns><span data-ttu-id="ad16c-243">Дескриптор добавляемых сведений об отладке метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-243">A handle to the added method debug information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-244">Дополнительные сведения о `sequencePoints`см. в разделе: [большой двоичный объект точек последовательности](https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#sequence-points-blob) в GitHub.</span><span class="sxs-lookup"><span data-stu-id="ad16c-244">For more information about `sequencePoints`, see: [Sequence Points Blob](https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#sequence-points-blob) on GitHub.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodDefinitionHandle AddMethodDefinition (System.Reflection.MethodAttributes attributes, System.Reflection.MethodImplAttributes implAttributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature, int bodyOffset, System.Reflection.Metadata.ParameterHandle parameterList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodDefinitionHandle AddMethodDefinition(valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.MethodImplAttributes implAttributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature, int32 bodyOffset, valuetype System.Reflection.Metadata.ParameterHandle parameterList) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition(System.Reflection.MethodAttributes,System.Reflection.MethodImplAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Int32,System.Reflection.Metadata.ParameterHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodDefinition (attributes As MethodAttributes, implAttributes As MethodImplAttributes, name As StringHandle, signature As BlobHandle, bodyOffset As Integer, parameterList As ParameterHandle) As MethodDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodDefinitionHandle AddMethodDefinition(System::Reflection::MethodAttributes attributes, System::Reflection::MethodImplAttributes implAttributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature, int bodyOffset, System::Reflection::Metadata::ParameterHandle parameterList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodDefinition : System.Reflection.MethodAttributes * System.Reflection.MethodImplAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * int * System.Reflection.Metadata.ParameterHandle -&gt; System.Reflection.Metadata.MethodDefinitionHandle" Usage="metadataBuilder.AddMethodDefinition (attributes, implAttributes, name, signature, bodyOffset, parameterList)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="implAttributes" Type="System.Reflection.MethodImplAttributes" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="bodyOffset" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="parameterList" Type="System.Reflection.Metadata.ParameterHandle" Index="5" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ad16c-245">Атрибуты метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-245">The method attributes.</span></span></param>
        <param name="implAttributes"><span data-ttu-id="ad16c-246">Атрибуты реализации метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-246">The method implementation attributes.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-247">Имя метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-247">The method name.</span></span></param>
        <param name="signature"><span data-ttu-id="ad16c-248">Сигнатура метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-248">The method signature.</span></span></param>
        <param name="bodyOffset"><span data-ttu-id="ad16c-249">Смещение внутри блока в образе PE, по которому хранятся тела методов (поток IL), или значение –1, если у метода нет тела.</span><span class="sxs-lookup"><span data-stu-id="ad16c-249">Offset within the block in the PE image that stores method bodies (the IL stream), or -1 if the method doesn't have a body.</span></span></param>
        <param name="parameterList"><span data-ttu-id="ad16c-250">Если метод объявляет параметры в таблице Params, укажите дескриптор первого из них.</span><span class="sxs-lookup"><span data-stu-id="ad16c-250">If the method declares parameters in the Params table, set this to the handle of the first one.</span></span> <span data-ttu-id="ad16c-251">В противном случае укажите дескриптор первого параметра, объявляемого в следующем определении метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-251">Otherwise, set this to the handle of the first parameter declared by the next method definition.</span></span> <span data-ttu-id="ad16c-252"><see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.ParameterHandle(1)" />, если в модуле не объявляются параметры.</span><span class="sxs-lookup"><span data-stu-id="ad16c-252">If no parameters are declared in the module, <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.ParameterHandle(1)" />.</span></span></param>
        <summary><span data-ttu-id="ad16c-253">Добавляет определение метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-253">Adds a method definition.</span></span></summary>
        <returns><span data-ttu-id="ad16c-254">Дескриптор добавляемого определения метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-254">A handle to the added method definition.</span></span></returns>
        <remarks><span data-ttu-id="ad16c-255">Окончательный относительный виртуальный адрес, хранящийся в метаданных, вычисляется при сериализации метаданных путем добавления смещения к виртуальному адресу начала блока.</span><span class="sxs-lookup"><span data-stu-id="ad16c-255">The final relative virtual address stored in the metadata is calculated when the metadata is serialized by adding the offset to the virtual address of the beginning of the block.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodImplementation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodImplementationHandle AddMethodImplementation (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.EntityHandle methodBody, System.Reflection.Metadata.EntityHandle methodDeclaration);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodImplementationHandle AddMethodImplementation(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, valuetype System.Reflection.Metadata.EntityHandle methodBody, valuetype System.Reflection.Metadata.EntityHandle methodDeclaration) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodImplementation (type As TypeDefinitionHandle, methodBody As EntityHandle, methodDeclaration As EntityHandle) As MethodImplementationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodImplementationHandle AddMethodImplementation(System::Reflection::Metadata::TypeDefinitionHandle type, System::Reflection::Metadata::EntityHandle methodBody, System::Reflection::Metadata::EntityHandle methodDeclaration);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodImplementation : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.MethodImplementationHandle" Usage="metadataBuilder.AddMethodImplementation (type, methodBody, methodDeclaration)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodImplementationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="methodBody" Type="System.Reflection.Metadata.EntityHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="methodDeclaration" Type="System.Reflection.Metadata.EntityHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ad16c-256">Определение типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-256">The type definition.</span></span></param>
        <param name="methodBody"><span data-ttu-id="ad16c-257">Дескриптор сущности тела метода, который может быть следующим: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> или <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-257">The method body entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span></span></param>
        <param name="methodDeclaration"><span data-ttu-id="ad16c-258">Дескриптор сущности объявления метода, который может быть следующим: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> или <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-258">The method declaration entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span></span></param>
        <summary><span data-ttu-id="ad16c-259">Определяет реализацию объявления метода внутри типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-259">Defines an implementation for a method declaration within a type.</span></span></summary>
        <returns><span data-ttu-id="ad16c-260">Дескриптор добавляемой реализации метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-260">A handle to the added method implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-261">Реализации методов должны добавляться в том же порядке, что и соответствующие определения типов.</span><span class="sxs-lookup"><span data-stu-id="ad16c-261">Method implementations must be added in the same order as the corresponding type definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodImport">
      <MemberSignature Language="C#" Value="public void AddMethodImport (System.Reflection.Metadata.MethodDefinitionHandle method, System.Reflection.MethodImportAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.ModuleReferenceHandle module);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMethodImport(valuetype System.Reflection.Metadata.MethodDefinitionHandle method, valuetype System.Reflection.MethodImportAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.ModuleReferenceHandle module) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.MethodImportAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.ModuleReferenceHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMethodImport (method As MethodDefinitionHandle, attributes As MethodImportAttributes, name As StringHandle, module As ModuleReferenceHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMethodImport(System::Reflection::Metadata::MethodDefinitionHandle method, System::Reflection::MethodImportAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::ModuleReferenceHandle module);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodImport : System.Reflection.Metadata.MethodDefinitionHandle * System.Reflection.MethodImportAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.ModuleReferenceHandle -&gt; unit" Usage="metadataBuilder.AddMethodImport (method, attributes, name, module)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.MethodImportAttributes" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="module" Type="System.Reflection.Metadata.ModuleReferenceHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="ad16c-262">Дескриптор определения метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-262">The method definition handle.</span></span></param>
        <param name="attributes"><span data-ttu-id="ad16c-263">Атрибуты импорта метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-263">The method import attributes.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-264">Имя неуправляемого метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-264">The unmanaged method name.</span></span></param>
        <param name="module"><span data-ttu-id="ad16c-265">Модуль, содержащий неуправляемый метод.</span><span class="sxs-lookup"><span data-stu-id="ad16c-265">The module containing the unmanaged method.</span></span></param>
        <summary><span data-ttu-id="ad16c-266">Добавляет сведения об импорте в определение метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-266">Adds import information to a method definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-267">Импорты методов должны добавляться в том же порядке, что и соответствующие определения методов.</span><span class="sxs-lookup"><span data-stu-id="ad16c-267">Method imports must be added in the same order as the corresponding method definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodSemantics">
      <MemberSignature Language="C#" Value="public void AddMethodSemantics (System.Reflection.Metadata.EntityHandle association, System.Reflection.MethodSemanticsAttributes semantics, System.Reflection.Metadata.MethodDefinitionHandle methodDefinition);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMethodSemantics(valuetype System.Reflection.Metadata.EntityHandle association, valuetype System.Reflection.MethodSemanticsAttributes semantics, valuetype System.Reflection.Metadata.MethodDefinitionHandle methodDefinition) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics(System.Reflection.Metadata.EntityHandle,System.Reflection.MethodSemanticsAttributes,System.Reflection.Metadata.MethodDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMethodSemantics (association As EntityHandle, semantics As MethodSemanticsAttributes, methodDefinition As MethodDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMethodSemantics(System::Reflection::Metadata::EntityHandle association, System::Reflection::MethodSemanticsAttributes semantics, System::Reflection::Metadata::MethodDefinitionHandle methodDefinition);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodSemantics : System.Reflection.Metadata.EntityHandle * System.Reflection.MethodSemanticsAttributes * System.Reflection.Metadata.MethodDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddMethodSemantics (association, semantics, methodDefinition)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="association" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="semantics" Type="System.Reflection.MethodSemanticsAttributes" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="methodDefinition" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="association"><span data-ttu-id="ad16c-268">Дескриптор сущности связи, который может быть следующим: <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" /> или <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-268">The association entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />.</span></span></param>
        <param name="semantics"><span data-ttu-id="ad16c-269">Атрибуты семантики метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-269">The method semantics attributes.</span></span></param>
        <param name="methodDefinition"><span data-ttu-id="ad16c-270">Определение метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-270">The method definition.</span></span></param>
        <summary><span data-ttu-id="ad16c-271">Связывает метод (получения, задания, добавления и т. д.) со свойством или событием.</span><span class="sxs-lookup"><span data-stu-id="ad16c-271">Associates a method (a getter, a setter, an adder, etc.) with a property or an event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-272">Записи можно добавлять в любом порядке.</span><span class="sxs-lookup"><span data-stu-id="ad16c-272">Entries may be added in any order.</span></span> <span data-ttu-id="ad16c-273">Таблица автоматически сортируется при сериализации.</span><span class="sxs-lookup"><span data-stu-id="ad16c-273">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodSpecification">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodSpecificationHandle AddMethodSpecification (System.Reflection.Metadata.EntityHandle method, System.Reflection.Metadata.BlobHandle instantiation);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodSpecificationHandle AddMethodSpecification(valuetype System.Reflection.Metadata.EntityHandle method, valuetype System.Reflection.Metadata.BlobHandle instantiation) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodSpecification (method As EntityHandle, instantiation As BlobHandle) As MethodSpecificationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodSpecificationHandle AddMethodSpecification(System::Reflection::Metadata::EntityHandle method, System::Reflection::Metadata::BlobHandle instantiation);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodSpecification : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.MethodSpecificationHandle" Usage="metadataBuilder.AddMethodSpecification (method, instantiation)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodSpecificationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="instantiation" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="ad16c-274">Дескриптор сущности универсального метода, который может быть следующим: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> или <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-274">The generic method entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span></span></param>
        <param name="instantiation"><span data-ttu-id="ad16c-275">Большой двоичный объект для создания экземпляра, который кодирует универсальные аргументы метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-275">The instantiation blob encoding the generic arguments of the method.</span></span></param>
        <summary><span data-ttu-id="ad16c-276">Добавляет спецификацию метода (для создания экземпляра).</span><span class="sxs-lookup"><span data-stu-id="ad16c-276">Adds a method specification (an instantiation).</span></span></summary>
        <returns><span data-ttu-id="ad16c-277">Дескриптор добавляемой спецификации метода.</span><span class="sxs-lookup"><span data-stu-id="ad16c-277">A handle to the added method specification.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ModuleDefinitionHandle AddModule (int generation, System.Reflection.Metadata.StringHandle moduleName, System.Reflection.Metadata.GuidHandle mvid, System.Reflection.Metadata.GuidHandle encId, System.Reflection.Metadata.GuidHandle encBaseId);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ModuleDefinitionHandle AddModule(int32 generation, valuetype System.Reflection.Metadata.StringHandle moduleName, valuetype System.Reflection.Metadata.GuidHandle mvid, valuetype System.Reflection.Metadata.GuidHandle encId, valuetype System.Reflection.Metadata.GuidHandle encBaseId) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule(System.Int32,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddModule (generation As Integer, moduleName As StringHandle, mvid As GuidHandle, encId As GuidHandle, encBaseId As GuidHandle) As ModuleDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ModuleDefinitionHandle AddModule(int generation, System::Reflection::Metadata::StringHandle moduleName, System::Reflection::Metadata::GuidHandle mvid, System::Reflection::Metadata::GuidHandle encId, System::Reflection::Metadata::GuidHandle encBaseId);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddModule : int * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.GuidHandle -&gt; System.Reflection.Metadata.ModuleDefinitionHandle" Usage="metadataBuilder.AddModule (generation, moduleName, mvid, encId, encBaseId)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ModuleDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="moduleName" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="mvid" Type="System.Reflection.Metadata.GuidHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="encId" Type="System.Reflection.Metadata.GuidHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="encBaseId" Type="System.Reflection.Metadata.GuidHandle" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="generation">To be added.</param>
        <param name="moduleName">To be added.</param>
        <param name="mvid">To be added.</param>
        <param name="encId">To be added.</param>
        <param name="encBaseId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddModuleReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ModuleReferenceHandle AddModuleReference (System.Reflection.Metadata.StringHandle moduleName);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ModuleReferenceHandle AddModuleReference(valuetype System.Reflection.Metadata.StringHandle moduleName) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference(System.Reflection.Metadata.StringHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddModuleReference (moduleName As StringHandle) As ModuleReferenceHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ModuleReferenceHandle AddModuleReference(System::Reflection::Metadata::StringHandle moduleName);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddModuleReference : System.Reflection.Metadata.StringHandle -&gt; System.Reflection.Metadata.ModuleReferenceHandle" Usage="metadataBuilder.AddModuleReference moduleName" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ModuleReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.Reflection.Metadata.StringHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="moduleName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNestedType">
      <MemberSignature Language="C#" Value="public void AddNestedType (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.TypeDefinitionHandle enclosingType);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNestedType(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, valuetype System.Reflection.Metadata.TypeDefinitionHandle enclosingType) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNestedType (type As TypeDefinitionHandle, enclosingType As TypeDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddNestedType(System::Reflection::Metadata::TypeDefinitionHandle type, System::Reflection::Metadata::TypeDefinitionHandle enclosingType);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddNestedType : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.TypeDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddNestedType (type, enclosingType)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="enclosingType" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ad16c-278">Дескриптор определения вложенного типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-278">The nested type definition handle.</span></span></param>
        <param name="enclosingType"><span data-ttu-id="ad16c-279">Дескриптор определения включающего типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-279">The enclosing type definition handle.</span></span></param>
        <summary><span data-ttu-id="ad16c-280">Определяет отношение вложенности к указанным определениям типов.</span><span class="sxs-lookup"><span data-stu-id="ad16c-280">Defines a nesting relationship to specified type definitions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-281">Записи должны добавляться в том же порядке, что и соответствующие определения вложенных типов.</span><span class="sxs-lookup"><span data-stu-id="ad16c-281">Entries must be added in the same order as the corresponding nested type definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ParameterHandle AddParameter (System.Reflection.ParameterAttributes attributes, System.Reflection.Metadata.StringHandle name, int sequenceNumber);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ParameterHandle AddParameter(valuetype System.Reflection.ParameterAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, int32 sequenceNumber) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter(System.Reflection.ParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParameter (attributes As ParameterAttributes, name As StringHandle, sequenceNumber As Integer) As ParameterHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ParameterHandle AddParameter(System::Reflection::ParameterAttributes attributes, System::Reflection::Metadata::StringHandle name, int sequenceNumber);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddParameter : System.Reflection.ParameterAttributes * System.Reflection.Metadata.StringHandle * int -&gt; System.Reflection.Metadata.ParameterHandle" Usage="metadataBuilder.AddParameter (attributes, name, sequenceNumber)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ParameterHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="sequenceNumber" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ad16c-282">Атрибуты параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-282">The parameter attributes.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-283">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="ad16c-283">Optional.</span></span> <span data-ttu-id="ad16c-284">Имя параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-284">The parameter name.</span></span></param>
        <param name="sequenceNumber"><span data-ttu-id="ad16c-285">Порядковый номер параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-285">The sequence number of the parameter.</span></span> <span data-ttu-id="ad16c-286">Значение 0 указывает на тип возвращаемого значения метода-владельца; затем его параметры нумеруются от 1.</span><span class="sxs-lookup"><span data-stu-id="ad16c-286">A value of 0 refers to the owner method's return type; its parameters are then numbered from 1 onward.</span></span></param>
        <summary><span data-ttu-id="ad16c-287">Добавляет определение параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-287">Adds a parameter definition.</span></span></summary>
        <returns><span data-ttu-id="ad16c-288">Дескриптор добавляемого параметра.</span><span class="sxs-lookup"><span data-stu-id="ad16c-288">A handle to the added parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.PropertyDefinitionHandle AddProperty (System.Reflection.PropertyAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.PropertyDefinitionHandle AddProperty(valuetype System.Reflection.PropertyAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty(System.Reflection.PropertyAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddProperty (attributes As PropertyAttributes, name As StringHandle, signature As BlobHandle) As PropertyDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::PropertyDefinitionHandle AddProperty(System::Reflection::PropertyAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddProperty : System.Reflection.PropertyAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.PropertyDefinitionHandle" Usage="metadataBuilder.AddProperty (attributes, name, signature)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.PropertyDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ad16c-289">Атрибуты свойства.</span><span class="sxs-lookup"><span data-stu-id="ad16c-289">The property attributes.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-290">Имя свойства.</span><span class="sxs-lookup"><span data-stu-id="ad16c-290">The property name.</span></span></param>
        <param name="signature"><span data-ttu-id="ad16c-291">Сигнатура свойства.</span><span class="sxs-lookup"><span data-stu-id="ad16c-291">The signature of the property.</span></span></param>
        <summary><span data-ttu-id="ad16c-292">Добавляет определение свойства.</span><span class="sxs-lookup"><span data-stu-id="ad16c-292">Adds a property definition.</span></span></summary>
        <returns><span data-ttu-id="ad16c-293">Дескриптор добавляемого определения свойства.</span><span class="sxs-lookup"><span data-stu-id="ad16c-293">A handle to the added property definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyMap">
      <MemberSignature Language="C#" Value="public void AddPropertyMap (System.Reflection.Metadata.TypeDefinitionHandle declaringType, System.Reflection.Metadata.PropertyDefinitionHandle propertyList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyMap(valuetype System.Reflection.Metadata.TypeDefinitionHandle declaringType, valuetype System.Reflection.Metadata.PropertyDefinitionHandle propertyList) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyMap (declaringType As TypeDefinitionHandle, propertyList As PropertyDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyMap(System::Reflection::Metadata::TypeDefinitionHandle declaringType, System::Reflection::Metadata::PropertyDefinitionHandle propertyList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddPropertyMap : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.PropertyDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddPropertyMap (declaringType, propertyList)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="declaringType" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="propertyList" Type="System.Reflection.Metadata.PropertyDefinitionHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="declaringType">To be added.</param>
        <param name="propertyList">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStandaloneSignature">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StandaloneSignatureHandle AddStandaloneSignature (System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.StandaloneSignatureHandle AddStandaloneSignature(valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature(System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddStandaloneSignature (signature As BlobHandle) As StandaloneSignatureHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::StandaloneSignatureHandle AddStandaloneSignature(System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddStandaloneSignature : System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.StandaloneSignatureHandle" Usage="metadataBuilder.AddStandaloneSignature signature" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StandaloneSignatureHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="signature">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStateMachineMethod">
      <MemberSignature Language="C#" Value="public void AddStateMachineMethod (System.Reflection.Metadata.MethodDefinitionHandle moveNextMethod, System.Reflection.Metadata.MethodDefinitionHandle kickoffMethod);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddStateMachineMethod(valuetype System.Reflection.Metadata.MethodDefinitionHandle moveNextMethod, valuetype System.Reflection.Metadata.MethodDefinitionHandle kickoffMethod) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddStateMachineMethod (moveNextMethod As MethodDefinitionHandle, kickoffMethod As MethodDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddStateMachineMethod(System::Reflection::Metadata::MethodDefinitionHandle moveNextMethod, System::Reflection::Metadata::MethodDefinitionHandle kickoffMethod);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddStateMachineMethod : System.Reflection.Metadata.MethodDefinitionHandle * System.Reflection.Metadata.MethodDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddStateMachineMethod (moveNextMethod, kickoffMethod)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveNextMethod" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="kickoffMethod" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="moveNextMethod"><span data-ttu-id="ad16c-294">Дескриптор метода <see langword="MoveNext" /> конечного автомата (метода, созданного компилятором).</span><span class="sxs-lookup"><span data-stu-id="ad16c-294">The handle of the <see langword="MoveNext" /> method of the state machine (the compiler-generated method).</span></span></param>
        <param name="kickoffMethod"><span data-ttu-id="ad16c-295">Дескриптор начального метода (определенного пользователем метода-итератора или асинхронного метода).</span><span class="sxs-lookup"><span data-stu-id="ad16c-295">The handle of the kickoff method (the user defined iterator/async method).</span></span></param>
        <summary><span data-ttu-id="ad16c-296">Добавляет сведения об отладке метода конечного автомата.</span><span class="sxs-lookup"><span data-stu-id="ad16c-296">Adds state machine method debug information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-297">Записи следует добавлять в том же порядке, что и соответствующие определения методов <see langword="MoveNext" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-297">Entries should be added in the same order as the corresponding <see langword="MoveNext" /> method definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.TypeDefinitionHandle AddTypeDefinition (System.Reflection.TypeAttributes attributes, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle baseType, System.Reflection.Metadata.FieldDefinitionHandle fieldList, System.Reflection.Metadata.MethodDefinitionHandle methodList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.TypeDefinitionHandle AddTypeDefinition(valuetype System.Reflection.TypeAttributes attributes, valuetype System.Reflection.Metadata.StringHandle namespace, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle baseType, valuetype System.Reflection.Metadata.FieldDefinitionHandle fieldList, valuetype System.Reflection.Metadata.MethodDefinitionHandle methodList) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTypeDefinition (attributes As TypeAttributes, namespace As StringHandle, name As StringHandle, baseType As EntityHandle, fieldList As FieldDefinitionHandle, methodList As MethodDefinitionHandle) As TypeDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::TypeDefinitionHandle AddTypeDefinition(System::Reflection::TypeAttributes attributes, System::Reflection::Metadata::StringHandle namespace, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle baseType, System::Reflection::Metadata::FieldDefinitionHandle fieldList, System::Reflection::Metadata::MethodDefinitionHandle methodList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddTypeDefinition : System.Reflection.TypeAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.FieldDefinitionHandle * System.Reflection.Metadata.MethodDefinitionHandle -&gt; System.Reflection.Metadata.TypeDefinitionHandle" Usage="metadataBuilder.AddTypeDefinition (attributes, namespace, name, baseType, fieldList, methodList)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.TypeAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="namespace" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="baseType" Type="System.Reflection.Metadata.EntityHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="fieldList" Type="System.Reflection.Metadata.FieldDefinitionHandle" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="methodList" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="5" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ad16c-298">Атрибуты типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-298">The type attributes.</span></span></param>
        <param name="namespace"><span data-ttu-id="ad16c-299">Пространство имен типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-299">The type namespace.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-300">Имя типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-300">The type name.</span></span></param>
        <param name="baseType"><span data-ttu-id="ad16c-301">Дескриптор сущности базового типа, который может быть следующим: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-301">The base type entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, or <see langword="null" />.</span></span></param>
        <param name="fieldList"><span data-ttu-id="ad16c-302">Если в типе объявляются поля, укажите дескриптор первого из них.</span><span class="sxs-lookup"><span data-stu-id="ad16c-302">If the type declares fields, set this to the handle of the first one.</span></span> <span data-ttu-id="ad16c-303">В противном случае укажите дескриптор первого поля, объявляемого в следующем определении типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-303">Otherwise, set this to the handle of the first field declared by the next type definition.</span></span> <span data-ttu-id="ad16c-304"><see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.FieldDefinitionHandle(1)" />, если поля не объявляются ни в одном типе модуля.</span><span class="sxs-lookup"><span data-stu-id="ad16c-304">If no type defines any fields in the module, <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.FieldDefinitionHandle(1)" />.</span></span></param>
        <param name="methodList"><span data-ttu-id="ad16c-305">Если в типе объявляются методы, укажите дескриптор первого из них.</span><span class="sxs-lookup"><span data-stu-id="ad16c-305">If the type declares methods, the handle of the first one.</span></span> <span data-ttu-id="ad16c-306">В противном случае укажите дескриптор первого метода, объявляемого в следующем определении типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-306">Otherwise, the handle of the first method declared by the next type definition.</span></span> <span data-ttu-id="ad16c-307"><see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.MethodDefinitionHandle(1)" />, если методы не объявляются ни в одном типе модуля.</span><span class="sxs-lookup"><span data-stu-id="ad16c-307">If no type defines any methods in the module, <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.MethodDefinitionHandle(1)" />.</span></span></param>
        <summary><span data-ttu-id="ad16c-308">Добавляет определение типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-308">Adds a type definition.</span></span></summary>
        <returns><span data-ttu-id="ad16c-309">Дескриптор добавляемого определения типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-309">A handle to the added type definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeLayout">
      <MemberSignature Language="C#" Value="public void AddTypeLayout (System.Reflection.Metadata.TypeDefinitionHandle type, ushort packingSize, uint size);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTypeLayout(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, unsigned int16 packingSize, unsigned int32 size) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout(System.Reflection.Metadata.TypeDefinitionHandle,System.UInt16,System.UInt32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTypeLayout (type As TypeDefinitionHandle, packingSize As UShort, size As UInteger)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTypeLayout(System::Reflection::Metadata::TypeDefinitionHandle type, System::UInt16 packingSize, System::UInt32 size);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddTypeLayout : System.Reflection.Metadata.TypeDefinitionHandle * uint16 * uint32 -&gt; unit" Usage="metadataBuilder.AddTypeLayout (type, packingSize, size)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="packingSize" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="size" Type="System.UInt32" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ad16c-310">Определение типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-310">The type definition.</span></span></param>
        <param name="packingSize"><span data-ttu-id="ad16c-311">Указывает, что поля должны размещаться в экземпляре типа по байтовым адресам, кратным <paramref name="packingSize" />, или по естественному выравниванию для этого типа поля в зависимости от того, какое из этих значений меньше.</span><span class="sxs-lookup"><span data-stu-id="ad16c-311">Specifies that fields should be placed within the type instance at byte addresses which are a multiple of <paramref name="packingSize" />, or at natural alignment for that field type, whichever is smaller.</span></span> <span data-ttu-id="ad16c-312">Значение должно быть одним из следующих: 0, 1, 2, 4, 8, 16, 32, 64 или 128.</span><span class="sxs-lookup"><span data-stu-id="ad16c-312">Its value should be one of the following: 0, 1, 2, 4, 8, 16, 32, 64, or 128.</span></span> <span data-ttu-id="ad16c-313">Нулевое значение указывает, что используемый упаковочный размер должен соответствовать значению по умолчанию для текущей платформы.</span><span class="sxs-lookup"><span data-stu-id="ad16c-313">A value of zero indicates that the packing size used should match the default for the current platform.</span></span></param>
        <param name="size"><span data-ttu-id="ad16c-314">Указывает минимальный размер экземпляра типа; предназначен для обеспечения заполнения.</span><span class="sxs-lookup"><span data-stu-id="ad16c-314">Indicates a minimum size of the type instance and is intended to allow for padding.</span></span> <span data-ttu-id="ad16c-315">Объем выделенной памяти равен размеру, вычисленному на основе макета, или <paramref name="size" /> в зависимости от того, какое из этих значений больше.</span><span class="sxs-lookup"><span data-stu-id="ad16c-315">The amount of memory allocated is the maximum of the size calculated from the layout and <paramref name="size" />.</span></span> <span data-ttu-id="ad16c-316">Обратите внимание, что если эта директива применяется к типу значения, размер будет меньше 1 МБ.</span><span class="sxs-lookup"><span data-stu-id="ad16c-316">Note that if this directive applies to a value type, then the size will be less than 1 MB.</span></span></param>
        <summary><span data-ttu-id="ad16c-317">Определяет макет типа для определения типа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-317">Defines a type layout of a type definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-318">Целые типы должны добавляться в том же порядке, что и соответствующие определения типов.</span><span class="sxs-lookup"><span data-stu-id="ad16c-318">Entires must be added in the same order as the corresponding type definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.TypeReferenceHandle AddTypeReference (System.Reflection.Metadata.EntityHandle resolutionScope, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.TypeReferenceHandle AddTypeReference(valuetype System.Reflection.Metadata.EntityHandle resolutionScope, valuetype System.Reflection.Metadata.StringHandle namespace, valuetype System.Reflection.Metadata.StringHandle name) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTypeReference (resolutionScope As EntityHandle, namespace As StringHandle, name As StringHandle) As TypeReferenceHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::TypeReferenceHandle AddTypeReference(System::Reflection::Metadata::EntityHandle resolutionScope, System::Reflection::Metadata::StringHandle namespace, System::Reflection::Metadata::StringHandle name);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddTypeReference : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.StringHandle -&gt; System.Reflection.Metadata.TypeReferenceHandle" Usage="metadataBuilder.AddTypeReference (resolutionScope, namespace, name)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolutionScope" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="namespace" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="resolutionScope"><span data-ttu-id="ad16c-319">Сущность, определяющая тип целевого объекта; может быть следующей: <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-319">The entity declaring the target type, which can be one of the following: <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, or <see langword="null" />.</span></span></param>
        <param name="namespace"><span data-ttu-id="ad16c-320">Пространство имен ссылки на тип.</span><span class="sxs-lookup"><span data-stu-id="ad16c-320">The type reference namespace.</span></span></param>
        <param name="name"><span data-ttu-id="ad16c-321">Имя ссылки на тип.</span><span class="sxs-lookup"><span data-stu-id="ad16c-321">The type reference name.</span></span></param>
        <summary><span data-ttu-id="ad16c-322">Добавляет ссылку на тип.</span><span class="sxs-lookup"><span data-stu-id="ad16c-322">Adds a type reference.</span></span></summary>
        <returns><span data-ttu-id="ad16c-323">Дескриптор добавляемой ссылки на тип.</span><span class="sxs-lookup"><span data-stu-id="ad16c-323">A handle to the added type reference.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeSpecification">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.TypeSpecificationHandle AddTypeSpecification (System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.TypeSpecificationHandle AddTypeSpecification(valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification(System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTypeSpecification (signature As BlobHandle) As TypeSpecificationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::TypeSpecificationHandle AddTypeSpecification(System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddTypeSpecification : System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.TypeSpecificationHandle" Usage="metadataBuilder.AddTypeSpecification signature" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeSpecificationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="signature">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlob (byte[] value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlob(unsigned int8[] value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Byte[])" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlob (value As Byte()) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlob(cli::array &lt;System::Byte&gt; ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlob : byte[] -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlob value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad16c-324">Массив, содержащий большой двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="ad16c-324">The array containing the blob.</span></span></param>
        <summary><span data-ttu-id="ad16c-325">Добавляет указанный большой двоичный объект в кучу больших двоичных объектов, если его еще нет в ней.</span><span class="sxs-lookup"><span data-stu-id="ad16c-325">Adds the specified blob to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="ad16c-326">Дескриптор добавляемого или существующего большого двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-326">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlob (System.Collections.Immutable.ImmutableArray&lt;byte&gt; value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlob(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Collections.Immutable.ImmutableArray{System.Byte})" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlob (value As ImmutableArray(Of Byte)) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlob(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlob : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlob value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad16c-327">Массив, содержащий большой двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="ad16c-327">The array containing the blob.</span></span></param>
        <summary><span data-ttu-id="ad16c-328">Добавляет указанный большой двоичный объект из массива байтов в кучу больших двоичных объектов, если его еще нет в ней.</span><span class="sxs-lookup"><span data-stu-id="ad16c-328">Adds the specified blob from a byte array to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="ad16c-329">Дескриптор добавляемого или существующего большого двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-329">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlob (System.Reflection.Metadata.BlobBuilder value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlob(class System.Reflection.Metadata.BlobBuilder value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Reflection.Metadata.BlobBuilder)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlob (value As BlobBuilder) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlob(System::Reflection::Metadata::BlobBuilder ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlob : System.Reflection.Metadata.BlobBuilder -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlob value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Reflection.Metadata.BlobBuilder" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad16c-330">Экземпляр построителя больших двоичных объектов, содержащий большой двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="ad16c-330">The blob builder instance containing the blob.</span></span></param>
        <summary><span data-ttu-id="ad16c-331">Добавляет указанный большой двоичный объект из неизменяемого массива байтов в кучу больших двоичных объектов, если его еще нет в ней.</span><span class="sxs-lookup"><span data-stu-id="ad16c-331">Adds the specified blob from an immutable byte array to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="ad16c-332">Дескриптор добавляемого или существующего большого двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-332">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlobUTF16">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF16 (string value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF16(string value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16(System.String)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlobUTF16 (value As String) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlobUTF16(System::String ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlobUTF16 : string -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlobUTF16 value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad16c-333">Строка для добавления.</span><span class="sxs-lookup"><span data-stu-id="ad16c-333">The string to add.</span></span></param>
        <summary><span data-ttu-id="ad16c-334">Кодирует строку в кодировке UTF16 в большой двоичный объект, а затем добавляет этот объект в кучу больших двоичных объектов, если его еще нет в ней.</span><span class="sxs-lookup"><span data-stu-id="ad16c-334">Encodes a string using UTF16 encoding to a blob and adds it to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="ad16c-335">Дескриптор добавляемого или существующего большого двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-335">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlobUTF8">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF8 (string value, bool allowUnpairedSurrogates = true);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF8(string value, bool allowUnpairedSurrogates) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8(System.String,System.Boolean)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlobUTF8 (value As String, Optional allowUnpairedSurrogates As Boolean = true) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlobUTF8 : string * bool -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlobUTF8 (value, allowUnpairedSurrogates)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="allowUnpairedSurrogates" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad16c-336">Значение для сложения.</span><span class="sxs-lookup"><span data-stu-id="ad16c-336">The value to add.</span></span></param>
        <param name="allowUnpairedSurrogates"><span data-ttu-id="ad16c-337"><see langword="true" /> для кодирования суррогатов без пары указанным образом; <see langword="false" /> для их замены на символ U+FFFD.</span><span class="sxs-lookup"><span data-stu-id="ad16c-337"><see langword="true" /> to encode the unpaired surrogates as specified; <see langword="false" /> to replace them with the U+FFFD character.</span></span></param>
        <summary><span data-ttu-id="ad16c-338">Кодирует строку в кодировке UTF8 в большой двоичный объект, а затем добавляет этот объект в кучу больших двоичных объектов, если его еще нет в ней.</span><span class="sxs-lookup"><span data-stu-id="ad16c-338">Encodes a string using UTF8 encoding to a blob and adds it to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="ad16c-339">Дескриптор добавляемого или существующего большого двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-339">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddConstantBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddConstantBlob (object value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddConstantBlob(object value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob(System.Object)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddConstantBlob (value As Object) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddConstantBlob(System::Object ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddConstantBlob : obj -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddConstantBlob value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad16c-340">Добавляемое значение константы.</span><span class="sxs-lookup"><span data-stu-id="ad16c-340">The constant value to add.</span></span></param>
        <summary><span data-ttu-id="ad16c-341">Кодирует значение константы в большой двоичный объект, а затем добавляет этот объект в кучу больших двоичных объектов, если его еще нет в ней.</span><span class="sxs-lookup"><span data-stu-id="ad16c-341">Encodes a constant value to a blob and adds it to the Blob heap, if it's not there already.</span></span> <span data-ttu-id="ad16c-342">Использует кодировку UTF16 для кодирования строковых констант.</span><span class="sxs-lookup"><span data-stu-id="ad16c-342">Uses UTF16 to encode string constants.</span></span></summary>
        <returns><span data-ttu-id="ad16c-343">Дескриптор добавляемого или существующего большого двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-343">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddDocumentName">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddDocumentName (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddDocumentName(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddDocumentName (value As String) As BlobHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddDocumentName(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddDocumentName : string -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddDocumentName value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad16c-344">Добавляемое имя документа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-344">The document name to add.</span></span></param>
        <summary><span data-ttu-id="ad16c-345">Кодирует имя документа отладки и добавляет его в кучу больших двоичных объектов, если его еще нет в ней.</span><span class="sxs-lookup"><span data-stu-id="ad16c-345">Encodes a debug document name and adds it to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="ad16c-346">Дескриптор добавляемого или существующего большого двоичного объекта с именем документа.</span><span class="sxs-lookup"><span data-stu-id="ad16c-346">A handle to the added or existing document name blob.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-347">Дополнительные сведения о больших двоичных объектах с именами документов см. в разделе https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#DocumentNameBlob</span><span class="sxs-lookup"><span data-stu-id="ad16c-347">For more information about document name blobs, see: https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#DocumentNameBlob</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddGuid">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.GuidHandle GetOrAddGuid (Guid guid);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.GuidHandle GetOrAddGuid(valuetype System.Guid guid) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid(System.Guid)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::GuidHandle GetOrAddGuid(Guid guid);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddGuid : Guid -&gt; System.Reflection.Metadata.GuidHandle" Usage="metadataBuilder.GetOrAddGuid guid" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.GuidHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="guid"><span data-ttu-id="ad16c-348">Добавляемый идентификатор GUID.</span><span class="sxs-lookup"><span data-stu-id="ad16c-348">The Guid to add.</span></span></param>
        <summary><span data-ttu-id="ad16c-349">Добавляет указанный идентификатор GUID в кучу идентификаторов GUID, если его еще нет в ней.</span><span class="sxs-lookup"><span data-stu-id="ad16c-349">Adds the specified Guid to the Guid heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="ad16c-350">Дескриптор добавляемого или существующего идентификатора GUID.</span><span class="sxs-lookup"><span data-stu-id="ad16c-350">A handle to the added or existing Guid.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddString">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle GetOrAddString (string value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.StringHandle GetOrAddString(string value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString(System.String)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddString (value As String) As StringHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::StringHandle GetOrAddString(System::String ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddString : string -&gt; System.Reflection.Metadata.StringHandle" Usage="metadataBuilder.GetOrAddString value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad16c-351">Строка для добавления.</span><span class="sxs-lookup"><span data-stu-id="ad16c-351">The string to add.</span></span></param>
        <summary><span data-ttu-id="ad16c-352">Добавляет указанную строку в кучу строк, если ее еще нет в ней.</span><span class="sxs-lookup"><span data-stu-id="ad16c-352">Adds the specified string to the string heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="ad16c-353">Дескриптор добавляемой или существующей строки.</span><span class="sxs-lookup"><span data-stu-id="ad16c-353">A handle to the added or existing string.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddUserString">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.UserStringHandle GetOrAddUserString (string value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.UserStringHandle GetOrAddUserString(string value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString(System.String)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddUserString (value As String) As UserStringHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::UserStringHandle GetOrAddUserString(System::String ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddUserString : string -&gt; System.Reflection.Metadata.UserStringHandle" Usage="metadataBuilder.GetOrAddUserString value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.UserStringHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad16c-354">Строка для добавления.</span><span class="sxs-lookup"><span data-stu-id="ad16c-354">The string to add.</span></span></param>
        <summary><span data-ttu-id="ad16c-355">Добавляет указанную строку в кучу пользовательских строк, если ее еще нет в ней.</span><span class="sxs-lookup"><span data-stu-id="ad16c-355">Adds the specified string to the user string heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="ad16c-356">Дескриптор добавляемой или существующей строки.</span><span class="sxs-lookup"><span data-stu-id="ad16c-356">A handle to the added or existing string.</span></span> <span data-ttu-id="ad16c-357">Это значение может использоваться в <see cref="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-357">This value may be used in <see cref="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCount">
      <MemberSignature Language="C#" Value="public int GetRowCount (System.Reflection.Metadata.Ecma335.TableIndex table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowCount(valuetype System.Reflection.Metadata.Ecma335.TableIndex table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount(System.Reflection.Metadata.Ecma335.TableIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCount (table As TableIndex) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowCount(System::Reflection::Metadata::Ecma335::TableIndex table);" />
      <MemberSignature Language="F#" Value="member this.GetRowCount : System.Reflection.Metadata.Ecma335.TableIndex -&gt; int" Usage="metadataBuilder.GetRowCount table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Reflection.Metadata.Ecma335.TableIndex" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="ad16c-358">Индекс таблицы.</span><span class="sxs-lookup"><span data-stu-id="ad16c-358">The table index.</span></span></param>
        <summary><span data-ttu-id="ad16c-359">Возвращает текущее количество элементов в указанной таблице.</span><span class="sxs-lookup"><span data-stu-id="ad16c-359">Returns the current number of items in the specified table.</span></span></summary>
        <returns><span data-ttu-id="ad16c-360">Количество элементов в таблице.</span><span class="sxs-lookup"><span data-stu-id="ad16c-360">The number of items in the table.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCounts">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;int&gt; GetRowCounts ();" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;int32&gt; GetRowCounts() cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCounts () As ImmutableArray(Of Integer)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;int&gt; GetRowCounts();" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetRowCounts : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;int&gt;" Usage="metadataBuilder.GetRowCounts " FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad16c-361">Возвращает текущее количество элементов в каждой таблице.</span><span class="sxs-lookup"><span data-stu-id="ad16c-361">Returns the current number of items in each table.</span></span></summary>
        <returns><span data-ttu-id="ad16c-362">Массив размера <see cref="F:System.Reflection.Metadata.Ecma335.MetadataTokens.TableCount" />, в котором каждый элемент заполнен текущим числом строк в соответствующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ad16c-362">An array of size <see cref="F:System.Reflection.Metadata.Ecma335.MetadataTokens.TableCount" />, with each item filled with the current row count of the corresponding table.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReserveGuid">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.GuidHandle&gt; ReserveGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ReservedBlob`1&lt;valuetype System.Reflection.Metadata.GuidHandle&gt; ReserveGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function ReserveGuid () As ReservedBlob(Of GuidHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ReservedBlob&lt;System::Reflection::Metadata::GuidHandle&gt; ReserveGuid();" />
      <MemberSignature Language="F#" Value="member this.ReserveGuid : unit -&gt; System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.GuidHandle&gt;" Usage="metadataBuilder.ReserveGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.GuidHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad16c-363">Резервирует место для идентификатора GUID в куче идентификаторов GUID.</span><span class="sxs-lookup"><span data-stu-id="ad16c-363">Reserves space on the Guid heap for a GUID.</span></span></summary>
        <returns><span data-ttu-id="ad16c-364">Дескриптор резервируемого идентификатора GUID и объект <see cref="T:System.Reflection.Metadata.Blob" />, представляющий большой двоичный объект с идентификатором GUID, хранящийся в куче.</span><span class="sxs-lookup"><span data-stu-id="ad16c-364">A handle to the reserved Guid and a <see cref="T:System.Reflection.Metadata.Blob" /> representing the GUID blob as stored on the heap.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReserveUserString">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.UserStringHandle&gt; ReserveUserString (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ReservedBlob`1&lt;valuetype System.Reflection.Metadata.UserStringHandle&gt; ReserveUserString(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReserveUserString (length As Integer) As ReservedBlob(Of UserStringHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ReservedBlob&lt;System::Reflection::Metadata::UserStringHandle&gt; ReserveUserString(int length);" />
      <MemberSignature Language="F#" Value="member this.ReserveUserString : int -&gt; System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.UserStringHandle&gt;" Usage="metadataBuilder.ReserveUserString length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.UserStringHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="ad16c-365">Число резервируемых символов.</span><span class="sxs-lookup"><span data-stu-id="ad16c-365">The number of characters to reserve.</span></span></param>
        <summary><span data-ttu-id="ad16c-366">Резервирует место в куче пользовательских строк для строки указанной длины.</span><span class="sxs-lookup"><span data-stu-id="ad16c-366">Reserves space on the user string heap for a string of the specified length.</span></span></summary>
        <returns><span data-ttu-id="ad16c-367">Дескриптор резервируемой пользовательской строки и объект <see cref="T:System.Reflection.Metadata.Blob" />, представляющий весь большой двоичный объект с пользовательской строкой (включая ее длину и завершающий символ).</span><span class="sxs-lookup"><span data-stu-id="ad16c-367">A handle to the reserved user string and a <see cref="T:System.Reflection.Metadata.Blob" /> representing the entire User String blob (including its length and terminal character).</span></span> <span data-ttu-id="ad16c-368">Дескриптор может использоваться в <see cref="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)" />.</span><span class="sxs-lookup"><span data-stu-id="ad16c-368">The handle may be used in <see cref="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)" />.</span></span>
<span data-ttu-id="ad16c-369">Используйте <see cref="M:System.Reflection.Metadata.BlobWriter.WriteUserString(System.String)" /> для заполнения содержимого большого двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="ad16c-369">Use <see cref="M:System.Reflection.Metadata.BlobWriter.WriteUserString(System.String)" /> to fill in the blob content.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCapacity">
      <MemberSignature Language="C#" Value="public void SetCapacity (System.Reflection.Metadata.Ecma335.HeapIndex heap, int byteCount);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCapacity(valuetype System.Reflection.Metadata.Ecma335.HeapIndex heap, int32 byteCount) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.HeapIndex,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCapacity (heap As HeapIndex, byteCount As Integer)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCapacity(System::Reflection::Metadata::Ecma335::HeapIndex heap, int byteCount);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.SetCapacity : System.Reflection.Metadata.Ecma335.HeapIndex * int -&gt; unit" Usage="metadataBuilder.SetCapacity (heap, byteCount)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="heap" Type="System.Reflection.Metadata.Ecma335.HeapIndex" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="heap"><span data-ttu-id="ad16c-370">Индекс кучи.</span><span class="sxs-lookup"><span data-stu-id="ad16c-370">The heap index.</span></span></param>
        <param name="byteCount"><span data-ttu-id="ad16c-371">Число байтов.</span><span class="sxs-lookup"><span data-stu-id="ad16c-371">The number of bytes.</span></span></param>
        <summary><span data-ttu-id="ad16c-372">Задает емкость указанной кучи.</span><span class="sxs-lookup"><span data-stu-id="ad16c-372">Sets the capacity of the specified heap.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-373">Используйте этот метод, чтобы сократить количество выделений, если приблизительное число байтов известно заранее.</span><span class="sxs-lookup"><span data-stu-id="ad16c-373">Use this method to reduce allocations if the approximate number of bytes is known ahead of time.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCapacity">
      <MemberSignature Language="C#" Value="public void SetCapacity (System.Reflection.Metadata.Ecma335.TableIndex table, int rowCount);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCapacity(valuetype System.Reflection.Metadata.Ecma335.TableIndex table, int32 rowCount) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCapacity (table As TableIndex, rowCount As Integer)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCapacity(System::Reflection::Metadata::Ecma335::TableIndex table, int rowCount);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.SetCapacity : System.Reflection.Metadata.Ecma335.TableIndex * int -&gt; unit" Usage="metadataBuilder.SetCapacity (table, rowCount)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Reflection.Metadata.Ecma335.TableIndex" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="rowCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="ad16c-374">Индекс таблицы.</span><span class="sxs-lookup"><span data-stu-id="ad16c-374">The table index.</span></span></param>
        <param name="rowCount"><span data-ttu-id="ad16c-375">Число строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="ad16c-375">The number of rows in the table.</span></span></param>
        <summary><span data-ttu-id="ad16c-376">Задает емкость указанной таблицы.</span><span class="sxs-lookup"><span data-stu-id="ad16c-376">Sets the capacity of the specified table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ad16c-377">Используйте этот метод, чтобы сократить количество выделений, если приблизительное число строк известно заранее.</span><span class="sxs-lookup"><span data-stu-id="ad16c-377">Use this method to reduce allocations if the approximate number of rows is known ahead of time.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
