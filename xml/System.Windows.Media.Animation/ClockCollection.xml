<Type Name="ClockCollection" FullName="System.Windows.Media.Animation.ClockCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f996394d341171c18827b8d444783c987290eaf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69165594" /></Metadata><TypeSignature Language="C#" Value="public class ClockCollection : System.Collections.Generic.ICollection&lt;System.Windows.Media.Animation.Clock&gt;, System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Animation.Clock&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClockCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Animation.Clock&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Media.Animation.Clock&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ClockCollection&#xA;Implements ICollection(Of Clock), IEnumerable(Of Clock)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockCollection : System::Collections::Generic::ICollection&lt;System::Windows::Media::Animation::Clock ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Windows::Media::Animation::Clock ^&gt;" />
  <TypeSignature Language="F#" Value="type ClockCollection = class&#xA;    interface ICollection&lt;Clock&gt;&#xA;    interface seq&lt;Clock&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Windows.Media.Animation.Clock&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Animation.Clock&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b9e09-101">Представляет упорядоченную коллекцию объектов <see cref="T:System.Windows.Media.Animation.Clock" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Animation.Clock" /> objects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Media.Animation.Clock item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.Media.Animation.Clock item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Add(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As Clock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::Media::Animation::Clock ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Media.Animation.Clock -&gt; unit&#xA;override this.Add : System.Windows.Media.Animation.Clock -&gt; unit" Usage="clockCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b9e09-102">Добавляемый объект.</span><span class="sxs-lookup"><span data-stu-id="b9e09-102">The object to add.</span></span></param>
        <summary><span data-ttu-id="b9e09-103">Добавляет новый объект <see cref="T:System.Windows.Media.Animation.Clock" /> в конец этого объекта <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-103">Adds a new <see cref="T:System.Windows.Media.Animation.Clock" /> object to the end of this <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="clockCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9e09-104">Удаляет все элементы из этого объекта <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-104">Removes all items from this <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Animation.Clock item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.Media.Animation.Clock item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Contains(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Clock) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::Media::Animation::Clock ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Windows.Media.Animation.Clock -&gt; bool&#xA;override this.Contains : System.Windows.Media.Animation.Clock -&gt; bool" Usage="clockCollection.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b9e09-105">Искомый объект.</span><span class="sxs-lookup"><span data-stu-id="b9e09-105">The object to locate.</span></span></param>
        <summary><span data-ttu-id="b9e09-106">Указывает, содержит ли коллекция <see cref="T:System.Windows.Media.Animation.ClockCollection" /> заданный объект <see cref="T:System.Windows.Media.Animation.Clock" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-106">Indicates whether the <see cref="T:System.Windows.Media.Animation.ClockCollection" /> contains the specified <see cref="T:System.Windows.Media.Animation.Clock" /> object.</span></span></summary>
        <returns><span data-ttu-id="b9e09-107">Значение <see langword="true" />, если ключ <paramref name="item" /> найден; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-107"><see langword="true" /> if <paramref name="item" /> is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Animation.Clock[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Windows.Media.Animation.Clock[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.CopyTo(System.Windows.Media.Animation.Clock[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Clock(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Windows::Media::Animation::Clock ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Windows.Media.Animation.Clock[] * int -&gt; unit&#xA;override this.CopyTo : System.Windows.Media.Animation.Clock[] * int -&gt; unit" Usage="clockCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Animation.Clock[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="b9e09-108">Массив назначения.</span><span class="sxs-lookup"><span data-stu-id="b9e09-108">The destination array.</span></span></param>
        <param name="index"><span data-ttu-id="b9e09-109">Позиция индекса (отсчитываемого с нуля), с которой начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="b9e09-109">The zero-based index position where copying begins.</span></span></param>
        <summary><span data-ttu-id="b9e09-110">Копирует объекты <see cref="T:System.Windows.Media.Animation.Clock" /> этого объекта <see cref="T:System.Windows.Media.Animation.ClockCollection" /> в массив объектов часов, начиная с позиции указанного индекса.</span><span class="sxs-lookup"><span data-stu-id="b9e09-110">Copies the <see cref="T:System.Windows.Media.Animation.Clock" /> objects of this <see cref="T:System.Windows.Media.Animation.ClockCollection" /> to an array of Clocks, starting at the specified index position.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.Animation.ClockCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9e09-111">Получает число элементов, содержащихся в этой коллекции <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-111">Gets the number of items contained in this <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span></span></summary>
        <value><span data-ttu-id="b9e09-112">Число элементов, содержащихся в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="b9e09-112">The number of items contained in this instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9e09-113">Определяет равенство этого экземпляра и указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="b9e09-113">Indicates whether this instance is equal to the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="clockCollection.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b9e09-114">Объект, сравниваемый с данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="b9e09-114">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="b9e09-115">Определяет равенство этого экземпляра и указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="b9e09-115">Indicates whether this instance is equal to the specified object.</span></span></summary>
        <returns><span data-ttu-id="b9e09-116">Значение <see langword="true" />, если значение параметра <paramref name="obj" /> равно данному экземпляру; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-116"><see langword="true" /> if <paramref name="obj" /> is equal to this instance; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Animation.ClockCollection objA, System.Windows.Media.Animation.ClockCollection objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(class System.Windows.Media.Animation.ClockCollection objA, class System.Windows.Media.Animation.ClockCollection objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Equals(System.Windows.Media.Animation.ClockCollection,System.Windows.Media.Animation.ClockCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As ClockCollection, objB As ClockCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Animation::ClockCollection ^ objA, System::Windows::Media::Animation::ClockCollection ^ objB);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.Animation.ClockCollection * System.Windows.Media.Animation.ClockCollection -&gt; bool" Usage="System.Windows.Media.Animation.ClockCollection.Equals (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Windows.Media.Animation.ClockCollection" />
        <Parameter Name="objB" Type="System.Windows.Media.Animation.ClockCollection" />
      </Parameters>
      <Docs>
        <param name="objA"><span data-ttu-id="b9e09-117">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="b9e09-117">The first value to compare.</span></span></param>
        <param name="objB"><span data-ttu-id="b9e09-118">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="b9e09-118">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="b9e09-119">Определяет равенство двух заданных коллекций <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-119">Indicates whether the two specified <see cref="T:System.Windows.Media.Animation.ClockCollection" /> collections are equal.</span></span></summary>
        <returns><span data-ttu-id="b9e09-120">Значение <see langword="true" />, если <paramref name="objA" /> и <paramref name="objB" /> равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-120"><see langword="true" /> if <paramref name="objA" /> and <paramref name="objB" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="clockCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9e09-121">Возвращает 32-разрядный целочисленный хэш-код со знаком, представляющий этот экземпляр.</span><span class="sxs-lookup"><span data-stu-id="b9e09-121">Returns a 32-bit signed integer hash code representing this instance.</span></span></summary>
        <returns><span data-ttu-id="b9e09-122">32-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="b9e09-122">A 32-bit signed integer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Media.Animation.ClockCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9e09-123">Получает значение, указывающее, является ли объект <see cref="T:System.Windows.Media.Animation.ClockCollection" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b9e09-123">Gets a value indicating whether the <see cref="T:System.Windows.Media.Animation.ClockCollection" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="b9e09-124"><see langword="true" />значение, если данный экземпляр доступен только для чтения; в <see langword="false" />противном случае — значение.</span><span class="sxs-lookup"><span data-stu-id="b9e09-124"><see langword="true" /> if this instance is read-only; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ default[int] { System::Windows::Media::Animation::Clock ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b9e09-125">Позиция индекса, по которому производится доступ.</span><span class="sxs-lookup"><span data-stu-id="b9e09-125">The index position to access.</span></span></param>
        <summary><span data-ttu-id="b9e09-126">Получает объект <see cref="T:System.Windows.Media.Animation.Clock" /> в заданном положении индекса.</span><span class="sxs-lookup"><span data-stu-id="b9e09-126">Gets the <see cref="T:System.Windows.Media.Animation.Clock" /> at the specified index position.</span></span></summary>
        <value><span data-ttu-id="b9e09-127">Объект <see cref="T:System.Windows.Media.Animation.Clock" /> в заданной позиции <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-127">The <see cref="T:System.Windows.Media.Animation.Clock" /> object at the specified <paramref name="index" /> position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Animation.ClockCollection objA, System.Windows.Media.Animation.ClockCollection objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Media.Animation.ClockCollection objA, class System.Windows.Media.Animation.ClockCollection objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.op_Equality(System.Windows.Media.Animation.ClockCollection,System.Windows.Media.Animation.ClockCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (objA As ClockCollection, objB As ClockCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Animation::ClockCollection ^ objA, System::Windows::Media::Animation::ClockCollection ^ objB);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.Animation.ClockCollection * System.Windows.Media.Animation.ClockCollection -&gt; bool" Usage="objA = objB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Windows.Media.Animation.ClockCollection" />
        <Parameter Name="objB" Type="System.Windows.Media.Animation.ClockCollection" />
      </Parameters>
      <Docs>
        <param name="objA"><span data-ttu-id="b9e09-128">Первый из сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="b9e09-128">The first object to compare.</span></span></param>
        <param name="objB"><span data-ttu-id="b9e09-129">Второй из сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="b9e09-129">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="b9e09-130">Перегруженный оператор, который проверяет равенство двух коллекций <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-130">Overloaded operator that compares two <see cref="T:System.Windows.Media.Animation.ClockCollection" /> collections for equality.</span></span></summary>
        <returns><span data-ttu-id="b9e09-131"><see langword="true" />, если <paramref name="objA" /> и <paramref name="objB" /> равны; в ином случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-131"><see langword="true" /> if <paramref name="objA" /> and <paramref name="objB" /> are equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Animation.ClockCollection objA, System.Windows.Media.Animation.ClockCollection objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Media.Animation.ClockCollection objA, class System.Windows.Media.Animation.ClockCollection objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.op_Inequality(System.Windows.Media.Animation.ClockCollection,System.Windows.Media.Animation.ClockCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (objA As ClockCollection, objB As ClockCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Animation::ClockCollection ^ objA, System::Windows::Media::Animation::ClockCollection ^ objB);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.Animation.ClockCollection * System.Windows.Media.Animation.ClockCollection -&gt; bool" Usage="System.Windows.Media.Animation.ClockCollection.op_Inequality (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Windows.Media.Animation.ClockCollection" />
        <Parameter Name="objB" Type="System.Windows.Media.Animation.ClockCollection" />
      </Parameters>
      <Docs>
        <param name="objA"><span data-ttu-id="b9e09-132">Первый из сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="b9e09-132">The first object to compare.</span></span></param>
        <param name="objB"><span data-ttu-id="b9e09-133">Второй из сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="b9e09-133">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="b9e09-134">Перегруженный оператор, который проверяет неравенство двух коллекций <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-134">Overloaded operator that compares two <see cref="T:System.Windows.Media.Animation.ClockCollection" /> collections for inequality.</span></span></summary>
        <returns><span data-ttu-id="b9e09-135"><see langword="true" />, если <paramref name="objA" /> и <paramref name="objB" /> не равны; в ином случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-135"><see langword="true" /> if <paramref name="objA" /> and <paramref name="objB" /> are not equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Windows.Media.Animation.Clock item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Windows.Media.Animation.Clock item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Remove(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Clock) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Windows::Media::Animation::Clock ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Media.Animation.Clock -&gt; bool&#xA;override this.Remove : System.Windows.Media.Animation.Clock -&gt; bool" Usage="clockCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b9e09-136">Удаляемый объект.</span><span class="sxs-lookup"><span data-stu-id="b9e09-136">The object to remove.</span></span></param>
        <summary><span data-ttu-id="b9e09-137">Удаляет заданный объект класса <see cref="T:System.Windows.Media.Animation.Clock" /> из объекта класса <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-137">Removes the specified <see cref="T:System.Windows.Media.Animation.Clock" /> from the <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span></span></summary>
        <returns><span data-ttu-id="b9e09-138">Значение <see langword="true" />, если элемент <paramref name="item" /> успешно удален, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-138"><see langword="true" /> if <paramref name="item" /> was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Animation.Clock&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.Media.Animation.Clock&gt; IEnumerable&lt;Clock&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.Media.Animation.Clock&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Animation.Clock&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.System#Collections#Generic#IEnumerable&lt;System#Windows#Media#Animation#Clock&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Clock) Implements IEnumerable(Of Clock).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::Media::Animation::Clock ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Animation.Clock&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::Media::Animation::Clock ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.Media.Animation.Clock&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9e09-139">Описание этого члена см. в разделе <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-139">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="b9e09-140">Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который используется для прохода по коллекции.</span><span class="sxs-lookup"><span data-stu-id="b9e09-140">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9e09-141">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="b9e09-141">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b9e09-142">Он может использоваться, только если экземпляр <xref:System.Windows.Media.Animation.ClockCollection> приведен к типу интерфейса <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="b9e09-142">It can be used only when the <xref:System.Windows.Media.Animation.ClockCollection> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9e09-143">Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="b9e09-143">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="b9e09-144">Объект <see cref="T:System.Collections.IEnumerator" />, который используется для прохода по коллекции.</span><span class="sxs-lookup"><span data-stu-id="b9e09-144">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9e09-145">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="b9e09-145">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b9e09-146">Он может использоваться, только если экземпляр <xref:System.Windows.Media.Animation.ClockCollection> приведен к типу интерфейса <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="b9e09-146">It can be used only when the <xref:System.Windows.Media.Animation.ClockCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="b9e09-147">Пример</span><span class="sxs-lookup"><span data-stu-id="b9e09-147">Example</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
