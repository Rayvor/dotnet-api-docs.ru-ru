<Type Name="ClockController" FullName="System.Windows.Media.Animation.ClockController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a91fa3fc50a96226811a98aa08d858ffa256d74" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70634436" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClockController : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClockController extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClockController&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockController sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type ClockController = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Управляет <see cref="T:System.Windows.Media.Animation.Clock" /> в интерактивном режиме.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте для интерактивного запуска, приостановки, возобновления, поиска, пропуска, остановки и <xref:System.Windows.Media.Animation.Clock>удаления. <xref:System.Windows.Media.Animation.ClockController> Вы можете управлять только часами корневого уровня в интерактивном режиме.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.Clock" />
    <altmember cref="P:System.Windows.Media.Animation.Clock.Controller" />
  </Docs>
  <Members>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="clockController.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Задает начало целевого объекта <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> в следующем делении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод приводит к тому <xref:System.Windows.Media.Animation.Clock> , что целевой объект будет <xref:System.Windows.Media.Animation.Timeline> вести себя <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> так, будто для его объекта было задано время следующего тика. Фактический <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> параметр временной шкалы игнорируется (но не изменяется).  
  
 Этот метод изменяет целевые часы <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> на. <xref:System.Windows.Media.Animation.ClockState.Active> <xref:System.Windows.Media.Animation.ClockController.Begin%2A> Метод не возобновляет приостановленные часы.  
  
 Этот метод не влияет на дерево времени до следующего завершения обработки тика. В качестве побочного результата соответствующие события также не будут вызываться до тех пор, пока не появятся. Вызов этого метода активирует <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> события и. <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Clock { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockController.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Windows.Media.Animation.Clock" />, управляемый данным методом <see cref="T:System.Windows.Media.Animation.ClockController" />.</summary>
        <value>Объект <see cref="T:System.Windows.Media.Animation.Clock" />, управляемый данным методом <see cref="T:System.Windows.Media.Animation.ClockController" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="clockController.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Останавливает выполнение целевого объекта <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы можете приостановить <xref:System.Windows.Media.Animation.Clock> , независимо от текущего состояния, и приостановка часов не меняет его текущее состояние. Часы могут быть приостановлены, в <xref:System.Windows.Media.Animation.ClockState.Active>то <xref:System.Windows.Media.Animation.ClockState.Stopped>время как <xref:System.Windows.Media.Animation.ClockState.Filling>, или. Единственный способ отменять приостановку часов — использовать <xref:System.Windows.Media.Animation.ClockController.Resume%2A> метод. Приостановка часов неявно приостанавливает свои дочерние объекты.  
  
 Вызов этого метода, если целевые часы уже приостановлены, не оказывает никакого воздействия.  
  
 Приостановка часов запускает <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> событие.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="clockController.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет объект <see cref="T:System.Windows.Media.Animation.Clock" />, связанный с объектом <see cref="T:System.Windows.Media.Animation.ClockController" />, из анимируемых им свойств. Объект часов и дочерние объекты часов больше не будут влиять на эти свойства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод активирует <xref:System.Windows.Media.Animation.Clock.RemoveRequested> событие.  
  
   
  
## Examples  
 В следующем примере показано, как удалить и иным образом управлять часами в интерактивном режиме.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="clockController.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Включает ранее приостановленный <see cref="T:System.Windows.Media.Animation.Clock" />, чтобы возобновить выполнение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы можете приостановить или возобновить работу <xref:System.Windows.Media.Animation.Clock> независимо от текущего состояния, приостановка или возобновление часов не меняет его текущего состояния. Часы могут быть приостановлены, в <xref:System.Windows.Media.Animation.ClockState.Active>то <xref:System.Windows.Media.Animation.ClockState.Stopped>время как <xref:System.Windows.Media.Animation.ClockState.Filling>, или. Единственный способ возобновить приостановленные часы — использовать <xref:System.Windows.Media.Animation.ClockController.Resume%2A> метод. Возобновление часов неявным образом возобновляет свои дочерние элементы. Вызов этого метода для часов, которые не приостановлены, не оказывает никакого воздействия.  
  
 Возобновление приостановленного часов инициирует <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> событие.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Смещение поиска, измеряемое по часам целевого объекта. Это смещение относится к <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> или <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> часов в зависимости от значения <paramref name="origin" />.</param>
        <param name="origin">Значение, которое указывает, относится ли указанное смещение к <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> или <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> часов целевого объекта.</param>
        <summary>Выполняет поиск целевого объекта <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> по указанной величине при следующем тике. Если часы целевого объекта остановлены, поиск делает их активными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Операции <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> поиска не принимают параметры и <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> для временной шкалы часов в учетной записи: часы обрабатываются так, как будто ее временная <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> шкала имеет значение <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>1 и нет.  
  
 Этот метод изменяет значение часов <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> на. <xref:System.Windows.Media.Animation.ClockState.Active> Этот метод не влияет на дерево времени до следующего завершения обработки тика. В качестве побочного результата соответствующие события также не будут вызываться до тех пор, пока не появятся.  
  
 При поиске раскадровки <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> инициируются события и <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> .  
  
 Если целевые часы имеют дочерние объекты, их текущее время обновляется соответствующим образом.  
  
   
  
## Examples  
 В следующем примере показано, как выполнить поиск с <xref:System.Windows.Media.Animation.ClockController>помощью.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.TimeSeekOrigin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Смещение поиска, измеряемое по часам целевого объекта. Это смещение относится к <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> или <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> часов в зависимости от значения <paramref name="origin" />.</param>
        <param name="origin">Значение, которое указывает, относится ли указанное смещение к <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> или <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> часов целевого объекта.</param>
        <summary>Незамедлительно выполняет поиск целевого объекта <see cref="T:System.Windows.Media.Animation.Clock" /> по указанной величине. Если часы целевого объекта остановлены, поиск делает их активными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Операции <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> поиска не принимают параметры и <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> для временной шкалы часов в учетной записи: часы обрабатываются так, как будто ее временная <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> шкала имеет значение <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>1 и нет.  
  
 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>Выровняйте время поиска часов с помощью последнего такта. Значения немедленно обновляются, чтобы отразить изменения, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>вызванные, несмотря на то, что на экране не будут отражены эти изменения до обновления экрана.  
  
 Если целевые часы имеют дочерние объекты, их текущее время обновляется соответствующим образом.  
  
 Этот метод изменяет значение часов <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> на. <xref:System.Windows.Media.Animation.ClockState.Active>  
  
 При поиске раскадровки <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> инициируются события и <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> .  
  
   
  
## Examples  
 В следующем примере демонстрируются <xref:System.Windows.Media.Animation.ClockController.Seek%2A> методы и <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> для. <xref:System.Windows.Media.Animation.ClockController>  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="clockController.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Перемещает текущее время целевого объекта <see cref="T:System.Windows.Media.Animation.Clock" /> в конец его активного периода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод увеличивает текущее время целевого объекта до конца его активного периода; поведение часов на этом этапе <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> задается параметром. <xref:System.Windows.Media.Animation.Timeline> Если для <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>свойства временной шкалы задано значение, то заполняются часы; если для <xref:System.Windows.Media.Animation.FillBehavior.Stop>свойства задано значение, Часы останавливаются.  
  
 Этот метод действует, только если целевые часы <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> имеют <xref:System.Windows.Media.Animation.ClockState.Active>значение.  
  
 Этот метод не влияет на дерево времени до следующего завершения обработки тика. В качестве побочного результата соответствующие события также не будут вызываться до тех пор, пока не появятся.  
  
 При <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> перетаскивании раскадровки в период заполнения запустится событие и <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает интерактивную скорость целевого объекта <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <value>Конечное значение больше нуля, которое описывает интерактивную скорость целевого таймера. Это значение умножается на значение <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> временной шкалы <see cref="T:System.Windows.Media.Animation.Timeline" /> таймера. Например, если <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> временной шкалы имеет значение 0,5, а <see cref="T:System.Windows.Media.Animation.ClockController" /> объекта <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> имеет значение 3,0, то временная шкала движется в полтора раза быстрее нормальной скорости (0,5 x 3,0). Значение по умолчанию — 1,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Установка этого свойства не действует до следующего тика. Если задать это свойство, а затем получить его значение до следующего наступления такта, вы получите старое значение. Это свойство будет возвращать новое значение после следующего тика.  
  
 Задание этого свойства не изменяет значение базовой временной шкалы <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.  
  
 Задание этого свойства активирует <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> событие целевого объекта Clock.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="clockController.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Останавливает целевой таймер <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод изменяет целевые часы <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> на. <xref:System.Windows.Media.Animation.Clock.Stopped%2A>  
  
 Часы можно перезапустить с <xref:System.Windows.Media.Animation.ClockController.Begin%2A>помощью метода, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>или  <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> . <xref:System.Windows.Media.Animation.Clock.Stopped%2A>  
  
 Этот метод не влияет на дерево времени до следующего завершения обработки тика. В качестве побочного результата соответствующие события также не будут вызываться до тех пор, пока не появятся.  
  
 Остановка часов запускает <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>  <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> события и , но не событие. <xref:System.Windows.Media.Animation.Clock.Completed>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
