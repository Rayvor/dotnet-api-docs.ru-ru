<Type Name="QuarticEase" FullName="System.Windows.Media.Animation.QuarticEase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57c16ec7dd6375c63dc4e4e16ffc139b994fdfcc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69407579" /></Metadata><TypeSignature Language="C#" Value="public class QuarticEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuarticEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.QuarticEase" />
  <TypeSignature Language="VB.NET" Value="Public Class QuarticEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class QuarticEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type QuarticEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет функцию для реалистичной анимации, создающую анимацию, которая ускоряется и замедляется с помощью формулы *f*(*t*) = *t*<sup>4</sup>.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы можете управлять ускорением анимации, замедлением или обоими, указывая <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. На <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>следующей диаграмме показаны различные значения, где *f*(*t*) представляет ход выполнения анимации, а *t* представляет время.  
  
 ![Куартицеасе с диаграммами различных значений easingmodeов.] (~/add/media/quarticease-graph.png "Куартицеасе с диаграммами различных значений easingmodeов.")  
  
 Для этой функции используется следующая формула.  
  
 *f*(*t*) = *t*<sup>4</sup>  
  
> [!NOTE]
>  Можно <xref:System.Windows.Media.Animation.PowerEase> использовать для создания такого же поведения, как <xref:System.Windows.Media.Animation.CubicEase>, <xref:System.Windows.Media.Animation.QuadraticEase>, <xref:System.Windows.Media.Animation.QuarticEase> <xref:System.Windows.Media.Animation.QuinticEase> и с помощью <xref:System.Windows.Media.Animation.PowerEase.Power%2A> свойства. Например, если вы хотите использовать <xref:System.Windows.Media.Animation.PowerEase> для <xref:System.Windows.Media.Animation.CubicEase>замены, укажите <xref:System.Windows.Media.Animation.PowerEase.Power%2A> значение 3.  
  
 Помимо <xref:System.Windows.Media.Animation.QuarticEase>этого существует несколько других функций плавности.
Помимо использования функций плавности, входящих в время выполнения, можно создавать собственные пользовательские функции плавности, наследуя от <xref:System.Windows.Media.Animation.EasingFunctionBase>.  
  
## <a name="xaml-object-element-usage"></a>Использование элемента объекта XAML  
  
```xaml
<QuarticEase .../>  
```  
  
   
  
## Examples  
 В следующем примере функция <xref:System.Windows.Media.Animation.QuarticEase> плавности применяется к элементу <xref:System.Windows.Media.Animation.DoubleAnimation> для создания анимации с замедлением.  
  
 [!code-xaml[QuarticEase#QuarticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/quarticease/CS/window1.xaml#quarticease)]   
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ElasticEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuarticEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.QuarticEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QuarticEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Media.Animation.QuarticEase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.QuarticEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="quarticEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр производного класса <see cref="T:System.Windows.Freezable" />. При создании производного класса вы должны переопределить этот метод.</summary>
        <returns>Новый экземпляр.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы анимации наследуют косвенно от <xref:System.Windows.Freezable>. Поэтому необходимо переопределить <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> метод для создания пользовательского объекта анимации.  
  
   
  
## Examples  
 В следующем примере показана типичная реализация <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.QuarticEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="quarticEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">Нормированное время (ход выполнения) анимации.</param>
        <summary>Предоставляет логику для функции плавности, которую можно переопределить, чтобы создать режим <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> настраиваемой функции плавности.</summary>
        <returns>Значение двойной точности, представляющее преобразованный ход выполнения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод преобразует нормализованное время для управления скоростью анимации в <xref:System.Windows.Media.Animation.EasingMode.EaseIn> <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>случае.  
  
 Для <xref:System.Windows.Media.Animation.EasingMode.EaseIn> случая необходимо указать только функцию плавности, так как реализация <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> преобразования `normalizedTime` метода для <xref:System.Windows.Media.Animation.EasingMode.EaseOut> вариантов и <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
