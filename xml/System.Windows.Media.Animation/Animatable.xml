<Type Name="Animatable" FullName="System.Windows.Media.Animation.Animatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d76f2c0965e10e5062bdfec4d16886dd46b80a71" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69166238" /></Metadata><TypeSignature Language="C#" Value="public abstract class Animatable : System.Windows.Freezable, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Animatable extends System.Windows.Freezable implements class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Animatable&#xA;Inherits Freezable&#xA;Implements IAnimatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Animatable abstract : System::Windows::Freezable, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type Animatable = class&#xA;    inherit Freezable&#xA;    interface IAnimatable&#xA;    interface DUCE.IResource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="95a29-101">Абстрактный класс, который обеспечивает поддержку анимации.</span><span class="sxs-lookup"><span data-stu-id="95a29-101">Abstract class that provides animation support.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Animatable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Animatable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95a29-102">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Media.Animation.Animatable" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-102">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Animatable" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95a29-103">Анимирует указанное свойство <see cref="T:System.Windows.DependencyProperty" /> с использованием указанного объекта <see cref="T:System.Windows.Media.Animation.AnimationClock" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-103">Animates the specified <see cref="T:System.Windows.DependencyProperty" /> using the specified <see cref="T:System.Windows.Media.Animation.AnimationClock" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="animatable.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="95a29-104">Анимируемое свойство.</span><span class="sxs-lookup"><span data-stu-id="95a29-104">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="95a29-105">Часы, с помощью которых нужно анимировать заданное свойство.</span><span class="sxs-lookup"><span data-stu-id="95a29-105">The clock with which to animate the specified property.</span></span> <span data-ttu-id="95a29-106">Если <paramref name="clock" /> имеет значение <see langword="null" />, все анимации будут удалены из заданного свойства (но не остановлены).</span><span class="sxs-lookup"><span data-stu-id="95a29-106">If <paramref name="clock" /> is <see langword="null" />, all animations will be removed from the specified property (but not stopped).</span></span></param>
        <summary><span data-ttu-id="95a29-107">Применяет <see cref="T:System.Windows.Media.Animation.AnimationClock" /> к заданному <see cref="T:System.Windows.DependencyProperty" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-107">Applies an <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span> <span data-ttu-id="95a29-108">Если свойство уже анимировано, используется эстафетное поведение <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-108">If the property is already animated, the <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> handoff behavior is used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a29-109">Обратите внимание, что использование этого метода для удаления часов из свойства не останавливает эти часы.</span><span class="sxs-lookup"><span data-stu-id="95a29-109">Note that using this method to removing clocks from a property does not stop those clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="animatable.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="95a29-110">Анимируемое свойство.</span><span class="sxs-lookup"><span data-stu-id="95a29-110">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="95a29-111">Часы, с помощью которых нужно анимировать заданное свойство.</span><span class="sxs-lookup"><span data-stu-id="95a29-111">The clock with which to animate the specified property.</span></span> <span data-ttu-id="95a29-112">Если параметр <paramref name="handoffBehavior" /> имеет значение <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, а параметр <paramref name="clock" /> – значение <see langword="null" />, все анимации будут удалены из указанного свойства (но не остановлены).</span><span class="sxs-lookup"><span data-stu-id="95a29-112">If <paramref name="handoffBehavior" /> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and <paramref name="clock" /> is <see langword="null" />, all animations will be removed from the specified property (but not stopped).</span></span> <span data-ttu-id="95a29-113">Если параметр <paramref name="handoffBehavior" /> равен <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /> и часы имеют значение <see langword="null" />, этот метод не действует.</span><span class="sxs-lookup"><span data-stu-id="95a29-113">If <paramref name="handoffBehavior" /> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /> and clock is <see langword="null" />, this method has no effect.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="95a29-114">Значение, которое указывает, как новая анимация должна взаимодействовать с любыми текущими анимациями, уже влияющими на значение свойства.</span><span class="sxs-lookup"><span data-stu-id="95a29-114">A value that specifies how the new animation should interact with any current animations already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="95a29-115">Применяет <see cref="T:System.Windows.Media.Animation.AnimationClock" /> к заданному <see cref="T:System.Windows.DependencyProperty" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-115">Applies an <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span> <span data-ttu-id="95a29-116">Если свойство уже является анимированным, используется указанное поведение <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-116">If the property is already animated, the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> is used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a29-117">Обратите внимание, что использование этого метода для удаления часов из свойства не останавливает эти часы.</span><span class="sxs-lookup"><span data-stu-id="95a29-117">Note that using this method to remove clocks from a property does not stop those clocks.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="95a29-118">Использование создания HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="95a29-118">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="95a29-119">При <xref:System.Windows.Media.Animation.Storyboard>применении, <xref:System.Windows.Media.Animation.AnimationTimeline>или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>все <xref:System.Windows.Media.Animation.Clock> объекты, ранее связанные с этим свойством, продолжают потреблять системные ресурсы; система времени не будет Удалите эти часы автоматически.</span><span class="sxs-lookup"><span data-stu-id="95a29-119">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="95a29-120">Чтобы избежать проблем с производительностью при применении большого количества часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, следует удалить составные часы из анимированного свойства после их завершения.</span><span class="sxs-lookup"><span data-stu-id="95a29-120">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="95a29-121">Есть несколько способов удаления часов.</span><span class="sxs-lookup"><span data-stu-id="95a29-121">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="95a29-122">Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> метод или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> анимированного объекта.</span><span class="sxs-lookup"><span data-stu-id="95a29-122">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="95a29-123">Укажите свойство, которое анимируется как первый параметр, а `null` в качестве второго.</span><span class="sxs-lookup"><span data-stu-id="95a29-123">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="95a29-124">Это удалит из свойства все часы анимации.</span><span class="sxs-lookup"><span data-stu-id="95a29-124">This will remove all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="95a29-125">Чтобы <xref:System.Windows.Media.Animation.AnimationClock> удалить определенное значение из списка часов, <xref:System.Windows.Media.Animation.Clock.Controller%2A> используйте свойство <xref:System.Windows.Media.Animation.ClockController>объекта <xref:System.Windows.Media.Animation.AnimationClock> для получения, а затем вызовите <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод класса <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="95a29-125">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="95a29-126">Обычно это делается в <xref:System.Windows.Media.Animation.Clock.Completed> обработчике событий для часов.</span><span class="sxs-lookup"><span data-stu-id="95a29-126">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="95a29-127">Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController> <xref:System.Windows.Media.Animation.Clock.Controller%2A> ; свойство дочернего часов будет возвращать `null`значение.</span><span class="sxs-lookup"><span data-stu-id="95a29-127">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`.</span></span> <span data-ttu-id="95a29-128">Обратите внимание, <xref:System.Windows.Media.Animation.Clock.Completed> что событие не будет вызываться, если фактическая длительность часов бесконечно.</span><span class="sxs-lookup"><span data-stu-id="95a29-128">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="95a29-129">В этом случае пользователю нужно будет определить, когда следует вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="95a29-129">In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="95a29-130">В основном это проблема для анимации объектов, имеющих длинное время жизни.</span><span class="sxs-lookup"><span data-stu-id="95a29-130">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="95a29-131">Когда объект собирается как мусор, его часы отсоединяются и также собираются как мусор.</span><span class="sxs-lookup"><span data-stu-id="95a29-131">When an object is garbage collected, its clocks will also be disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="95a29-132">Дополнительные сведения об объектах часов см. в разделе [Общие сведения о анимации и системе управления временем](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="95a29-132">For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a29-133">В следующем примере показано, как применять часы анимации с помощью различных <xref:System.Windows.Media.Animation.HandoffBehavior> параметров.</span><span class="sxs-lookup"><span data-stu-id="95a29-133">The following example shows how to apply animation clocks using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95a29-134">Применяет анимацию к указанному <see cref="T:System.Windows.DependencyProperty" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-134">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="animatable.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="95a29-135">Анимируемое свойство.</span><span class="sxs-lookup"><span data-stu-id="95a29-135">The property to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="95a29-136">Анимация, которая используется для анимирования указанного свойства.</span><span class="sxs-lookup"><span data-stu-id="95a29-136">The animation used to animate the specified property.</span></span>  
  
<span data-ttu-id="95a29-137">Если <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> анимации — <see langword="null" />, любые текущие анимации будут удалены, и будет сохранено существующее значение свойства.</span><span class="sxs-lookup"><span data-stu-id="95a29-137">If the animation's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />, any current animations will be removed and the current value of the property will be held.</span></span>  
  
<span data-ttu-id="95a29-138">Если <paramref name="animation" /> имеет значение <see langword="null" />, все анимации будут удалены из свойства, а значение свойства вернется к базовому значению.</span><span class="sxs-lookup"><span data-stu-id="95a29-138">If <paramref name="animation" /> is <see langword="null" />, all animations will be removed from the property and the property value will revert back to its base value.</span></span></param>
        <summary><span data-ttu-id="95a29-139">Применяет анимацию к указанному <see cref="T:System.Windows.DependencyProperty" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-139">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span> <span data-ttu-id="95a29-140">Анимация начинается при отрисовке следующего кадра.</span><span class="sxs-lookup"><span data-stu-id="95a29-140">The animation is started when the next frame is rendered.</span></span> <span data-ttu-id="95a29-141">Если указанное свойство уже анимировано, используется поведение перемещения <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-141">If the specified property is already animated, the <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> handoff behavior is used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a29-142">Если анимация имеет значение <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> , большее нуля, анимация начнется после истечения этого периода времени с момента отображения следующего кадра.</span><span class="sxs-lookup"><span data-stu-id="95a29-142">If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="animatable.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="95a29-143">Анимируемое свойство.</span><span class="sxs-lookup"><span data-stu-id="95a29-143">The property to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="95a29-144">Анимация, которая используется для анимирования указанного свойства.</span><span class="sxs-lookup"><span data-stu-id="95a29-144">The animation used to animate the specified property.</span></span>  
  
<span data-ttu-id="95a29-145">Если параметр <paramref name="handoffBehavior" /> равен <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, а свойство анимации <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> имеет значение <see langword="null" />, любые текущие анимации будут удалены, а текущее значение свойства будет сохранено.</span><span class="sxs-lookup"><span data-stu-id="95a29-145">If <paramref name="handoffBehavior" /> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and the animation's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />, any current animations will be removed and the current value of the property will be held.</span></span>  
  
<span data-ttu-id="95a29-146">Если параметр <paramref name="handoffBehavior" /> равен <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, а параметр <paramref name="animation" /> имеет значение <see langword="null" />, все анимации будут удалены из свойства, а значение свойства будет возвращено к исходному.</span><span class="sxs-lookup"><span data-stu-id="95a29-146">If <paramref name="handoffBehavior" /> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and <paramref name="animation" /> is a <see langword="null" /> reference, all animations will be removed from the property and the property value will revert back to its base value.</span></span>  
  
<span data-ttu-id="95a29-147">Если параметр <paramref name="handoffBehavior" /> равен <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />, этот метод не будет действовать при условии, что анимация или ее свойство <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> имеют значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-147">If <paramref name="handoffBehavior" /> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />, this method will have no effect if the animation or its <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="95a29-148">Значение, которое указывает, как новая анимация должна взаимодействовать с любыми текущими анимациями, уже влияющими на значение свойства.</span><span class="sxs-lookup"><span data-stu-id="95a29-148">A value that specifies how the new animation should interact with any current animations already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="95a29-149">Применяет анимацию к указанному <see cref="T:System.Windows.DependencyProperty" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-149">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span> <span data-ttu-id="95a29-150">Анимация начинается при отрисовке следующего кадра.</span><span class="sxs-lookup"><span data-stu-id="95a29-150">The animation is started when the next frame is rendered.</span></span> <span data-ttu-id="95a29-151">Если указанное свойство уже является анимированным, используется указанное поведение <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-151">If the specified property is already animated, the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> is used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a29-152">Если анимация имеет значение <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> , большее нуля, анимация начнется после истечения этого периода времени с момента отображения следующего кадра.</span><span class="sxs-lookup"><span data-stu-id="95a29-152">If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="95a29-153">Использование создания HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="95a29-153">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="95a29-154">При <xref:System.Windows.Media.Animation.Storyboard>применении, <xref:System.Windows.Media.Animation.AnimationTimeline>или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>все <xref:System.Windows.Media.Animation.Clock> объекты, ранее связанные с этим свойством, продолжают потреблять системные ресурсы; система времени не будет Удалите эти часы автоматически.</span><span class="sxs-lookup"><span data-stu-id="95a29-154">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="95a29-155">Чтобы избежать проблем с производительностью при применении большого количества часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, следует удалить составные часы из анимированного свойства после их завершения.</span><span class="sxs-lookup"><span data-stu-id="95a29-155">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="95a29-156">Есть несколько способов удаления часов.</span><span class="sxs-lookup"><span data-stu-id="95a29-156">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="95a29-157">Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> метод или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> анимированного объекта.</span><span class="sxs-lookup"><span data-stu-id="95a29-157">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="95a29-158">Укажите свойство, которое анимируется как первый параметр, а `null` в качестве второго.</span><span class="sxs-lookup"><span data-stu-id="95a29-158">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="95a29-159">Это удалит из свойства все часы анимации.</span><span class="sxs-lookup"><span data-stu-id="95a29-159">This will remove all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="95a29-160">Чтобы <xref:System.Windows.Media.Animation.AnimationClock> удалить определенное значение из списка часов, <xref:System.Windows.Media.Animation.Clock.Controller%2A> используйте свойство <xref:System.Windows.Media.Animation.ClockController>объекта <xref:System.Windows.Media.Animation.AnimationClock> для получения, а затем вызовите <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод класса <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="95a29-160">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="95a29-161">Обычно это делается в <xref:System.Windows.Media.Animation.Clock.Completed> обработчике событий для часов.</span><span class="sxs-lookup"><span data-stu-id="95a29-161">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="95a29-162">Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController> <xref:System.Windows.Media.Animation.Clock.Controller%2A> ; свойство дочернего часов будет возвращать `null`значение.</span><span class="sxs-lookup"><span data-stu-id="95a29-162">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`.</span></span> <span data-ttu-id="95a29-163">Обратите внимание, <xref:System.Windows.Media.Animation.Clock.Completed> что событие не будет вызываться, если фактическая длительность часов бесконечно.</span><span class="sxs-lookup"><span data-stu-id="95a29-163">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="95a29-164">В этом случае пользователю нужно будет определить, когда следует вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="95a29-164">In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="95a29-165">В основном это проблема для анимации объектов, имеющих длинное время жизни.</span><span class="sxs-lookup"><span data-stu-id="95a29-165">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="95a29-166">Когда объект собирается как мусор, его часы отсоединяются и также собираются как мусор.</span><span class="sxs-lookup"><span data-stu-id="95a29-166">When an object is garbage collected, its clocks will also be disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="95a29-167">Дополнительные сведения об объектах часов см. в разделе [Общие сведения о анимации и системе управления временем](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="95a29-167">For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a29-168">В следующем примере показано, как применять анимацию с <xref:System.Windows.Media.Animation.HandoffBehavior> помощью различных параметров.</span><span class="sxs-lookup"><span data-stu-id="95a29-168">The following example shows how to apply animations using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.</span></span>  
  
 [!code-cpp[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/cpp/VS_Snippets_Wpf/animateproperty/CPP/InteractiveExample.cpp#interactiveanimationexamplewholepage)]
 [!code-csharp[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animateproperty/CSharp/InteractiveExample.cs#interactiveanimationexamplewholepage)]
 [!code-vb[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animateproperty/VisualBasic/InteractiveExample.vb#interactiveanimationexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Animatable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Animatable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Animatable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Animatable ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Animatable" Usage="animatable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Animatable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95a29-169">Создает изменяемый клон данного объекта <see cref="T:System.Windows.Media.Animation.Animatable" />, делая глубокие копии значений этого объекта.</span><span class="sxs-lookup"><span data-stu-id="95a29-169">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Animatable" />, making deep copies of this object's values.</span></span> <span data-ttu-id="95a29-170">При копировании свойств зависимостей объекта этот метод копирует указатели на ресурсы и связи с данными (которые могут уже не быть разрешимыми), но не копирует анимации и их текущие значения.</span><span class="sxs-lookup"><span data-stu-id="95a29-170">When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="95a29-171">Модифицируемая копия этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="95a29-171">A modifiable clone of this instance.</span></span> <span data-ttu-id="95a29-172">Возвращаемая копия является глубокой копией текущего объекта.</span><span class="sxs-lookup"><span data-stu-id="95a29-172">The returned clone is effectively a deep copy of the current object.</span></span> <span data-ttu-id="95a29-173">Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клона имеет значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-173">The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a29-174">Метод можно использовать для создания изменяемых копий замороженных <xref:System.Windows.Freezable> объектов. <xref:System.Windows.Media.Animation.Animatable.Clone%2A></span><span class="sxs-lookup"><span data-stu-id="95a29-174">The <xref:System.Windows.Media.Animation.Animatable.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects.</span></span> <span data-ttu-id="95a29-175">Для удобства этот метод затеняет наследуемый <xref:System.Windows.Freezable.Clone%2A> метод, чтобы обеспечить строго типизированную реализацию.</span><span class="sxs-lookup"><span data-stu-id="95a29-175">For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="animatable.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="95a29-176">Значение <see langword="true" />, если этот метод должен просто определять возможность фиксации данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="95a29-176"><see langword="true" /> if this method should simply determine whether this instance can be frozen.</span></span> <span data-ttu-id="95a29-177"><see langword="false" />, если этот экземпляр действительно должен фиксировать себя при вызове этого метода.</span><span class="sxs-lookup"><span data-stu-id="95a29-177"><see langword="false" /> if this instance should actually freeze itself when this method is called.</span></span></param>
        <summary><span data-ttu-id="95a29-178">Делает данный объект <see cref="T:System.Windows.Media.Animation.Animatable" /> неизменяемым или определяет, может ли он быть сделан неизменяемым.</span><span class="sxs-lookup"><span data-stu-id="95a29-178">Makes this <see cref="T:System.Windows.Media.Animation.Animatable" /> object unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="95a29-179">Если параметр <paramref name="isChecking" /> равен <see langword="true" />, этот метод возвращает значение <see langword="true" /> при возможности сделать данный объект <see cref="T:System.Windows.Media.Animation.Animatable" /> неизменяемым или значение <see langword="false" />, если такая возможность отсутствует.</span><span class="sxs-lookup"><span data-stu-id="95a29-179">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.Media.Animation.Animatable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span></span>  
  
<span data-ttu-id="95a29-180">Если свойство <paramref name="isChecking" /> равно <see langword="false" />, этот метод возвращает значение <see langword="true" />, если данный объект <see cref="T:System.Windows.Media.Animation.Animatable" /> уже является неизменяемым, либо значение <see langword="false" />, если его невозможно сделать неизменяемым, при этом начнется изменение замороженного статуса этого объекта.</span><span class="sxs-lookup"><span data-stu-id="95a29-180">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if this <see cref="T:System.Windows.Media.Animation.Animatable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a29-181">Этот метод возвращает `false` , если <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> имеет `true`значения.</span><span class="sxs-lookup"><span data-stu-id="95a29-181">This method will return `false` when <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> is `true`.</span></span>  
  
 <span data-ttu-id="95a29-182">Не вызывайте этот метод напрямую (за исключением вызова Base в реализации).</span><span class="sxs-lookup"><span data-stu-id="95a29-182">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="95a29-183">Этот метод вызывается внутренним <xref:System.Windows.Freezable.CanFreeze%2A> методом (с `isChecking` равным `true`) и <xref:System.Windows.Freezable.Freeze%2A> (с `isChecking` равным `false`).</span><span class="sxs-lookup"><span data-stu-id="95a29-183">This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="95a29-184">Классы, производные от <see cref="T:System.Windows.Media.Animation.Animatable" /> , должны переопределять этот метод, если класс содержит данные, которые не хранятся с помощью свойств зависимостей.</span><span class="sxs-lookup"><span data-stu-id="95a29-184">Classes that derive from <see cref="T:System.Windows.Media.Animation.Animatable" /> must override this method when the class contains data that is not stored using dependency properties.</span></span>  
  
<span data-ttu-id="95a29-185">Типичная реализация вызывает базовую реализацию, затем вызывает статический <see cref="M:System.Windows.Freezable.Freeze" /> метод для всех <see cref="T:System.Windows.Freezable" /> типизированных свойств, содержащихся в классе, и <see langword="true" /> возвращает, только если все свойства были заморожены (или могут быть заморожены) в вариант передачи <see langword="false" /> значения для <paramref name="isChecking" />).</span><span class="sxs-lookup"><span data-stu-id="95a29-185">A typical implementation would call the base implementation, then call the static <see cref="M:System.Windows.Freezable.Freeze" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of passing through a <see langword="false" /> value for <paramref name="isChecking" />).</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="animatable.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="95a29-186">Указывает свойство, чье базовое (не анимированное) значение должно быть извлечено.</span><span class="sxs-lookup"><span data-stu-id="95a29-186">Identifies the property whose base (non-animated) value should be retrieved.</span></span></param>
        <summary><span data-ttu-id="95a29-187">Возвращает не анимированное значение указанного объекта <see cref="T:System.Windows.DependencyProperty" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-187">Returns the non-animated value of the specified <see cref="T:System.Windows.DependencyProperty" />.</span></span></summary>
        <returns><span data-ttu-id="95a29-188">Значение, которое будет возвращено, если указанное свойство не было анимировано.</span><span class="sxs-lookup"><span data-stu-id="95a29-188">The value that would be returned if the specified property were not animated.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a29-189">Если указанное свойство не анимировано, этот метод возвращает тот же результат, что <xref:System.Windows.DependencyObject.GetValue%2A>и.</span><span class="sxs-lookup"><span data-stu-id="95a29-189">If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a29-190">В следующем примере извлекаются и отображаются неанимированные значения анимированных свойств.</span><span class="sxs-lookup"><span data-stu-id="95a29-190">In the following example, the non-animated values of animated properties are retrieved and displayed.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalueexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalueexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a29-191">Возвращает значение, которое указывает, сопоставлены ли один или несколько объектов <see cref="T:System.Windows.Media.Animation.AnimationClock" /> любому из свойств зависимостей этого объекта.</span><span class="sxs-lookup"><span data-stu-id="95a29-191">Gets a value that indicates whether one or more <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objects is associated with any of this object's dependency properties.</span></span></summary>
        <value><span data-ttu-id="95a29-192"><see langword="true" /><see cref="T:System.Windows.Media.Animation.AnimationClock" /> ,<see langword="false" />если один или несколько объектов связаны с любыми свойствами зависимостей этого объекта; в противном случае — значение.</span><span class="sxs-lookup"><span data-stu-id="95a29-192"><see langword="true" /> if one or more <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objects is associated with any of this object's dependency properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a29-193">Это свойство не указывает, содержит ли этот объект анимированные подобъекты.</span><span class="sxs-lookup"><span data-stu-id="95a29-193">This property does not indicate whether this object contains animated sub-objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeStoredWeakReference">
      <MemberSignature Language="C#" Value="public static bool ShouldSerializeStoredWeakReference (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSerializeStoredWeakReference(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShouldSerializeStoredWeakReference (target As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ShouldSerializeStoredWeakReference(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member ShouldSerializeStoredWeakReference : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="95a29-194">Представляет объект, участвующий в системе свойств зависимостей.</span><span class="sxs-lookup"><span data-stu-id="95a29-194">Represents an object that participates in the dependency property system.</span></span></param>
        <summary><span data-ttu-id="95a29-195">Указывает, нужно ли сериализовать объект зависимости.</span><span class="sxs-lookup"><span data-stu-id="95a29-195">Specifies whether a dependency object should be serialized.</span></span></summary>
        <returns><span data-ttu-id="95a29-196">Значение <see langword="true" /> для сериализации объекта <paramref name="target" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-196"><see langword="true" /> to serialize <paramref name="target" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="95a29-197">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="95a29-197">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a29-198"><xref:System.ComponentModel.TypeDescriptor> Класс<xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> использует метод, чтобы определить, должно ли быть сериализовано свойство.</span><span class="sxs-lookup"><span data-stu-id="95a29-198">The <xref:System.ComponentModel.TypeDescriptor> class uses the <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> method to determine if a property should be serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
