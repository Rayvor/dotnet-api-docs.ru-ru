<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="794f66876f66d7f8eb1279ed074318e7dd3a2c62" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70625866" /></Metadata><TypeSignature Language="C#" Value="public class SortKey" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" />
  <TypeSignature Language="F#" Value="type SortKey = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет результат сопоставления строки ее ключу сортировки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сравнение двух строк с учетом языка и региональных параметров зависит от каждого символа в строках, имеющих несколько категорий весовых коэффициентов сортировки, включая скрипты, буквы алфавита, регистры и диакритические знаки. Ключ сортировки служит репозиторием этих весов для определенной строки.  
  
 Метод возвращает экземпляр <xref:System.Globalization.SortKey> класса, отражающий сопоставление символов в указанной строке с учетом языка и региональных параметров. <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> Значение <xref:System.Globalization.SortKey> объекта представляет собой его ключевые данные, возвращаемые <xref:System.Globalization.SortKey.KeyData%2A> свойством. Эти данные ключа состоят из последовательности байтов, которая кодирует строку, правила сортировки, зависящие от языка и региональных параметров, и параметры сравнения, заданные пользователем. Сравнение с помощью ключей сортировки состоит из побитового сравнения соответствующих ключевых данных в каждом ключе сортировки.  Например, если создать ключ сортировки, вызвав <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> метод со <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>значением, операция сравнения строк, использующая ключ сортировки, не учитывает регистр.  
  
 После создания ключа сортировки для строки Сравните ключи сортировки, вызвав статический <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> метод. Этот метод выполняет простое побайтовое сравнение, поэтому оно выполняется гораздо быстрее, чем <xref:System.String.Compare%2A?displayProperty=nameWithType> метод или. <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>  

> [!NOTE]
> Можно скачать [таблицы весовых коэффициентов сортировки](https://www.microsoft.com/download/details.aspx?id=10921), набор текстовых файлов, содержащих сведения о весах символов, используемых в операциях сортировки и сравнения для операционных систем Windows, [таблицу элементов параметров сортировки Юникода по умолчанию](https://www.unicode.org/Public/UCA/latest/allkeys.txt), сортировку Таблица веса для Linux и macOS.

## <a name="performance-considerations"></a>Особенности производительности  
 При сравнении <xref:System.Globalization.SortKey.Compare%2A> строк методы и <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> выдают одинаковые результаты, но они предназначены для различных сценариев.  
  
 На высоком уровне <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> метод создает ключ сортировки для каждой строки, выполняет сравнение, а затем удаляет ключ сортировки и возвращает результат сравнения. <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> Однако метод фактически не создает ключ сортировки для выполнения сравнения. Вместо этого метод создает ключевые данные для каждого текстового элемента (то есть базового символа, суррогатной пары или сочетания последовательности символов) в каждой строке. Затем метод сравнивает данные ключа для соответствующих текстовых элементов. Операция завершается сразу после определения конечного результата сравнения. Сведения о ключе сортировки вычислены, <xref:System.Globalization.SortKey> но объект не создается. Эта стратегия экономична в плане производительности, если обе строки сравниваются один раз, но становятся дорогостоящими, если одни и те же строки сравниваются несколько раз.  
  
 Перед выполнением сравнения <xref:System.Globalization.SortKey> метод требует создания объекта для каждой строки. <xref:System.Globalization.SortKey.Compare%2A> Эта стратегия является дорогостоящей с точки зрения производительности при первом сравнении из-за времени и памяти, инвестированной для <xref:System.Globalization.SortKey> создания объектов. Однако он считается экономичным, если несколько раз сравниваются одни и те же ключи сортировки.  
  
 Например, предположим, что вы написали приложение, которое ищет в таблице базы данных строку, в которой строковый столбец индекса совпадает с указанной строкой поиска. Таблица содержит тысячи строк, и сравнение строки поиска с индексом в каждой строке займет много времени. Таким образом, когда приложение сохраняет строку и столбец индекса, она также создает и сохраняет ключ сортировки для индекса в столбце, выделенном для повышения производительности поиска. Когда приложение выполняет поиск целевой строки, оно сравнивает ключ сортировки строки поиска с ключом сортировки для строки индекса вместо того, чтобы сравнивать строку поиска со строкой индекса.  
  
## <a name="security-considerations"></a>Замечания по безопасности  
 Метод возвращает объект со значением на основе указанной строки и <xref:System.Globalization.CompareOptions> значения, а также язык и региональные параметры, связанные с базовым <xref:System.Globalization.CompareInfo> объектом. <xref:System.Globalization.SortKey> <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> Если решение о безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> метод инвариантного языка и региональных параметров, чтобы обеспечить целостность поведения операции, независимо от настроек языка и региональных параметров операционной системы.  
  
 Чтобы получить ключ сортировки, выполните следующие действия.  
  
1.  Извлеките инвариантный язык и региональные <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> параметры из свойства.  
  
2.  Получите объект для инвариантного языка и региональных параметров <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> из свойства. <xref:System.Globalization.CompareInfo>  
  
3.  Вызовите метод <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>.  
  
 Работа со значением <xref:System.Globalization.SortKey> объекта эквивалентно вызову метода Windows `LCMapString` с указанным значением LCMAP_SORTKEY. Однако для <xref:System.Globalization.SortKey> объекта ключи сортировки для английских символов предшествуют ключам сортировки для корейских символов.  
  
 <xref:System.Globalization.SortKey>объекты можно сериализовать, но только для того, чтобы они могли пересекать <xref:System.AppDomain> объекты. Если приложение сериализует <xref:System.Globalization.SortKey> объект, приложение должно повторно создать все ключи сортировки при наличии новой версии .NET Framework.  
  
 Дополнительные сведения о ключах сортировки см. в статье технические стандарты Юникода #10, "алгоритм параметров сортировки Юникода" на [веб-сайте консорциума Unicode](https://go.microsoft.com/fwlink/?linkid=37123).  
  
   
  
## Examples  
 В следующем примере сравнивается строка "ллама" с использованием языков и региональных параметров "en-US" и "es-ES", а также "en-US" и "es-ES" традиционного языка и региональных параметров.  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 В следующем примере показано, как можно использовать <xref:System.Globalization.SortKey> класс для повышения производительности приложения, которое сильно зависит от сортировки и поиска в большом массиве. В этом примере создается неупорядоченный массив имен, который в данном случае содержит 13 элементов. Затем он сохраняет ключ сортировки каждого имени в параллельном массиве, который передается <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> в метод. Результатом является отсортированный массив. Затем в этом примере выполняется поиск трех строк в массиве. Для каждой строки поиска вызывается <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> метод для получения ключа сортировки строки, а затем <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> вызывается метод для получения индекса этого ключа сортировки в массиве ключей сортировки. Поскольку массивы ключей Name и Sort являются параллельными, возвращаемый индекс также является индексом имени в `names` массиве.  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Globalization.SortKey * System.Globalization.SortKey -&gt; int" Usage="System.Globalization.SortKey.Compare (sortkey1, sortkey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1">Сравнивается первый ключ сортировки.</param>
        <param name="sortkey2">Сравнивается второй ключ сортировки.</param>
        <summary>Сравнивает два ключа сортировки.</summary>
        <returns>Целое число со знаком, указывающее на соотношение <paramref name="sortkey1" /> и <paramref name="sortkey2" />.  
  
 <list type="table"><listheader><term> Значение 
 </term><description> Условие 
 </description></listheader><item><term> Меньше нуля 
 </term><description>Значение <paramref name="sortkey1" /> меньше <paramref name="sortkey2" />.  
  
 </description></item><item><term> Нуль 
 </term><description><paramref name="sortkey1" /> равно <paramref name="sortkey2" />.  
  
 </description></item><item><term> Больше нуля 
 </term><description>Значение <paramref name="sortkey1" /> больше значения <paramref name="sortkey2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод сравнивает <xref:System.Globalization.SortKey.KeyData%2A> свойства `sortkey1`  параметров и . `sortkey2`  <xref:System.Globalization.SortKey.Compare%2A> Метод возвращает те же результаты, что <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> и метод.  
  
 Дополнительные сведения о <xref:System.Globalization.SortKey.Compare%2A> методе и сравнении ключей сортировки см. в <xref:System.Globalization.SortKey> разделе о классе.  
  
   
  
## Examples  
 В следующем примере кода сравниваются две строки с помощью <xref:System.Globalization.SortKey.Compare%2A> метода и эквивалентного <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> метода.  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sortkey1" /> или <paramref name="sortkey2" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortKey.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Globalization.SortKey" />.</param>
        <summary>Определяет, равен ли заданный объект текущему объекту <see cref="T:System.Globalization.SortKey" />.</summary>
        <returns><see langword="true" />, если значение параметра <paramref name="value" /> равно текущему объекту <see cref="T:System.Globalization.SortKey" />, в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Два <xref:System.Globalization.SortKey> объекта считаются равными, если <xref:System.Globalization.SortKey.KeyData%2A> их свойства равны.  
  
 Этот метод переопределяет метод <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода показаны результаты, полученные <xref:System.Globalization.SortKey.Equals%2A> при сравнении с <xref:System.Globalization.SortKey> различными объектами.  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Служит хэш-функцией текущего объекта <see cref="T:System.Globalization.SortKey" /> для использования в алгоритмах и структурах данных хеширования, например в хэш-таблице.</summary>
        <returns>Хэш-код для текущего объекта <see cref="T:System.Globalization.SortKey" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод создает один и тот же хэш-код для двух объектов, которые равны в соответствии с методом <xref:System.Globalization.SortKey.Equals%2A>.  
  
 Этот метод переопределяет метод <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : byte[]" Usage="System.Globalization.SortKey.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает массив байтов, представляющий текущий объект <see cref="T:System.Globalization.SortKey" />.</summary>
        <value>Массив байтов, представляющий текущий объект <see cref="T:System.Globalization.SortKey" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об использовании данных, возвращаемых <xref:System.Globalization.SortKey.KeyData%2A> свойством в сравнении строк, см. в <xref:System.Globalization.SortKey> разделе о классе.  
  
   
  
## Examples  
 В следующем примере кода отображается исходная строка и эквивалентная строка и ключевые данные для ключа сортировки с учетом регистра и ключа сортировки без учета регистра.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Globalization.SortKey.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает исходную строку, используемую для создания текущего объекта <see cref="T:System.Globalization.SortKey" />.</summary>
        <value>Исходная строка, используемая для создания текущего объекта <see cref="T:System.Globalization.SortKey" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода отображается исходная строка и эквивалентная строка и ключевые данные для ключа сортировки с учетом регистра и ключа сортировки без учета регистра.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sortKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, представляющую текущий объект <see cref="T:System.Globalization.SortKey" />.</summary>
        <returns>Строка, представляющая текущий объект <see cref="T:System.Globalization.SortKey" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение — это объединение строки "SortKey-", идентификатора языка и параметров сравнения текущего <xref:System.Globalization.SortKey> объекта и значения <xref:System.Globalization.SortKey.OriginalString%2A> свойства.  
  
 Этот метод переопределяет метод <xref:System.Object.ToString%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода отображается исходная строка, строки, выдаются <xref:System.Globalization.SortKey.ToString%2A> методом для ключей сортировки с учетом регистра и без учета регистра, а также ключевые данные для ключей сортировки с учетом регистра и без учета регистра.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
