<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97a018440b3927aabd0772df0854ef55e076bc2a" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66006436" /></Metadata><TypeSignature Language="C#" Value="public class SortKey" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" />
  <TypeSignature Language="F#" Value="type SortKey = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет результат сопоставления строки ее ключу сортировки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сравнение с учетом языка и региональных параметров двух строк зависит от каждого символа в строках, наличие несколько категорий весового значения сортировки, включая скрипт, является буквой алфавита, регистра и диакритических знаков. Ключ сортировки служит хранилищем этих значений для определенной строки.  
  
 <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> Метод возвращает экземпляр <xref:System.Globalization.SortKey> класс, который отражает региональных сопоставление символов в указанной строке. Значение <xref:System.Globalization.SortKey> объекта является его данных ключа, который возвращается методом <xref:System.Globalization.SortKey.KeyData%2A> свойство. Эти ключевые данные состоит из последовательности байтов, кодировать строки, правила сортировки конкретного языка и региональных параметров и параметров сравнения, определяемые пользователем. Сравнение с помощью ключей сортировки состоит из побитовое сравнение соответствующих данных ключа в каждом ключе сортировки.  Например, при создании ключа сортировки, вызвав <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> метод со значением <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>, операции сравнения строк, который использует ключ сортировки без учета регистра.  
  
 После создания ключа сортировки для строки, сравнивать ключи сортировки путем вызова статического <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> метод. Этот метод осуществляет сравнение по байтам, так что это намного быстрее, чем <xref:System.String.Compare%2A?displayProperty=nameWithType> или <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> метод.  

> [!NOTE]
> Вы можете скачать [сортировки таблицы вес](https://www.microsoft.com/download/details.aspx?id=10921), набор текстовых файлов, которые содержат сведения по весу символ, используемый в операциях сортировки и сравнения для операционных систем Windows, [Юникода по умолчанию Таблица параметров сортировки элементов](https://www.unicode.org/Public/UCA/latest/allkeys.txt), таблицы сортировки вес для Linux и macOS.

## <a name="performance-considerations"></a>Особенности производительности  
 При выполнении сравнения строк, <xref:System.Globalization.SortKey.Compare%2A> и <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> методы дают одинаковые результаты, но они ориентированы на различные сценарии.  
  
 На высоком уровне <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> метод создает ключ сортировки для каждой строки, выполняет сравнение и затем удаляет ключ сортировки и возвращает результат сравнения. Тем не менее <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> метод фактически не генерирует ключ сортировки полностью для выполнения сравнения. Вместо этого метод создает данные ключа для каждого элемента текста (т. е базового символа, суррогатная пара или объединенная последовательность символов) в каждой строке. Затем метод сравнивает данные ключа для соответствующих элементов текста. Операция заканчивается сразу же определить лучший результат сравнения. Основные сведения о сортировке является вычисляемым, но не <xref:System.Globalization.SortKey> создается объект. Эта стратегия является экономичным с точки зрения производительности, если обе строки сравниваются только один раз, но становится высокой, если те же строки сравниваются несколько раз.  
  
 <xref:System.Globalization.SortKey.Compare%2A> Метод, необходимо сформировать <xref:System.Globalization.SortKey> для каждой строки перед сравнением. Эта стратегия затратными с точки зрения производительности для первого сравнения из-за времени и памяти, значительные средства для создания <xref:System.Globalization.SortKey> объектов. Тем не менее он становится экономичной, если те же ключи сортировки сравниваются несколько раз.  
  
 Например предположим, что написать приложение, которое выполняет таблицу базы данных для строки, в которой столбец индекса на основе строки соответствует заданной строке поиска. В таблице содержатся тысячи строк, и сравнение строки поиска по индексу в каждой строке займет много времени. Таким образом когда приложение сохраняет строки со столбцом индекса, он также создает и сохраняет ключ сортировки для индекса в столбце, предназначенном для улучшения производительности при поиске. Когда приложение выполняет поиск в целевой строке, он сравнивает ключ сортировки для строки поиска, ключ сортировки для строки индекса вместо сравнения строки поиска строка индекса.  
  
## <a name="security-considerations"></a>Замечания по безопасности  
 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> Возвращает <xref:System.Globalization.SortKey> со значением на основе указанной строке и <xref:System.Globalization.CompareOptions> значение, а также язык и региональные параметры, связанные с основной <xref:System.Globalization.CompareInfo> объекта. Если решение безопасности зависит от того, сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> метод инвариантного языка и региональных параметров для обеспечения согласованности, независимо от настроек языка и региональных параметров операционной системы поведение операции.  
  
 Следуйте инструкциям ниже, чтобы получить ключ сортировки:  
  
1.  Получить инвариантного языка и региональных параметров из <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> свойство.  
  
2.  Получить <xref:System.Globalization.CompareInfo> объект для инвариантного языка и региональных параметров из <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> свойство.  
  
3.  Вызовите метод <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>.  
  
 Работа со значением <xref:System.Globalization.SortKey> объекта эквивалентно вызову Windows `LCMapString` метод с указанным значением LCMAP_SORTKEY. Однако для <xref:System.Globalization.SortKey> объекта, ключи сортировки для английского алфавита предшествовать ключи сортировки для корейских символов.  
  
 <xref:System.Globalization.SortKey> объекты могут быть сериализованный, но только таким образом, чтобы они может пересекать <xref:System.AppDomain> объектов. Если приложение выполняет сериализацию <xref:System.Globalization.SortKey> объекта, приложение необходимо повторно создать все ключи сортировки, при наличии новой версии платформы .NET Framework.  
  
 Дополнительные сведения о ключи сортировки, см. в разделе Юникода Technical Standard #10, «Unicode Collation Algorithm» на [веб-узле консорциума Юникода](https://go.microsoft.com/fwlink/?linkid=37123).  
  
   
  
## Examples  
 В следующем примере сравнивается строка «llama», с помощью «en US» и языков и региональных параметров «es-ES» и «en US» и «es-ES» традиционных языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 В следующем примере показано, как можно использовать <xref:System.Globalization.SortKey> класса для повышения производительности в приложении, которое сильно зависит от Сортировка и поиск большого массива. В примере создается неупорядоченный массив имен, в этом случае с 13 элементов. Она сохраняет ключ сортировки каждое имя в параллельных массив, который передается <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> метод. Результатом является отсортированному массиву. Пример поиска массив для трех строк. Для каждой строки поиска, он вызывает <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> метод для извлечения ключа сортировки строки, а затем вызывает <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> метод для извлечения индекса, ключ сортировки в массив ключей сортировки. Так как имя и сортировки массивов ключа параллельны, возвращаемый индекс — это также индекс имени в `names` массива.  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Globalization.SortKey * System.Globalization.SortKey -&gt; int" Usage="System.Globalization.SortKey.Compare (sortkey1, sortkey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1">Сравнивается первый ключ сортировки.</param>
        <param name="sortkey2">Сравнивается второй ключ сортировки.</param>
        <summary>Сравнивает два ключа сортировки.</summary>
        <returns>Целое число со знаком, указывающее на соотношение <paramref name="sortkey1" /> и <paramref name="sortkey2" />.  
  
 <list type="table"><listheader><term> Значение 
 </term><description> Условие 
 </description></listheader><item><term> Меньше нуля 
 </term><description>Значение параметра <paramref name="sortkey1" /> меньше значения <paramref name="sortkey2" />.  
  
 </description></item><item><term> Нуль 
 </term><description><paramref name="sortkey1" /> равно <paramref name="sortkey2" />.  
  
 </description></item><item><term> Больше нуля 
 </term><description>Значение <paramref name="sortkey1" /> больше значения <paramref name="sortkey2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.SortKey.Compare%2A> Метод сравнивает <xref:System.Globalization.SortKey.KeyData%2A> свойства `sortkey1` и `sortkey2` параметров. Метод возвращает те же результаты, что <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> метод.  
  
 Дополнительные сведения о <xref:System.Globalization.SortKey.Compare%2A> метод и сравнения ключей сортировки, см. в разделе <xref:System.Globalization.SortKey> разделе, посвященном классу.  
  
   
  
## Examples  
 В следующем примере кода сравнивает две строки с использованием <xref:System.Globalization.SortKey.Compare%2A> метод и эквивалент <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> метод.  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sortkey1" /> или <paramref name="sortkey2" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortKey.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Globalization.SortKey" />.</param>
        <summary>Определяет, равен ли заданный объект текущему объекту <see cref="T:System.Globalization.SortKey" />.</summary>
        <returns><see langword="true" />, если значение параметра <paramref name="value" /> равно текущему объекту <see cref="T:System.Globalization.SortKey" />, в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Два <xref:System.Globalization.SortKey> объекты считаются равными, если их <xref:System.Globalization.SortKey.KeyData%2A> свойства равны.  
  
 Этот метод переопределяет метод <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода показаны результаты <xref:System.Globalization.SortKey.Equals%2A> по сравнению с разными <xref:System.Globalization.SortKey> объектов.  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Служит хэш-функцией текущего объекта <see cref="T:System.Globalization.SortKey" /> для использования в алгоритмах и структурах данных хеширования, например в хэш-таблице.</summary>
        <returns>Хэш-код для текущего объекта <see cref="T:System.Globalization.SortKey" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод создает один и тот же хэш-код для двух объектов, которые равны в соответствии с методом <xref:System.Globalization.SortKey.Equals%2A>.  
  
 Этот метод переопределяет метод <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : byte[]" Usage="System.Globalization.SortKey.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает массив байтов, представляющий текущий объект <see cref="T:System.Globalization.SortKey" />.</summary>
        <value>Массив байтов, представляющий текущий объект <see cref="T:System.Globalization.SortKey" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об использовании данных, возвращаемый <xref:System.Globalization.SortKey.KeyData%2A> свойство в сравнении строк, см. в разделе <xref:System.Globalization.SortKey> разделе, посвященном классу.  
  
   
  
## Examples  
 В следующем примере кода отображает исходной строки и эквивалентная строка и данные ключа для ключа сортировки с учетом регистра и ключ сортировки без учета регистра.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Globalization.SortKey.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает исходную строку, используемую для создания текущего объекта <see cref="T:System.Globalization.SortKey" />.</summary>
        <value>Исходная строка, используемая для создания текущего объекта <see cref="T:System.Globalization.SortKey" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода отображает исходной строки и эквивалентная строка и данные ключа для ключа сортировки с учетом регистра и ключ сортировки без учета регистра.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sortKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, представляющую текущий объект <see cref="T:System.Globalization.SortKey" />.</summary>
        <returns>Строка, представляющая текущий объект <see cref="T:System.Globalization.SortKey" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение является объединение строки «SortKey -», идентификатор языка и региональных параметров и параметров сравнения текущего <xref:System.Globalization.SortKey> объект и значение <xref:System.Globalization.SortKey.OriginalString%2A> свойства.  
  
 Этот метод переопределяет метод <xref:System.Object.ToString%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода отображается исходная строка, строки, полученные <xref:System.Globalization.SortKey.ToString%2A> метод ключи сортировки с учетом регистра и без учета регистра и данные ключа для ключа сортировки с учетом регистра и без учета регистра.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>