<Type Name="CompareInfo" FullName="System.Globalization.CompareInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="541990cbf66204fbe3a344b75044c94c8981a3f0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70444170" /></Metadata><TypeSignature Language="C#" Value="public class CompareInfo : System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompareInfo extends System.Object implements class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CompareInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareInfo&#xA;Implements IDeserializationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareInfo : System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type CompareInfo = class&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Реализует ряд методов для сравнения строк с учетом языка и региональных параметров.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Соглашения для сравнения и сортировки данных отличаются от языка и региональных параметров языком и региональными параметрами. Например, порядок сортировки может быть основан на фонетическом или визуальном представлении символов. В восточно-азиатских языках символы сортируются по штриху и радикалу иероглифов. Сортировка также зависит от языков заказов и культур, используемых для алфавита. Например, датский язык содержит символ "Æ", который сортируется после "Z" в алфавите. Кроме того, в сравнениях может учитываться регистр или без учета регистра, а также правила использования регистров могут отличаться в зависимости от языка и региональных параметров. <xref:System.Globalization.CompareInfo> Класс отвечает за поддержание данных сравнения строк с учетом языка и региональных параметров и выполнение строковых операций с учетом языка и региональных параметров.

 Как правило, нет необходимости напрямую создавать экземпляр <xref:System.Globalization.CompareInfo> объекта, так как он используется неявно всеми непорядковыми операциями сравнения строк, включая вызовы <xref:System.String.Compare%2A?displayProperty=nameWithType> метода. Однако если вы хотите получить <xref:System.Globalization.CompareInfo> объект, это можно сделать одним из следующих способов:

-   Путем получения значения <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> свойства для конкретного языка и региональных параметров.

-   Путем вызова статического <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> метода с именем языка и региональных параметров. Это обеспечивает доступ <xref:System.Globalization.CompareInfo> к объекту с поздним связыванием.

## <a name="ignored-search-values"></a>Игнорируемые значения поиска
 Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров. Методы сравнения, такие <xref:System.Globalization.CompareInfo.IndexOf%2A> как <xref:System.Globalization.CompareInfo.LastIndexOf%2A> и, не учитывают такие символы при выполнении сравнения с учетом языка и региональных параметров. Игнорируемые символы включают:

-   <xref:System.String.Empty?displayProperty=nameWithType>. Методы сравнения с учетом языка и региональных параметров всегда находят пустую строку в начале (нулевой индекс) искомой строки.

-   Символ или строка, состоящая из символов с кодовыми точками, которые не учитываются в операции из-за параметров сравнения. в частности, <xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> параметры <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> и позволяют выполнять поиск символов и несамостоятельных операций. символы игнорируются.

-   Строка с кодовыми точками, не имеющая лингвистических значимости. Например, мягкий дефис (U + 00AD) всегда игнорируется при сравнении строк с учетом языка и региональных параметров.

## <a name="security-considerations"></a>Замечания по безопасности
 Если решение о безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы обеспечить целостность поведения, независимо от настроек языка и региональных параметров операционной системы.

> [!NOTE]
>  По возможности следует использовать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере показано, как <xref:System.Globalization.CompareInfo> объект, связанный <xref:System.Globalization.CultureInfo> с объектом, влияет на сравнение строк.

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/download/details.aspx?id=10921">Сортировка таблиц веса для операционных систем Windows</related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt">Таблица элементов параметров сортировки Юникода по умолчанию для Linux и macOS</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Сравнивает две строки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int&#xA;override this.Compare : string * string -&gt; int" Usage="compareInfo.Compare (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <summary>Сравнивает две строки.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.

 <list type="table"><listheader><term> Значение

 </term><description> Условие

 </description></listheader><item><term> нуль

 </term><description> Эти две строки совпадают.

 </description></item><item><term> меньше нуля

 </term><description>Значение <paramref name="string1" /> меньше <paramref name="string2" />.

 </description></item><item><term> больше нуля

 </term><description>Значение <paramref name="string1" /> больше значения <paramref name="string2" />.

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 По умолчанию сравнение выполняется с помощью <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>. Если решение о безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы гарантировать, что поведение будет одинаковым, независимо от настроек языка и региональных параметров операционной системы.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере сравниваются части двух строк с использованием различных <xref:System.Globalization.CompareInfo> объектов:

-   <xref:System.Globalization.CompareInfo>Объект, связанный с культурой "Испанский (Испания)" с международной сортировкой

-   <xref:System.Globalization.CompareInfo>Объект, связанный с языком и региональными параметрами для испанского языка (Испания) с традиционной сортировкой

-   <xref:System.Globalization.CompareInfo>, связанный с объектом<xref:System.Globalization.CultureInfo.InvariantCulture%2A>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]

 В следующем примере демонстрируется вызов метода <xref:System.Globalization.CompareInfo.Compare%2A>.

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров. При выполнении сравнения с учетом языка и региональных параметров метод не учитывает такие символы. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> Например, сравнение с учетом языка и региональных параметров "Animal" с "Ani-недействительностью" (с помощью мягкого дефиса или U + 00AD) указывает на то, что две строки эквивалентны, как показано в следующем примере.

[! код-VB[System. Глобализация. CompareInfo. Compare # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]

Чтобы распознать игнорируемые символы в сравнении строк, <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> вызовите метод и укажите <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> либо.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, string2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="string1" /> и <paramref name="string2" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> и <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
        <summary>Сравнивает две строки с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.

 <list type="table"><listheader><term> Значение

 </term><description> Условие

 </description></listheader><item><term> нуль

 </term><description> Эти две строки совпадают.

 </description></item><item><term> меньше нуля

 </term><description>Значение <paramref name="string1" /> меньше <paramref name="string2" />.

 </description></item><item><term> больше нуля

 </term><description>Значение <paramref name="string1" /> больше значения <paramref name="string2" />.

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Если решение о безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы гарантировать, что поведение будет одинаковым, независимо от настроек языка и региональных параметров операционной системы.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере сравниваются две строки с разными <xref:System.Globalization.CompareOptions> параметрами.

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CPP/comparestrstropt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CS/comparestrstropt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/VB/comparestrstropt.vb#1)]

 В следующем примере демонстрируется вызов метода <xref:System.Globalization.CompareInfo.Compare%2A>.

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров. При выполнении сравнения с учетом языка и региональных параметров метод не учитывает такие символы. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> Чтобы распознать игнорируемые символы в сравнении, укажите значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int -&gt; int&#xA;override this.Compare : string * int * string * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="offset1">Отсчитываемый от нуля индекс знака в строке <paramref name="string1" />, с которого начинается сравнение.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <param name="offset2">Отсчитываемый от нуля индекс знака в строке <paramref name="string2" />, с которого начинается сравнение.</param>
        <summary>Сравнивает конечную часть одной строки с конечной частью другой строки.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.

 <list type="table"><listheader><term> Значение

 </term><description> Условие

 </description></listheader><item><term> нуль

 </term><description> Эти две строки совпадают.

 </description></item><item><term> меньше нуля

 </term><description> Заданная часть <paramref name="string1" /> меньше заданной части <paramref name="string2" />.

 </description></item><item><term> больше нуля

 </term><description> Заданная часть <paramref name="string1" /> больше заданной части <paramref name="string2" />.

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Если решение о безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы гарантировать, что поведение будет одинаковым, независимо от настроек языка и региональных параметров операционной системы.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере сравниваются части двух строк с использованием различных <xref:System.Globalization.CompareInfo> объектов:

-   <xref:System.Globalization.CompareInfo>Объект, связанный с культурой "Испанский (Испания)" с международной сортировкой

-   <xref:System.Globalization.CompareInfo>Объект, связанный с языком и региональными параметрами для испанского языка (Испания) с традиционной сортировкой

-   <xref:System.Globalization.CompareInfo>, связанный с объектом<xref:System.Globalization.CultureInfo.InvariantCulture%2A>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CPP/comparestrintstrint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CS/comparestrintstrint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/VB/comparestrintstrint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset1" /> или <paramref name="offset2" /> меньше нуля.

- или -

 Значение параметра <paramref name="offset1" /> больше или равно количеству символов в строке <paramref name="string1" />.

-или-

 Значение параметра <paramref name="offset2" /> больше или равно количеству символов в строке <paramref name="string2" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат символы, которые могут игнорироваться. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> Метод не учитывает эти символы при выполнении лингвистического или зависящего от языка и региональных параметров сравнения. Чтобы распознать игнорируемые <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> символы в сравнении, вызовите метод и укажите для <paramref name="options" /> параметра <see cref="F:System.Globalization.CompareOptions.Ordinal" /> значение <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> или.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="offset1">Отсчитываемый от нуля индекс знака в строке <paramref name="string1" />, с которого начинается сравнение.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <param name="offset2">Отсчитываемый от нуля индекс знака в строке <paramref name="string2" />, с которого начинается сравнение.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="string1" /> и <paramref name="string2" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> и <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
        <summary>Сравнивает конечную часть одной строки с конечной частью другой строки с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.

 <list type="table"><listheader><term> Значение

 </term><description> Условие

 </description></listheader><item><term> нуль

 </term><description> Эти две строки совпадают.

 </description></item><item><term> меньше нуля

 </term><description> Заданная часть <paramref name="string1" /> меньше заданной части <paramref name="string2" />.

 </description></item><item><term> больше нуля

 </term><description> Заданная часть <paramref name="string1" /> больше заданной части <paramref name="string2" />.

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Если решение о безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы гарантировать, что поведение будет одинаковым, независимо от настроек языка и региональных параметров операционной системы.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере сравниваются части двух строк с использованием различных <xref:System.Globalization.CompareOptions> параметров.

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CPP/comparestrintstrintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CS/comparestrintstrintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/VB/comparestrintstrintopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset1" /> или <paramref name="offset2" /> меньше нуля.

- или -

 Значение параметра <paramref name="offset1" /> больше или равно количеству символов в строке <paramref name="string1" />.

- или -

 Значение параметра <paramref name="offset2" /> больше или равно количеству символов в строке <paramref name="string2" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров. При выполнении сравнения с учетом языка и региональных параметров метод не учитывает такие символы. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> Чтобы распознать игнорируемые символы в сравнении, укажите значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int -&gt; int&#xA;override this.Compare : string * int * int * string * int * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="offset1">Отсчитываемый от нуля индекс знака в строке <paramref name="string1" />, с которого начинается сравнение.</param>
        <param name="length1">Число последовательных знаков в строке <paramref name="string1" /> для сравнения.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <param name="offset2">Отсчитываемый от нуля индекс знака в строке <paramref name="string2" />, с которого начинается сравнение.</param>
        <param name="length2">Число последовательных знаков в строке <paramref name="string2" /> для сравнения.</param>
        <summary>Сравнивает часть одной строки с частью другой строки.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.

 <list type="table"><listheader><term> Значение

 </term><description> Условие

 </description></listheader><item><term> нуль

 </term><description> Эти две строки совпадают.

 </description></item><item><term> меньше нуля

 </term><description> Заданная часть <paramref name="string1" /> меньше заданной части <paramref name="string2" />.

 </description></item><item><term> больше нуля

 </term><description> Заданная часть <paramref name="string1" /> больше заданной части <paramref name="string2" />.

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Если решение о безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы гарантировать, что поведение будет одинаковым, независимо от настроек языка и региональных параметров операционной системы.

> [!NOTE]
>  По возможности следует использовать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере сравниваются части двух строк с использованием различных <xref:System.Globalization.CompareInfo> объектов:

-   <xref:System.Globalization.CompareInfo>Объект, связанный с культурой "Испанский (Испания)" с международной сортировкой

-   <xref:System.Globalization.CompareInfo>Объект, связанный с языком и региональными параметрами для испанского языка (Испания) с традиционной сортировкой

-   <xref:System.Globalization.CompareInfo>, связанный с объектом<xref:System.Globalization.CultureInfo.InvariantCulture%2A>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CPP/comparestrintintstrintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CS/comparestrintintstrintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/VB/comparestrintintstrintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметров <paramref name="offset1" /> или <paramref name="length1" />, или <paramref name="offset2" />, или <paramref name="length2" /> меньше нуля.

- или -

 Значение параметра <paramref name="offset1" /> больше или равно количеству символов в строке <paramref name="string1" />.

- или -

 Значение параметра <paramref name="offset2" /> больше или равно количеству символов в строке <paramref name="string2" />.

-или-

 <paramref name="length1" /> больше количества символов от <paramref name="offset1" /> до конца <paramref name="string1" />.

- или -

 <paramref name="length2" /> больше количества символов от <paramref name="offset2" /> до конца <paramref name="string2" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат символы, которые могут игнорироваться. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> Метод не учитывает эти символы при выполнении лингвистического или зависящего от языка и региональных параметров сравнения. Чтобы распознать игнорируемые <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> символы в сравнении, вызовите метод и укажите для <paramref name="options" /> параметра <see cref="F:System.Globalization.CompareOptions.Ordinal" /> значение <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> или.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="offset1">Отсчитываемый от нуля индекс знака в строке <paramref name="string1" />, с которого начинается сравнение.</param>
        <param name="length1">Число последовательных знаков в строке <paramref name="string1" /> для сравнения.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <param name="offset2">Отсчитываемый от нуля индекс знака в строке <paramref name="string2" />, с которого начинается сравнение.</param>
        <param name="length2">Число последовательных знаков в строке <paramref name="string2" /> для сравнения.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="string1" /> и <paramref name="string2" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> и <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
        <summary>Сравнивает часть одной строки с частью другой строки с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.

 <list type="table"><listheader><term> Значение

 </term><description> Условие

 </description></listheader><item><term> нуль

 </term><description> Эти две строки совпадают.

 </description></item><item><term> меньше нуля

 </term><description> Заданная часть <paramref name="string1" /> меньше заданной части <paramref name="string2" />.

 </description></item><item><term> больше нуля

 </term><description> Заданная часть <paramref name="string1" /> больше заданной части <paramref name="string2" />.

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Если решение о безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы гарантировать, что поведение будет одинаковым, независимо от настроек языка и региональных параметров операционной системы.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере сравниваются части двух строк с использованием различных <xref:System.Globalization.CompareOptions> параметров.

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CPP/comparestrintintstrintintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CS/comparestrintintstrintintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/VB/comparestrintintstrintintopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметров <paramref name="offset1" /> или <paramref name="length1" />, или <paramref name="offset2" />, или <paramref name="length2" /> меньше нуля.

- или -

 Значение параметра <paramref name="offset1" /> больше или равно количеству символов в строке <paramref name="string1" />.

- или -

 Значение параметра <paramref name="offset2" /> больше или равно количеству символов в строке <paramref name="string2" />.

-или-

 <paramref name="length1" /> больше количества символов от <paramref name="offset1" /> до конца <paramref name="string1" />.

- или -

 <paramref name="length2" /> больше количества символов от <paramref name="offset2" /> до конца <paramref name="string2" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат символы, которые могут игнорироваться. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> Метод не учитывает эти символы при выполнении сравнения с учетом языка и региональных параметров. Чтобы распознать игнорируемые символы в сравнении, укажите значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compareInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Globalization.CompareInfo" />.</param>
        <summary>Определяет, равен ли заданный объект текущему объекту <see cref="T:System.Globalization.CompareInfo" />.</summary>
        <returns>Значение <see langword="true" />, если заданный объект равен текущему объекту <see cref="T:System.Globalization.CompareInfo" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Два <xref:System.Globalization.CompareInfo> объекта равны, если их <xref:System.Globalization.CompareInfo.LCID%2A> свойства <xref:System.Globalization.CompareInfo.Name%2A> и равны.

 Этот метод переопределяет метод <xref:System.Object.Equals%2A?displayProperty=nameWithType>.

 Если решение о безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы гарантировать, что поведение будет одинаковым, независимо от настроек языка и региональных параметров операционной системы.

 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCompareInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый объект <see cref="T:System.Globalization.CompareInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (culture As Integer) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Целое число, представляющее идентификатор языка и региональных параметров.</param>
        <summary>Инициализирует новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным идентификатором.</summary>
        <returns>Новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным идентификатором и использующий методы сравнения строк в текущем объекте <see cref="T:System.Reflection.Assembly" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 В следующем примере сравниваются части двух строк с использованием различных <xref:System.Globalization.CompareInfo> объектов:

-   <xref:System.Globalization.CompareInfo>Объект, связанный с культурой "Испанский (Испания)" с международной сортировкой

-   <xref:System.Globalization.CompareInfo>Объект, связанный с языком и региональными параметрами для испанского языка (Испания) с традиционной сортировкой

-   <xref:System.Globalization.CompareInfo>, связанный с объектом<xref:System.Globalization.CultureInfo.InvariantCulture%2A>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (name As String) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Строка, представляющая имя языка и региональных параметров.</param>
        <summary>Инициализирует новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным именем.</summary>
        <returns>Новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным идентификатором и использующий методы сравнения строк в текущем объекте <see cref="T:System.Reflection.Assembly" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 В следующем примере сравниваются части двух строк с использованием различных <xref:System.Globalization.CompareInfo> объектов:

-   <xref:System.Globalization.CompareInfo>Объект, связанный с культурой "Испанский (Испания)" с международной сортировкой

-   <xref:System.Globalization.CompareInfo>Объект, связанный с языком и региональными параметрами для испанского языка (Испания) с традиционной сортировкой

-   <xref:System.Globalization.CompareInfo>, связанный с объектом<xref:System.Globalization.CultureInfo.InvariantCulture%2A>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="name" /> не является допустимым именем языка и региональных параметров.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (culture, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Целое число, представляющее идентификатор языка и региональных параметров.</param>
        <param name="assembly">Класс <see cref="T:System.Reflection.Assembly" />, содержащий используемые методы сравнения строк.</param>
        <summary>Инициализирует новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с указанным языком и региональными параметрами и использующий методы сравнения строк в указанном объекте <see cref="T:System.Reflection.Assembly" />.</summary>
        <returns>Новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным идентификатором и использующий методы сравнения строк в текущем объекте <see cref="T:System.Reflection.Assembly" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
>  Поведение этого метода является непредсказуемым. Рекомендуется, чтобы приложение использовало версию этого метода, которая не принимает входные данные сборки.

 Параметр должен иметь тот же тип, что <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>и. `assembly`

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assembly" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="assembly" /> относится к недопустимому типу.</exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (name, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Строка, представляющая имя языка и региональных параметров.</param>
        <param name="assembly">Класс <see cref="T:System.Reflection.Assembly" />, содержащий используемые методы сравнения строк.</param>
        <summary>Инициализирует новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с указанным языком и региональными параметрами и использующий методы сравнения строк в указанном объекте <see cref="T:System.Reflection.Assembly" />.</summary>
        <returns>Новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным идентификатором и использующий методы сравнения строк в текущем объекте <see cref="T:System.Reflection.Assembly" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
>  Поведение этого метода является непредсказуемым. Рекомендуется использовать версию этого метода, которая не принимает входные данные сборки.

 Параметр должен иметь тот же тип, что <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>и. `assembly`

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="name" /> имеет значение <see langword="null" />.

-или-

 Свойство <paramref name="assembly" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="name" /> не является допустимым именем языка и региональных параметров.

-или-

 Параметр <paramref name="assembly" /> относится к недопустимому типу.</exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает хэш-код для этого экземпляра <see cref="T:System.Globalization.CompareInfo" /> или для определенной строки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compareInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Служит хэш-функцией текущего класса <see cref="T:System.Globalization.CompareInfo" /> для алгоритмов хэширования и структур данных, например в хэш-таблице.</summary>
        <returns>Хэш-код для текущего объекта <see cref="T:System.Globalization.CompareInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Этот метод переопределяет метод <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.

 Этот метод создает один и тот же хэш-код для двух объектов, которые равны в соответствии с методом <xref:System.Globalization.CompareInfo.Equals%2A>.

 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (ReadOnlySpan&lt;char&gt; source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHashCode(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.ReadOnlySpan{System.Char},System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (source As ReadOnlySpan(Of Char), options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(ReadOnlySpan&lt;char&gt; source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : ReadOnlySpan&lt;char&gt; * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="source">Диапазон символов, для которого нужно вернуть хэш-код.</param>
        <param name="options">Значение, определяющее способ сравнения строк.</param>
        <summary>Возвращает хэш-код для диапазона символов на основе указанных параметров сравнения.</summary>
        <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поведение этой перегрузки зависит от своей реализации, которая может изменяться от одной версии среды CLR к другой или от одной реализации .NET к другой.

> [!IMPORTANT]
>  Если два диапазона символов равны, эта перегрузка возвращает идентичные значения. Однако не существует уникального значения хэш-кода для каждого уникального значения диапазона символов. Различные диапазоны символов могут возвращать один и тот же хэш-код.
>
>  Сам хэш-код не гарантирует стабильность. Хэш-коды для идентичных диапазонов символов могут различаться в разных версиях реализаций .NET и на разных платформах (например, 32-разрядных и 64-разрядных) для одной версии .NET.
>
>  В результате хэш-коды никогда не следует использовать за пределами домена приложения, в котором они были созданы, они никогда не должны использоваться в качестве ключевых полей в коллекции и никогда не должны сохраняться.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetHashCode (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashCode (source As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source">Строка, для которой нужно вернуть хэш-код.</param>
        <param name="options">Значение, определяющее способ сравнения строк.</param>
        <summary>Возвращает хэш-код для строки на основе указанных параметров сравнения.</summary>
        <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поведение <xref:System.Globalization.CompareInfo.GetHashCode%2A> зависит от его реализации, которая может меняться от одной версии среды CLR к другой или от одной .NET Framework платформы к другой.

> [!IMPORTANT]
>  Если два строковых объекта равны, <xref:System.Globalization.CompareInfo.GetHashCode%2A> метод возвращает идентичные значения. Однако не существует уникального значения хэш-кода для каждого уникального строкового значения. Различные строки могут возвращать один и тот же хэш-код.
>
>  Сам хэш-код не гарантирует стабильность. Хэш-коды одинаковых строк могут различаться в разных версиях .NET Framework и на разных платформах (например, 32-разрядных и 64-бит) для одной версии .NET Framework. В некоторых случаях они могут даже различаться в домене приложения.
>
>  В результате хэш-коды никогда не следует использовать за пределами домена приложения, в котором они были созданы, они никогда не должны использоваться в качестве ключевых полей в коллекции и никогда не должны сохраняться.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSortKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает объект <see cref="T:System.Globalization.SortKey" /> для строки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">Строка, для которой получен объект <see cref="T:System.Globalization.SortKey" />.</param>
        <summary>Получает ключ сортировки для указанной строки.</summary>
        <returns>Объект <see cref="T:System.Globalization.SortKey" />, который содержит ключ сортировки для указанной строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Каждому символу в строке присваивается несколько категорий весовых коэффициентов сортировки, включая скрипты, буквы, регистры и диакритические знаки. Ключ сортировки — это репозиторий этих весов для определенной строки. Например, ключ сортировки может содержать строку по алфавиту, а также строку веса и т. д. Метод эквивалентен методу `LCMapString` API Windows с флагом LCMAP_SORTKEY. <xref:System.Globalization.CompareInfo.GetSortKey%2A>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortKey" />
      </Docs>
    </Member>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String, options As CompareOptions) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">Строка, для которой получен объект <see cref="T:System.Globalization.SortKey" />.</param>
        <param name="options">Битовая комбинация одного или нескольких из следующих значений перечисления, указывающих, как вычисляется ключ сортировки: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> и <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
        <summary>Получает объект <see cref="T:System.Globalization.SortKey" /> для указанной строки с использованием указанного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Объект <see cref="T:System.Globalization.SortKey" />, который содержит ключ сортировки для указанной строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Каждому символу в строке присваивается несколько категорий весовых коэффициентов сортировки, включая скрипты, буквы, регистры и диакритические знаки. Ключ сортировки — это репозиторий этих весов для определенной строки. Например, ключ сортировки может содержать строку по алфавиту, а также строку веса и т. д. Метод эквивалентен методу `LCMapString` API Windows с флагом LCMAP_SORTKEY. <xref:System.Globalization.CompareInfo.GetSortKey%2A>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <altmember cref="T:System.Globalization.SortKey" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает отсчитываемый с нуля индекс первого экземпляра значения в строке или в ее части.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char -&gt; int&#xA;override this.IndexOf : string * char -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс первого найденного экземпляра во всей строке источника.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" />; если не найден — значение -1. Возвращает значение 0 (ноль), если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Этот метод ищет исходную строку от начала строки до конца строки.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если `value` представляет собой предустановленный символ Юникода, например лигатуру "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (u + 0041, u + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), где символ считается эквивалентным другому символу, только если их кодовые позиции в Юникоде одинаковы, следует вызвать перегрузку, <xref:System.Globalization.CompareOptions> имеющую параметр <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> типа, и использовать метод значений. В отличие <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>от, которое выполняет сравнение с учетом языка и региональных параметров, перегрузки <xref:System.String.IndexOf%2A?displayProperty=nameWithType> метода, выполняющего поиск символа, выполняют порядковое сравнение и перегрузки, которые выполняют поиск строки, чтобы выполнить сравнение с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует использовать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в строке.

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> метод всегда возвращает значение 0 (ноль), чтобы указать, что совпадение находится в <paramref name="source" />начале. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> метод используется для поиска мягкого дефиса (U + 00AD) в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является проигнорированным символом, метод возвращает 0 (нуль), чтобы указать, что обнаружено совпадение в начале строки.

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</para></block>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string -&gt; int&#xA;override this.IndexOf : string * string -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс первого найденного экземпляра во всей строке источника.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" />; если не найден — значение -1. Возвращает значение 0 (ноль), если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом направлении, начиная с начала строки и заканчивая в конце строки.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует использовать одну из перегрузок, имеющую <xref:System.Globalization.CompareOptions> параметр типа, <xref:System.Globalization.CompareOptions.Ordinal> и использовать значение.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в строке.

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> — <see langword="null" />.

-или-

 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> , метод всегда возвращает 0 (нуль), чтобы указать, что соответствие <paramref name="source" />найдено в начале. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> метод используется для поиска трех подстрок (мягкий дефис (U + 00AD), мягкий дефис, за которым следует "n", и мягкий дефис, за которым следует "m") в двух строках. Только одна из строк содержит мягкий перенос. В каждом случае, поскольку мягкий дефис является игнорируемым символом, результат будет таким же, как если бы мягкий перенос не включался в <paramref name="value" />. При поиске только мягкого дефиса метод возвращает 0 (ноль), чтобы указать, что обнаружено совпадение в начале строки.

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <param name="options">Значение, определяющее способ сравнения строк. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс первого найденного экземпляра во всей строке источника с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" /> с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает значение 0 (ноль), если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом направлении, начиная с начала строки и заканчивая в конце строки.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров). Символ считается эквивалентным другому символу только в том случае, если значения Юникода одинаковы. Перегрузки <xref:System.String.IndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует использовать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в строке.

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> метод всегда возвращает значение 0 (ноль), чтобы указать, что совпадение находится в <paramref name="source" />начале. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> метод используется для поиска мягкого дефиса (U + 00AD) в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает 0 (ноль), чтобы указать, что обнаружено совпадение в начале строки. Однако порядковый поиск по порядковому номеру успешно находит мягкий дефис в одной строке и сообщает, что он отсутствует во второй строке.

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int -&gt; int&#xA;override this.IndexOf : string * char * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс первого экземпляра в части строки источника от указанного индекса до конца строки.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="startIndex" /> и заканчивая <paramref name="source" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом `startIndex` направлении и заканчивается в конце строки.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), где символ считается эквивалентным другому символу, только если значения Юникода одинаковы, следует вызвать одну из перегрузок, имеющую параметр типа <xref:System.Globalization.CompareOptions> , и <xref:System.Globalization.CompareOptions.Ordinal> использовать метод значений. Перегрузки <xref:System.String.IndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки. Обратите <xref:System.Globalization.CompareInfo.IndexOf%2A> внимание <xref:System.Globalization.CompareInfo.LastIndexOf%2A> , что и выполняется поиск в различных частях строки, даже с одним `startIndex` и тем же параметром.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> метод используется для поиска мягкого дефиса (U + 00AD) после "n" в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является игнорируемым символом, метод возвращает значение 1, указывающее, что обнаружено совпадение в позиции "n".

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс первого найденного экземпляра во всей строке источника с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" /> с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает значение 0 (ноль), если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом направлении, начиная с начала строки и заканчивая в конце строки.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров), где сравниваются значения Юникода.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в строке.

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

-или-

 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> , метод всегда возвращает 0 (нуль), чтобы указать, что соответствие <paramref name="source" />найдено в начале. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> метод используется для поиска трех подстрок (мягкий дефис (U + 00AD), мягкий дефис, за которым следует "n", и мягкий дефис, за которым следует "m") в двух строках. Только одна из строк содержит мягкий перенос. Поскольку мягкий дефис является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает то же значение, которое возвращается, если мягкий дефис не был включен в строку поиска. Однако порядковый поиск по порядковому номеру успешно находит мягкий дефис в одной строке и сообщает, что он отсутствует во второй строке.

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int -&gt; int&#xA;override this.IndexOf : string * string * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс первого экземпляра в части строки источника от указанного индекса до конца строки.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="startIndex" /> и заканчивая <paramref name="source" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом `startIndex` направлении и заканчивается в конце строки.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует вызвать одну из перегрузок, имеющую <xref:System.Globalization.CompareOptions> параметр типа, <xref:System.Globalization.CompareOptions.Ordinal> и использовать значение.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки. Обратите <xref:System.Globalization.CompareInfo.IndexOf%2A> внимание <xref:System.Globalization.CompareInfo.LastIndexOf%2A> , что и выполняется поиск в различных частях строки, даже с одним `startIndex` и тем же параметром.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

- или -

 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> , метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск.

В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> метод используется для поиска расположения мягкого дефиса (U + 00AD), за которым следует символ «m» в двух строках. Только одна из строк содержит требуемую подстроку. В обоих случаях, поскольку мягкий дефис является проигнорированным символом, метод возвращает индекс "m" в строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск заданного знака и возвращает отсчитываемый от нуля индекс первого экземпляра в разделе исходной строки от заданного индекса до конца строки с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="startIndex" /> и заканчивая <paramref name="source" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом `startIndex` направлении и заканчивается в конце строки.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров). Символ считается эквивалентным другому символу только в том случае, если значения Юникода одинаковы. Перегрузки <xref:System.String.IndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки. Обратите <xref:System.Globalization.CompareInfo.IndexOf%2A> внимание <xref:System.Globalization.CompareInfo.LastIndexOf%2A> , что и выполняется поиск в различных частях строки, даже с одним `startIndex` и тем же параметром.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />значение, начинающееся с позиции символа, с которой начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска мягкого дефиса (U + 00AD) после "n" в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает значение 1, указывающее, что найдено совпадение в позиции "n". Однако порядковый поиск по порядковому номеру успешно находит мягкий дефис в одной строке и сообщает, что он отсутствует во второй строке.

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int -&gt; int&#xA;override this.IndexOf : string * char * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс первого экземпляра в части строки источника, который начинается с указанного индекса и содержит указанное количество элементов.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="startIndex" /> и содержит количество элементов, определяемое параметром <paramref name="count" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом `startIndex` направлении и заканчивается `startIndex` на  +  `count` -1.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), где символ считается эквивалентным другому символу, только если значения Юникода одинаковы, следует вызвать одну из перегрузок, имеющую параметр типа <xref:System.Globalization.CompareOptions> , и <xref:System.Globalization.CompareOptions.Ordinal> использовать метод значений. Перегрузки <xref:System.String.IndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.

- или -

 Значение параметра <paramref name="count" /> меньше нуля.

-или-

 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> метод используется для поиска мягкого дефиса (U + 00AD) после "n" в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является игнорируемым символом, метод возвращает значение 1, указывающее, что обнаружено совпадение в позиции "n".

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск заданной подстроки и возвращает отсчитываемый от нуля индекс первого экземпляра в разделе исходной строки от заданного индекса до конца строки с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="startIndex" /> и заканчивая <paramref name="source" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом `startIndex` направлении и заканчивается в конце строки.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров), где сравниваются значения Юникода.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки. Обратите <xref:System.Globalization.CompareInfo.IndexOf%2A> внимание <xref:System.Globalization.CompareInfo.LastIndexOf%2A> , что и выполняется поиск в различных частях строки, даже с одним `startIndex` и тем же параметром.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> — <see langword="null" />.

- или -

 <paramref name="value" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> , метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск.

В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска позиции мягкого дефиса (U + 00AD), за которым следует символ "m", начиная с третьего положения символа в двух строках. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m". Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int -&gt; int&#xA;override this.IndexOf : string * string * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс первого экземпляра в части строки источника, которая начинается с указанного индекса и содержит указанное число элементов.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="startIndex" /> и содержит количество элементов, определяемое параметром <paramref name="count" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом `startIndex` направлении и заканчивается `startIndex` на  +  `count` -1.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует вызвать одну из перегрузок, имеющую <xref:System.Globalization.CompareOptions> параметр типа, <xref:System.Globalization.CompareOptions.Ordinal> и использовать значение.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

- или -

 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.

-или-

 Значение параметра <paramref name="count" /> меньше нуля.

- или -

 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> , метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск.

В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> метод используется для поиска позиции мягкого дефиса (U + 00AD), за которым следует символ "m", начинающийся с третьего по шестой позиции символа в двух строках. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс первого экземпляра в разделе строки источника, который начинается с указанного индекса и содержит указанное количество элементов, с использованием указанного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="startIndex" /> и содержит количество элементов, определяемое параметром <paramref name="count" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом `startIndex` направлении и заканчивается `startIndex` на  +  `count` -1.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров). Символ считается эквивалентным другому символу только в том случае, если значения Юникода одинаковы. Перегрузки <xref:System.String.IndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.

- или -

 Значение параметра <paramref name="count" /> меньше нуля.

- или -

 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска мягкого дефиса (U + 00AD) после "n" в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает значение 1, указывающее, что найдено совпадение в позиции "n". Однако порядковый поиск по порядковому номеру успешно находит мягкий дефис в одной строке и сообщает, что он отсутствует во второй строке.

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс первого экземпляра в разделе строки источника, который начинается с указанного индекса и содержит указанное количество элементов, с использованием указанного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="startIndex" /> и содержит количество элементов, определяемое параметром <paramref name="count" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Исходная строка ищется в прямом `startIndex` направлении и заканчивается `startIndex` на  +  `count` -1.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров), где сравниваются значения Юникода.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> — <see langword="null" />.

- или -

 <paramref name="value" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.

- или -

 Значение параметра <paramref name="count" /> меньше нуля.

-или-

 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> , метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск.

В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска позиции мягкого дефиса (U + 00AD), за которым следует символ "m", начинающийся с третьего по шестой позиции символа в двух строках. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Однако при выполнении порядкового сравнения он находит подстроку только в первой строке. Обратите внимание, что в случае первой строки, которая включает мягкий дефис, за которым следует символ "m", метод не возвращает индекс мягкого дефиса, а вместо этого возвращает индекс "m", когда он выполняет сравнение с учетом языка и региональных параметров. Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.

[! код-CSharp[System. Globalization. CompareInfo. IndexOf # 16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)] [! код-VB[System. Globalization. CompareInfo. IndexOf # 16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPrefix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, начинается ли строка с указанного префикса.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string -&gt; bool&#xA;override this.IsPrefix : string * string -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Строка, в которой выполняется поиск.</param>
        <param name="prefix">Строка, сравниваемая с началом <paramref name="source" />.</param>
        <summary>Определяет, начинается ли указанная строка источника с указанного префикса.</summary>
        <returns><see langword="true" />, если длина <paramref name="prefix" /> меньше или равна длине <paramref name="source" /> и <paramref name="source" /> начинается с <paramref name="prefix" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Каждая строка начинается и заканчивается пустой подстрокой (""); Таким образом, `prefix` если является пустой строкой, этот метод `true`возвращает.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяется, является ли строка префиксом или суффиксом другой строки.

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

- или -

 <paramref name="prefix" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка, в которой выполняется поиск.</param>
        <param name="prefix">Строка, сравниваемая с началом <paramref name="source" />.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="prefix" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Определяет, начинается ли указанная строка источника с указанного префикса, с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns><see langword="true" />, если длина <paramref name="prefix" /> меньше или равна длине <paramref name="source" /> и <paramref name="source" /> начинается с <paramref name="prefix" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Каждая строка начинается и заканчивается пустой подстрокой (""); Таким образом, `prefix` если является пустой строкой, этот метод `true`возвращает.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяется, является ли строка префиксом или суффиксом другой строки с <xref:System.Globalization.CompareOptions>помощью.

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

- или -

 Свойство <paramref name="prefix" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSortable">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Показывает, подлежит ли указанный знак или строка Юникода сортировке.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(char ch);" />
      <MemberSignature Language="F#" Value="static member IsSortable : char -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="ch">Знак Юникода.</param>
        <summary>Показывает, подлежит ли указанный знак Юникода сортировке.</summary>
        <returns>Значение <see langword="true" />, если параметр  <paramref name="ch" /> подлежит сортировке; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Параметр сортируется, если он является символом Юникода, который определен во внутренней <xref:System.Globalization.CompareInfo> таблице сортировки класса, и не является частным или имеет непарный старший или младший символ-заместитель. `ch`

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsSortable : string -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="text">Строка длиной от нуля и более знаков Юникода.</param>
        <summary>Показывает, подлежит ли указанная строка Юникода сортировке.</summary>
        <returns><see langword="true" />, если параметр <paramref name="str" /> не является пустой строкой (""), а все знаки Юникода в параметре <paramref name="str" /> подлежат сортировке; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Каждый символ Юникода в `str` параметре представлен одним или несколькими <xref:System.Char> объектами в кодировке UTF-16. Параметр сортируется, если каждый символ Юникода определен во внутренней <xref:System.Globalization.CompareInfo> таблице сортировки класса и не является частным или имеет непарный старший или младший символ-заместитель. `str`

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="str" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSuffix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, заканчивается ли строка указанным суффиксом.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string -&gt; bool&#xA;override this.IsSuffix : string * string -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Строка, в которой выполняется поиск.</param>
        <param name="suffix">Строка, сравниваемая с концом <paramref name="source" />.</param>
        <summary>Определяет, заканчивается ли указанная строка источника указанным суффиксом.</summary>
        <returns><see langword="true" />, если длина <paramref name="suffix" /> меньше или равна длине <paramref name="source" /> и <paramref name="source" /> заканчивается  <paramref name="suffix" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Каждая строка начинается и заканчивается пустой подстрокой (""); Таким образом, `suffix` если является пустой строкой, этот метод `true`возвращает.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяется, является ли строка префиксом или суффиксом другой строки.

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

-или-

 Свойство <paramref name="suffix" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка, в которой выполняется поиск.</param>
        <param name="suffix">Строка, сравниваемая с концом <paramref name="source" />.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="suffix" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Определяет, заканчивается ли указанная строка источника указанным суффиксом, с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns><see langword="true" />, если длина <paramref name="suffix" /> меньше или равна длине <paramref name="source" /> и <paramref name="source" /> заканчивается  <paramref name="suffix" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Каждая строка начинается и заканчивается пустой подстрокой (""); Таким образом, `suffix` если является пустой строкой, этот метод `true`возвращает.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяется, является ли строка префиксом или суффиксом другой строки с <xref:System.Globalization.CompareOptions>помощью.

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

- или -

 <paramref name="suffix" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает отсчитываемый с нуля индекс последнего экземпляра значения в строке или в ее части.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char -&gt; int&#xA;override this.LastIndexOf : string * char -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс последнего найденного экземпляра во всей строке источника.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" />; если не найден — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в строке источника осуществляется в обратном направлении, начиная с конца строки и заканчивая началом строки.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), где символ считается эквивалентным другому символу, только если значения Юникода одинаковы, следует вызвать одну из перегрузок, имеющую параметр типа <xref:System.Globalization.CompareOptions> , и <xref:System.Globalization.CompareOptions.Ordinal> использовать метод значений. Перегрузки <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в строке.

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> метод всегда возвращает Последнее место индекса в <paramref name="source" /> , чтобы указать, что совпадение находится в конце <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> метод используется для поиска мягкого дефиса (U + 00AD) в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является проигнорированным, метод возвращает последнюю позиции индекса в строке, чтобы показать, что в конце строки обнаружено совпадение.

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string -&gt; int&#xA;override this.LastIndexOf : string * string -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <summary>Выполняет поиск указанной подстроки и возвращает начинающийся с нуля индекс последнего экземпляра в рамках всей исходной строки.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" />; если не найден — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в строке источника осуществляется в обратном направлении, начиная с конца строки и заканчивая началом строки.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует вызвать одну из перегрузок, имеющую <xref:System.Globalization.CompareOptions> параметр типа, <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> и использовать значение.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в строке.

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

-или-

 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов, метод <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> всегда возвращает <paramref name="source" />значение.<see cref="P:System.String.Length" /> значение-1, которое представляет последнюю позиции индекса в <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> метод используется для поиска трех подстрок (мягкий дефис (U + 00AD), мягкий дефис, за которым следует "n", и мягкий дефис, за которым следует "m") в двух строках. Только одна из строк содержит мягкий перенос. В каждом случае, поскольку мягкий дефис является игнорируемым символом, результат будет таким же, как если бы мягкий перенос не включался в <paramref name="value" />. При поиске только мягкого дефиса метод возвращает 6 и 5. Эти значения соответствуют индексу последнего символа в двух строках.

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс последнего найденного экземпляра во всей строке источника с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" /> с использованием указанных параметров сравнения; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в строке источника осуществляется в обратном направлении, начиная с конца строки и заканчивая началом строки.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров). Символ считается эквивалентным другому символу только в том случае, если значения Юникода одинаковы. Перегрузки <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в строке.

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> метод всегда возвращает место последнего символа в <paramref name="source" /> , чтобы указать, что совпадение находится в конце <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> метод используется для поиска мягкого дефиса (U + 00AD) в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает последнее значение индекса в исходной строке. В отличие от этого, порядковый поиск успешно находит мягкий дефис в одной строке и сообщает, что он отсутствует во второй строке.

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int -&gt; int&#xA;override this.LastIndexOf : string * char * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс последнего экземпляра в разделе строки источника от начала строки до указанного индекса.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="source" /> и заканчивается на <paramref name="startIndex" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в строке источника осуществляется в `startIndex` обратном направлении, начиная с начала строки и заканчивая ей.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), где символ считается эквивалентным другому символу, только если значения Юникода одинаковы, следует вызвать одну из перегрузок, имеющую параметр типа <xref:System.Globalization.CompareOptions> , и <xref:System.Globalization.CompareOptions.Ordinal> использовать метод значений. Перегрузки <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки. Обратите <xref:System.Globalization.CompareInfo.IndexOf%2A> внимание <xref:System.Globalization.CompareInfo.LastIndexOf%2A> , что и выполняется поиск в различных частях строки, даже с одним `startIndex` и тем же параметром.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> метод используется для поиска мягкого дефиса (U + 00AD), предшествующего завершающему символу «m» в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является игнорируемым символом, метод возвращает позиции индекса "m", которая является значением <paramref name="startIndex" />.

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс последнего найденного экземпляра во всей строке источника с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" /> с использованием указанных параметров сравнения; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в строке источника осуществляется в обратном направлении, начиная с конца строки и заканчивая началом строки.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров), где сравниваются значения Юникода.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в строке.

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

-или-

 <paramref name="value" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов, метод <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> всегда возвращает <paramref name="source" />значение.<see cref="P:System.String.Length" /> значение-1, которое представляет последнюю позиции индекса в <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> метод используется для поиска трех подстрок (мягкий дефис (U + 00AD), мягкий дефис, за которым следует "n", и мягкий дефис, за которым следует "m") в двух строках. Только одна из строк содержит мягкий перенос. Поскольку мягкий дефис является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает то же значение, которое возвращается, если мягкий дефис не был включен в строку поиска. Однако порядковый поиск по порядковому номеру успешно находит мягкий дефис в одной строке и сообщает, что он отсутствует во второй строке.

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int -&gt; int&#xA;override this.LastIndexOf : string * string * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс последнего экземпляра в части строки источника от начала строки до указанного индекса.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="source" /> и заканчивается на <paramref name="startIndex" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в строке источника осуществляется в `startIndex` обратном направлении, начиная с начала строки и заканчивая ей.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует вызвать одну из перегрузок, имеющую <xref:System.Globalization.CompareOptions> параметр типа, <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> и использовать значение.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки. Обратите <xref:System.Globalization.CompareInfo.IndexOf%2A> внимание <xref:System.Globalization.CompareInfo.LastIndexOf%2A> , что и выполняется поиск в различных частях строки, даже с одним `startIndex` и тем же параметром.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> — <see langword="null" />.

- или -

 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> , метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> метод используется для поиска подстроки, которая содержит мягкий дефис (U + 00AD) и предшествует или включает в себя окончательный символ "m" в строке. Поскольку мягкий дефис в строке поиска игнорируется, вызывая метод для поиска подстроки, состоящей из мягкого дефиса, а "m" возвращает расположение "m" в строке, в то время как вызов метода для поиска подстроки, состоящей из мягкого дефиса, а "n" возвращает  расположение "n". Если строка поиска содержит только мягкий дефис, метод возвращает индекс "m", который представляет значение <paramref name="startIndex" />.

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск заданного знака и возвращает отсчитываемый от нуля индекс последнего экземпляра в разделе исходной строки от начала строки до заданного индекса с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="source" /> и заканчивая <paramref name="startIndex" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в строке источника осуществляется в `startIndex` обратном направлении, начиная с начала строки и заканчивая ей.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров). Символ считается эквивалентным другому символу только в том случае, если значения Юникода одинаковы. Перегрузки <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки. Обратите <xref:System.Globalization.CompareInfo.IndexOf%2A> внимание <xref:System.Globalization.CompareInfo.LastIndexOf%2A> , что и выполняется поиск в различных частях строки, даже с одним `startIndex` и тем же параметром.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска мягкого дефиса (U + 00AD), предшествующего завершающему символу «m» в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает индекс "m". Однако порядковый поиск по порядковому номеру успешно находит мягкий дефис в одной строке и сообщает, что он отсутствует во второй строке.

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int -&gt; int&#xA;override this.LastIndexOf : string * char * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс последнего экземпляра в части строки источника, которая содержит указанное количество элементов и заканчивается на указанном индексе.</summary>
        <returns>Отсчитываемый от нуля индекс последнего экземпляра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который содержит количество элементов, определяемое параметром <paramref name="count" /> заканчивается на <paramref name="startIndex" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в `startIndex` строке источника осуществляется в обратном направлении, `startIndex`  -  `count` начиная с + 1.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), где символ считается эквивалентным другому символу, только если значения Юникода одинаковы, следует вызвать одну из перегрузок, имеющую параметр типа <xref:System.Globalization.CompareOptions> , и <xref:System.Globalization.CompareOptions.Ordinal> использовать метод значений. Перегрузки <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.

- или -

 Значение параметра <paramref name="count" /> меньше нуля.

-или-

 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> метод используется для поиска мягкого дефиса (U + 00AD), предшествующего завершающему символу «m» в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является игнорируемым символом, метод возвращает позиции индекса "m", которая является значением <paramref name="startIndex" />.

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск заданной подстроки и возвращает отсчитываемый от нуля индекс последнего экземпляра в разделе исходной строки от начала строки до заданного индекса с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="source" /> и заканчивая <paramref name="startIndex" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в строке источника осуществляется в `startIndex` обратном направлении, начиная с начала строки и заканчивая ей.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров), где сравниваются значения Юникода.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки. Обратите <xref:System.Globalization.CompareInfo.IndexOf%2A> внимание <xref:System.Globalization.CompareInfo.LastIndexOf%2A> , что и выполняется поиск в различных частях строки, даже с одним `startIndex` и тем же параметром.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

- или -

 <paramref name="value" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> , метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск.

В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска положения мягкого дефиса (U + 00AD), за которым следует символ "m", начиная с последнего "m" в двух строках. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m". Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int -&gt; int&#xA;override this.LastIndexOf : string * string * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс последнего экземпляра в части строки источника, который содержит указанное количество элементов и заканчивается на указанном индексе.</summary>
        <returns>Отсчитываемый от нуля индекс последнего экземпляра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который содержит количество элементов, определяемое параметром <paramref name="count" /> заканчивается на <paramref name="startIndex" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в `startIndex` строке источника осуществляется в обратном направлении, `startIndex`  -  `count` начиная с + 1.

 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковому номеру (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует вызвать одну из перегрузок, имеющую <xref:System.Globalization.CompareOptions> параметр типа, <xref:System.Globalization.CompareOptions.Ordinal> и использовать значение.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.

- или -

 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.

- или -

 Значение параметра <paramref name="count" /> меньше нуля.

- или -

 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> , метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск.

В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> метод используется для поиска расположения мягкого дефиса (U + 00AD), за которым следует символ "m" в трех знаках, предшествующих завершающему "m" двух строк. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс последнего экземпляра в разделе строки источника, который содержит указанное количество элементов и заканчивается на указанном индексе, с использованием указанного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который содержит количество элементов, определяемое параметром <paramref name="count" /> и заканчивается на <paramref name="startIndex" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в `startIndex` строке источника осуществляется в обратном направлении, `startIndex`  -  `count` начиная с + 1.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ является значением Юникода, представляющим собой составной символ, такой как лигатура "Æ" (U + 00C6), он может считаться эквивалентом любого вхождения его компонентов в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров). Символ считается эквивалентным другому символу только в том случае, если значения Юникода одинаковы. Перегрузки <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , используемые для поиска символа, выполняют порядковый поиск, тогда как поиск строки выполняется с учетом языка и региональных параметров.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.

- или -

 Значение параметра <paramref name="count" /> меньше нуля.

- или -

 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. При поиске с учетом языка и региональных <paramref name="value" /> параметров, если является игнорируемым символом, результат эквивалентен поиску с удалением этого символа. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска мягкого дефиса (U + 00AD), предшествующего завершающему символу «m» в двух строках. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий дефис является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает индекс "m", который является значением <paramref name="startIndex" />. Однако порядковый поиск по порядковому номеру успешно находит мягкий дефис в одной строке и сообщает, что он отсутствует во второй строке.

[! код-CSharp[System. Globalization. CompareInfo. LastIndexOf # 12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)] [! код-VB[System. Globalization. CompareInfo. LastIndexOf # 12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <paramref name="source" />.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <param name="options">Значение, определяющее способ сравнения <paramref name="source" /> и <paramref name="value" />. Параметр <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс последнего экземпляра в разделе строки источника, который содержит указанное количество элементов и заканчивается на указанном индексе, с использованием указанного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который содержит количество элементов, определяемое параметром <paramref name="count" /> и заканчивается на <paramref name="startIndex" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Поиск в `startIndex` строке источника осуществляется в обратном направлении, `startIndex`  -  `count` начиная с + 1.

 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.

 Если `options` не <xref:System.Globalization.CompareOptions.Ordinal>  содержит значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Юникода, представляющее составной символ, например лигатуру "Æ" (U + 00C6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например "AE" (U + 0041, U + 0045), в зависимости от языка и региональных параметров. `options` Если <xref:System.Globalization.CompareOptions.Ordinal>  включает значение, эта перегрузка выполняет поиск по порядковому номеру (без учета языка и региональных параметров), где сравниваются значения Юникода.

> [!NOTE]
>  По возможности следует вызывать методы сравнения строк, имеющие параметр типа <xref:System.Globalization.CompareOptions> , чтобы указать тип ожидаемого сравнения. В качестве общего правила используйте лингвистические параметры (с использованием текущего языка и региональных параметров) для сравнения строк, отображаемых в <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> пользовательском <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> интерфейсе, и укажите или для сравнения безопасности.



## Examples
 В следующем примере определяются индексы первого и последнего вхождений символа или подстроки в части строки.

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> — <see langword="null" />.

- или -

 <paramref name="value" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.

- или -

 Значение параметра <paramref name="count" /> меньше нуля.

- или -

 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage"><para>Наборы символов содержат игнорируемые символы, которые не учитываются при выполнении лингвистической или учитывающей язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемых символов <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> , метод всегда возвращает <paramref name="startIndex" />значение, которое является позицией символа, с которого начинается поиск.

В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска позиции мягкого дефиса (U + 00AD), за которым следует символ «m», кроме первого знака «m» в двух строках. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Однако при выполнении порядкового сравнения он находит подстроку только в первой строке. Обратите внимание, что в случае первой строки, которая включает мягкий дефис, за которым следует символ "m", метод не возвращает индекс мягкого дефиса, а вместо этого возвращает индекс "m", когда он выполняет сравнение с учетом языка и региональных параметров. Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.

[! код-VB[System. Globalization. CompareInfo. LastIndexOf # 16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CompareInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает идентификатор языка и региональных параметров, соответствующий текущему классу <see cref="T:System.Globalization.CompareInfo" />.</summary>
        <value>Идентификатор языка и региональных параметров, соответствующий текущему классу <see cref="T:System.Globalization.CompareInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 В следующем примере демонстрируется <xref:System.Globalization.CompareInfo.LCID%2A> свойство.

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CompareInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя используемого языка и региональных параметров для операций сортировки по данному объекту <see cref="T:System.Globalization.CompareInfo" />.</summary>
        <value>Имя языка и региональных параметров.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Свойства <xref:System.Globalization.CompareInfo.Name%2A> и <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType>  могут иметь разные значения. Например, <xref:System.Globalization.CompareInfo.LCID%2A> значение свойства шестнадцатеричное 0x10407 определяет альтернативную культуру сортировки, которая сортирует имена по мере их появления в телефонной книге на немецком языке. Свойство имеет значение "de-DE_phoneb", тогда как <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> свойство связанного немецкого языка (Германия) имеет значение "de-de". <xref:System.Globalization.CompareInfo.Name%2A>



## Examples
 В следующем примере сравниваются три строки с использованием языков и региональных параметров fr-FR и ja-JP. <xref:System.Globalization.CultureInfo.Name%2A> Свойство используется для вывода имени каждого языка и региональных параметров.

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sender">Объект, который инициализирует обратный вызов.</param>
        <summary>Выполняется, когда полностью десериализован граф объектов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Этот член является явной реализацией члена интерфейса, которую можно использовать только при приведении текущего <xref:System.Globalization.CompareInfo> объекта <xref:System.Runtime.Serialization.IDeserializationCallback> к интерфейсу. Дополнительные сведения см. в описании метода <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A>.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="compareInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, представляющую текущий объект <see cref="T:System.Globalization.CompareInfo" />.</summary>
        <returns>Строка, представляющая текущий объект <see cref="T:System.Globalization.CompareInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Этот метод переопределяет <xref:System.Object.ToString%2A?displayProperty=nameWithType> метод. Он возвращает строку, состоящую из имени класса и значения свойства экземпляра <xref:System.Globalization.CompareInfo.Name%2A> , разделенных дефисом.

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>При использовании .NET Framework 4 <see cref="M:System.Globalization.CompareInfo.ToString" /> метод возвращает имя класса, за которым следует пробел, дефис, пробел и значение <see cref="P:System.Globalization.CompareInfo.Name" /> свойства. Например, для <see cref="T:System.Globalization.CompareInfo" /> объекта, представляющего культуру en-US <see cref="M:System.Globalization.CompareInfo.ToString" /> , метод возвращает «CompareInfo-en-US». В предыдущих версиях .NET Framework он возвращает имя класса, за которым следует пробел, дефис, пробел и значение <see cref="P:System.Globalization.CompareInfo.LCID" /> свойства. Например, для <see cref="T:System.Globalization.CompareInfo" /> объекта, представляющего культуру en-US <see cref="M:System.Globalization.CompareInfo.ToString" /> , метод возвращает "CompareInfo-1033".</para></block>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public System.Globalization.SortVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.SortVersion Version" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As SortVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::SortVersion ^ Version { System::Globalization::SortVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : System.Globalization.SortVersion" Usage="System.Globalization.CompareInfo.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.SortVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сведения о версии Юникода, используемой для сравнения и сортировки строк.</summary>
        <value>Объект, содержащий сведения о версии Юникода, используемой для сравнения и сортировки строк.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Вес отдельных символов, и, следовательно, способ, которым определенные строки сравниваются или упорядочиваются, зависит от версии спецификации Юникода, которую реализует конкретная версия .NET Framework. [!INCLUDE[net_v45](~/includes/net-v45-md.md)]В это также зависит от операционной системы узла, как показано в следующей таблице. Обратите внимание, что этот список поддерживаемых версий Юникода применяется только к сравнению и сортировке символов. Он не применяется для классификации символов Юникода по категориям.

|Версия платформы .NET Framework|Операционная система|Версия Юникода|
|----------------------------|----------------------|---------------------|
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|Все операционные системы|Юникод 5.0|
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]и более поздние версии|[!INCLUDE[win7](~/includes/win7-md.md)]|Юникод 5.0|
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]и более поздние версии|[!INCLUDE[win8](~/includes/win8-md.md)]и более поздние версии операционной системы Windows|Юникод 6,3|

 Объект, возвращаемый свойством, не определяет точную версию Юникода, используемую для сравнения строк. <xref:System.Globalization.CompareInfo.Version%2A> <xref:System.Globalization.SortVersion> Он полезен только при сравнении <xref:System.Globalization.SortVersion> двух объектов, чтобы определить, используют ли они одну и ту же версию Юникода и культуру для сравнения строк. Дополнительные сведения и пример см. на <xref:System.Globalization.SortVersion> странице справки.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortVersion" />
      </Docs>
    </Member>
  </Members>
</Type>
