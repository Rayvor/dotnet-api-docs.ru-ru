<Type Name="IdnMapping" FullName="System.Globalization.IdnMapping">
  <Metadata><Meta Name="ms.openlocfilehash" Value="439eddb16a3263203c7cbcef7cd62c3cd264076c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70726559" /></Metadata><TypeSignature Language="C#" Value="public sealed class IdnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IdnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.IdnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnMapping sealed" />
  <TypeSignature Language="F#" Value="type IdnMapping = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Поддерживает использование знаков, отличных от знаков ASCII, для доменных имен сети Интернет. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Доменное имя Интернета состоит из одной или нескольких частей, называемых метками доменных имен, разделенных разделителями меток. Например, доменное имя "www.proseware.com" состоит из меток, "www", "Proseware" и "com", разделенных точками. Стандартные доменные имена состоят из символов, определенных в диапазоне символов US-ASCII (или Basic Latin), от U + 0021 до U + 007E. Чтобы упростить использование Интернета в языках и региональных параметрах, не использующих набор символов US-ASCII, стандарт Интернатионализинг доменных имен в приложениях (IDNA) был принят в 2003 для поддержки включения символов Юникода за пределами диапазона символов US-ASCII. Однако серверы имен и разрешение имен доменов продолжают полагаться на символы в диапазоне символов US-ASCII.  
  
 Механизм IDNA использует Punycode, чтобы сопоставлять международные доменные имена, содержащие символы Юникода за пределами диапазона US-ASCII, до диапазона символов US-ASCII, поддерживаемого системой доменных имен. Механизм IDNA используется для преобразования только доменных имен, а не данных, передаваемых через Интернет.  
  
> [!IMPORTANT]
>  [!INCLUDE[net_v45](~/includes/net-v45-md.md)] В класс поддерживает разные версии стандарта IDNA в зависимости от <xref:System.Globalization.IdnMapping>  используемой операционной системы.  
>   
> - При запуске в [!INCLUDE[win8](~/includes/win8-md.md)]поддерживается версия 2008 стандарта IDNA, определяемая [RFC 5891: международные доменные имена в приложениях (IDNA): протокол](https://go.microsoft.com/fwlink/?LinkId=231875).
> - При запуске в более ранних версиях операционной системы Windows она поддерживает версию 2003 стандарта, описанную в [RFC 3490: Интернатионализинг Domain Names in Applications (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).
>   
>  См. [технический стандарт юникода #46. обработка СОВМЕСТИМОСТИ IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) для различий в том, как эти стандарты обрабатывают определенные наборы символов.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType> Метод нормализует доменное имя, преобразует нормализованное имя в представление, состоящее из воспроизводимых символов Юникода в диапазоне кодовой точки US-ASCII (u + 0020 до U + 007E) и добавляет префикс кодировки (ACE), совместимый с ASCII (" xn--") к каждой метке. Метод восстанавливает метки доменного имени, преобразованные <xref:System.Globalization.IdnMapping.GetAscii%2A> методом. <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType>  
  
 Если Преобразуемая строка содержит символы-разделители меток (u + 3002), заполнение полной ширины (u + FF0E) и полуширинные идеографические полной (u + FF61), то <xref:System.Globalization.IdnMapping.GetAscii%2A> метод преобразует их в полную точку табуляции в разделитель меток (точка, U + 002E). Однако <xref:System.Globalization.IdnMapping.GetUnicode%2A> метод не восстанавливает исходный символ разделителя меток.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> метод для преобразования массива международных доменных имен в Punycode. Затем <xref:System.Globalization.IdnMapping.GetUnicode%2A> метод преобразует имя домена Punycode обратно в исходное доменное имя, но заменяет исходные разделители меток стандартным разделителем меток.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Все открытые методы <see cref="T:System.Globalization.IdnMapping" /> являются потокобезопасными и могут использоваться одновременно из нескольких потоков, если <see cref="T:System.Globalization.IdnMapping" /> свойства экземпляра также не устанавливаются одновременно.</threadsafe>
    <altmember cref="Overload:System.String.Normalize" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.IdnMapping" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства и  <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType> инициализируются значением. `false` <xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType> Небольшое подмножество символов ASCII, отличных от A-Z, 0-9, дефис (-) (U + 002D) и Period (.), разрешены в доменных именах, но неназначенные кодовые точки Юникода не являются.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnassigned">
      <MemberSignature Language="C#" Value="public bool AllowUnassigned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnassigned" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUnassigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUnassigned { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUnassigned : bool with get, set" Usage="System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, следует ли использовать кодовые точки Юникод в операциях, выполняемых членами текущего объекта <see cref="T:System.Globalization.IdnMapping" />.</summary>
        <value>Значение равно <see langword="true" />, если в процедурах используются точки кода без знака; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Зарегистрированное доменное имя не может содержать неназначенные кодовые точки. Следовательно, значением <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> свойства по умолчанию является `false`. Спецификация IDNA разрешает неназначенные кодовые точки только в запросах для совпадающих строк (т. е. в поиске доменных имен). Дополнительные сведения об использовании неназначенных кодовых точек в доменных именах см. в [rfc 3454, «подготовка международных строк (стрингпреп)»](https://go.microsoft.com/fwlink/?LinkId=231873) и [RFC 5891, «международные доменные имена в приложениях (IDNA): Protocol»](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
> [!IMPORTANT]
>  Если свойство имеет `false`значение, поведение, связанное со свойством, зависит от базовой операционной системы. <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> В  [!INCLUDE[win8](~/includes/win8-md.md)] класс соответствует IDNA  2008, основанному на стандарте Unicode 6,0. <xref:System.Globalization.IdnMapping> В предыдущих версиях Windows <xref:System.Globalization.IdnMapping> класс основан на IDNA 2003, основанном на Юникоде 3. *x*. Некоторым кодовым точкам, которые были отменены в IDNA 2003, были назначены символы и поддерживаются в IDNA 2008. Например, U + 0221 было введено в Юникоде 4,0. В [!INCLUDE[win8](~/includes/win8-md.md)]он кодируется как "xn – 6la". В предыдущих версиях Windows она выдает <xref:System.ArgumentException> исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="idnMapping.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект для сравнения с текущим объектом.</param>
        <summary>Указывает, равны ли указанный объект и текущий объект <see cref="T:System.Globalization.IdnMapping" />.</summary>
        <returns>Значение <see langword="true" />, если объект, указанный параметром <paramref name="obj" />, унаследован от <see cref="T:System.Globalization.IdnMapping" /> и его свойства <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> и <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> равны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAscii">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Кодирует строку меток доменных имен, включающую символы Юникода вне диапазона символов US-ASCII, в строку отображаемых символов Юникода в диапазоне символов US-ASCII (от U+0020 до U+007E). Строка форматируется в соответствии со стандартом IDNA.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string -&gt; string" Usage="idnMapping.GetAscii unicode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unicode">Строка для преобразования, которая состоит из одной или нескольких меток доменного имени, разделенных особыми символами.</param>
        <summary>Кодирует строку меток доменных имен, в которой содержатся символы Юникода, в строку отображаемых символов Юникода в диапазоне символов US-ASCII. Строка форматируется в соответствии со стандартом IDNA.</summary>
        <returns>Эквивалент строки, указанной параметром <paramref name="unicode" />, состоящей из отображаемых символов Юникода в диапазоне символов US-ASCII (с U+0020 до U+007E) и отформатированной в соответствии со стандартом IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `unicode` Параметр задает строку из одной или нескольких меток, состоящих из допустимых символов Юникода. Метки разделяются разделителями меток. `unicode` Параметр не может начинаться с разделителя меток, но может включать и при необходимости оканчиваться разделителем. Разделители меток являются полной остановкой (Period, U + 002E), ИДЕОГРАФИЧЕСКИЕ символы полной (U + 3002), полной ПОЛОВИНной позиции (U + FF0E) и полной (U + FF61) точкой полного завершения. Например, доменное имя "www.adatum.com" состоит из меток, "www", "adatum" и "com", разделенных точками.  
  
 Метка не может содержать следующие символы:  
  
-   Управляющие символы Юникода от U + 0001 до U + 001F и U + 007F.  
  
-   Неназначенные символы Юникода, если <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> свойство имеет `false`значение.  
  
-   Нестандартные символы в диапазоне символов US-ASCII, такие как пробел (u + 0020), восклицательный знак (u + 0021) и низкие линии (u + 005F), если <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойство имеет `true`значение.  
  
-   Символы, запрещенные определенной версией стандарта IDNA. Дополнительные сведения о запрещенных символах см. в [документе RFC 3454: подготовка международных строк ("стрингпреп")](https://go.microsoft.com/fwlink/?LinkId=231873) для IDNA 2003 и [RFC 5982: кодовые точки Юникода и международные доменные имена для приложений](https://go.microsoft.com/fwlink/?LinkId=231877) для IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Метод преобразует все разделители меток в полную точку (точка, U + 002E).  
  
 Если `unicode` не содержит символов за пределами диапазона символов US-ASCII и ни один из символов в диапазоне символов US-ASCII запрещен, метод `unicode` возвращает значение без изменений.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> метод для преобразования массива международных доменных имен в Punycode, который представляет собой закодированный эквивалент, состоящий из символов в диапазоне символов US-ASCII. Затем <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> метод преобразует имя домена Punycode обратно в исходное доменное имя, но заменяет исходные разделители меток стандартным разделителем меток.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="unicode" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="unicode" /> не является допустимым на основе свойств <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> и <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, а также стандарта IDNA,</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v45](~/includes/net-v45-md.md)] В класс поддерживает разные версии стандарта IDNA в зависимости от <see cref="T:System.Globalization.IdnMapping" />  используемой операционной системы. 
— При запуске в [!INCLUDE[win8](~/includes/win8-md.md)]поддерживается версия 2008 стандарта IDNA, определяемая [RFC 5891: международные доменные имена в приложениях (IDNA): протокол](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
— При запуске в более ранних версиях операционной системы Windows она поддерживает версию 2003 стандарта, описанную в [RFC 3490: Интернатионализинг Domain Names in Applications (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
См. [технический стандарт юникода #46. обработка СОВМЕСТИМОСТИ IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) для различий в том, как эти стандарты обрабатывают определенные наборы символов.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Строка для преобразования, которая состоит из одной или нескольких меток доменного имени, разделенных особыми символами.</param>
        <param name="index">Нулевое смещение в <paramref name="unicode" />, которое указывает на начало подстроки для преобразования. Процедура преобразования продолжается до окончания строки <paramref name="unicode" />.</param>
        <summary>Кодирует подстроку меток имени домена, включающих знаки юникода, выходящие за диапазон символов US-ASCII. Подстрока преобразуется в строку отображаемых символов Юникода в диапазоне символов US-ASCII и форматируется в соответствии со стандартом IDNA.</summary>
        <returns>Эквивалент подстроки, указанной параметрами <paramref name="unicode" /> и <paramref name="index" />, состоящей из отображаемых символов Юникода в диапазоне символов US-ASCII (с U+0020 до U+007E) и отформатированной в соответствии со стандартом IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры `unicode` и `index`  определяют подстроку с одной или несколькими метками, состоящими из допустимых символов Юникода. Метки разделяются разделителями меток. Первый символ подстроки не может начинаться с разделителя меток, но может включать и заканчиваться разделителем. Разделители меток являются полной остановкой (Period, U + 002E), ИДЕОГРАФИЧЕСКИЕ символы полной (U + 3002), полной ПОЛОВИНной позиции (U + FF0E) и полной (U + FF61) точкой полного завершения. Например, доменное имя "www.adatum.com" состоит из меток, "www", "adatum" и "com", разделенных точками.  
  
 Метка не может содержать следующие символы:  
  
-   Управляющие символы Юникода от U + 0001 до U + 001F и U + 007F.  
  
-   Неназначенные символы Юникода в зависимости от значения <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> свойства.  
  
-   Нестандартные символы в диапазоне символов US-ASCII, такие как пробел (u + 0020), восклицательный знак (u + 0021) и низкие линии (u + 005F), в зависимости от значения <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойства.  
  
-   Символы, запрещенные определенной версией стандарта IDNA. Дополнительные сведения о запрещенных символах см. в [документе RFC 3454: подготовка международных строк ("стрингпреп")](https://go.microsoft.com/fwlink/?LinkId=231873) для IDNA 2003 и [RFC 5982: кодовые точки Юникода и международные доменные имена для приложений](https://go.microsoft.com/fwlink/?LinkId=231877) для IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Метод преобразует все разделители меток в полную точку (точка, U + 002E).  
  
 Если `unicode` не содержит символов за пределами диапазона символов US-ASCII и ни один из символов в диапазоне символов US-ASCII запрещен, метод `unicode` возвращает значение без изменений.  
  
   
  
## Examples  
 В следующем примере удаляется локальная часть и символ @ из адреса электронной почты, а полученное имя <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> домена передается методу для создания доменного имени Punycode, которое представляет собой закодированный эквивалент, состоящий из символов в US-ASCII диапазон символов. Затем <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> метод преобразует имя домена Punycode обратно в исходное доменное имя, но заменяет исходные разделители меток стандартным разделителем меток.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1a.cs#2)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="unicode" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  
  
- или - 
 значение <paramref name="index" /> превышает длину параметра <paramref name="unicode" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="unicode" /> не является допустимым на основе свойств <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> и <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, а также стандарта IDNA,</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v45](~/includes/net-v45-md.md)] В класс поддерживает разные версии стандарта IDNA в зависимости от <see cref="T:System.Globalization.IdnMapping" />  используемой операционной системы. 
— При запуске в [!INCLUDE[win8](~/includes/win8-md.md)]поддерживается версия 2008 стандарта IDNA, определяемая [RFC 5891: международные доменные имена в приложениях (IDNA): протокол](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
— При запуске в более ранних версиях операционной системы Windows она поддерживает версию 2003 стандарта, описанную в [RFC 3490: Интернатионализинг Domain Names in Applications (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
См. [технический стандарт юникода #46. обработка СОВМЕСТИМОСТИ IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) для различий в том, как эти стандарты обрабатывают определенные наборы символов.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Строка для преобразования, которая состоит из одной или нескольких меток доменного имени, разделенных особыми символами.</param>
        <param name="index">Нулевое смещение в <paramref name="unicode" />, которое указывает на начало подстроки.</param>
        <param name="count">Количество символов для преобразования в подстроку, которая начинается с места, указанного параметром <paramref name="index" /> в строке <paramref name="unicode" />.</param>
        <summary>Кодирует указанное количество символов в подстроке меток имени домена, включающих знаки Юникода, выходящие за диапазон символов US-ASCII. Подстрока преобразуется в строку отображаемых символов Юникода в диапазоне символов US-ASCII и форматируется в соответствии со стандартом IDNA.</summary>
        <returns>Эквивалент подстроки, указанной параметрами <paramref name="unicode" />, <paramref name="index" /> и <paramref name="count" />, состоящей из отображаемых символов Юникода в диапазоне символов US-ASCII (с U+0020 до U+007E) и отформатированной в соответствии со стандартом IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры `Unicode`, `index` и `count`  определяют подстроку с одной или несколькими метками, состоящими из допустимых символов Юникода. Метки разделяются разделителями меток. Первый символ подстроки не может начинаться с разделителя меток, но может включать и заканчиваться разделителем. Разделители меток являются полной остановкой (Period, U + 002E), ИДЕОГРАФИЧЕСКИЕ символы полной (U + 3002), полной ПОЛОВИНной позиции (U + FF0E) и полной (U + FF61) точкой полного завершения. Например, доменное имя "www.adatum.com" состоит из меток, "www", "adatum" и "com", разделенных точками.  
  
 Метка не может содержать следующие символы:  
  
-   Управляющие символы Юникода от U + 0001 до U + 001F и U + 007F.  
  
-   Неназначенные символы Юникода в зависимости от значения <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> свойства.  
  
-   Нестандартные символы в диапазоне символов US-ASCII, такие как пробел (u + 0020), восклицательный знак (u + 0021) и низкие линии (u + 005F), в зависимости от значения <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойства.  
  
-   Символы, запрещенные определенной версией стандарта IDNA. Дополнительные сведения о запрещенных символах см. в [документе RFC 3454: подготовка международных строк ("стрингпреп")](https://go.microsoft.com/fwlink/?LinkId=231873) для IDNA 2003 и [RFC 5982: кодовые точки Юникода и международные доменные имена для приложений](https://go.microsoft.com/fwlink/?LinkId=231877) для IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Метод преобразует все разделители меток в полную точку (точка, U + 002E). Если подстрока не содержит символов за пределами диапазона символов US-ASCII и ни один из символов в диапазоне символов US-ASCII запрещен, метод возвращает подстроку без изменений.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> метод для преобразования международного доменного имени в доменное имя, которое соответствует стандарту IDNA. Затем <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> метод преобразует стандартизованное доменное имя обратно в исходное доменное имя, но заменяет исходные разделители меток стандартным разделителем меток.  
  
 [!code-csharp[IdnMapping.GetX#1](~/samples/snippets/csharp/VS_Snippets_CLR/IdnMapping.GetX/CS/getx.cs#1)]
 [!code-vb[IdnMapping.GetX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IdnMapping.GetX/VB/getx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="unicode" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.  
  
- или - 
 Значение <paramref name="index" /> превышает длину <paramref name="unicode" />.  
  
- или - 
 длина значения <paramref name="index" /> больше, чем длина <paramref name="unicode" /> минус <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="unicode" /> не является допустимым на основе свойств <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> и <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, а также стандарта IDNA,</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v45](~/includes/net-v45-md.md)] В класс поддерживает разные версии стандарта IDNA в зависимости от <see cref="T:System.Globalization.IdnMapping" />  используемой операционной системы. 
— При запуске в [!INCLUDE[win8](~/includes/win8-md.md)]поддерживается версия 2008 стандарта IDNA, определяемая [RFC 5891: международные доменные имена в приложениях (IDNA): протокол](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
— При запуске в более ранних версиях операционной системы Windows она поддерживает версию 2003 стандарта, описанную в [RFC 3490: Интернатионализинг Domain Names in Applications (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
См. [технический стандарт юникода #46. обработка СОВМЕСТИМОСТИ IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) для различий в том, как эти стандарты обрабатывают определенные наборы символов.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="idnMapping.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код объекта <see cref="T:System.Globalization.IdnMapping" />.</summary>
        <returns>Одна из четырех 32-битных констант со знаком, унаследованных от свойств объекта <see cref="T:System.Globalization.IdnMapping" />.  Возвращаемое значение не имеет особого значения и не пригодно к использованию в алгоритме хэш-кода.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Переопределите <xref:System.Globalization.IdnMapping.GetHashCode%2A> метод, если приложению требуется реализовать осмысленный алгоритм хэш-кода.  
  
   
  
## Examples  
 В следующем примере предполагается, что одна строка может содержать несколько адресов электронной почты, разделенных пробелами. Он удаляет локальную часть и символ @ из каждого адреса электронной почты и передает полученное доменное имя <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> методу или <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> для создания доменного имени Punycode. Затем <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> метод преобразует доменное имя Punycode обратно в исходное доменное имя.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1b.cs#3)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1b.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Декодирует одно или нескольких меток доменного имени, кодированных в соответствии со стандартом IDNA в строку символов Юникода.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string -&gt; string" Usage="idnMapping.GetUnicode ascii" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ascii">Строка для декодирования, состоящая из одной или нескольких меток в диапазоне символов US-ASCII (с U+0020 до U+007E), закодированных в соответствии со стандартом IDNA.</param>
        <summary>Декодирует строку, состоящую из одной или нескольких меток доменного имени, в соответствии со стандартом IDNA в строку символов Юникода.</summary>
        <returns>Эквивалент подстроки IDNA, указанной в параметре <paramref name="ascii" />, в символах Юникода.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о доменных именах, метках и разделителях меток см. в комментариях <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> к методу.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> метод для преобразования массива международных доменных имен в Punycode. Затем <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> метод преобразует имя домена Punycode обратно в исходное доменное имя, но заменяет исходные разделители меток стандартным разделителем меток.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="ascii" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="ascii" /> не является допустимым на основе свойств <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> и <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, а также стандарта IDNA,</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">Строка для декодирования, состоящая из одной или нескольких меток в диапазоне символов US-ASCII (с U+0020 до U+007E), закодированных в соответствии со стандартом IDNA.</param>
        <param name="index">Нулевое смещение в <paramref name="ascii" />, которое указывает на начало подстроки для декодирования. Процедура декодирования продолжается до окончания строки <paramref name="ascii" />.</param>
        <summary>Декодирует подстроку, состоящую из одной или нескольких меток доменного имени, в соответствии со стандартом IDNA в строку символов Юникода.</summary>
        <returns>Эквивалент подстроки IDNA, указанной в параметрах <paramref name="ascii" /> и <paramref name="index" />, в символах Юникода.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о доменных именах, метках и разделителях меток см. в комментариях <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> к методу.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ascii" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  
  
- или - 
 значение <paramref name="index" /> превышает длину параметра <paramref name="ascii" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="ascii" /> не является допустимым на основе свойств <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> и <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, а также стандарта IDNA,</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">Строка для декодирования, состоящая из одной или нескольких меток в диапазоне символов US-ASCII (с U+0020 до U+007E), закодированных в соответствии со стандартом IDNA.</param>
        <param name="index">Нулевое смещение в <paramref name="ascii" />, которое указывает на начало подстроки.</param>
        <param name="count">Количество символов для преобразования в подстроку, которая начинается с места, указанного параметром <paramref name="index" /> в строке <paramref name="ascii" />.</param>
        <summary>Декодирует подстроку заданной длины, состоящую из одной или нескольких меток доменного имени, в соответствии со стандартом IDNA в строку символов Юникода.</summary>
        <returns>Эквивалент подстроки IDNA, указанной в параметрах <paramref name="ascii" />, <paramref name="index" /> и <paramref name="count" />, в символах Юникода.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о доменных именах, метках и разделителях меток см. в комментариях <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> к методу.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="ascii" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.  
  
- или - 
 Значение <paramref name="index" /> превышает длину <paramref name="ascii" />.  
  
- или - 
 длина значения <paramref name="index" /> больше, чем длина <paramref name="ascii" /> минус <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="ascii" /> не является допустимым на основе свойств <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> и <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, а также стандарта IDNA,</exception>
      </Docs>
    </Member>
    <Member MemberName="UseStd3AsciiRules">
      <MemberSignature Language="C#" Value="public bool UseStd3AsciiRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseStd3AsciiRules" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStd3AsciiRules As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseStd3AsciiRules { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseStd3AsciiRules : bool with get, set" Usage="System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, следует ли использовать стандартные или ослабленные правила именования в операциях, выполняемых членами текущего объекта <see cref="T:System.Globalization.IdnMapping" />.</summary>
        <value>Значение <see langword="true" />, если в процедурах используются стандартные правила именования; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Доменные имена, которые следуют стандартным правилам именования, состоят из определенного подмножества символов в диапазоне символов US-ASCII. Символы — это буквы от A до Z, цифры от 0 до 9, дефис (-) и знак точки (.). Регистр символов не имеет значения. Неявное соглашение об именовании позволяет использовать более широкий диапазон символов ASCII, включая символ пробела (U + 0020), восклицательный знак (U + 0021) и символ надчеркивания (U + 005F). Если <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> имеет `true`значение, то в метке, возвращаемой <xref:System.Globalization.IdnMapping.GetAscii%2A> методом, могут отображаться только стандартные символы.  
  
 По умолчанию значение <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойства равно `false`, а расширенное подмножество символов ASCII разрешено в метке.  
  
> [!NOTE]
>  Класс запрещает использование неотображаемых символов u + 0000 до u + 001F и u + 007F в метках доменных имен независимо от значения <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойства. <xref:System.Globalization.IdnMapping> Это позволяет снизить риск атак безопасности, таких как подмена имен.  
  
   
  
## Examples  
 В следующем примере создаются URL-адреса, которые содержат символы в диапазоне ASCII от u + 0000 до u + 007F и передаются <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> методу двух <xref:System.Globalization.IdnMapping> объектов. `false`Для <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> одного объекта свойство имеет значение, а другой `true` объект имеет значение. В выходных данных отображаются недопустимые символы, если <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойство имеет `true` значение, но является допустимым, если оно имеет `false`значение.  
  
 [!code-csharp[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/cs/usestd3asciirules1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/vb/usestd3asciirules1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
