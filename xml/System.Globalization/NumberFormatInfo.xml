<Type Name="NumberFormatInfo" FullName="System.Globalization.NumberFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54c1d78889ff491ef8d8e7f64180acf300731477" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69357376" /></Metadata><TypeSignature Language="C#" Value="public sealed class NumberFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NumberFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.NumberFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NumberFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumberFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type NumberFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет сведения для конкретного языка и региональных параметров для числовых значений форматирования и анализа.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Globalization.NumberFormatInfo> содержит сведения, относящиеся к языку и региональным параметрам, которые используются при форматировании и анализе числовых значений. Эти сведения включают символ валюты, десятичный символ, символ разделителя групп и символы для положительных и отрицательных знаков.  
  
-   [Создание экземпляра объекта NumberFormatInfo](#Instantiating)  
  
    -   [Для текущего языка и региональных параметров](#Instantiating_Current)  
  
    -   [Для инвариантного языка и региональных параметров](#Instantiating_Invariant)  
  
    -   [Для определенного языка и региональных параметров](#Instantiating_Specific)  
  
    -   [Для нейтрального языка и региональных параметров](#Instantiating_Neutral)  
  
-   [NumberFormatInfo и динамические данные](#dynamic)  
  
-   [Форматирование IFormatProvider, NumberFormatInfo и numeric](#formatProvider)  
  
-   [Форматирование строк и свойств NumberFormatInfo](#properties)  
  
-   [Изменение свойств NumberFormatInfo](#modifying)  
  
    -   [Изменение символа валюты и шаблона](#currency)  
  
    -   [Форматирование национального идентификационного номера](#id)  
  
-   [Анализ числовых строк](#parsing)  
  
    -   [Анализ пользовательских строк](#ParseUser)  
  
    -   [Сериализация и десериализация числовых данных](#ParseSerial)  
  
<a name="Instantiating"></a>   
## <a name="instantiating-a-numberformatinfo-object"></a>Создание экземпляра объекта NumberFormatInfo  
 Можно создать экземпляр <xref:System.Globalization.NumberFormatInfo> объекта, который представляет соглашения о форматировании для текущего языка и региональных параметров, инвариантный язык и региональные параметры, а также нейтральный язык и региональные параметры.  
  
<a name="Instantiating_Current"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-current-culture"></a>Создание экземпляра объекта NumberFormatInfo для текущего языка и региональных параметров  
 Вы можете создать экземпляр <xref:System.Globalization.NumberFormatInfo> объекта для языка и региональных параметров текущего потока одним из следующих способов. В каждом случае возвращаемый <xref:System.Globalization.NumberFormatInfo> объект доступен только для чтения.  
  
-   Путем извлечения <xref:System.Globalization.CultureInfo> объекта, представляющего язык и региональные параметры текущего потока <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> из свойства <xref:System.Globalization.CultureInfo> , и получения объекта из его <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> свойства.  
  
-   Путем извлечения <xref:System.Globalization.NumberFormatInfo> объекта, возвращенного `static` свойством (`Shared` в Visual Basic) <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> .  
  
-   Путем вызова <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> метода <xref:System.Globalization.CultureInfo> с объектом, представляющим текущий язык и региональные параметры.  
  
 В следующем примере используются три способа создания <xref:System.Globalization.NumberFormatInfo> объектов, представляющих соглашения о форматировании для текущего языка и региональных параметров. Он также получает значение <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> свойства, чтобы проиллюстрировать, что каждый объект доступен только для чтения.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate1.vb#1)]  
  
 Можно создать доступный для записи <xref:System.Globalization.NumberFormatInfo> объект, представляющий соглашения о текущем языке и региональных параметрах текущего потока, одним из следующих способов:  
  
-   Путем извлечения <xref:System.Globalization.NumberFormatInfo> объекта в любом из способов, показанных в предыдущем примере кода, и <xref:System.Globalization.NumberFormatInfo.Clone%2A> вызова метода для возвращенного <xref:System.Globalization.NumberFormatInfo> объекта. При этом создается копия исходного <xref:System.Globalization.NumberFormatInfo> объекта, за исключением того, что его `false` <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> свойство имеет значение.  
  
-   Вызвав <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> метод, чтобы <xref:System.Globalization.CultureInfo> создать объект, представляющий текущий язык и региональные параметры, а затем использовать <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo> его свойство для получения объекта.  
  
 В следующем примере показаны два способа создания экземпляра <xref:System.Globalization.NumberFormatInfo> объекта и показано значение его <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> свойства, чтобы показать, что объект не доступен только для чтения.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate2.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate2.vb#2)]  
  
 Обратите внимание, что операционная система Windows позволяет пользователю переопределить некоторые <xref:System.Globalization.NumberFormatInfo> значения свойств, используемые в операциях числового форматирования и синтаксического анализа, с помощью элемента **регион и язык** на панели управления. Например, пользователь, чья культура которого имеет значение Английский (США), может выбрать отображение денежных значений как 1,1 долларов США вместо значения по умолчанию $1,1. Объекты <xref:System.Globalization.NumberFormatInfo> , полученные в описанных выше способах, соответствуют этим переопределениям пользователя. Если это нежелательно, <xref:System.Globalization.NumberFormatInfo> можно создать объект, который не отражает переопределяемые пользователем переопределения (а также `false` для чтения и записи, а не только для чтения), <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> вызвав конструктор и указав значение для `useUserOverride` элемента параметр. В следующем примере показана схема для системы, текущей культурной средой которой является английский (США), а символ валюты изменился со значения по умолчанию $ до USD.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate3.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate3.vb#3)]  
  
 `true` <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>Если свойство имеет значение, свойства<xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType>, и<xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> также извлекаются из параметров пользователя. <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo> объектом (например, если выбранный календарь не является одним из календарей, перечисленных <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> в свойстве), то результаты методов и значений свойств будут определено.  
  
<a name="Instantiating_Invariant"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-invariant-culture"></a>Создание экземпляра объекта NumberFormatInfo для инвариантного языка и региональных параметров  
 Инвариантная культура представляет язык и региональные параметры, не учитывающие язык и региональные параметры. Он основан на английском языке, но не в конкретной стране или регионе, говорящей на английском языке. Хотя данные определенных языков и региональных параметров могут быть динамическими и могут меняться в соответствии с новыми региональными соглашениями или предпочтениями пользователя, данные инвариантного языка и региональных параметров не меняются. <xref:System.Globalization.NumberFormatInfo> Объект, представляющий соглашения о форматировании инвариантного языка и региональных параметров, можно использовать для операций форматирования, в которых результирующие строки не должны отличаться от языка и региональных параметров.  
  
 Создать экземпляр <xref:System.Globalization.NumberFormatInfo> объекта, который представляет соглашения о форматировании инвариантного языка и региональных параметров, можно следующими способами.  
  
-   Путем извлечения значения <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> свойства. Возвращаемый <xref:System.Globalization.NumberFormatInfo> объект доступен только для чтения.  
  
-   Путем получения значения <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> свойства <xref:System.Globalization.CultureInfo> из объекта <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> , возвращаемого свойством. Возвращаемый <xref:System.Globalization.NumberFormatInfo> объект доступен только для чтения.  
  
-   Путем вызова конструктора <xref:System.Globalization.NumberFormatInfo.%23ctor%2A> класса без параметров. Возвращаемый объект <xref:System.Globalization.NumberFormatInfo> доступен для чтения и записи.  
  
 В следующем примере каждый из этих методов используется для создания экземпляра <xref:System.Globalization.NumberFormatInfo> объекта, представляющего инвариантный язык и региональные параметры. Затем он указывает, доступен ли объект только для чтения,  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate4.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate4.vb#4)]  
  
<a name="Instantiating_Specific"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-specific-culture"></a>Создание экземпляра объекта NumberFormatInfo для определенного языка и региональных параметров  
 Конкретный язык и региональные параметры представляют язык, который говорят в определенной стране или регионе. Например, EN-US — это конкретная культура, представляющая английский язык, произнесенный в США, а en-CA — это конкретная культура, представляющая английский язык, произнесенный в Канаде. Создать экземпляр <xref:System.Globalization.NumberFormatInfo> объекта, который представляет соглашения о форматировании для определенного языка и региональных параметров, можно следующими способами.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> метода и получения значения <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства возвращенного <xref:System.Globalization.CultureInfo> объекта. Возвращаемый <xref:System.Globalization.NumberFormatInfo> объект доступен только для чтения.  
  
-   Передавая <xref:System.Globalization.CultureInfo> объект, представляющий <xref:System.Globalization.NumberFormatInfo> язык и региональные параметры, объект которых необходимо получить в статическом <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> методе. Возвращаемый объект <xref:System.Globalization.NumberFormatInfo> доступен для чтения и записи.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> метода и получения значения <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства возвращенного <xref:System.Globalization.CultureInfo> объекта. Возвращаемый объект <xref:System.Globalization.NumberFormatInfo> доступен для чтения и записи.  
  
-   Путем вызова одного из <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> конструкторов класса и получения значения <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства возвращенного <xref:System.Globalization.CultureInfo> объекта. Возвращаемый объект <xref:System.Globalization.NumberFormatInfo> доступен для чтения и записи.  
  
 В следующем примере используются четыре способа создания <xref:System.Globalization.NumberFormatInfo> объекта, который отражает соглашения о форматировании для языка и региональных параметров Индонезийский (Индонезия). Он также указывает, доступен ли каждый объект только для чтения.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate5.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate5.vb#5)]  
  
<a name="Instantiating_Neutral"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-neutral-culture"></a>Создание экземпляра объекта NumberFormatInfo для нейтрального языка и региональных параметров  
 Нейтральный язык и региональные параметры представляют язык и региональные параметры, независимые от страны или региона. Обычно это родительский элемент для одного или нескольких конкретных языков и региональных параметров. Например, fr — это нейтральный язык и региональные параметры для французского языка и родителя языка и региональных параметров fr-FR. Вы создаете <xref:System.Globalization.NumberFormatInfo> объект, представляющий соглашения о форматировании нейтрального языка и региональных параметров, точно так же, <xref:System.Globalization.NumberFormatInfo> как при создании объекта, представляющего соглашения о форматировании для конкретного языка и региональных параметров.  
  
> [!NOTE]
>  В и более ранних версиях попытка <xref:System.Globalization.NumberFormatInfo> получить объект, отражающий соглашения о форматировании нейтрального языка и региональных <xref:System.NotSupportedException> параметров, вызывает исключение. [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]  
  
 Однако, поскольку он не зависит от конкретной страны или региона, нейтральная культура не имеет сведений об особенностях форматирования, связанных с языком и региональными параметрами. Вместо того чтобы заполнять <xref:System.Globalization.NumberFormatInfo> объект универсальными значениями, .NET Framework <xref:System.Globalization.NumberFormatInfo> возвращает объект, отражающий соглашения о форматировании для конкретного языка и региональных параметров, которые являются дочерними для нейтрального языка и региональных параметров. Например, <xref:System.Globalization.NumberFormatInfo> объект нейтрального языка и региональных параметров en отражает соглашения о форматировании языка и региональных параметров en-US, <xref:System.Globalization.NumberFormatInfo> а объект для языка и региональных параметров fr отражает соглашения о форматировании языка и региональных параметров fr-FR.  
  
 Вы можете использовать следующий код, чтобы определить, какие соглашения о форматировании для конкретного языка и региональных параметров представляют каждый нейтральный язык и региональные параметры.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate6c.vb#6)]  
  
<a name="dynamic"></a>   
## <a name="numberformatinfo-and-dynamic-data"></a>NumberFormatInfo и динамические данные  
 Данные, зависящие от языка и региональных параметров, для форматирования <xref:System.Globalization.NumberFormatInfo> числовых значений, предоставляемых классом, являются динамическими, <xref:System.Globalization.CultureInfo> как и региональные данные, предоставляемые классом. Не следует делать никаких предположений о стабильности значений для <xref:System.Globalization.NumberFormatInfo> объектов, связанных с определенными <xref:System.Globalization.CultureInfo> объектами. Стабильными являются только данные, предоставленные инвариантным и связанным <xref:System.Globalization.NumberFormatInfo> с ним объектом. Другие данные могут изменяться между сеансами приложения или даже в рамках одного сеанса по следующим причинам.  
  
-   **Обновления системы.** Параметры культуры, такие как обозначение денежной единицы или денежные форматы, меняются со временем. В этом случае центр обновления Windows включает изменения <xref:System.Globalization.NumberFormatInfo> значения свойства для определенного языка и региональных параметров.  
  
-   **Языки и региональные параметры замены.** <xref:System.Globalization.CultureAndRegionInfoBuilder> Класс можно использовать для замены данных существующего языка и региональных параметров.  
  
-   **Каскадные изменения в значениях свойств.** Некоторые свойства, связанные с культурой, могут изменяться во время выполнения, что, в <xref:System.Globalization.NumberFormatInfo> свою очередь, приводит к изменению данных. Например, текущий язык и региональные параметры можно изменить программно или с помощью действия пользователя. В <xref:System.Globalization.NumberFormatInfo> этом случае объект, возвращаемый <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> свойством, изменяется на объект, связанный с текущим языком и региональными параметрами.  
  
-   **Предпочтения пользователя.** Пользователи приложения могут переопределить некоторые значения, связанные с текущей культурой системы, с помощью параметров язык и региональные параметры панели управления. Например, пользователи могут выбрать другой символ валюты или другой символ десятичного разделителя. Если свойство имеет `true` значение (по умолчанию) <xref:System.Globalization.NumberFormatInfo> , свойства объекта также извлекаются из параметров пользователя. <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType>  
  
 Начиная с .NET Framework 2,0, все свойства <xref:System.Globalization.NumberFormatInfo> объекта, допускающие переопределяемые пользователем объекты, инициализируются при создании объекта. Существует вероятность несогласованности, так как ни создание объекта, ни процесс переопределения пользователем не являются атомарными, и при создании объекта соответствующие значения могут измениться. Однако эти несоответствия должны быть чрезвычайно редкими.  
  
 Вы можете управлять тем, отображаются ли пользовательские переопределения <xref:System.Globalization.NumberFormatInfo> в объектах, представляющих ту же культуру, что и язык и региональные параметры текущего потока. В следующей таблице перечислены способы <xref:System.Globalization.NumberFormatInfo> извлечения объекта и указано, отражают ли результирующий объект переопределения пользователя.  
  
|Источник объекта CultureInfo и NumberFormatInfo|Отражает переопределения, переопределяемые пользователем|  
|-------------------------------------------------------|-----------------------------|  
|Свойство`CultureInfo.CurrentCulture.NumberFormat` |Да|  
|Свойство<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> |Да|  
|Метод <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>|Да|  
|Метод <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>|Нет|  
|Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29>|Да|  
|Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>|Зависит от значения `useUserOverride` параметра|  
  
 Если нет убедительной причины для этого, следует учитывать переопределения пользователей при использовании <xref:System.Globalization.NumberFormatInfo> объекта в клиентских приложениях для форматирования и анализа вводимых пользователем данных или для вывода числовых данных. Для серверных приложений или приложений без участия пользователя не следует учитывать переопределения. Однако при использовании <xref:System.Globalization.NumberFormatInfo> объекта явно или неявно для сохранения числовых данных в строковом формате следует <xref:System.Globalization.NumberFormatInfo> использовать объект, отражающий соглашения о форматировании инвариантного языка и региональных параметров, или указать Строка настраиваемого числового формата, используемая независимо от языка и региональных параметров.  
  
<a name="formatProvider"></a>   
## <a name="iformatprovider-numberformatinfo-and-numeric-formatting"></a>Форматирование IFormatProvider, NumberFormatInfo и numeric  
 <xref:System.Globalization.NumberFormatInfo> Объект используется неявно или явно во всех операциях числового форматирования. К ним относятся вызовы следующих методов:  
  
-   Все методы форматирования чисел, такие как <xref:System.Int32.ToString%2A?displayProperty=nameWithType>, <xref:System.Double.ToString%2A?displayProperty=nameWithType>и <xref:System.Convert.ToString%28System.Int32%29?displayProperty=nameWithType>.  
  
-   Основной метод составного форматирования, <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Другие методы составного форматирования, такие <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> как <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>и.  
  
 Все операции форматирования чисел используют <xref:System.IFormatProvider> реализацию. Интерфейс включает один метод, <xref:System.IFormatProvider.GetFormat%28System.Type%29>. <xref:System.IFormatProvider> Это метод обратного вызова, которому передается <xref:System.Type> объект, представляющий тип, необходимый для предоставления сведений о форматировании. Метод отвечает за возврат либо экземпляра этого типа, либо `null`, если он не может предоставить экземпляр типа. .NET Framework предоставляет две <xref:System.IFormatProvider> реализации для форматирования чисел:  
  
-   <xref:System.Globalization.CultureInfo> Класс, представляющий конкретный язык и региональные параметры (или конкретный язык в определенной стране или регионе). В операции <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> числового форматирования метод возвращает объект, <xref:System.Globalization.NumberFormatInfo> связанный со <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> свойством.  
  
-   <xref:System.Globalization.NumberFormatInfo> Класс, предоставляющий сведения о соглашениях о форматировании соответствующего языка и региональных параметров. <xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=nameWithType> Метод возвращает экземпляр самого себя.  
  
 Если реализация не предоставляется явно для метода форматирования <xref:System.Globalization.CultureInfo> , используется объект, возвращаемый <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойством, представляющим язык и региональные параметры текущего потока. <xref:System.IFormatProvider>  
  
 В следующем примере показана связь между <xref:System.IFormatProvider> интерфейсом <xref:System.Globalization.NumberFormatInfo> и классом в операциях форматирования путем определения пользовательской <xref:System.IFormatProvider> реализации. Его <xref:System.IFormatProvider.GetFormat%2A> метод отображает имя типа объекта, запрошенного операцией форматирования. Если интерфейс запрашивает <xref:System.Globalization.NumberFormatInfo> объект, этот метод <xref:System.Globalization.NumberFormatInfo> предоставляет объект для языка и региональных параметров текущего потока. Как видно из выходных данных в примере, <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> метод <xref:System.Globalization.NumberFormatInfo> запрашивает объект для предоставления <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> сведений о форматировании, в то время как <xref:System.Globalization.NumberFormatInfo> запросы <xref:System.Globalization.DateTimeFormatInfo> и объекты <xref:System.ICustomFormatter> методов, а также реализации.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/formatprovider1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/formatprovider1.vb#1)]  
  
 Если реализация явно не предоставляется в вызове метода форматирования чисел, метод `CultureInfo.CurrentCulture.GetFormat` вызывает <xref:System.Globalization.NumberFormatInfo> метод, который возвращает объект, соответствующий культуре текущего потока. <xref:System.IFormatProvider>  
  
<a name="properties"></a>   
## <a name="format-strings-and-numberformatinfo-properties"></a>Форматирование строк и свойств NumberFormatInfo  
 Каждая операция форматирования использует стандартную или настраиваемую строку числового формата для получения результирующей строки из числа. В некоторых случаях использование строки форматирования для создания результирующей строки является явной, как показано в следующем примере. Этот код вызывает <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> метод для <xref:System.Decimal> преобразования значения в число различных строковых представлений с помощью соглашений о форматировании языка и региональных параметров en-US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties1.vb#2)]  
  
 В других случаях использование строки формата является неявным. Например, в следующем методе вызовы <xref:System.Decimal.ToString?displayProperty=nameWithType> метода, используемого по умолчанию или без параметров, значение <xref:System.Decimal> экземпляра форматируется с помощью описателя общего формата ("G") и правил текущего языка и региональных параметров, которые в данном случае являются Культура en-US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties2.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties2.vb#3)]  
  
 Каждая строка стандартного числового формата использует одно или <xref:System.Globalization.NumberFormatInfo> несколько свойств для определения шаблона или символов, используемых в результирующей строке. Аналогичным образом, каждый описатель настраиваемого числового формата, за исключением "0" и "#", вставляет символы в <xref:System.Globalization.NumberFormatInfo> результирующую строку, определяемую свойствами. В следующей таблице перечислены описатели стандартных и пользовательских числовых форматов, а также связанные <xref:System.Globalization.NumberFormatInfo> с ними свойства.  Чтобы изменить внешний вид результирующей строки для конкретного языка и региональных параметров, см. раздел [изменение свойств NumberFormatInfo](#modifying) . Дополнительные сведения об использовании этих описателей формата см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
|Описатель формата|Связанные свойства|  
|----------------------|---------------------------|  
|"C" или "c" (описатель формата валюты)|<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>, чтобы определить количество цифр дробной части по умолчанию.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, чтобы определить группу или разделитель групп разрядов.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A>, чтобы определить размеры групп целой группы.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>, чтобы определить шаблон с отрицательными денежными значениями.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>, чтобы определить шаблон положительных денежных значений.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, чтобы определить символ валюты.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.|  
|"D" или "d" (Описатель десятичного формата)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.|  
|"E" или "e" (Описатель экспоненциального или экспоненциального формата)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, чтобы определить символ отрицательного знака в мантиссае и экспоненте.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, чтобы определить символ знака плюс в экспоненте.|  
|"F" или "f" (описатель формата с фиксированной запятой)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, чтобы определить количество цифр дробной части по умолчанию.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.|  
|"G" или "g" (Общий описатель формата)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, чтобы определить символ знака плюс для строк результатов в экспоненциальном формате.|  
|"N" или "n" (описатель числового формата)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, чтобы определить количество цифр дробной части по умолчанию.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, чтобы определить символ разделителя групп (тысяч).<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, чтобы определить количество целочисленных цифр в группе.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A>, чтобы определить формат отрицательных значений.|  
|"P" или "p" (описатель формата процентов)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A>, чтобы определить количество цифр дробной части по умолчанию.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, чтобы определить символ разделителя групп.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, чтобы определить количество целочисленных цифр в группе.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A>, чтобы определить размещение символа процента и отрицательного символа для отрицательных значений.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A>, чтобы определить размещение символа процента для положительных значений.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, чтобы определить символ процента.|  
|"R" или "r" (описатель формата приема-передачи)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, чтобы определить символ знака плюс в экспоненте.|  
|"X" или "x" (Описатель шестнадцатеричного формата)|Отсутствует.|  
|"." (описатель настраиваемого формата десятичной запятой)|<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.|  
|"," (настраиваемый описатель формата разделителя групп)|<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, чтобы определить символ разделителя группы (тысяч).|  
|"%" (описатель настраиваемого формата заполнителя в процентах)|<xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, чтобы определить символ процента.|  
|"‰" (для каждого описателя настраиваемого формата заполнитель промилле)|<xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A>, чтобы определить символ на промилле.|  
|"E" (описатель настраиваемого формата нотации)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, чтобы определить символ отрицательного знака в мантиссае и экспоненте.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, чтобы определить символ знака плюс в экспоненте.|  
  
 Обратите внимание <xref:System.Globalization.NumberFormatInfo> , что класс <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> включает свойство, которое указывает базовые 10 цифр, используемых конкретным языком и региональными параметрами. Однако это свойство не используется в операциях форматирования. в результирующей строке используются только базовые латинские цифры от 0 (U + 0030) до 9 (U + 0039). Кроме того, для <xref:System.Single> `NaN` <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>значений <xref:System.Double> и,и,результирующаястрокасостоитисключительноизсимволов,определенныхсвойствами,и.`PositiveInfinity` `NegativeInfinity` содержани.  
  
<a name="modifying"></a>   
## <a name="modifying-numberformatinfo-properties"></a>Изменение свойств NumberFormatInfo  
 Можно изменить свойства <xref:System.Globalization.NumberFormatInfo> объекта, чтобы настроить результирующую строку, полученную при выполнении операции форматирования чисел. Для этого выполните следующие действия.  
  
1.  Создайте копию <xref:System.Globalization.NumberFormatInfo> объекта, предназначенного для чтения и записи, соглашения о форматировании которого необходимо изменить. Дополнительные сведения см. в разделе [Создание экземпляра объекта NumberFormatInfo](#Instantiating) .  
  
2.  Измените свойство или свойства, которые используются для получения требуемой результирующей строки. Сведения о том, как методы форматирования <xref:System.Globalization.NumberFormatInfo> используют свойства для определения результирующих строк, см. в разделе [Формат строк и свойства NumberFormatInfo](#properties) .  
  
3.  Используйте пользовательский <xref:System.Globalization.NumberFormatInfo> объект в <xref:System.IFormatProvider> качестве аргумента в вызовах методов форматирования.  
  
> [!NOTE]
>  Вместо динамического изменения значений свойств языка и региональных параметров при каждом запуске приложения можно использовать <xref:System.Globalization.CultureAndRegionInfoBuilder> класс для определения пользовательского языка и региональных параметров (язык и региональные параметры с уникальным именем, дополняющие существующие языки и т. д.) или замены. Культура (используемая вместо конкретного языка и региональных параметров).  
  
 В следующих разделах приводятся некоторые примеры.  
  
<a name="currency"></a>   
### <a name="modifying-the-currency-symbol-and-pattern"></a>Изменение символа валюты и шаблона  
 В следующем примере изменяется <xref:System.Globalization.NumberFormatInfo> объект, представляющий соглашения о форматировании для языка и региональных параметров en-US. Он присваивает <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> свойству символ валюты ISO-4217 и определяет шаблон для денежных значений, состоящий из символа валюты, за которым следует пробел и числовое значение.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_currency1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_currency1.vb#1)]  
  
<a name="id"></a>   
### <a name="formatting-a-national-identification-number"></a>Форматирование национального идентификационного номера  
 Многие местные идентификационные номера состоят исключительно из цифр, поэтому их можно легко отформатировать, изменив <xref:System.Globalization.NumberFormatInfo> свойства объекта. Например, номер социального страхования в США состоит из 9 цифр, упорядоченных следующим образом: `XXX-XX-XXXX`. В следующем примере предполагается, что номера социального страхования хранятся в виде целочисленных значений и соответствующим образом форматируются.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_ssn1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_ssn1.vb#2)]  
  
<a name="parsing"></a>   
## <a name="parsing-numeric-strings"></a>Анализ числовых строк  
 Анализ предполагает преобразование строкового представления числа в число. Каждый числовой тип в .NET Framework включает два перегруженных метода анализа: `Parse` и. `TryParse` `Parse` Метод преобразует строку в число и создает исключение, если преобразование завершается неудачей. Метод преобразует строку в число, присваивает число `out` <xref:System.Boolean> аргументу и возвращает значение, указывающее, было ли преобразование выполнено. `TryParse`  
  
 Методы синтаксического анализа неявно или явно используют <xref:System.Globalization.NumberStyles> значение перечисления для определения того, какие элементы стиля (такие как разделители групп, десятичный разделитель или символ валюты) могут присутствовать в строке, если операция синтаксического анализа завершена. Если значение не указано в вызове метода, по умолчанию <xref:System.Globalization.NumberStyles> используется значение, которое включает <xref:System.Globalization.NumberStyles.Float> флаги и <xref:System.Globalization.NumberStyles.AllowThousands> , указывающие, что анализируемая строка может включать символы группы, десятичный разделитель, знак минуса, <xref:System.Globalization.NumberStyles> и пробелов или могут представлять собой строковое представление числа в экспоненциальной нотации.  
  
 Методы анализа также неявно или явно используют <xref:System.Globalization.NumberFormatInfo> объект, который определяет конкретные символы и шаблоны, которые могут возникать в анализируемой строке. Если объект не предоставлен, по умолчанию <xref:System.Globalization.NumberFormatInfo> используется язык и региональные параметры текущего потока. <xref:System.Globalization.NumberFormatInfo> Дополнительные сведения об анализе см. в описании отдельных методов синтаксического анализа, таких <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>как <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>,, <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29?displayProperty=nameWithType>, и <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29?displayProperty=nameWithType>.  
  
 В следующем примере показана структура строк синтаксического анализа с учетом языка и региональных параметров. Он пытается проанализировать строку, включающую разделители тысяч, с помощью соглашений из EN-US, fr-FR и инвариантных языков и региональных параметров. Строка, включающая запятую в качестве разделителя групп и точку в виде десятичного разделителя, не проходит синтаксический анализ в культуре fr-FR, а строка с пробелами в качестве разделителя групп и запятая в качестве десятичного разделителя не проходит синтаксический анализ в EN-US и инвариантные языки и региональные параметры.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parse1.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parse1.vb#4)]  
  
 Синтаксический анализ обычно происходит в двух контекстах:  
  
-   В качестве операции, предназначенной для преобразования вводимых пользователем данных в числовое значение.  
  
-   В качестве операции, предназначенной для обработки числовых значений в цикле, то есть для десериализации числового значения, которое ранее было сериализовано в виде строки.  
  
 В следующих разделах эти две операции рассматриваются более подробно.  
  
<a name="ParseUser"></a>   
### <a name="parsing-user-strings"></a>Анализ пользовательских строк  
 При синтаксическом анализе числовых строк, вводимых пользователем, всегда следует создавать экземпляр <xref:System.Globalization.NumberFormatInfo> объекта, отражающий региональные параметры пользователя. Сведения о том, как создать экземпляр <xref:System.Globalization.NumberFormatInfo> объекта, отражающего пользовательские настройки, см. в разделе [NumberFormatInfo и Dynamic Data](#dynamic) .  
  
 В следующем примере показана разница между операцией синтаксического анализа, которая отражает региональные параметры пользователя, а другая — нет. В этом случае языком по умолчанию является en-US, но пользователь определил "," как десятичный символ и "." в качестве разделителя групп в панели управления, **области и языке**. Обычно эти символы реверсируются в культуре en-US по умолчанию. Когда пользователь вводит строку, отражающую пользовательские параметры, и строка анализируется <xref:System.Globalization.NumberFormatInfo> объектом, который также отражает пользовательские параметры (переопределения), операция анализа возвращает правильный результат. Однако если строка анализируется <xref:System.Globalization.NumberFormatInfo> объектом, который отражает стандартные региональные параметры en-US, он выдает символ запятой для разделителя групп и возвращает неверный результат.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parseuser1.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parseuser1.vb#5)]  
  
<a name="ParseSerial"></a>   
### <a name="serializing-and-deserializing-numeric-data"></a>Сериализация и десериализация числовых данных  
 При сериализации числовых данных в строковом формате и последующем десериализации и синтаксического анализа строки должны формироваться и анализироваться с помощью соглашений инвариантного языка и региональных параметров. Операции форматирования и анализа никогда не должны отражать соглашения определенного языка и региональных параметров. Если используются параметры, зависящие от языка и региональных параметров, переносимость данных строго ограничена; его можно успешно десериализовать только в потоке, параметры языка и региональных параметров которых идентичны параметрам потока, в котором он был сериализован. В некоторых случаях это означает, что данные нельзя даже успешно десериализовать в той же системе, в которой они были сериализованы.  
  
 В следующем примере показано, что может произойти при нарушении этого принципа. Значения с плавающей запятой в массиве преобразуются в строки, если текущий поток использует параметры языка и региональных параметров en-US, зависящие от языка и региональных параметров. Затем данные анализируются потоком, который использует параметры языка и региональных параметров en-GB, зависящие от языка и региональных параметров. В этом случае, несмотря на то, что каждая операция синтаксического анализа выполняется успешно, данные не проходят успешно и происходит повреждение данных. В других случаях операция синтаксического анализа может завершиться ошибкой, <xref:System.FormatException> и может возникнуть исключение.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parsepersisted.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parsepersisted.vb#6)]  
  
   
  
## Examples  
 В следующем примере показано, как получить <xref:System.Globalization.NumberFormatInfo> объект для соответствующего <xref:System.Globalization.CultureInfo> объекта и использовать полученный объект для запроса сведений о форматировании номеров для определенного языка и региональных параметров.  
  
 [!code-cpp[NumberFormatInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberFormatInfo/cpp/NumberFormatInfo.cpp#1)]
 [!code-csharp[NumberFormatInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberFormatInfo/CS/NumberFormatInfo.cs#1)]
 [!code-vb[NumberFormatInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberFormatInfo/vb/numberformatinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.IFormatProvider" />
    <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Строки настраиваемых числовых форматов</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumberFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumberFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый доступный для записи экземпляр класса <see cref="T:System.Globalization.NumberFormatInfo" />, не зависящий от языка и региональных параметров (инвариантный).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства нового экземпляра можно изменить, если приложению требуется определенное пользователем форматирование.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="numberFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает неполную копию объекта <see cref="T:System.Globalization.NumberFormatInfo" />.</summary>
        <returns>Новый объект, скопированный из исходного объекта <see cref="T:System.Globalization.NumberFormatInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Копия доступна для записи, даже если исходный <xref:System.Globalization.NumberFormatInfo> объект доступен только для чтения. Таким образом, свойства клона можно изменить с помощью пользовательских шаблонов.  
  
 Неполная копия объекта — это копия только объекта. Если объект содержит ссылки на другие объекты, неполная копия не будет создавать копии объектов, на которые они ссылаются. Вместо этого он будет ссылаться на исходные объекты. С другой стороны, глубокая копия объекта создает копию объекта и копию всех объектов, на которые прямо или косвенно ссылается этот объект. В случае <xref:System.Globalization.NumberFormatInfo> объекта достаточно иметь неполную копию для копирования всех свойств экземпляра, так как все свойства, возвращающие ссылки на объекты, `static` являются`Shared` (в Visual Basic).  
  
   
  
## Examples  
 В следующем примере <xref:System.Globalization.NumberFormatInfo.Clone%2A> метод используется для создания копии <xref:System.Globalization.NumberFormatInfo> для чтения и записи объекта, представляющего соглашения о форматировании чисел для языка и региональных параметров текущего потока.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalDigits">
      <MemberSignature Language="C#" Value="public int CurrencyDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число десятичных разрядов, используемое в значениях денежных сумм.</summary>
        <value>Число десятичных разрядов, используемое в значениях денежных сумм. Значение по умолчанию для аргумента <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> Свойство используется со строкой стандартного формата "C" без описателя точности для числовых операций форматирования. Он определяет число цифр дробной части, которое отображается после десятичного разделителя. Это значение переопределяется, если используется описатель точности. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> свойства.  
  
 [!code-cpp[CurrencyDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalDigits/CPP/currencydecimaldigits.cpp#1)]
 [!code-csharp[CurrencyDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalDigits/CS/currencydecimaldigits.cs#1)]
 [!code-vb[CurrencyDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalDigits/VB/currencydecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 99.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве десятичного разделителя в значениях денежных сумм.</summary>
        <value>Строка, используемая в качестве десятичного разделителя в значениях денежных сумм. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Начальное значение этого свойства берется из параметров в элементе **язык и региональные** параметры панели управления.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> Свойство используется со строкой стандартного формата "C" для определения символа, который отделяет целую часть от цифр дробной части. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> свойства.  
  
 [!code-cpp[CurrencyDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalSeparator/CPP/currencydecimalseparator.cpp#1)]
 [!code-csharp[CurrencyDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalSeparator/CS/currencydecimalseparator.cs#1)]
 [!code-vb[CurrencyDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalSeparator/VB/currencydecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается пустая строка.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, разделяющую разряды в целой части десятичной дроби в значениях денежных сумм.</summary>
        <value>Строка, разделяющая разряды в целой части десятичной дроби в значениях денежных сумм. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно "-".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Начальное значение этого свойства берется из параметров в элементе Язык **и региональные стандарты** панели управления.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> Свойство используется со строкой стандартного формата "C" для определения символа, разделяющего группы целой и дробной части. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> свойства.  
  
 [!code-cpp[CurrencyGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSeparator/CPP/currencygroupseparator.cpp#1)]
 [!code-csharp[CurrencyGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSeparator/CS/currencygroupseparator.cs#1)]
 [!code-vb[CurrencyGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSeparator/VB/currencygroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSizes">
      <MemberSignature Language="C#" Value="public int[] CurrencyGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] CurrencyGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ CurrencyGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число цифр в каждой из групп целой части десятичной дроби в значениях денежных сумм.</summary>
        <value>Число цифр в каждой из групп целой части десятичной дроби в значениях денежных сумм. Для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> по умолчанию используется одномерный массив с единственным элементом, для которого задано значение 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> Свойство используется со строкой стандартного формата "C" для определения количества цифр, отображаемых в целых группах. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md). Каждый элемент в одномерным массиве должен быть целым числом от 1 до 9. Последний элемент может иметь значение 0.  
  
 Первый элемент массива определяет число элементов в наименее значимой группе цифр непосредственно слева от <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>. Каждый последующий элемент ссылается на следующую значительную группу цифр слева от предыдущей группы. Если последний элемент массива не равен 0, оставшиеся цифры группируются на основе последнего элемента массива. Если последний элемент равен 0, остальные цифры не группируются.  
  
 Например, если массив содержит {3, 4, 5}, то цифры группируются аналогично "$ 55, 55555 4444, 55555, 55555, 4444, 333.00". Если массив содержит {3, 4, 0}, цифры группируются аналогично "$ 55555555555555555, 4444, 333.00".  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> свойства.  
  
 [!code-cpp[CurrencyGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSizes/CPP/currencygroupsizes.cpp#1)]
 [!code-csharp[CurrencyGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSizes/CS/currencygroupsizes.cs#1)]
 [!code-vb[CurrencyGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSizes/VB/currencygroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается значение, и массив содержит запись, которая меньше 0 или больше 9.  
  
 - или -  
  
 Для свойства задается значение, и массив содержит запись, отличную от последней записи, которая имеет значение 0.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyNegativePattern">
      <MemberSignature Language="C#" Value="public int CurrencyNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон формата для отрицательных значений денежных сумм.</summary>
        <value>Шаблон формата для отрицательных значений денежных сумм. По умолчанию для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> задано значение 0, представляющее "($n)", где "$" — это <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />, а <paramref name="n" /> — число.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> Свойство используется со строкой стандартного формата "C" для определения шаблона с отрицательными денежными значениями. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md). Это свойство имеет одно из значений, приведенных в следующей таблице. Символ "$" — <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, символ "-" <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>—, а `n` — число.  
  
|Значение|Связанный шаблон|  
|-----------|------------------------|  
|0|($n)|  
|1|— $n|  
|2|$-n|  
|3|$n —|  
|4|(n $)|  
|5|-n $|  
|6|n-$|  
|7|n $-|  
|8|-n $|  
|9|-$ n|  
|10|n $-|  
|11|$ n —|  
|12|$-n|  
|13|n-$|  
|14|($ n)|  
|15|(n $)|  
  
   
  
## Examples  
 В следующем примере показано, как <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> свойство определяет формат отрицательных значений денежных сумм.  Он извлекает все определенные языки и региональные параметры, определенные на главном компьютере, и отображает значение <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> свойства каждого языка и региональных параметров, связанный с ним шаблон и число, отформатированное как денежное значение.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/cs/currencynegativepattern1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/vb/currencynegativepattern1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 15.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyPositivePattern">
      <MemberSignature Language="C#" Value="public int CurrencyPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyPositivePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyPositivePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон формата для положительных значений денежных сумм.</summary>
        <value>Шаблон формата для положительных значений денежных сумм. По умолчанию для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> задано значение 0, представляющее "$n", где "$" — это <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />, а <paramref name="n" /> — число.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> Свойство используется со строкой стандартного формата "C" для определения шаблона положительных денежных значений. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md). Это свойство имеет одно из значений, приведенных в следующей таблице. Символ "$" является <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> `n` числом.  
  
|Значение|Связанный шаблон|  
|-----------|------------------------|  
|0|$n|  
|1|n $|  
|2|$ n|  
|3|n $|  
  
 Обратите внимание, что шаблон не поддерживает положительный знак.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 3.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public string CurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве знака денежной единицы.</summary>
        <value>Строка, используемая в качестве знака денежной единицы. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> — "¤".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка, назначенная <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> свойству, включается в результирующую строку, если числовое значение форматируется с помощью [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md)"C".  
  
   
  
## Examples  
 В следующем примере отображается символ валюты для текущего языка и региональных параметров и используется строка стандартного числового формата "C" для форматирования значения валюты.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/cs/currencysymbolex1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/vb/currencysymbolex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ CurrentInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает доступный только для чтения объект <see cref="T:System.Globalization.NumberFormatInfo" />, форматирующий значения на основе текущего языка и региональных параметров.</summary>
        <value>Доступный только для чтения объект <see cref="T:System.Globalization.NumberFormatInfo" /> на основе языка и региональных параметров текущего потока.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Получение объекта из свойства эквивалентно извлечению `CultureInfo.CurrentCulture.NumberFormat`объектаизсвойства <xref:System.Globalization.NumberFormatInfo> <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. <xref:System.Globalization.NumberFormatInfo>  
  
   
  
## Examples  
 В следующем примере показано, что объекты, возвращаемые <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> свойствами `CultureInfo.CurrentCulture.NumberFormat` и, идентичны. Затем используется отражение для отображения значений <xref:System.Globalization.NumberFormatInfo> свойств объекта, возвращаемого <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> свойством в системе, текущий язык и региональные параметры которых — en-US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/cs/currentinfo1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/vb/currentinfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitution">
      <MemberSignature Language="C#" Value="public System.Globalization.DigitShapes DigitSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.DigitShapes DigitSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitSubstitution As DigitShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DigitShapes DigitSubstitution { System::Globalization::DigitShapes get(); void set(System::Globalization::DigitShapes value); };" />
      <MemberSignature Language="F#" Value="member this.DigitSubstitution : System.Globalization.DigitShapes with get, set" Usage="System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DigitShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, каким образом а графическом интерфейсе пользователя должны отображаться фигуры цифр.</summary>
        <value>Одно из значений перечисления, указывающее фигуру цифры, связанную с языком и региональными параметрами.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Globalization.NumberFormatInfo.DigitSubstitution%2A> Свойство зарезервировано для использования в будущем. В настоящее время он не используется в операциях синтаксического анализа или форматирования для текущего <xref:System.Globalization.NumberFormatInfo> объекта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущий объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения. </exception>
        <exception cref="T:System.ArgumentException">Значение в операции задания не является допустимым значением <see cref="T:System.Globalization.DigitShapes" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="numberFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType"><see cref="T:System.Type" /> требуемой службы форматирования.</param>
        <summary>Возвращает объект указанного типа, предоставляющий службу форматирования чисел.</summary>
        <returns>Текущий объект <see cref="T:System.Globalization.NumberFormatInfo" />, если параметр <paramref name="formatType" /> совпадает с типом текущего объекта <see cref="T:System.Globalization.NumberFormatInfo" />; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Методы, поддерживаемые базовыми типами данных, вызывают этот метод, когда текущий <xref:System.Globalization.NumberFormatInfo> объект передается <xref:System.IFormatProvider> в качестве параметра. `Format(String, IFormatProvider)` Этот метод реализует <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo GetInstance (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo GetInstance(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (formatProvider As IFormatProvider) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ GetInstance(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.GetInstance formatProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">Объект <see cref="T:System.IFormatProvider" />, используемый для получения <see cref="T:System.Globalization.NumberFormatInfo" />.  
  
- или - 
 Значение<see langword="null" /> , чтобы получить <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />.</param>
        <summary>Возвращает класс <see cref="T:System.Globalization.NumberFormatInfo" />, связанный с заданным <see cref="T:System.IFormatProvider" />.</summary>
        <returns>Класс <see cref="T:System.Globalization.NumberFormatInfo" />, связанный с заданным классом <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> `formatProvider` метод использования <xref:System.Globalization.NumberFormatInfo> в качестве параметра типа. Если `formatProvider` имеет `null` значение или <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> возвращает <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>, этот `null`метод возвращает.  
  
 Приложение получает <xref:System.Globalization.NumberFormatInfo> объект для определенного языка и региональных параметров с помощью одного из следующих методов:  
  
-   <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> Через свойство.  
  
-   Через метод, где `provider` — <xref:System.Globalization.CultureInfo>. <xref:System.Globalization.NumberFormatInfo.GetInstance%2A>  
  
 <xref:System.Globalization.NumberFormatInfo> Объект создается только для инвариантного языка и региональных параметров или для конкретных языков и региональных параметров, а не для нейтральных языков и региональных параметров. Дополнительные сведения о инвариантных региональных параметрах, конкретных культурах и нейтральных культурах см <xref:System.Globalization.CultureInfo> . в разделе класс.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ InvariantInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.NumberFormatInfo" />, доступный только для чтения, который не зависит от языка и региональных параметров (инвариантный).</summary>
        <value>Объект, доступный только для чтения, который не зависит от языка и региональных параметров (инвариантный).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый этим свойством, не изменяется независимо от текущего языка и региональных параметров. Он представляет соглашения о форматировании инвариантного языка и региональных параметров, связанных с английским языком, но не с какой-либо страной или регионом. Инвариантные язык и региональные параметры используются в операциях форматирования, которые не зависят от языка и региональных параметров или создают результирующие строки, подходящие для показа в нескольких культурах.  
  
   
  
## Examples  
 В следующем примере отображаются значения свойств по умолчанию для <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A>.  
  
 [!code-cpp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CPP/invariantinfo.cpp#1)]
 [!code-csharp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CS/invariantinfo.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/VB/invariantinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли данный объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступным только для чтения.</summary>
        <value>Значение <see langword="true" />, если интерфейс <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Попытка выполнить назначение для свойства, доступного только <xref:System.Globalization.NumberFormatInfo> для чтения, <xref:System.InvalidOperationException>приводит к возникновению исключения.  
  
 Можно вызвать <xref:System.Globalization.NumberFormatInfo.Clone%2A> метод для создания объекта, доступного для чтения <xref:System.Globalization.NumberFormatInfo> и записи, из объекта, доступного только для чтения, как показано в следующем примере.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="NaNSymbol">
      <MemberSignature Language="C#" Value="public string NaNSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NaNSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NaNSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NaNSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NaNSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, представляющую значение IEEE NaN (не числовое).</summary>
        <value>Строка, представляющая значение IEEE NaN (не числовое). Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> — "NaN".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о значениях NaN см. <xref:System.Double> в <xref:System.Single>разделе или.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      </Docs>
    </Member>
    <Member MemberName="NativeDigits">
      <MemberSignature Language="C#" Value="public string[] NativeDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] NativeDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NativeDigits As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ NativeDigits { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NativeDigits : string[] with get, set" Usage="System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает массив строк собственных цифр, эквивалентных арабским цифрам от 0 до 9.</summary>
        <value>Массив строк, содержащий собственный эквивалент арабских цифр от 0 до 9. Значение по умолчанию — массив, включающий элементы "0", "1", "2", "3", "4", "5", "6", "7", "8" и "9".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Кодировка, заданная <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> свойством, не влияет на операции синтаксического анализа или форматирования. При форматировании или синтаксическом анализе числовых значений или значений даты и времени используются только базовые латинские цифры от 0 (U + 0030) до 9 (U + 0039).  
  
   
  
## Examples  
 В следующем примере демонстрируется <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> свойство.  
  
 [!code-cpp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cpp/nd.cpp#1)]
 [!code-csharp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cs/nd.cs#1)]
 [!code-vb[sys.glob.NFI.nativeDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/vb/nd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущий объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения. </exception>
        <exception cref="T:System.ArgumentNullException">В операции задания значением является <see langword="null" />.  
  
- или - 
В операции над множеством элемент массива значений является <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">В операции над множеством массив значений не содержит 10 элементов.  
  
-или- 
В операции над множеством элемент массива значений не содержит ни один объект <see cref="T:System.Char" />, ни пару объектов <see cref="T:System.Char" />, составляющих суррогатную пару.  
  
-или- 
В операции над множеством элемент массива значений не является цифрой, как определено [стандартом Юникода](https://go.microsoft.com/fwlink/?linkid=37123). То есть цифра в элементе массива не имеет значения общей категории Юникода <see langword="Number, Decimal Digit" /> (Nd).  
  
- или - 
В операции над множеством числовое значение элемента в массиве значений не соответствует положению элемента в массиве. То есть элемент с индексом 0, который является первым элементом массива, не имеет числового значения 0, или элемент с индексом 1 не имеет числового значения 1.</exception>
        <altmember cref="T:System.Globalization.DigitShapes" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinitySymbol">
      <MemberSignature Language="C#" Value="public string NegativeInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NegativeInfinitySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, представляющую минус бесконечность.</summary>
        <value>Строка, представляющая минус бесконечность. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> ‏‏— "Infinity".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о отрицательной бесконечности см <xref:System.Double> . <xref:System.Single>в разделе или.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="NegativeSign">
      <MemberSignature Language="C#" Value="public string NegativeSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NegativeSign : string with get, set" Usage="System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, указывающую, что соответствующее число является отрицательным.</summary>
        <value>Строка, указывающая, что соответствующее число является отрицательным. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> — "+".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется как в операциях форматирования, так и при анализе. Дополнительные сведения об использовании в операциях форматирования см. в разделах [стандартные строки числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md) .  
  
   
  
## Examples  
 В следующем примере создается экземпляр объекта, доступного <xref:System.Globalization.CultureInfo> для чтения и записи, представляющий инвариантный язык и региональные параметры, и в его <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> свойство присваивается символ перестроки (U + 203E). Затем этот <xref:System.Globalization.CultureInfo> объект используется для форматирования массива отрицательных чисел с плавающей запятой.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/cs/negativesign1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/vb/negativesign1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalDigits">
      <MemberSignature Language="C#" Value="public int NumberDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NumberDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число десятичных разрядов, используемое в числовых значениях.</summary>
        <value>Число десятичных разрядов, используемое в числовых значениях. Значение по умолчанию для аргумента <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> Свойство используется с строками стандартного формата "F" и "N" без описателя точности для числовых операций форматирования. Он определяет число цифр дробной части, которое отображается после десятичного разделителя. Это значение переопределяется, если используется описатель точности. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> свойства.  
  
 [!code-cpp[NumberDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalDigits/CPP/numberdecimaldigits.cpp#1)]
 [!code-csharp[NumberDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalDigits/CS/numberdecimaldigits.cs#1)]
 [!code-vb[NumberDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalDigits/VB/numberdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 99.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalSeparator">
      <MemberSignature Language="C#" Value="public string NumberDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве десятичного разделителя в числовых значениях.</summary>
        <value>Строка, используемая в качестве десятичного разделителя в числовых значениях. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> Свойство используется с строками стандартного формата "E", "F", "G", "N" и "R" для определения символа, который отделяет целую часть от цифр дробной части. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
 Начальное значение этого свойства берется из параметров в элементе **язык и региональные** параметры панели управления.  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> свойства.  
  
 [!code-cpp[NumberDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalSeparator/CPP/numberdecimalseparator.cpp#1)]
 [!code-csharp[NumberDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalSeparator/CS/numberdecimalseparator.cs#1)]
 [!code-vb[NumberDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalSeparator/VB/numberdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается пустая строка.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSeparator">
      <MemberSignature Language="C#" Value="public string NumberGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, разделяющую разряды в целой части десятичной дроби в числовых значениях.</summary>
        <value>Строка, разделяющая разряды в целой части десятичной дроби в числовых значениях. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно "-".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> Свойство используется со строкой стандартного формата "N" для определения символа, разделяющего группы целой и дробной части. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
 Начальное значение этого свойства берется из параметров в элементе **язык и региональные** параметры панели управления.  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> свойства.  
  
 [!code-cpp[NumberGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSeparator/CPP/numbergroupseparator.cpp#1)]
 [!code-csharp[NumberGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSeparator/CS/numbergroupseparator.cs#1)]
 [!code-vb[NumberGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSeparator/VB/numbergroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSizes">
      <MemberSignature Language="C#" Value="public int[] NumberGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] NumberGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ NumberGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число цифр в каждой из групп целой части десятичной дроби в числовых значениях.</summary>
        <value>Число цифр в каждой из групп целой части десятичной дроби в числовых значениях. Для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> по умолчанию используется одномерный массив с единственным элементом, для которого задано значение 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> свойства влияет на результат числовых значений, отформатированных с помощью "N". Если используется строка настраиваемого числового формата или другие строки стандартного числового формата, значение <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> свойства игнорируется.  
  
 Каждый элемент в одномерным массиве должен быть целым числом от 1 до 9. Последний элемент может иметь значение 0.  
  
 Первый элемент массива определяет число элементов в наименее значимой группе цифр непосредственно слева от <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>. Каждый последующий элемент ссылается на следующую значительную группу цифр слева от предыдущей группы. Если последний элемент массива не равен 0, оставшиеся цифры группируются на основе последнего элемента массива. Если последний элемент равен 0, остальные цифры не группируются.  
  
 Например, если массив содержит {3, 4, 5}, то цифры группируются аналогично "55, 55555, 55555, 55555, 4444, 333.00". Если массив содержит {3, 4, 0}, цифры группируются аналогично "55555555555555555, 4444, 333.00".  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> свойства.  
  
 [!code-cpp[NumberGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSizes/CPP/numbergroupsizes.cpp#1)]
 [!code-csharp[NumberGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSizes/CS/numbergroupsizes.cs#1)]
 [!code-vb[NumberGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSizes/VB/numbergroupsizes.vb#1)]  
  
 В следующем примере значение выводится с <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> помощью различных массивов.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается значение, и массив содержит запись, которая меньше 0 или больше 9.  
  
 - или -  
  
 Для свойства задается значение, и массив содержит запись, отличную от последней записи, которая имеет значение 0.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="NumberNegativePattern">
      <MemberSignature Language="C#" Value="public int NumberNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NumberNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон формата для отрицательных числовых значений.</summary>
        <value>Шаблон формата для отрицательных числовых значений.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> Свойство определяет формат отрицательных значений, отформатированный со строкой стандартного числового формата "N". Это свойство имеет одно из значений, приведенных в следующей таблице. Символ "-" — <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> это и `n` является числом.  
  
|Значение|Связанный шаблон|  
|-----------|------------------------|  
|0|\n|  
|1|-n|  
|2|-n|  
|3|\n\n-|  
|4|\n|  
  
 Значение по умолчанию для инвариантного языка и региональных параметров <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> , возвращаемых свойством, равно 1, что представляет "-n", где *n* — число.  
  
   
  
## Examples  
 В следующем примере значение отображается с использованием различных <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> шаблонов.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 4.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalDigits">
      <MemberSignature Language="C#" Value="public int PercentDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает количество десятичных разрядов, используемое в значениях процентов.</summary>
        <value>Число десятичных разрядов, используемое в значениях процентов. Значение по умолчанию для аргумента <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> Свойство используется со строкой стандартного формата "P" без описателя точности для числовых операций форматирования. Он определяет число цифр дробной части, которое отображается после десятичного разделителя. Это значение переопределяется, если используется описатель точности. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> свойства.  
  
 [!code-cpp[PercentDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalDigits/CPP/percentdecimaldigits.cpp#1)]
 [!code-csharp[PercentDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalDigits/CS/percentdecimaldigits.cs#1)]
 [!code-vb[PercentDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalDigits/VB/percentdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 99.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalSeparator">
      <MemberSignature Language="C#" Value="public string PercentDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве десятичного разделителя в значениях процентов.</summary>
        <value>Строка, используемая в качестве десятичного разделителя в значениях процентов. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> Свойство используется со строкой стандартного формата "P" для определения символа, который отделяет целую часть от цифр дробной части. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> свойства.  
  
 [!code-cpp[PercentDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalSeparator/CPP/percentdecimalseparator.cpp#1)]
 [!code-csharp[PercentDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalSeparator/CS/percentdecimalseparator.cs#1)]
 [!code-vb[PercentDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalSeparator/VB/percentdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается пустая строка.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSeparator">
      <MemberSignature Language="C#" Value="public string PercentGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, разделяющую разряды в целой части десятичной дроби в значениях процентов.</summary>
        <value>Строка, разделяющая разряды в целой части десятичной дроби в значениях процентов. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно "-".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> Свойство используется со строкой стандартного формата "P" для определения символа, разделяющего группы целых чисел. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> свойства.  
  
 [!code-cpp[PercentGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSeparator/CPP/percentgroupseparator.cpp#1)]
 [!code-csharp[PercentGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSeparator/CS/percentgroupseparator.cs#1)]
 [!code-vb[PercentGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSeparator/VB/percentgroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSizes">
      <MemberSignature Language="C#" Value="public int[] PercentGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] PercentGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ PercentGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает количество цифр в каждой из групп разрядов целой части десятичной дроби в значениях процентов.</summary>
        <value>Число цифр в каждой из групп целой части десятичной дроби в значениях процентов. Для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> по умолчанию используется одномерный массив с единственным элементом, для которого задано значение 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> Свойство используется со строкой стандартного формата "P" для определения количества цифр, отображаемых в целых группах. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md). Каждый элемент в одномерным массиве должен быть целым числом от 1 до 9. Последний элемент может иметь значение 0.  
  
 Первый элемент массива определяет число элементов в наименее значимой группе цифр непосредственно слева от <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>. Каждый последующий элемент ссылается на следующую значительную группу цифр слева от предыдущей группы. Если последний элемент массива не равен 0, оставшиеся цифры группируются на основе последнего элемента массива. Если последний элемент равен 0, остальные цифры не группируются.  
  
 Например, если массив содержит {3, 4, 5}, то цифры группируются аналогично "55, 55555, 55555, 55555, 4444, 333.00%". Если массив содержит {3, 4, 0}, цифры группируются аналогично "55555555555555555, 4444, 333.00%".  
  
   
  
## Examples  
 В следующем примере демонстрируется результат изменения <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> свойства.  
  
 [!code-cpp[PercentGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSizes/CPP/percentgroupsizes.cpp#1)]
 [!code-csharp[PercentGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSizes/CS/percentgroupsizes.cs#1)]
 [!code-vb[PercentGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSizes/VB/percentgroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается значение, и массив содержит запись, которая меньше 0 или больше 9.  
  
 -или-  
  
 Для свойства задается значение, и массив содержит запись, отличную от последней записи, которая имеет значение 0.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="PercentNegativePattern">
      <MemberSignature Language="C#" Value="public int PercentNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон формата для отрицательных значений процентов.</summary>
        <value>Шаблон формата для отрицательных значений процентов. По умолчанию для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> задано значение 0, представляющее "-n %", где "%" — это <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />, а <paramref name="n" /> — число.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A> Свойство используется со строкой стандартного формата "P" для определения шаблона отрицательных процентных значений. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md). Это свойство имеет одно из значений, приведенных в следующей таблице. Символ "%" — <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, символ "-" <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>—, а `n` — число. Значения 3-11 были введены в .NET Framework 2,0 и не могут использоваться в более ранних версиях.  
  
|Значение|Связанный шаблон|  
|-----------|------------------------|  
|0|\n|  
|1|\n|  
|2|-% n|  
|3|%-n|  
|4|\n|  
|5|\n\n-|  
|6|n%-|  
|7|-% n|  
|8|n%-|  
|9|\n|  
|10|%-n|  
|11|n-%|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 11.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentPositivePattern">
      <MemberSignature Language="C#" Value="public int PercentPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentPositivePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentPositivePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон формата для положительных значений процентов.</summary>
        <value>Шаблон формата для положительных значений процентов. По умолчанию для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> задано значение 0, представляющее "n %", где "%" — это <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />, а <paramref name="n" /> — число.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A> Свойство используется со строкой стандартного формата "P" для определения шаблона положительных процентных значений. Дополнительные сведения см. в статье [Строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md). Это свойство имеет одно из значений, приведенных в следующей таблице. Символ "%" — <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> это и `n` является числом.  
  
|Значение|Связанный шаблон|  
|-----------|------------------------|  
|0|\n|  
|1|\n|  
|2|% n|  
|3|% n|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 3.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentSymbol">
      <MemberSignature Language="C#" Value="public string PercentSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве знака процентов.</summary>
        <value>Строка, используемая в качестве знака процентов. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно "%".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка, назначенная <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> свойству, включается в результирующую строку, если числовое значение форматируется с помощью "P" или со строкой формата, включающей "%".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PerMilleSymbol">
      <MemberSignature Language="C#" Value="public string PerMilleSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PerMilleSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PerMilleSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PerMilleSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PerMilleSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве знака промилле.</summary>
        <value>Строка, используемая в качестве знака промилле. Значением по умолчанию для <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> является "‰", что соответствует символу Юникода U+2030.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка, назначенная <xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A> свойству, включается в результирующую строку, если числовое значение форматируется с помощью строки формата, включающей "‰".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinitySymbol">
      <MemberSignature Language="C#" Value="public string PositiveInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositiveInfinitySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, представляющую плюс бесконечность.</summary>
        <value>Строка, представляющая плюс бесконечность. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> ‏‏равно "Infinity".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о положительной бесконечности см <xref:System.Double> . <xref:System.Single>в разделе или.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveSign">
      <MemberSignature Language="C#" Value="public string PositiveSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositiveSign : string with get, set" Usage="System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, указывающую, что соответствующее число является положительным.</summary>
        <value>Строка, указывающая, что соответствующее число является положительным. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно "+".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется только для синтаксического анализа числовых строк, а не для форматирования.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">В операции присваивания присваиваемое значение меньше <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo ReadOnly (System.Globalization.NumberFormatInfo nfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo ReadOnly(class System.Globalization.NumberFormatInfo nfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (nfi As NumberFormatInfo) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ ReadOnly(System::Globalization::NumberFormatInfo ^ nfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.NumberFormatInfo -&gt; System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.ReadOnly nfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nfi" Type="System.Globalization.NumberFormatInfo" />
      </Parameters>
      <Docs>
        <param name="nfi">Класс <see cref="T:System.Globalization.NumberFormatInfo" />, для которого создается оболочка.</param>
        <summary>Возвращает программу-оболочку <see cref="T:System.Globalization.NumberFormatInfo" />, доступную только для чтения.</summary>
        <returns>Доступная только для чтения программа-оболочка <see cref="T:System.Globalization.NumberFormatInfo" /> для параметра <paramref name="nfi" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта оболочка предотвращает любые изменения `nfi`.  
  
 Попытка выполнить назначение для свойства, доступного только <xref:System.Globalization.NumberFormatInfo> для чтения, <xref:System.InvalidOperationException>приводит к возникновению исключения.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="nfi" /> — <see langword="null" />.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      </Docs>
    </Member>
  </Members>
</Type>
