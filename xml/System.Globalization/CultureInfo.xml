<Type Name="CultureInfo" FullName="System.Globalization.CultureInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5196546e73251da2eabb69b4bb1e4387408c6fb" /><Meta Name="ms.sourcegitcommit" Value="75eca440f8f4d595506405f48961f38649e160d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/01/2019" /><Meta Name="ms.locfileid" Value="66458083" /></Metadata><TypeSignature Language="C#" Value="public class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit CultureInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CultureInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type CultureInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет сведения об определенном языке и региональных параметрах (которые в совокупности называются *языковым стандартом* для разработки неуправляемого кода). Эти сведения включают имена языков и региональных параметров, систему письма, используемый календарь, порядок сортировки строк и форматы дат и чисел.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo> Класс предоставляет зависящие от культуры сведения, такие как язык, варианта языка, страны или региона, календарь и соглашения, связанные с определенной культуры. Этот класс также предоставляет доступ к экземплярам региональных <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, и <xref:System.Globalization.TextInfo> объектов. Эти объекты содержат сведения, необходимые для конкретного языка и региональных параметров операций, таких как регистр, форматирование дат и чисел и сравнения строк. <xref:System.Globalization.CultureInfo> Класс используется прямо или косвенно с помощью классов, форматирования и синтаксического анализа управления данные, зависящие от языка и региональных параметров, таких как <xref:System.String>, <xref:System.DateTime>, <xref:System.DateTimeOffset>и числовых типов.  
  
 Содержание  
  
 [Язык и региональные параметры имена и идентификаторы](#CultureNames)   
 [Неизменяемое, нейтральные и конкретные языки и региональные параметры](#Invariant)   
 [Пользовательские языки и региональные параметры](#Custom)   
 [Данные динамического языка и региональных параметров](#Dynamic)   
 [CultureInfo и региональные данные](#cultureinfo-and-cultural-data) [текущего языка и региональных параметров текущего пользовательского интерфейса](#Current)   
 [Получение всех языков и региональных параметров](#GetAll)   
 [Язык и региональные параметры и потоков](#Threads)   
 [Язык и региональные параметры и приложения доменов](#AppDomain)   
 [Язык и региональные параметры и асинхронные операции на основе задач](#Async)   
 [Сериализация объектов CultureInfo](#Serialization)   
 [Переопределяет панели управления](#CPanel)   
 [Альтернативные порядки сортировки](#AlternateSort)   
 [Приложения для языка и региональных параметров и Windows](#Windows)  

<a name="CultureNames"></a>   
## <a name="culture-names-and-identifiers"></a>Язык и региональные параметры имена и идентификаторы  
 <xref:System.Globalization.CultureInfo> Класс указывает уникальное имя для каждой культуры, в соответствии с RFC 4646. Имя представляет собой сочетание код ISO 639 двух букв нижнего регистра, языка и региональных параметров, связанных с языком и код двух букв верхнего регистра субкультуры ISO 3166, связанный со страной или регионом. Кроме того, для приложений, предназначенных для [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] или более поздней версии и работают в Windows 10 или более поздней версии, языка и региональных параметров имена, которые соответствуют допустимого языка BCP-47, теги поддерживаются.  
  
> [!NOTE]
>  Когда имя языка и региональных параметров передается в конструктор класса или метода например <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> или <xref:System.Globalization.CultureInfo>, его регистр не имеет значения.  
  
 Формат имени языка и региональных параметров, в соответствии с RFC 4646 является *languagecode2*>-*country/regioncode2*, где *languagecode2* — код языка двухбуквенный и *country/regioncode2* — код субкультуры двух букв. Примеры включают ja-JP для японского (Япония) "и" en US для английского языка (США). В случаях, где язык двухбуквенный код недоступен используется трехбуквенный код, производный от ISO 639-2.  
  
 Обратите внимание на то, что некоторые имена языка и региональных параметров также указать стандарту ISO 15924. Например Cyrl означает кириллицу с указанием Latn латинского алфавита. Имя языка и региональных параметров, которое включает в себя сценарий использует шаблон *languagecode2*-*scripttag*-*country/regioncode2*. Примером такого рода имя языка и региональных параметров является uz-Cyrl-UZ для Узбекский (кириллица, Узбекистан). В операционных системах Windows до Windows Vista, имя языка и региональных параметров, которое включает в себя сценарий использует шаблон *languagecode2*-*country/regioncode2* -  *scripttag*, например uz-UZ-Cyrl для Узбекский (кириллица, Узбекистан).  
  
 Нейтральная культура определяется только двух букв нижнего регистра кодировку. Например fr определяет нейтральный язык и региональные параметры для французского языка, с указанием de нейтральный язык и региональные параметры для немецкого языка.  
  
> [!NOTE]
>  Существуют два имени языка и региональных параметров, которые соответствуют этому правилу. Языки и региональные параметры, с именем zh-Hans, китайский (упрощенное письмо) и китайский (традиционный), с именем zh-Hant, являются нейтральными. Эти имена представляют текущий стандарт и должен использоваться, если у вас нет причин для использования более старые имена zh-CHS и zh-CHT.  
  
 Идентификатор языка и региональных параметров имеет стандартное международное числовое обозначение и компоненты, необходимые для уникальной идентификации один из установленных языков и региональных параметров. Приложения можно использовать стандартные идентификаторы культуры или определить пользовательские идентификаторы.  
  
 Некоторые предопределенные имена языка и региональных параметров и идентификаторы используются в этом и других классах <xref:System.Globalization?displayProperty=nameWithType> пространства имен. Язык и региональные параметры подробные сведения отображаются на [Справочник по API поддержки национальных языков (NLS)](https://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global.  
  
 Помните, что язык и региональные параметры имена и идентификаторы представляют только подмножество языков и региональных параметров, которые могут находиться на определенном компьютере. Версии Windows или пакетах обновления можно изменить доступные языки и региональные параметры. Приложения, добавить пользовательские языки и региональные параметры с помощью <xref:System.Globalization.CultureAndRegionInfoBuilder> класса. Пользователи добавлять свои собственные пользовательские языки и региональные параметры с помощью средства Microsoft Locale Builder. Microsoft Locale Builder записывается в управляемом коде с помощью `CultureAndRegionInfoBuilder` класса.  
  
 Некоторые особые имена тесно связаны с языком и региональными параметрами, особенно имена, связанные со следующими членами класса:  
  
-   <xref:System.Globalization.CultureInfo.ToString%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CompareInfo.Name%2A?displayProperty=nameWithType>  
  
<a name="Invariant"></a>   
## <a name="invariant-neutral-and-specific-cultures"></a>Неизменяемое, нейтральные и конкретные языки и региональные параметры  
 Языки и региональные параметры делятся на группы по три набора: инвариантные, нейтральные и определенные языки и региональные параметры.  
  
 Инвариантный язык и региональные параметры без учета языка и региональных параметров. Приложение указывает инвариантный язык и региональные параметры по имени, используя пустую строку ("») или по его идентификатору. <xref:System.Globalization.CultureInfo.InvariantCulture%2A> Определяет экземпляр инвариантного языка и региональных параметров. Он связан с английским языком, но не с любой страны или региона. Он используется в практически любом методе в `Globalization` пространство имен, которое требует языка и региональных параметров.  
  
 Нейтральная культура — это культура, связанный с языком, но не со страной или регионом. Конкретная культура — язык и региональные параметры, который связан с языком и страной или регионом. Например fr — нейтральный имя для французского языка и региональных параметров и fr-FR, — это имя конкретной культуры французского (Франция). Обратите внимание на то, что китайский (упрощенное письмо) и китайский (традиционный), также считаются нейтральные культуры.  
  
 Создание экземпляра <xref:System.Globalization.CompareInfo> класса для нейтрального языка и региональных параметров не рекомендуется, поскольку в нем данных может быть произвольным. Для отображения и сортировки данных, укажите язык и регион. Кроме того <xref:System.Globalization.CompareInfo.Name%2A> свойство <xref:System.Globalization.CompareInfo> объект, созданный для нейтрального языка и региональных параметров возвращает только страны и не включает область.  
  
 Определенные языки и региональные параметры имеют иерархию, в котором родительского конкретного языка и региональных параметров — это нейтральная культура и инвариантного языка и региональных параметров является родительским для нейтрального языка и региональных параметров. <xref:System.Globalization.CultureInfo.Parent%2A> Свойство содержит нейтральный язык и региональные параметры, связанные с определенной культуры. Пользовательские языки и региональные параметры следует определить <xref:System.Globalization.CultureInfo.Parent%2A> свойства в соответствии с этим шаблоном.  
  
 Если ресурсы для конкретного языка и региональных параметров не доступны в операционной системе, используются ресурсы для связанного нейтрального языка и региональных параметров. Если не доступны ресурсы для нейтрального языка и региональных параметров, используются ресурсы, встроенные в основную сборку. Дополнительные сведения о процесс использования резервных ресурсов, см. в разделе [упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
 Список языковых стандартов в Windows API немного отличается от списка языков и региональных параметров, поддерживаемых в .NET Framework. Если требуется взаимодействие с Windows, например, через механизм p/invoke, приложение должно использовать определенного языка и региональных параметров, определенный для операционной системы. Использование определенного языка и региональных параметров обеспечивает согласованность с эквивалентное языкового стандарта Windows, который определяется идентификатором языкового стандарта, который совпадает со значением <xref:System.Globalization.CultureInfo.LCID%2A>.  
  
 Объект <xref:System.Globalization.DateTimeFormatInfo> или <xref:System.Globalization.NumberFormatInfo> могут создаваться только для инвариантного языка и региональных параметров или для конкретных языков и региональных параметров, но не для нейтральной культуры.  
  
 Если <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> — <xref:System.Globalization.TaiwanCalendar> , но <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> не присвоено значение zh-TW, затем <xref:System.Globalization.DateTimeFormatInfo.NativeCalendarName%2A?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A?displayProperty=nameWithType>, и <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A?displayProperty=nameWithType> возвращается пустая строка (»»).  
  
<a name="Custom"></a>   
## <a name="custom-cultures"></a>Пользовательские языки и региональные параметры  
 Помимо стандартных языков и региональных параметров, поддерживаемых операционной системы Windows и .NET Framework .NET Framework поддерживает три типа пользовательских языков и региональных параметров:  
  
-   Новые языки и региональные параметры, которые дополняют культур, доступных в Windows или .NET Framework. Например, приложение может установить <xref:System.Globalization.CultureInfo> объекта, что представляет fj-FJ (или Fijan (Фиджи)) языка и региональных параметров в системе.  
  
-   Языки и региональные параметры замены, свойства которого отличаются от свойств стандартных языков и региональных параметров, поддерживаемых Windows и .NET Framework.  
  
-   Переопределяет стандартные языки и региональные параметры с пользователем. Пользователь может использовать **регион и язык** приложение **панели управления** для настройки значений свойств существующего языка и региональных параметров.  
  
> [!NOTE]
>  Можно использовать <xref:System.Globalization.CultureAndRegionInfoBuilder> класс для определения, сохранить и зарегистрировать пользовательские языки и региональные параметры, которые дополнить или заменить существующие языки и региональные параметры. <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A?displayProperty=nameWithType> Метод создает файл языка разметки данных языкового стандарта (LDML), который может использоваться для установки пользовательского языка и региональных параметров в целевых системах. Шаг по шаг сведения об использовании <xref:System.Globalization.CultureAndRegionInfoBuilder> класса для создания нового или замены языка и региональных параметров, см. в разделе <xref:System.Globalization.CultureAndRegionInfoBuilder> разделе, посвященном классу.  
  
 Поскольку платформа .NET Framework поддерживает пользовательские языки и региональные параметры, при работе с данными конкретного языка и региональных параметров необходимо учитывать следующее:  
  
-   Пользовательские языки и региональные параметры могут иметь значения, выходить за границы стандартных языков и региональных параметров. Например некоторые языки и региональные параметры имеют слишком длинные названия месяцев, Непредвиденная даты или форматы времени или другие нестандартные данные.  
  
-   При отображении данные, зависящие от языка и региональных параметров в пользовательском интерфейсе, должен подчиняться настроек пользователя; Например пользователю может потребоваться 24-часовом формате или формате даты ГГГГММДД.  
  
-   Помните, что пользовательские языки и региональные параметры переопределяют значения по умолчанию. Таким образом нельзя считать данные языка и региональных параметров стабильность. Названия стран, форматы чисел и дат и вариантов может измениться в будущем. Если нужно сериализовать данные, зависящие от языка и региональных параметров таких как строки даты и времени должны быть переданы дату и время, синтаксический анализ функции, следует использовать инвариантного языка и региональных параметров или конкретного.  
  
 <xref:System.Globalization.CultureInfo.CultureTypes%2A> Включает значение свойства пользовательских языков и региональных параметров, установленной в системе <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> флаг и пользовательские языки и региональные параметры назначаются <xref:System.Globalization.CultureInfo.LCID%2A> значение свойства `LOCALE_CUSTOM_UNSPECIFIED` (0x1000 или 4096). Обратите внимание на то, что, начиная с Windows 10, это значение также назначается системный языков и региональных параметров, которые не хватает полные данные.  

## <a name="cultureinfo-and-cultural-data"></a>CultureInfo и культуры данных

.NET получающая региональные данные из одного из различных источников, в зависимости от реализации, платформы и версии:

- В .NET Framework 3.5 и более ранних версий региональные данных обеспечивается операционной системы Windows и .NET Framework.

- В .NET Framework 4 и более поздних версий региональные данные предоставляются операционной системой Windows.

- Во всех версиях .NET Core, под управлением Windows региональные данные предоставляются операционной системой Windows.

- Во всех версиях .NET Core, запущенных на платформах Unix, предоставляемые данные [International компоненты библиотеки Юникода (ICU)](http://site.icu-project.org/). Определенную версию библиотеки ICU зависит от отдельных операционных системах.

По этой причине региональные параметры, доступные на конкретной реализации .NET, платформы или версии не могут быть доступны на различные реализации .NET, платформы или версии.

Некоторые `CultureInfo` объекты отличаются в зависимости от базовой платформы. В частности «zh-CN», или китайский (упрощенное письмо) и zh-TW или китайский (традиционное письмо, Тайвань), являются языков и региональных параметров, доступных в системах Windows, но они являются псевдонимами языков и региональных параметров, в системах Unix. «zh-CN» — это псевдоним для культуры «zh-Hans-CN» и «zh-TW» — это псевдоним для культуры «zh-Hant-TW». Псевдонимы языков и региональных параметров не возвращаются при вызове <xref:System.Globalization.CultureInfo.GetCultures%2A> метода и может иметь различные значения свойств, включая различные <xref:System.Globalization.CultureInfo.Parent> языков и региональных параметров, чем их аналоги Windows. Для региональных параметров zh-CN и zh-TW эти differenes следующее:

- В системах Windows языка и региональных параметров родительского языка и региональных параметров «zh-CN» — «zh-Hans», а родительский язык и региональные параметры языка и региональных параметров «zh-TW» — «zh-Hant». Родительский язык и региональные параметры обоих этих языков и региональных параметров является «zh». В системах Unix родительские элементы обоих языков и региональных параметров являются «zh». Это означает, что, если не предоставить от культуры ресурсам для языков и региональных параметров «zh-CN» или «zh-TW», но предоставляют ресурсы для нейтрального «zh-Hans» или «zh-Hant» язык и региональные параметры, приложение будет загружать ресурсы для нейтрального языка и региональных параметров на Windows, но не под управлением Unix . В системах Unix, необходимо явно задать потока <xref:System.Globalization.CultureInfo.CurrentUICulture> «zh-Hans» или «zh-Hant». 

- В системах Windows, вызвав <xref:System.Globalization.CultureInfo.Equals%2A?displayProperty=nameWithType> на экземпляр, представляющий язык и региональные параметры «zh-CN» и передавая ему экземпляр «zh-Hans-CN» возвращает `true`. В системах Unix, этот метод возвращает `false`. Это поведение также применяется для вызова метода <xref:System.Globalization.CultureInfo.Equals%2A> на «zh-TW» <xref:System.Globalization.CultureInfo> экземпляра и передается экземпляр «zh-Hant-Tw».

<a name="Dynamic"></a>   
## <a name="dynamic-culture-data"></a>Данные динамического языка и региональных параметров  
 За исключением инвариантного языка и региональных параметров данных языка и региональных параметров является динамическим. Это справедливо даже для стандартных языков и региональных параметров. Например стран или регионов ввести новые валюты, изменить написание слов или изменить их основной календарь и изменить определения языка и региональных параметров для отслеживания это.  Пользовательские языки и региональные параметры могут быть изменены без предварительного уведомления и любого конкретного языка и региональных параметров может переопределяться пользовательская заменяющая языка и региональных параметров. Кроме того как описано ниже, отдельного пользователя можно переопределить культурные предпочтения. Приложения всегда должны получать данные языка и региональных параметров во время выполнения.  
  
> [!CAUTION]
>  При сохранении данных, приложение должно использовать инвариантный язык и региональные параметры, двоичный формат или определенном формате независимый от языка и региональных параметров. Данные, сохраненные в соответствии с текущего значения, связанные с определенной культуры, отличный от инвариантного языка и региональных параметров, могут стать нечитаемыми, или может измениться в значение, при изменении этого языка и региональных параметров.  
  
<a name="Current"></a>   
## <a name="the-current-culture-and-current-ui-culture"></a>Текущий язык и региональные параметры текущего пользовательского интерфейса  
 Каждый поток в приложении .NET имеет текущего языка и региональных параметров и текущий язык и региональные параметры пользовательского интерфейса. Текущий язык и региональные параметры определяет соглашения о форматировании для дат, времени, чисел и значения валюты, порядок сортировки текста, соглашения о регистре и способы сравнения строк. Текущий язык и региональные параметры пользовательского интерфейса используется для получения от культуры ресурсам во время выполнения.  
  
> [!NOTE]
>  Сведения об определении текущих и текущей культуре интерфейса пользователя на основе отдельного потока, см. в разделе [языка и региональных параметров и потоки](#Threads) раздел. Сведения об определении текущих и текущего языка пользовательского интерфейса в потоках выполнение в новый домен приложения и в потоках, пересекающих границы домена приложения, см. в разделе [языка и региональных параметров и домены приложений](#AppDomain) раздел. Сведения об определении текущего и current в потоках, выполнение асинхронных операций на основе задач, см. в разделе [язык и региональные параметры и асинхронные операции на основе задач](#Async) раздел.  
  
 Дополнительные сведения о текущих региональных параметров, см. в разделе <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойства раздела. Дополнительные сведения о текущих региональных параметров пользовательского интерфейса, см. в разделе <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойства раздела.  
  
### <a name="retrieving-the-current-and-current-ui-cultures"></a>Получение текущих и текущего пользовательского интерфейса языков и региональных параметров  
 Вы можете получить <xref:System.Globalization.CultureInfo> , представляющий текущий язык и региональные параметры одним из двух способов:  
  
-   Извлекая значение <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойства.  
  
-   Извлекая значение [Thread.CurrentThread.CurrentCulture](<xref:System.Threading.Thread.CurrentCulture>) свойство.  
  
 Следующий пример извлекает оба значения свойств, сравниваются, чтобы показать, что они равны и отображает имя текущего языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Current1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Current1.vb#1)]  
  
 Вы можете получить <xref:System.Globalization.CultureInfo> , представляющий текущий язык и региональные параметры пользовательского интерфейса в одном из двух способов:  
  
-   Извлекая значение <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойства.  
  
-   Извлекая значение [Thread.CurrentThread.CurrentUICulture](<xref:System.Threading.Thread.CurrentUICulture>) свойство.  
  
 Следующий пример извлекает оба значения свойств, сравниваются, чтобы показать, что они равны и отображает имя текущего языка и региональных параметров пользовательского интерфейса.  
  
 [!code-csharp[System.Globalization.CultureInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/CurrentUI1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/CurrentUI1.vb#2)]  
  
### <a name="setting-the-current-and-current-ui-cultures"></a>Настройка региональных параметров пользовательского интерфейса текущей и текущий  
 Чтобы изменить язык и региональные параметры пользовательского интерфейса потока, сделайте следующее:  
  
1.  Создать экземпляр <xref:System.Globalization.CultureInfo> объект, представляющий этот язык, вызвав <xref:System.Globalization.CultureInfo> класса конструктор и передав имя языка и региональных параметров. <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> Конструктор создает <xref:System.Globalization.CultureInfo> , который отражает пользователя переопределяет Если нового языка и региональных параметров совпадает со значением текущего языка и региональных параметров Windows.   <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> Конструктор позволяет указать ли вновь созданным экземпляром <xref:System.Globalization.CultureInfo> объекта отражает переопределение пользователя, если новый язык и региональные параметры совпадает со значением текущего языка и региональных параметров Windows.  
  
2.  Назначить <xref:System.Globalization.CultureInfo> объект <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> или <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство .NET Core и .NET Framework 4.6 и более поздних версий. (В .NET Framework 4.5.2 и более ранних версий, youc назначить `CultureInfo` объект <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> или <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойство.)   
  
 В следующем примере извлекается текущего языка и региональных параметров. Если это было присвоено имя, отличное от французский (Франция) языка и региональных параметров, он сменит текущий язык на французский (Франция). В противном случае он сменит текущий язык на французский (Люксембург).  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 В следующем примере извлекается текущего языка и региональных параметров. Если это что-то иное словенский (Словения) языка и региональных параметров, он изменяет текущий язык и региональные параметры для словенский (Словения). В противном случае сменит текущий язык и региональные параметры как Хорватский (Хорватия).  
  
 [!code-csharp[System.Globalization.CultureInfo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/ChangeUI1.cs#4)]
 [!code-vb[System.Globalization.CultureInfo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/ChangeUI1.vb#4)]  
  
<a name="GetAll"></a>   
## <a name="getting-all-cultures"></a>Получение всех языков и региональных параметров  
 Массив категорий языков и региональных параметров или для всех языков, доступных на локальном компьютере можно получить, вызвав <xref:System.Globalization.CultureInfo.GetCultures%2A> метод. Например можно получить пользовательские языки и региональные параметры, определенные языки и региональные параметры или нейтральные культуры отдельно или в сочетании.  
  
 В следующем примере вызывается <xref:System.Globalization.CultureInfo.GetCultures%2A> метод дважды, один со <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> член перечисления для получения всех пользовательских языков и региональных параметров, а затем с помощью <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> член перечисления для получения всех языков и региональных параметров замены.  
  
 [!code-csharp[System.Globalization.CultureInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/GetCultures1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/GetCultures1.vb#5)]  
  
<a name="Threads"></a>   
## <a name="culture-and-threads"></a>Язык и региональные параметры и потоков  
 При запуске нового потока приложения, его текущего языка и региональных параметров текущего языка и региональных параметров пользовательского интерфейса определяется и текущий язык и региональные параметры, а не языка и региональных параметров текущего потока. В следующем примере демонстрируется это различие. Французский (Франция), язык и региональные параметры (fr-FR) задает текущий язык и региональные параметры текущего пользовательского интерфейса потока приложения. Если текущий язык и региональные параметры fr-FR, в примере задается английский (США), язык и региональные параметры (en US). Он отображает три случайных чисел в виде значения валюты, а затем создает новый поток, который, в свою очередь, отображает три более случайных чисел в виде значения валюты. Но как видно в результатах показано в примере, значения валюты, отображаемые в новый поток не отражают соглашения о форматировании французский (Франция) языка и региональных параметров, в отличие от выходных данных из основного потока приложения.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/defaultthread1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/defaultthread1.vb#1)]  
  
 В версиях .NET Framework, выпущенных до [!INCLUDE[net_v45](~/includes/net-v45-md.md)], наиболее распространенный способ убедитесь, что основной поток приложения совместно тем же языком и все рабочие потоки — для передачи имени языка и региональных параметров приложения или <xref:System.Globalization.CultureInfo> объекта, представляет язык и региональные параметры уровня приложения для <xref:System.Threading.ParameterizedThreadStart?displayProperty=nameWithType> делегировать. В следующем примере этот подход используется, чтобы убедиться, что значения валюты с двумя потоками отражают соглашения о форматировании же языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/perthread1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/perthread1.vb#2)]  
  
 Можно задать язык и региональные параметры пользовательского интерфейса потока пула потоков так же, как путем вызова <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> метод.  
  
 Начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)], можно задать язык и региональные параметры пользовательского интерфейса всех потоков в домене приложения напрямую, назначив <xref:System.Globalization.CultureInfo> объект, представляющий этот язык для <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства. В следующем примере эти свойства убедитесь, что все потоки в домене приложения по умолчанию используют же языком и региональными параметрами.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/setthreads1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/setthreads1.vb#3)]  
  
> [!WARNING]
>  Несмотря на то что <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства являются статическими членами, они определяют, по умолчанию язык и региональные параметры по умолчанию пользовательский Интерфейс только для домена приложения, которая является текущей на момент установки этих значений свойства. Дополнительные сведения см. следующий раздел, [языка и региональных параметров и домены приложений](#AppDomain).  
  
 При присвоении значений для <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойств, языка и региональных параметров пользовательского интерфейса из потоков в домене приложения также изменить, если им не явно предоставлен языка и региональных параметров. Тем не менее эти потоки отражают новые параметры языка и региональных параметров, только тогда, когда они выполняются в текущем домене приложения. Если эти потоки выполняются в другом домене приложения, их язык и региональные параметры становится по умолчанию язык и региональные параметры, определенные для этого домена приложения. Таким образом, мы рекомендуем всегда устанавливать язык и региональные параметры потока основного приложения и не полагаться на <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства, чтобы изменить его.  
  
<a name="AppDomain"></a>   
## <a name="culture-and-application-domains"></a>Язык и региональные параметры и приложения доменов  
 <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> являются статические свойства, которые явно определить язык и региональные параметры по умолчанию только для домена приложения, которая является текущей, когда при задании или получении значения свойства. Следующий пример задает по умолчанию язык и региональные параметры по умолчанию пользовательского интерфейса в домене приложения по умолчанию на французский (Франция), а затем использует <xref:System.AppDomainSetup> класс и <xref:System.AppDomainInitializer> делегат для установки по умолчанию язык и региональные параметры пользовательского интерфейса в новый домен приложения Русский (Россия). Затем один поток выполняет два метода в каждом домене приложения. Обратите внимание, что язык и региональные параметры и язык и региональные параметры пользовательского интерфейса потока, не заданы явным образом; они являются производными от языка и региональных параметров по умолчанию пользовательского интерфейса домена приложения, в котором выполняется поток. Обратите внимание, что <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства возвращают значение по умолчанию <xref:System.Globalization.CultureInfo> значения домена приложения, которая является текущей, при вызове метода.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/cs/appdomainex1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/vb/appdomainex1.vb#1)]  
  
 Дополнительные сведения о языков и региональных параметров и доменах приложений см. в разделе «Домены приложений и потоков» в [домены приложений](~/docs/framework/app-domains/application-domains.md) раздела.  
  
<a name="Async"></a>   
## <a name="culture-and-task-based-asynchronous-operations"></a>Язык и региональные параметры и асинхронные операции на основе задач  
 [На основе задач шаблон асинхронного программирования](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md) использует <xref:System.Threading.Tasks.Task> и <xref:System.Threading.Tasks.Task%601> объекты асинхронно выполнение делегатов в поток пула потоков. Определенного потока, на котором выполняется конкретной задачи не известна заранее, но определяется только во время выполнения.  
  
 Для приложений, предназначенных для [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздние версии, языка и региональных параметров является частью контекста асинхронной операции. Другими словами, начиная с приложений, предназначенных [!INCLUDE[net_v46](~/includes/net-v46-md.md)], асинхронные операции по умолчанию наследует значения <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства потока, откуда они запускаются. Если текущего языка и региональных параметров или текущего языка и региональных параметров пользовательского интерфейса отличается от языка и региональных параметров системы, текущего языка и региональных параметров пересекает границы потоков и становится текущий язык и региональные параметры потока пула потоков, которая выполняет асинхронную операцию.  
  
 Следующий пример иллюстрирует это. Она использует <xref:System.Runtime.Versioning.TargetFrameworkAttribute> атрибута к целевому объекту [!INCLUDE[net_v46](~/includes/net-v46-md.md)]. В примере определяется <xref:System.Func%601> делегировать, `formatDelegate`, который возвращает некоторые числа в виде значения валюты. В примере изменяется текущий язык и региональные параметры на французский (Франция) или, если французский (Франция) уже является текущим языком, английский (США). И она затем:  
  
-   Таким образом, чтобы он выполняется синхронно в потоке, основное приложение напрямую вызывает делегат.  
  
-   Создает задачу, которая выполняет делегат асинхронно в потоке пула потоков.  
  
-   Создает задачу, которая синхронно выполняет делегат в потоке основного приложения, вызвав <xref:System.Threading.Tasks.Task.RunSynchronously%2A?displayProperty=nameWithType> метод.  
  
 Как показывают выходные данные из примера, при изменении текущего языка и региональных параметров для французского (Франция), текущий язык и региональные параметры потока, из которого задачи вызываются асинхронно становится текущий язык и региональные параметры для этой асинхронной операции.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture1.vb#1)]  
  
 Для приложений, предназначенных для версий платформы .NET Framework до версии [!INCLUDE[net_v46](~/includes/net-v46-md.md)], или для приложений, не предназначенных для определенной версии платформы .NET Framework, язык и региональные параметры вызывающего потока не является частью контекста задачи. Вместо этого если он задан явно, язык и региональные параметры новых потоков по умолчанию является язык и региональные параметры. В следующем примере, который работает аналогично предыдущему примеру, у него нет <xref:System.Runtime.Versioning.TargetFrameworkAttribute> атрибута, это проиллюстрировано. Так как язык и региональные параметры системы, на котором выполняется пример был английский (США), язык и региональные параметры задачи, которое выполняется асинхронно в потоке пула потоков — en US, а не fr-FR.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture2.vb#2)]  
  
 Для приложений, предназначенных для версий платформы .NET Framework из [!INCLUDE[net_v45](~/includes/net-v45-md.md)] и более поздней версии, но до [!INCLUDE[net_v46](~/includes/net-v46-md.md)], можно использовать <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства и убедитесь, что язык и региональные параметры вызывающего потока используется в асинхронной задачи, выполнение в потоках пула потоков. Следующий пример идентичен предыдущему примеру, за исключением того, что она использует <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> языка и региональных параметров, как основного потока приложения имеют свойства, чтобы обеспечить этот поток из пула потоков.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture3.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture3.vb#3)]  
  
 <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> — на уровне приложения свойства домена; то есть установленный им культуру по умолчанию для всех потоков явно не назначены языка и региональных параметров в конкретном домене приложения. Однако для приложений, предназначенных для [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздней версии, языка и региональных параметров вызывающего потока остается частью контекста асинхронной задачи, даже если задачи за пределами домена приложения.  
  
 В следующем примере показано, что язык и региональные параметры вызывающего потока остается текущего языка и региональных параметров асинхронной операции на основе задач, даже если метод, который выполняется задача за пределами домена приложения. Он определяет класс, `DataRetriever`, с единственным методом, `GetFormattedNumber`, который возвращает случайное число двойной точности с плавающей запятой от 1 до 1000, в формате денежной единицы. Первая задача выполняется, просто создает `DataRetriever` экземпляра и вызывает его `GetFormattedNumber` метод. Вторая задача сообщает свой текущий домен приложения, создает новый домен приложения, который создает экземпляры `DataRetriever` экземпляра в новый домен приложения и вызывает его `GetFormattedNumber` метод. Как видно из примера, текущий язык и региональные параметры сохранилась на прежнем уровне в вызывающий поток, первая задача и вторая задача при выполнении в домене основного приложения и втором домене приложения.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture4.cs#4)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture4.vb#4)]  
  
<a name="Serialization"></a>  
## <a name="cultureinfo-object-serialization"></a>Сериализация объектов CultureInfo  
 Когда <xref:System.Globalization.CultureInfo> сериализации объекта, фактически хранятся лишь <xref:System.Globalization.CultureInfo.Name%2A> и <xref:System.Globalization.CultureInfo.UseUserOverride%2A>. Он десериализуется успешно только в среде, где, <xref:System.Globalization.CultureInfo.Name%2A> имеет то же значение. В следующих трех примерах показано, почему это не всегда так:  
  
- Если <xref:System.Globalization.CultureInfo.CultureTypes%2A> свойство имеет значение <xref:System.Globalization.CultureTypes.InstalledWin32Cultures?displayProperty=nameWithType>, и если этот язык и региональные параметры появилась в определенной версии операционной системы Windows, он уже не сможете десериализацию в более ранней версии Windows. Например если язык и региональные параметры появилась в Windows 10, он не может быть десериализован в Windows 8.  
  
-   Если <xref:System.Globalization.CultureInfo.CultureTypes%2A> значение <xref:System.Globalization.CultureTypes.UserCustomCulture?displayProperty=nameWithType>и компьютер, на котором он десериализуется не поддерживает этот пользователь пользовательского языка и региональных параметров установки, невозможно десериализовать его.  
  
-   Если <xref:System.Globalization.CultureInfo.CultureTypes%2A> значение <xref:System.Globalization.CultureTypes.ReplacementCultures?displayProperty=nameWithType>и компьютер, на котором он десериализуется не поддерживает этот замены языка и региональных параметров, десериализуются тем же именем, но не все те же характеристики. Например en US — замены языка и региональных параметров на компьютере A, но не на компьютере B, если <xref:System.Globalization.CultureInfo> объект, ссылающийся на этот язык и региональные параметры сериализуется на компьютере A и на компьютере B, а затем нет пользовательские характеристики языка и региональных параметров передаются. Язык и региональные параметры десериализует успешно, но с другим значением.  
  
<a name="CPanel"></a>   
## <a name="control-panel-overrides"></a>Переопределяет панели управления  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем языковых и региональных параметров в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, кроме порта по умолчанию для языка и региональных параметров. Как правило в приложениях должны учитываться эти переопределения пользователем.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущего языка и региональных параметров Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство, свойства и <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
<a name="AlternateSort"></a>   
## <a name="alternate-sort-orders"></a>Альтернативные порядки сортировки  
 Некоторые культуры поддерживают больше одного порядка сортировки. Например:  
  
-   Испанский (Испания) языка и региональных параметров есть два порядка сортировки: порядок международная сортировка по умолчанию, а традиционный порядок сортировки. При создании экземпляра <xref:System.Globalization.CultureInfo> объект с именем язык и региональные параметры es-ES, используется международный порядок сортировки. При создании экземпляра <xref:System.Globalization.CultureInfo> объект с именем язык и региональные параметры es-ES-tradnl, использовать традиционный порядок сортировки.  
  
-   Культура zh-CN (китайский (упрощенное письмо, КНР)) поддерживает два порядка сортировки: по произношению (по умолчанию) и по числу штрихов. При создании экземпляра <xref:System.Globalization.CultureInfo> объект с именем языка и региональных параметров zh-CN, используется порядок сортировки по умолчанию. При создании экземпляра <xref:System.Globalization.CultureInfo> объекта с локальным идентификатором 0x00020804, строки будут отсортированы по числу штрихов.  
  
 В следующей таблице перечислены культуры, поддерживающие альтернативные порядки сортировки и идентификаторы для по умолчанию и активации альтернативных порядков сортировки.  
  
|Имя языка и региональных параметров|culture|Имя сортировки по умолчанию и идентификатор|Имя альтернативного сортировки и идентификатор|  
|------------------|-------------|--------------------------------------|----------------------------------------|  
|es-ES|Испанский (Испания)|International: 0x00000C0A|Традиционные: 0x0000040A|  
|zh-TW|Китайский (Тайвань)|Количество штрихов: 0x00000404|Bopomofo: 0x00030404|  
|zh-CN|Китайский (КНР)|Произношение имени: 0x00000804|Количество штрихов: 0x00020804|  
|zh-HK|Китайский (Гонконг)|Количество штрихов: 0x00000c04|Количество штрихов: 0x00020c04|  
|zh-SG|Китайский (Сингапур)|Произношение имени: 0x00001004|Количество штрихов: 0x00021004|  
|zh-MO|Китайский (МАКАО)|Произношение имени: 0x00001404|Количество штрихов: 0x00021404|  
|ja-JP|Японский (Япония)|По умолчанию: 0x00000411|Юникод: 0x00010411|  
|ko-KR|Корейский (Корея)|По умолчанию: 0x00000412|Корейский Xwansung - Юникода: 0x00010412|  
|de-DE|Немецкий (Германия)|Словарь: 0x00000407|Сортировка по телефонной книге DIN: 0x00010407|  
|hu-HU|Венгерский (Венгрия)|По умолчанию: 0x0000040e|Техническая сортировка: 0x0001040e|  
|ка GE|Грузинский (Грузия)|Традиционные: 0x00000437|Современная сортировка: 0x00010437|  
  
<a name="Windows"></a>   
## <a name="the-current-culture-and-uwp-apps"></a>Текущий язык и региональные параметры и приложениях универсальной платформы Windows  
 В приложениях универсальной платформы Windows (UWP) <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства доступны для чтения записи, так же, как они находятся в приложениях .NET Framework и .NET Core. Однако приложений универсальной платформы Windows распознает одного языка и региональных параметров. <xref:System.Globalization.CultureInfo.CurrentCulture%2A> И <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства сопоставляются с первым значением в [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) коллекции.  

В приложениях .NET Framework и .NET Core, текущий язык и региональные параметры — это параметр отдельного потока и <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства отражают языка и региональных параметров пользовательского интерфейса только текущего потока. В приложениях UWP текущего языка и региональных параметров сопоставляется [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) коллекции, которая является глобальным параметром. Установка <xref:System.Globalization.CultureInfo.CurrentCulture%2A> или <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство изменяет язык и региональные параметры для всего приложения; язык и региональные параметры нельзя задать для каждого потока.
  
## Examples  
 В следующем примере показано, как создать <xref:System.Globalization.CultureInfo> объект для Испанский (Испания) с международная сортировка, а вторая <xref:System.Globalization.CultureInfo> объект с традиционная сортировка.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
    <altmember cref="T:System.Globalization.RegionInfo" />
    <related type="Article" href="/globalization/index">Центр разработчиков go Global</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : int -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Предварительно определенный идентификатор <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.LCID" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или идентификатор языка и региональных параметров, свойственных только Windows.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных идентификатором.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Стандартные идентификаторы культуры, перечислены в [Справочник по API поддержки национальных языков (NLS)](https://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global.  
  
 В большинстве случаев `culture` параметр сопоставляется соответствующий идентификатор языкового стандарта National Language Support (NLS). Значение `culture` параметр становится значением <xref:System.Globalization.CultureInfo.LCID%2A> свойства нового <xref:System.Globalization.CultureInfo>.  
  
 Мы рекомендуем вызывать конструктор имя языкового стандарта <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, потому что предпочтительнее имени языкового стандарта LCID. Для пользовательских языковых стандартов требуется имя языкового стандарта.  
  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем языковых и региональных параметров в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, кроме порта по умолчанию для языка и региональных параметров. Если заданный идентификатор культуры совпадает с идентификатором текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий эти переопределения, включая пользовательские параметры для свойств <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo> (например, в том случае, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>) результаты методов и значения свойств не определены.  
  
 Если идентификатор указанного языка и региональных параметров не совпадает с идентификатором текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий значения по умолчанию для указанного языка и региональных параметров.  
  
 <xref:System.Globalization.CultureInfo.UseUserOverride%2A> Свойство всегда имеет значение `true`.  
  
 Например предположим, что арабский (Саудовская Аравия) является текущим языком Windows и пользователь заменил исламский календарь на григорианский.  
  
-   С помощью `CultureInfo("0x0401")` (язык и региональные параметры имя ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.GregorianCalendar> (это параметр пользователя) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `true`.  
  
-   С помощью `CultureInfo("0x041E")` (язык и региональные параметры имя th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th-TH) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> присваивается `true`.  
  
 Для языков, использующих евро, .NET Framework и Windows XP валюты по умолчанию устанавливается как евро. Однако более старые версии Windows не завершает работу. Таким образом Если пользователь более старой версии Windows не изменилось на валюту путем языковых и региональных параметров в панели управления, валюта могут быть неправильными. Чтобы использовать параметр по умолчанию .NET Framework для валюты, приложение должно использовать <xref:System.Globalization.CultureInfo> перегрузку конструктора, который принимает `useUserOverride` параметр и присвойте ему значение `false`.  
  
> [!NOTE]
>  Для обеспечения обратной совместимости, язык и региональные параметры, создано с помощью `culture` параметр 0x0004 и 0x7c04 будет иметь <xref:System.Globalization.CultureInfo.Name%2A> свойство zh-CHS и zh-CHT, соответственно. Вместо этого лучше создать язык и региональные параметры, используя текущие имена стандартных языка и региональных параметров zh-Hans и zh-Hant, если у вас нет причин для использования прежних имен.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="culture" /> меньше нуля.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="culture" /> не является допустимым идентификатором языка и региональных параметров. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] И создавать более ранних версий <see cref="T:System.ArgumentException" /> Если <paramref name="culture" /> не является допустимой культурой идентификатором. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], этот конструктор создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, запускаемых от [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии на Windows 7 или более поздней версии, метод пытается извлечь <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="culture" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры вызывает метод <see cref="T:System.Globalization.CultureNotFoundException" /> исключение.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : string -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Предварительно определенное имя <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.Name" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или имя языка и региональных параметров, свойственных только Windows. <paramref name="name" /> не учитывает регистр.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных именем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных названий языков, см. в разделе [Справочник по API поддержки национальных языков (NLS)](https://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10, `name` может быть любой допустимый тега языка BCP-47.  
  
 Если `name` — <xref:System.String.Empty?displayProperty=nameWithType>, конструктор создает экземпляр инвариантного языка и региональных параметров; это эквивалентно получение значения <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство.  
  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем языковых и региональных параметров в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, кроме порта по умолчанию для языка и региональных параметров. Если идентификатор языка и региональных параметров, связанные с `name` совпадений, идентификатор языка и региональных параметров текущего языка и региональных параметров Windows, то этот конструктор создает <xref:System.Globalization.CultureInfo> объект, который использует эти переопределения, включая пользовательские параметры для свойств <xref:System.Globalization.DateTimeFormatInfo>экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 Если идентификатор языка и региональных параметров, связанные с `name` не совпадает с идентификатором текущего языка и региональных параметров Windows, то этот конструктор создает <xref:System.Globalization.CultureInfo> объект, который использует значения по умолчанию для указанного языка и региональных параметров.  
  
 <xref:System.Globalization.CultureInfo.UseUserOverride%2A> Свойство всегда имеет значение `true`.  
  
 Например предположим, что текущий язык и региональные параметры Windows — Арабский (Саудовская Аравия) и пользователь изменил календаря из календаря на по григорианскому календарю.  
  
-   С помощью `CultureInfo("ar-SA")`, <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.GregorianCalendar> (это параметр пользователя) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> присваивается `true`.  
  
-   С помощью `CultureInfo("th-TH")`, <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th-TH) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> присваивается `true`.  
  
 <xref:System.Globalization.CultureInfo.LCID%2A> Свойства нового <xref:System.Globalization.CultureInfo> присваивается идентификатор языка и региональных параметров, связанный с указанным именем.  
  
 Для языков, использующих евро, .NET Framework и Windows XP валюты по умолчанию устанавливается как евро. Тем не менее более старых версиях Windows это сделать. Таким образом Если пользователь более старой версии Windows не изменилось на валюту путем языковых и региональных параметров в панели управления, валюта могут быть неправильными. Чтобы использовать параметр по умолчанию .NET Framework для валюты, приложение должно использовать <xref:System.Globalization.CultureInfo> перегрузку конструктора, который принимает `useUserOverride` параметр и присвойте ему значение `false`.  
  
   
  
## Examples  
 В следующем примере извлекается текущего языка и региональных параметров. Если это было присвоено имя, отличное от французский (Франция) языка и региональных параметров, он вызывает <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> конструктора для создания <xref:System.Globalization.CultureInfo> объект, представляющий французский (Франция) языка и региональных параметров и делает его языка и региональных параметров текущего потока. В противном случае он создает экземпляр <xref:System.Globalization.CultureInfo> объект, представляющий язык и региональные параметры французский (Люксембург) и делает его текущего языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> не является допустимым именем культуры. Дополнительные сведения см. в разделе "Примечания к вызывающим объектам".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] И создавать более ранних версий <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> не является допустимой культурой. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], этот конструктор создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, запускаемых от [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии на Windows 7 или более поздней версии, метод пытается извлечь <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="name" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры, а <paramref name="name" /> не является именем, с дополнительными символами или замены языка и региональных параметров, вызывает метод <see cref="T:System.Globalization.CultureNotFoundException" /> исключение.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture, bool useUserOverride);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : int * bool -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo (culture, useUserOverride)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="useUserOverride" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Предварительно определенный идентификатор <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.LCID" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или идентификатор языка и региональных параметров, свойственных только Windows.</param>
        <param name="useUserOverride">Логическое значение, определяющее применение параметров языка и региональных параметров, заданных пользователем (<see langword="true" />) или используемых по умолчанию (<see langword="false" />).</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных идентификатором, и логического значения, указывающего, нужно ли использовать выбранные пользователем параметры языка и региональных параметров в операционной системы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Стандартные идентификаторы культуры, перечислены в [Справочник по API поддержки национальных языков (NLS)](https://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global.  
  
 В большинстве случаев `culture` параметр сопоставляется соответствующий идентификатор языкового стандарта National Language Support (NLS). Значение `culture` параметр становится значением <xref:System.Globalization.CultureInfo.LCID%2A> свойства нового <xref:System.Globalization.CultureInfo>.  
  
 Мы рекомендуем вызывать конструктор имя языкового стандарта <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, потому что предпочтительнее имени языкового стандарта LCID. Для пользовательских языковых стандартов требуется имя языкового стандарта.  
  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем языковых и региональных параметров в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, кроме порта по умолчанию для языка и региональных параметров.  
  
 Приложения обычно должны разрешать переопределений пользователя. Обратите внимание, что запрещение переопределения не гарантирует стабильность данных; см. в записи блога [данных языка и региональных параметров не следует считать устойчивым (за исключением инвариантный)](https://go.microsoft.com/fwlink/?LinkId=156850).  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> свойству `true` и идентификатор указанного языка и региональных параметров совпадает с идентификатором текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий эти переопределения, включая пользовательские параметры для свойств из <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 В противном случае этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий значения по умолчанию для указанного языка и региональных параметров.  
  
 Значение `useUserOverride` параметр становится значением <xref:System.Globalization.CultureInfo.UseUserOverride%2A> свойство.  
  
 Например предположим, что арабский (Саудовская Аравия) — текущий язык и региональные параметры Windows и пользователь заменил исламский календарь для григорианского.  
  
-   С помощью `CultureInfo("0x0401", true)` (язык и региональные параметры имя ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.GregorianCalendar> (это параметр пользователя) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `true`.  
  
-   С помощью `CultureInfo("0x0401", false)` (язык и региональные параметры имя ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.HijriCalendar> (то есть календарь по умолчанию для ar-SA) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> присваивается `false`.  
  
-   С помощью `CultureInfo("0x041E", true)` (язык и региональные параметры имя th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th-TH) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> присваивается `true`.  
  
-   С помощью `CultureInfo("0x041E", false)` (язык и региональные параметры имя th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th-TH) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> присваивается `false`.  
  
 Для языков, использующих евро, .NET Framework и Windows XP валюты по умолчанию устанавливается как евро. Однако более старые версии Windows не завершает работу. Таким образом Если пользователь более старой версии Windows не изменилось на валюту путем языковых и региональных параметров в панели управления, валюта могут быть неправильными. Чтобы использовать параметр по умолчанию .NET Framework для валюты, приложение должно задать `useUserOverride` параметр `false`.  
  
> [!NOTE]
>  Для обеспечения обратной совместимости, язык и региональные параметры, создано с помощью `culture` параметр 0x0004 и 0x7c04 будет иметь <xref:System.Globalization.CultureInfo.Name%2A> свойство zh-CHS и zh-CHT, соответственно. Вместо этого лучше создать язык и региональные параметры, используя текущие имена стандартных языка и региональных параметров zh-Hans и zh-Hant, если у вас нет причин для использования прежних имен.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="culture" /> меньше нуля.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="culture" /> не является допустимым идентификатором языка и региональных параметров. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] И создавать более ранних версий <see cref="T:System.ArgumentException" /> Если <paramref name="culture" /> не является допустимой культурой идентификатором. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], этот конструктор создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, запускаемых от [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии на Windows 7 или более поздней версии, метод пытается извлечь <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="culture" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры вызывает метод <see cref="T:System.Globalization.CultureNotFoundException" /> исключение.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name, bool useUserOverride);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : string * bool -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo (name, useUserOverride)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="useUserOverride" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Предварительно определенное имя <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.Name" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или имя языка и региональных параметров, свойственных только Windows. <paramref name="name" /> не учитывает регистр.</param>
        <param name="useUserOverride">Логическое значение, определяющее применение параметров языка и региональных параметров, заданных пользователем (<see langword="true" />) или используемых по умолчанию (<see langword="false" />).</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных именем, и логического значения, указывающего, нужно ли использовать выбранные пользователем параметры языка и региональных параметров в операционной системе.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных названий языков, см. в разделе [Справочник по API поддержки национальных языков (NLS)](https://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10, `name` может быть любой допустимый тега языка BCP-47.  
  
 Если `name` — <xref:System.String.Empty?displayProperty=nameWithType>, конструктор создает экземпляр инвариантного языка и региональных параметров; это эквивалентно получение значения <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство.  
  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем языковых и региональных параметров в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, кроме порта по умолчанию для языка и региональных параметров.  
  
 Приложения обычно должны разрешать переопределений пользователя. Обратите внимание, что запрещение переопределения не гарантирует стабильность данных; см. в записи блога [данных языка и региональных параметров не следует считать устойчивым (за исключением инвариантный)](https://go.microsoft.com/fwlink/?LinkId=156850).  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> свойству `true` и идентификатор языка и региональных параметров, связанный с именем указанного языка и региональных параметров совпадает с идентификатором текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий такие переопределения включая пользовательские параметры для свойств <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 В противном случае этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий значения по умолчанию для указанного языка и региональных параметров.  
  
 Значение `useUserOverride` параметр становится значением <xref:System.Globalization.CultureInfo.UseUserOverride%2A> свойство.  
  
 Например предположим, что текущий язык и региональные параметры Windows — Арабский (Саудовская Аравия) и пользователь изменил календаря из календаря на по григорианскому календарю.  
  
-   С помощью `CultureInfo("ar-SA", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.GregorianCalendar> (это параметр пользователя) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> присваивается `true`.  
  
-   С помощью `CultureInfo("ar-SA", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.HijriCalendar> (то есть календарь по умолчанию для ar-SA) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> присваивается `false`.  
  
-   С помощью `CultureInfo("th-TH", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th-TH) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> присваивается `true`.  
  
-   С помощью `CultureInfo("th-TH", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> присваивается <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th-TH) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> присваивается `false`.  
  
 <xref:System.Globalization.CultureInfo.LCID%2A> Свойства нового <xref:System.Globalization.CultureInfo> присваивается идентификатор языка и региональных параметров, связанный с указанным именем.  
  
 Для языков, использующих евро, .NET Framework и Windows XP валюты по умолчанию устанавливается как евро. Тем не менее более старых версиях Windows это сделать. Таким образом Если пользователь более старой версии Windows не изменилось на валюту путем языковых и региональных параметров в панели управления, валюта могут быть неправильными. Чтобы использовать параметр по умолчанию .NET Framework для валюты, приложение должно задать `useUserOverride` параметр `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> не является допустимым именем культуры. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] И создавать более ранних версий <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> не является допустимой культурой. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], этот конструктор создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, запускаемых от [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии на Windows 7 или более поздней версии, метод пытается извлечь <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="name" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры, а <paramref name="name" /> не является именем, с дополнительными символами или замены языка и региональных параметров, вызывает метод <see cref="T:System.Globalization.CultureNotFoundException" /> исключение.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar Calendar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar" Usage="System.Globalization.CultureInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает календарь, используемый по умолчанию для языка и региональных параметров.</summary>
        <value>Объект <see cref="T:System.Globalization.Calendar" />, представляющий календарь, используемый по умолчанию в языке и региональных параметрах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем языковых и региональных параметров в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, кроме порта по умолчанию для языка и региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущего языка и региональных параметров Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство, свойства и <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 Таким образом Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> является `true`, значение этого свойства может отличаться от календаря по умолчанию, языка и региональных параметров.  
  
 Приложения изменяется календарь, используемый текущим <xref:System.Globalization.CultureInfo> , задав <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, который является экземпляром <xref:System.Globalization.DateTimeFormatInfo> класса. Новый календарь должен быть одним из календарей, перечисленных в <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> содержит и другие свойства, определяющие форматирование даты и времени, связанные с <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCachedData();" />
      <MemberSignature Language="F#" Value="member this.ClearCachedData : unit -&gt; unit" Usage="cultureInfo.ClearCachedData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет кешированные данные, связанные с языком и региональными параметрами.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сведения, такие как шаблоны языка и региональных параметров и формат по умолчанию, кэшируются при первом их запросе. Что данные могут измениться в течение жизненного цикла <xref:System.AppDomain>, например, в том случае, если пользователь изменяет язык и региональные параметры часть панели управления. Тем не менее <xref:System.Globalization.CultureInfo> класс не определяет автоматически изменения параметров системы.  
  
 <xref:System.Globalization.CultureInfo.ClearCachedData%2A> Метод очищает кэш <xref:System.Globalization.CultureInfo> объекты, создаваемые <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> и обновляет данные в <xref:System.Globalization.CultureInfo.CurrentCulture%2A>, <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>, и <xref:System.Globalization.RegionInfo.CurrentRegion%2A> свойств в зависимости от текущих параметров системы.  
  
 <xref:System.Globalization.CultureInfo.ClearCachedData%2A> Метод не обновлять данные в <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> свойства для существующих потоков. Однако последующие потоки будут иметь любые новые <xref:System.Globalization.CultureInfo> значения свойств.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="cultureInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает копию текущего поставщика <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Копия текущего <see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клон доступен для записи даже в том случае, если исходный <xref:System.Globalization.CultureInfo> доступен только для чтения. Таким образом можно изменить свойства копии.  
  
 Неполная копия объекта является копией только данного объекта. Если объект содержит ссылки на другие объекты, неполная копия не приводит к созданию копии объектов, который указывает ссылка. Он ссылается на исходные объекты вместо этого. Напротив глубокую копию объекта создает копию объекта и копию всего содержимого, прямо или косвенно ссылается этот объект.  
  
 <xref:System.Globalization.CultureInfo.Clone%2A> Метод создает расширенные неполную копию. Объекты, возвращенные <xref:System.Globalization.CultureInfo.NumberFormat%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.TextInfo%2A>, и <xref:System.Globalization.CultureInfo.Calendar%2A> свойства также копируются. Следовательно, клонированный <xref:System.Globalization.CultureInfo> объекта можно изменить его свойства копируются без влияния на исходный <xref:System.Globalization.CultureInfo> объекта.  
  
   
  
## Examples  
 В следующем примере кода показано, что CultureInfo.Clone копирует также <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo> экземпляры, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CompareInfo CompareInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Globalization.CompareInfo" Usage="System.Globalization.CultureInfo.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:System.Globalization.CompareInfo" /> для определения способа сравнения строк в данном языке и региональных параметрах.</summary>
        <value><see cref="T:System.Globalization.CompareInfo" /> для определения способа сравнения строк в данном языке и региональных параметрах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo.CompareInfo%2A> Возвращает <xref:System.Globalization.CompareInfo> объект, предоставляющий сведения об особенностях языка и региональных параметров, используемый в операциях сравнения зависящих от языка и региональных параметров сортировки и строку.  
  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем языковых и региональных параметров в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, кроме порта по умолчанию для языка и региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущего языка и региональных параметров Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство, свойства и <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Globalization.CultureInfo> для Испанский (Испания) с международная сортировка, а вторая <xref:System.Globalization.CultureInfo> с традиционная сортировка.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateSpecificCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CreateSpecificCulture (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo CreateSpecificCulture(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSpecificCulture (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ CreateSpecificCulture(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CreateSpecificCulture : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.CreateSpecificCulture name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Предварительно определенное имя <see cref="T:System.Globalization.CultureInfo" /> или имя существующего объекта <see cref="T:System.Globalization.CultureInfo" />. <paramref name="name" /> не учитывает регистр.</param>
        <summary>Создает объект <see cref="T:System.Globalization.CultureInfo" />, который представляет определенный язык и региональные параметры, соответствующие заданному имени.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, который может представлять перечисленные ниже параметры. 
Инвариантный язык и региональные параметры, если <paramref name="name" /> является пустой строкой ("").  
  
-или- 
определенный язык и региональные параметры, связанные с <paramref name="name" />, если <paramref name="name" /> является нейтральным языком и региональными параметрами.  
  
-или- 
Язык и региональные параметры, указанные в параметре <paramref name="name" />, если <paramref name="name" /> уже является определенным языком и региональными параметрами.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> Метод создает оболочку для вызова <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> конструктор.  
  
> [!NOTE]
>  Список предварительно определенных названий языков, см. в разделе [Справочник по API поддержки национальных языков (NLS)](https://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10, `name` может быть любой допустимый тега языка BCP-47.  
  
 Языки и региональные параметры сгруппированы в три набора: инвариантного языка и региональных параметров, нейтральные и определенные языки и региональные параметры. Дополнительные сведения см. в описании <xref:System.Globalization.CultureInfo> класса.  
  
 Если идентификатор языка и региональных параметров определенного языка и региональных параметров, возвращаемого этим методом совпадает с идентификатором текущего языка и региональных параметров Windows, этот метод создает <xref:System.Globalization.CultureInfo> переопределяет объект, который использует Windows язык и региональные параметры. Переопределения включают пользовательские параметры для свойств <xref:System.Globalization.DateTimeFormatInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство и <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Для создания экземпляра <xref:System.Globalization.CultureInfo> объекта, что имеет значения по умолчанию параметры языка и региональных параметров, а не переопределяет пользователя, вызовите <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> конструктор со значением `false` для `useUserOverride` аргумент.  
  
 Несмотря на то что <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> имя метода содержит термин «Связанных», помните, что данные языка и региональных параметров могут изменяться от версии, или из-за пользовательских языков и региональных параметров или из-за переопределения пользователем. Используйте инвариантного языка и региональных параметров или двоичный или основных формы для сохранения данных.  
  
   
  
## Examples  
 В следующем примере извлекается массив <xref:System.Globalization.CultureInfo> объекты, представляющие нейтральные культуры из <xref:System.Globalization.CultureInfo.GetCultures%2A> метод и сортирует массив. Когда он используется для итерации элементов в массиве, он передает имя каждого нейтрального языка и региональных параметров <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> и отображает имя определенного языка и региональных параметров, возвращаемых методом.  
  
> [!NOTE]
>  В этом примере имена языка и региональных параметров zh-CHS и zh-CHT. Тем не менее приложений, предназначенных для Windows Vista и более поздней версии следует использовать zh-Hans вместо zh-CHS и zh-Hant вместо zh-CHT. zh-Hans и zh-Hant представляют текущий стандарт и должны использоваться, если у вас нет причин для использования прежних имен.  
>   
>  Кроме того, обратите внимание, что результаты выполнения примера может отличаться в установке тайваньский Windows, в котором входные данные, китайский (традиционный) нейтрального языка и региональных параметров (zh, zh-CHT или zh-Hant) вернет zh-TW.  
  
 [!code-csharp[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/CS/createspecificculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/VB/createspecificculture2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> не является допустимым именем культуры.  
  
-или- 
Язык и региональные параметры, заданные параметром <paramref name="name" />, не имеет соответствующего ему определенного языка и региональных параметров.</exception>
        <exception cref="T:System.NullReferenceException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] И создавать более ранних версий <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> не является допустимой культурой. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], этот метод вызывает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureTypes : System.Globalization.CultureTypes" Usage="System.Globalization.CultureInfo.CultureTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает типы языков и региональных параметров, относящихся к текущему объекту <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Побитовая комбинация одного или нескольких значений <see cref="T:System.Globalization.CultureTypes" />. Значение по умолчанию отсутствует.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере демонстрируется <xref:System.Globalization.CultureTypes> перечисления и <xref:System.Globalization.CultureInfo.CultureTypes%2A> свойство.  
  
 [!code-csharp[system.globalization.cultureTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cs/ct.cs#1)]
 [!code-vb[system.globalization.cultureTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureTypes/vb/ct.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Globalization.CultureInfo" />, который представляет язык и региональные параметры, используемые текущим потоком.</summary>
        <value>Объект, представляющий язык и региональные параметры, используемые текущим потоком.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo> Объект, возвращаемый этим свойством и связанных с ним объектов определить формат по умолчанию для дат, времени, чисел, денежных значений, сортировки порядок текста, регистр соглашения и операции сравнения строк.  
  
 Текущий язык и региональные параметры — это свойство выполняющегося потока. Получение значения <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство эквивалентна более производительных извлечения <xref:System.Globalization.CultureInfo> объект, возвращаемый `Thread.CurrentThread.CurrentCulture` свойство.
  
> [!NOTE]
>  В .NET Framework 4.5.2 и более ранних версиях <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство доступно только для чтения;  то есть можно получить значение свойства, но задать его невозможно. Чтобы изменить текущий язык и региональные параметры, назначаемые <xref:System.Globalization.CultureInfo> , представляющий новый язык и региональные параметры для `Thread.CurrentThread.CurrentCulture` свойство. Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойства чтения и записи; как можно задать и получить значение свойства. Если задано значение свойства <xref:System.Globalization.CultureInfo> , представляющий новую культуру, значение `Thread.CurrentThread.CurrentCulture` повлечет за собой изменение.  
  
 Содержание  
  
 [Как определяется язык и региональные параметры потока](#ThreadCulture)   
 [Получение текущего языка и региональных параметров](#Getting)   
 [Явным образом задав свойство CurrentCulture](#ExplicitSetting)   
 [Текущий язык и региональные параметры и переопределений пользователя](#Overrides)   
 [Язык и региональные параметры и приложения Windows](#WindowsAndCurr)  
  
<a name="ThreadCulture"></a>   
## <a name="how-a-threads-culture-is-determined"></a>Как определяется язык и региональные параметры потока  
 При запуске потока его языка и региональных параметров сначала определяется следующим образом:  
  
-   Путем получения языка и региональных параметров, который задается параметром <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство в домене приложения, в котором выполняется поток, если значение свойства не `null`.  
  
-   Если поток пула потоков, которая выполняет асинхронную операцию, на основе задач и целевых объектов приложения [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздней версии платформы .NET Framework, его языка и региональных параметров определяется язык и региональные параметры вызывающего потока.  Следующий пример изменяет текущий язык и региональные параметры на португальском (Бразилия) и запускает шести задач, каждая из которых отображается его идентификатор потока, свой идентификатор и его текущего языка и региональных параметров. Каждая из задач (и потоки) унаследовал язык и региональные параметры вызывающего потока.  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Async1.vb#14)]  
  
     Дополнительные сведения см. в разделе «Язык и региональные параметры и асинхронные операции на основе задач» в <xref:System.Globalization.CultureInfo> разделе.  
  
-   Путем вызова Windows `GetUserDefaultLocaleName` функции.  
  
 Обратите внимание, что если задать определенные язык и региональные параметры, отличный от языка и региональных параметров установки системы или языка и региональных параметров пользователя и запуска приложения несколько потоков, текущий язык и региональные параметры из этих потоков языка и региональных параметров, который возвращается `GetUserDefaultLocaleName` функции, если вы не назначите язык и региональные параметры <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство в домене приложения, в котором выполняется поток.  
  
 Дополнительные сведения о том, как определяется язык и региональные параметры потока см. в разделе «Язык и региональные параметры и потоков», в <xref:System.Globalization.CultureInfo> справочной странице.  
  
<a name="Getting"></a>   
## <a name="getting-the-current-culture"></a>Получение текущего языка и региональных параметров  
 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> Свойство — это параметр отдельного потока; то есть каждый поток может иметь свой собственный язык и региональные параметры. Получить язык и региональные параметры текущего потока, получая значение <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойства, как показано следующем примере.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Get1.vb#5)]  
  
 Также можно получить значение языка и региональных параметров текущего потока, из <xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType> свойство.  
  
<a name="ExplicitSetting"></a>   
## <a name="explicitly-setting-the-currentculture-property"></a>Явным образом задав свойство CurrentCulture  
 Начать с раздела [!INCLUDE[net_v46](~/includes/net-v46-md.md)], чтобы изменить язык и региональные параметры, который используется существующий поток, можно задать <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойства для нового языка и региональных параметров. Если явным образом изменить язык и региональные параметры потока, таким образом, изменение будет повторяться, если поток за пределами домена приложения. В следующем примере изменяется текущий язык потока Голландский (Нидерланды). Здесь также показано, что, если текущий поток пересекает границы домена приложения, его текущего языка и региональных параметров останется измененной.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/changeculture11.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/changeculture11.vb#11)]  
  
> [!NOTE]
>  Изменение языка и региональных параметров с помощью <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойства требуется <xref:System.Security.Permissions.SecurityPermission> разрешение с <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> задано значение. Управление потоками представляет опасность, поскольку состояние безопасности, связанные с потоками. Таким образом это разрешение должно предоставляться только надежному коду и только в случае необходимости. Невозможно изменить язык и региональные параметры потока в коде с частичным доверием.  
  
 Начиная с [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], можно явным образом изменить текущий язык потока для конкретного языка и региональных параметров (например, французский (Канада)) или нейтрального языка и региональных параметров (например, французский). Когда <xref:System.Globalization.CultureInfo> представляет нейтральный язык и региональные параметры, значения <xref:System.Globalization.CultureInfo> свойства, такие как <xref:System.Globalization.CultureInfo.Calendar%2A>, <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.NumberFormat%2A>, и <xref:System.Globalization.CultureInfo.TextInfo%2A> отражают определенного языка и региональных параметров, с которым связан нейтральный язык и региональные параметры. Например главный язык и региональные параметры для английского языка, является английский (США); главный язык и региональные параметры для немецкого языка и региональных параметров является немецкий (Германия). В следующем примере показано различие при форматировании текущего языка и региональных параметров, настроенное для определенного языка и региональных параметров, французский (Канада) и нейтральные язык и региональные параметры, французский.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/specific12.cs#12)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/specific12.vb#12)]  
  
 Можно также использовать <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство вместе с <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> задаваемое свойство <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство приложения ASP.NET для пользователя предпочтительного языка и региональных параметров, как показано в следующем примере.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/aspculture13.cs#13)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/aspculture13.vb#13)]  
  
<a name="Overrides"></a>   
## <a name="the-current-culture-and-user-overrides"></a>Текущий язык и региональные параметры и переопределений пользователя  
 Windows позволяет пользователю переопределить стандартные значения свойств из <xref:System.Globalization.CultureInfo> объекта и связанных с ним объектов с помощью **язык и региональные стандарты** панели управления. <xref:System.Globalization.CultureInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство отражает переопределение этих пользователя в следующих случаях:  
  
-   Если текущий язык потока неявно устанавливается с Windows `GetUserDefaultLocaleName` функции.  
  
-   Если текущий язык потока определяется <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство соответствует культуру текущей системы Windows.  
  
-   Если текущий язык потока явно задано значение языка и региональных параметров, возвращаемых <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> метод и что языка и региональных параметров соответствует культуру текущей системы Windows.  
  
-   Если текущий язык потока явно задано значение языка и региональных параметров, создается путем <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> конструктор, и что языка и региональных параметров соответствует культуру текущей системы Windows.  
  
 В некоторых случаях, особенно для серверных приложений, установку текущей культуры <xref:System.Globalization.CultureInfo> , который отражает переопределений пользователя может быть нежелательно. Вместо этого можно задать язык и региональные параметры текущего потока <xref:System.Globalization.CultureInfo> переопределяет объект, который не отражает пользователя одним из следующих способов:  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> конструктор со значением `false` для `useUserOverride` аргумент.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> метод, который возвращает кэшированный, только для чтения <xref:System.Globalization.CultureInfo> объекта.  
  
<a name="WindowsAndCurr"></a>   
## <a name="the-current-culture-and-uwp-apps"></a>Текущий язык и региональные параметры и приложениях универсальной платформы Windows  
 В приложениях универсальной платформы Windows (UWP) <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство доступно для чтения записи, так же как и в приложениях .NET Framework и .NET Core; его можно использовать для получения и для задания текущего языка и региональных параметров. Тем не менее приложения UWP не различают текущего языка и региональных параметров и текущий язык и региональные параметры пользовательского интерфейса. <xref:System.Globalization.CultureInfo.CurrentCulture%2A> И <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства сопоставляются с первым значением в [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) коллекции.  

В приложениях .NET Framework и .NET Core, текущий язык и региональные параметры — это параметр отдельного потока и <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство отражает язык и региональные параметры текущего потока только. В приложениях UWP текущего языка и региональных параметров сопоставляется [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) свойство, которое является глобальным параметром. Параметр <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство изменяет язык и региональные параметры для всего приложения; язык и региональные параметры нельзя задать для каждого потока.
  
## Examples  
 В следующем примере демонстрируется изменение <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> текущего потока.  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для установки текущего языка и региональных параметров. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></permission>
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
        <altmember cref="T:System.Security.Permissions.SecurityPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.CurrentUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Globalization.CultureInfo" />, представляющий текущий язык и региональные параметры пользовательского интерфейса, используемые диспетчером ресурсов для поиска ресурсов, связанных с конкретным языком и региональными параметрами, во время выполнения.</summary>
        <value>Язык и региональные параметры, используемые диспетчером ресурсов для поиска ресурсов, связанных с языком и региональными параметрами, во время выполнения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текущий язык и региональные параметры пользовательского интерфейса — это свойство для каждого потока. То есть каждый поток имеет свой собственный текущий язык и региональные параметры пользовательского интерфейса. Это свойство эквивалентно получению или, начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], задание <xref:System.Globalization.CultureInfo> объект, присвоенный `System.Threading.Thread.CurrentThread.CurrentUICulture` свойство. При запуске потока региональные параметры пользовательского интерфейса сначала определяется следующим образом:  
  
-   Путем получения языка и региональных параметров, который задается параметром <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойство в домене приложения, в котором выполняется поток, если значение свойства не `null`.  
  
-   Если поток пула потоков, которая выполняет асинхронную операцию, на основе задач и целевых объектов приложения [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздней версии платформы .NET Framework, региональные параметры пользовательского интерфейса определяется язык и региональные параметры пользовательского интерфейса вызывающего потока.  Следующий пример изменяет текущий язык и региональные параметры пользовательского интерфейса на португальском (Бразилия) и запускает шести задач, каждая из которых отображается его идентификатор потока, свой идентификатор и его текущего языка и региональных параметров пользовательского интерфейса. Каждая из задач (и потоки) унаследовал языка и региональных параметров пользовательского интерфейса вызывающего потока.  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Async1.vb#14)]  
  
     Дополнительные сведения см. в разделе «Язык и региональные параметры и асинхронные операции на основе задач» в <xref:System.Globalization.CultureInfo> разделе.  
  
-   Путем вызова Windows `GetUserDefaultUILanguage` функции.  
  
> [!NOTE]
>  В [!INCLUDE[Compact](~/includes/compact-md.md)], <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство доступно только для чтения. Текущий язык и региональные параметры пользовательского интерфейса зависит от региональных параметров системы и не может изменяться программно.  
  
 Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], чтобы изменить язык и региональные параметры пользователя интерфейс, используемый потоком, задайте <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойства для нового языка и региональных параметров. Если явным образом изменить культуру потока пользовательского интерфейса таким образом, изменение будет повторяться, если поток за пределами домена приложения.  
  
> [!NOTE]
>  В .NET Framework 4.5.2 и более ранних версиях <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство доступно только для чтения;  то есть можно получить значение свойства, но задать его невозможно. Чтобы изменить текущий язык и региональные параметры пользовательского интерфейса, назначаемые <xref:System.Globalization.CultureInfo> , представляющий новый язык и региональные параметры пользовательского интерфейса для `Thread.CurrentThread.CurrentUICulture` свойство. Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойства чтения и записи; как можно задать и получить значение свойства. Если задано значение свойства <xref:System.Globalization.CultureInfo> , представляющий новую культуру, значение `Thread.CurrentThread.CurrentCulture` повлечет за собой изменение.  
  
 Содержание  
  
 [Получение текущего языка и региональных параметров пользовательского интерфейса](#Getting)   
 [Явное задание текущего языка и региональных параметров пользовательского интерфейса](#Explicit)   
 [Неявное задание текущего языка и региональных параметров пользовательского интерфейса](#Implicit)   
 [Вопросы безопасности](#Security)   
 [В текущий язык и региональные параметры пользовательского интерфейса и Windows apps](#WindowsAndCurrUI)  
  
<a name="Getting"></a>   
## <a name="getting-the-current-ui-culture"></a>Получение текущего языка и региональных параметров пользовательского интерфейса  
 <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> Свойство — это параметр отдельного потока; то есть каждый поток может иметь свой собственный для языка и региональных параметров пользовательского интерфейса. Получить язык и региональные параметры пользовательского интерфейса текущего потока, получая значение <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойства, как показано следующем примере.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Get1.vb#5)]  
  
 Также можно получить значение языка и региональных параметров пользовательского интерфейса текущего потока из <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойство.  
  
<a name="Explicit"></a>   
## <a name="explicitly-setting-the-current-ui-culture"></a>Явное задание текущего языка и региональных параметров пользовательского интерфейса  
 Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], можно изменить текущую культуру UI, присваивая <xref:System.Globalization.CultureInfo> , представляющий новый язык и региональные параметры для <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство. Текущий язык и региональные параметры пользовательского интерфейса можно задать для конкретной культуры (например, en US и de-DE) или для нейтрального языка и региональных параметров (например, en или de). В следующем примере текущий язык и региональные параметры пользовательского интерфейса для fr-FR "или" французский (Франция).  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/currentuiculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/currentuiculture1.vb#1)]  
  
 В многопоточном приложении, можно явно задать язык и региональные параметры пользовательского интерфейса из любого потока, назначив <xref:System.Globalization.CultureInfo> объект, представляющий этот язык для потока <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойство. Если поток, язык и региональные параметры, нужно задать текущий поток, можно назначить новый язык и региональные параметры для <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство. Если язык и региональные параметры пользовательского интерфейса потока задано явным образом, что поток сохранит же языка и региональных параметров, даже в том случае, если оно пересекает границы домена приложения и выполняет код в другом домене приложения.  
  
<a name="Implicit"></a>   
## <a name="implicitly-setting-the-current-ui-culture"></a>Неявное задание текущего языка и региональных параметров пользовательского интерфейса  
 Поток, включая основного потока приложения, при первом создании по умолчанию, его текущего языка и региональных параметров пользовательского интерфейса устанавливается следующим образом:  
  
-   С помощью языка и региональных параметров, определяемых <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства для текущего домена приложения, если значение свойства не `null`.  
  
-   С помощью языка и региональных параметров системы по умолчанию. В системах, использующих операционную систему Windows, среда CLR вызывает Windows `GetUserDefaultUILanguage` функцию для задания текущего языка и региональных параметров пользовательского интерфейса. `GetUserDefaultUILanguage` Возвращает язык по умолчанию, установленные пользователем. Если пользователь не задал язык пользовательского интерфейса по умолчанию, он возвращает язык и региональные параметры, первоначально установленных в системе.  
  
 Если поток за пределами приложения и выполняет код в другом домене приложения, его языка и региональных параметров определяется таким же образом, что только что созданному потоку.  
  
 Обратите внимание, что если задать конкретной культуры пользовательского интерфейса, который отличается от языка установки системы или предпочитаемый язык и региональные параметры пользовательского интерфейса пользователя и запуска приложения несколько потоков, текущий язык и региональные параметры пользовательского интерфейса из этих потоков язык и региональные параметры, возвращаемые `GetUserDefaultUILanguage`работать, если вы не назначите язык и региональные параметры <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойство в домене приложения, в котором выполняется поток.  
  
<a name="Security"></a>   
## <a name="security-considerations"></a>Вопросы безопасности  
 Изменение языка и региональных параметров текущего потока требует <xref:System.Security.Permissions.SecurityPermission> разрешение с <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> задано значение.  
  
> [!CAUTION]
>  Управление потоками представляет опасность, поскольку состояние безопасности, связанные с потоками. Таким образом это разрешение должно предоставляться только надежному коду и только в случае необходимости. Невозможно изменить язык и региональные параметры потока в коде с частичным доверием.  
  
<a name="WindowsAndCurrUI"></a>   
## <a name="the-current-ui-culture-and-uwp-apps"></a>Текущий язык и региональные параметры пользовательского интерфейса и приложений универсальной платформы Windows  
 
В приложениях универсальной платформы Windows (UWP) <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство доступно для чтения записи, так же как и в приложениях .NET Framework и .NET Core; его можно использовать для получения и для задания текущего языка и региональных параметров. Тем не менее приложения UWP не различают текущего языка и региональных параметров и текущий язык и региональные параметры пользовательского интерфейса. <xref:System.Globalization.CultureInfo.CurrentCulture%2A> И <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства сопоставляются с первым значением в [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) коллекции.

В приложениях .NET Framework и .NET Core, текущий язык и региональные параметры пользовательского интерфейса — это параметр отдельного потока и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство отражает язык и региональные параметры пользовательского интерфейса только текущего потока. В приложениях UWP текущего языка и региональных параметров сопоставляется [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) свойство, которое является глобальным параметром. Параметр <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство изменяет язык и региональные параметры для всего приложения; язык и региональные параметры нельзя задать для каждого потока.    
  
## Examples  
 В следующем примере кода показано, как изменить <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> текущего потока.  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойству присвоено имя языка и региональных параметров, которое не может использоваться для нахождения файла ресурсов. Имена файлов ресурсов могут содержать только буквы, цифры, дефисы или символы подчеркивания.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для установки текущего языка и региональных параметров пользовательского интерфейса. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></permission>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.DateTimeFormatInfo DateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo DateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::DateTimeFormatInfo ^ DateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeFormat : System.Globalization.DateTimeFormatInfo with get, set" Usage="System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Globalization.DateTimeFormatInfo" />, определяющий формат отображения даты и времени, соответствующий языку и региональным параметрам.</summary>
        <value><see cref="T:System.Globalization.DateTimeFormatInfo" />, определяющий формат отображения даты и времени, соответствующий языку и региональным параметрам.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a>Overrides  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем языковых и региональных параметров в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, кроме порта по умолчанию для языка и региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущего языка и региональных параметров Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство, свойства и <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 Значение <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство и <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство не вычисляется, пока приложение обращается к свойству. Если пользователь может изменить текущий язык и региональные параметры для нового языка и региональных параметров, приложение работает, и затем приложение получает доступ к <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> или <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство, приложение получает значения по умолчанию для нового языка и региональных параметров вместо переопределения исходный язык и региональные параметры. Чтобы сохранить переопределения для исходного текущий язык и региональные параметры, приложения должны получать доступ к <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства перед изменением текущего языка и региональных параметров.  
  
   
  
## Examples  
 В следующем примере кода показано, что CultureInfo.Clone копирует также <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo> экземпляры, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Задано свойство <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> или любое из свойств <see cref="T:System.Globalization.DateTimeFormatInfo" />, а объект <see cref="T:System.Globalization.CultureInfo" /> доступен только для чтения.</exception>
        <block subset="none" type="usage"><para>Если <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> — <see cref="T:System.Globalization.TaiwanCalendar" /> , но <see cref="P:System.Threading.Thread.CurrentCulture" /> не присвоено значение китайский (Тайвань), с именем zh-TW, затем <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращается пустая строка (»»).</para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultThreadCurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает язык и региональные параметры, используемые по умолчанию для потоков в текущем домене приложения.</summary>
        <value>Язык и региональные параметры по умолчанию для потоков в текущем домене приложения или значение <see langword="null" />, если текущий язык и региональные параметры системы являются заданными по умолчанию для потока в домене приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] и предыдущих версий, по умолчанию язык и региональные параметры всех потоков и региональными параметрами системы Windows. Для приложений, которых текущего языка и региональных параметров отличается от языка и региональных параметров по умолчанию системы такое поведение часто является нежелательным. В [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство позволяет приложению определить язык и региональные параметры по умолчанию все потоки в домене приложения.  
  
> [!IMPORTANT]
>  Если вы не задали явным образом язык и региональные параметры существующих потоков, выполняющихся в домене приложения, установка <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> повлечет за собой изменение языка и региональных параметров из этих потоков. Тем не менее, если эти потоки выполняются в другом домене приложения, их язык и региональные параметры определяются <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойства в этом домене приложения или, если нет значения по умолчанию определяется языком и региональными параметрами системы по умолчанию. По этой причине мы рекомендуем всегда явно задавать язык и региональные параметры потока основного приложения, а не полагаться на <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство, чтобы определить язык и региональные параметры потока основного приложения.  
  
 Если он установлен явно, значение <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство `null`, и язык и региональные параметры потоков в домене приложения, которые не были присвоены культуру явные определяется язык и региональные параметры по умолчанию Windows.  
  
 Дополнительные сведения о языков и региональных параметров, потоков и доменов приложений, см. в разделе «Язык и региональные параметры и потоки» и «язык и региональные параметры и домены приложений» разделы в <xref:System.Globalization.CultureInfo> справочной странице.  
  
   
  
## Examples  
 Следующий пример иллюстрирует поведение по умолчанию платформы .NET Framework при определении текущего языка и региональных параметров нового потока. Во время запуска в примере текущий язык и региональные параметры и текущий язык и региональные параметры пользовательского интерфейса на французский (Франция) во всех системах, за исключением тех, на которых язык и региональные параметры по умолчанию уже французский (Франция). Если язык и региональные параметры по умолчанию уже французский (Франция), код устанавливает текущий язык и региональные параметры и текущий язык и региональные параметры пользовательского интерфейса на английский (США). Затем он вызывает `DisplayRandomNumbers` подпрограмму, которая создает три случайных чисел и отображает их в виде значения валюты. Затем он создает новый поток, который также выполняет `DisplayRandomNumbers` подпрограммы.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture1.vb#1)]  
  
 Как показывают выходные данные из примера, если пример выполняется на компьютере, языком и региональными параметрами системы является английский (США), основной поток отображает его значения валюты с использованием соглашений о форматировании французский (Франция) языка и региональных параметров. Тем не менее так как язык и региональные параметры рабочего потока является производным от текущих региональных параметров системы Windows, а не текущего языка и региональных параметров приложения, рабочих потоков отображает его значения валюты с использованием соглашений о форматировании для английского языка (США).  
  
 В следующем примере используется <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойств, чтобы определить текущий язык и региональные параметры текущего пользовательского интерфейса нового потока приложения. Во время запуска в примере текущий язык и региональные параметры и текущий язык и региональные параметры пользовательского интерфейса на французский (Франция) во всех системах, за исключением тех, на которых язык и региональные параметры по умолчанию уже французский (Франция). Если язык и региональные параметры по умолчанию уже французский (Франция), он устанавливает текущий язык и региональные параметры и текущий язык и региональные параметры пользовательского интерфейса английский (США). Затем он вызывает `DisplayRandomNumbers` подпрограмму, которая создает три случайных чисел и отображает их в виде значения валюты. Затем он создает новый поток, который также выполняет `DisplayRandomNumbers` подпрограммы.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture2.vb#2)]  
  
 Как показывают выходные данные из примера, если пример выполняется на компьютере, языком и региональными параметрами системы является английский (США), основной поток и рабочим потоком отображения их значения валюты с использованием соглашений о форматировании французский (Франция) языка и региональных параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultThreadCurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает язык и региональные параметры пользовательского интерфейса, используемые по умолчанию для потоков в текущем домене приложения.</summary>
        <value>Язык и региональные параметры по умолчанию пользовательского интерфейса для потоков в текущем домене приложения или значение <see langword="null" />, если текущий язык и региональные параметры пользовательского интерфейса системы являются заданными по умолчанию для потока пользовательского интерфейса в домене приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] и предыдущих версий, по умолчанию язык и региональные параметры пользовательского интерфейса всех потоков и региональными параметрами системы Windows. Для приложений, которых текущего языка и региональных параметров пользовательского интерфейса отличается от языка и региональных параметров по умолчанию системы такое поведение часто является нежелательным. В [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойство позволяет определить язык по умолчанию, все потоки в домене приложения.  
  
> [!IMPORTANT]
>  Если вы не задали явным образом язык и региональные параметры пользовательского интерфейса из существующих потоков, выполняющихся в домене приложения, установка <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> повлечет за собой изменение языка и региональных параметров из этих потоков. Тем не менее, если эти потоки выполняются в другом домене приложения, их язык и региональные параметры определяются <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства в этом домене приложения или, если нет значения по умолчанию определяется языком и региональными параметрами системы по умолчанию. По этой причине мы рекомендуем всегда явно задать язык и региональные параметры потока основного приложения и не следует полагаться на <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойство, чтобы определить язык и региональные параметры потока основного приложения.  
  
 Если он установлен явно, значение <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойство `null`, и текущий языковой стандарт всех потоков в домене приложения, которые не были присвоены культуру явные определяется язык и региональные параметры по умолчанию Windows.  
  
 Дополнительные сведения о языков и региональных параметров, потоков и доменов приложений, см. в разделе «Язык и региональные параметры и потоки» и «язык и региональные параметры и домены приложений» разделы в <xref:System.Globalization.CultureInfo> справочной странице.  
  
   
  
## Examples  
 Следующий пример иллюстрирует поведение по умолчанию платформы .NET Framework при определении текущего языка и региональных параметров нового потока. Этот процесс использует ресурсы на английском языке "и" русский язык. Следующий текстовый файл с именем GreetingStrings.txt содержит ресурсы на английском языке:  
  
```  
greeting =Hello again!  
newGreeting=Hello!  
```  
  
 Она компилируется в двоичные RESOURCES-файл, с именем GreetingStrings.resources с помощью [генератор файлов ресурсов](~/docs/framework/tools/resgen-exe-resource-file-generator.md) с помощью следующей команды.  
  
```console  
resgen greetingstrings.txt  
```  
  
 Следующий текстовый файл с именем GreetingStrings.ru-RU.txt содержит ресурсы для русского языка:  
  
```  
greeting=Еще раз привет!  
newGreeting=Привет!  
```  
  
 Она компилируется в двоичные RESOURCES-файл, с именем GreetingStrings.ru RU.resources с помощью [генератор файлов ресурсов](~/docs/framework/tools/resgen-exe-resource-file-generator.md) с помощью следующей команды.  
  
```console  
resgen greetingstrings.ru-RU.txt  
```  
  
 Код приложения, как показано ниже, находится в файле с именем Example1.vb или Example1.cs. Она компилируется в исполняемый файл с помощью следующей команды для компилятора Visual Basic:  
  
```console  
vbc Example1.vb /resource:GreetingStrings.resources  
```  
  
 Для компилятора C# аналогично команде:  
  
```console  
csc /resource:GreetingStrings.resources Example1.cs  
```  
  
 Это создает сборку, которая включает в себя пример исполняемый код и ресурсы для качестве нейтрального языка. Можно также использовать [компоновщик сборок](~/docs/framework/tools/al-exe-assembly-linker.md) для создания файла ресурсов для культуры русский (Россия) с помощью следующей команды:  
  
```console  
>al /embed:greetingstrings.ru-RU.resources /c:ru-RU /template:example1.exe /out:ru-RU\Example1.resources.dll  
```  
  
 Во время запуска, в примере задается текущего языка и региональных параметров и текущий язык и региональные параметры пользовательского интерфейса русский (Россия) во всех системах, за исключением тех, на которых язык и региональные параметры по умолчанию уже русский (Россия). Если язык и региональные параметры по умолчанию уже русский (Россия), код задает текущий язык и региональные параметры и текущий пользовательский Интерфейс язык и региональные параметры для английского (США). Затем он вызывает `ShowGreeting` подпрограмму, которая отображает простую строку при первом вызове и немного другую строку на последующие вызовы методов. Затем он создает новый поток, который также выполняет `ShowGreeting` подпрограммы.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example1.vb#1)]  
  
 Как показывают выходные данные из примера, если пример выполняется на компьютере, языком и региональными параметрами системы является английский (США), основной поток отображает его начальной строки на русском языке. Тем не менее так как язык и региональные параметры рабочего потока является производным от текущих региональных параметров системы Windows, а не текущего языка и региональных параметров приложения, рабочий поток отображает его строки на английском языке.  
  
 В следующем примере используется <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойств, чтобы определить текущий язык и региональные параметры текущего пользовательского интерфейса нового потока приложения.  
  
 В примере используется те же файлы ресурсов как в предыдущем примере. Команды для компиляции и внедрения русского языка для локализации ресурсов во вспомогательную сборку также идентичны, за исключением того, что имя исполняемого файла сборки меняется.  
  
 Во время запуска, в примере задается текущего языка и региональных параметров и текущий язык и региональные параметры пользовательского интерфейса русский (Россия) во всех системах, за исключением тех, на которых язык и региональные параметры по умолчанию уже русский (Россия). Если язык и региональные параметры по умолчанию уже русский (Россия), он устанавливает текущий язык и региональные параметры и текущего языка и региональных параметров пользовательского интерфейса английский (США). Затем он вызывает `ShowGreeting` подпрограмму, которая отображает простую строку при первом вызове и немного другую строку на последующие вызовы методов. Затем он создает новый поток, который также выполняет `ShowGreeting` подпрограммы.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example2.vb#2)]  
  
 Как показывают выходные данные из примера, если пример выполняется на компьютере, языком и региональными параметрами системы является английский (США), основной поток и рабочий поток для отображения их строки на русском языке.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В операции задания значение свойства <see cref="P:System.Globalization.CultureInfo.Name" /> является недопустимым.</exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Globalization.CultureInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает полностью локализованное имя языка и региональных параметров.</summary>
        <value>Имя полного локализованного языка и региональных параметров в формате *languagefull* [*страна_или_регион_полностью*], где *languagefull* — полное имя языка и  *Country/regionfull* — полное имя страны или региона.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство представляет локализованное имя <xref:System.Globalization.CultureInfo> объекта.  
  
 Имена языка и региональных параметров могут отличаться из-за сценариев или соглашения о форматировании. Следует использовать возвращаемое имя для отображения и не удается выполнить синтаксический анализ его.  
  
 Если создается пользовательский язык и региональные параметры, с помощью параметра <xref:System.Globalization.CultureAndRegionInfoBuilder> класс, <xref:System.Globalization.CultureInfo.DisplayName%2A> значение инициализируется свойство <xref:System.Globalization.CultureInfo.NativeName%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода отображается несколько свойств нейтральных языков и региональных параметров.  
  
> [!NOTE]
>  В примере отображается культуры zh-CHS и zh-CHT с идентификаторами языка и региональных параметров идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant имена представляют текущий стандарт и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.EnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnglishName : string" Usage="System.Globalization.CultureInfo.EnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя языка и региональных параметров в формате *languagefull* [*country/regionfull*] на английском языке.</summary>
        <value>Имя языка и региональных параметров в формате *languagefull* [*страна_или_регион_полностью*] на английском языке, где *languagefull* — полное имя языка и *страны / regionfull* — полное имя страны или региона.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Например <xref:System.Globalization.CultureInfo.EnglishName%2A> для конкретного языка и региональных параметров имя en US — «Английский (США)».  
  
 Значение этого свойства совпадает, независимо от языковой версии платформы .NET Framework.  
  
   
  
## Examples  
 В следующем примере кода отображается несколько свойств нейтральных языков и региональных параметров.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant имена представляют текущий стандарт и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cultureInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Globalization.CultureInfo" />.</param>
        <summary>Определяет, является ли заданный объект тем же языком и региональными параметрами, что и текущий <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="value" /> относится к тому же языку и региональным параметрам, что и текущий объект <see cref="T:System.Globalization.CultureInfo" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
 Два <xref:System.Globalization.CultureInfo> объекты считаются равными, если их <xref:System.Globalization.CultureInfo.Name%2A> и <xref:System.Globalization.CultureInfo.CompareInfo%2A> свойства равны.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetConsoleFallbackUICulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetConsoleFallbackUICulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsoleFallbackUICulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetConsoleFallbackUICulture();" />
      <MemberSignature Language="F#" Value="member this.GetConsoleFallbackUICulture : unit -&gt; System.Globalization.CultureInfo" Usage="cultureInfo.GetConsoleFallbackUICulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает язык и региональные стандарты интерфейса пользователя, подходящие для приложений консоли, если при этом неприменим язык и региональные стандарты графического пользовательского интерфейса по умолчанию.</summary>
        <returns>Альтернативный язык и региональные параметры, используемые для чтения и отображения текста на консоли.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Языки, такие как арабский, иврит, урду и сирийский, основаны на двунаправленный текст. Приложения Windows, которые имеют графический интерфейс пользователя, поддерживают языки с двунаправленным письмом. Тем не менее консольные приложения, использующие текстовый пользовательский интерфейс консоли операционной системы, не поддерживают двунаправленный. Таким образом при локализации консольное приложение на арабском или иврите, приложение выводить на экран консоли нечитаемый текст.  
  
 Интерфейс пользователя языка и региональных параметров указывает ресурсы, необходимые приложению для поддержки пользовательского ввода и вывода, и по умолчанию является таким же, как язык и региональные параметры операционной системы. Например <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство возвращает арабского языка и региональных параметров для арабского языка операционной системы. Используйте <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> метод для извлечения культуры, подходящие для пользовательского интерфейса приложения консоли. После получения приложением языка и региональных параметров пользовательского интерфейса, его следует назначить язык и региональные параметры текущего языка и региональных параметров пользователя интерфейс текущего потока. Дополнительные сведения см. в разделе «Явно параметр текущую культуру UI» <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство.  
  
 Ниже приведены стандартные языки и региональные параметры с названием языка и региональных параметров различных базового пользовательского интерфейса из предварительно определенного.  
  
|Стандартные язык и региональные параметры|Имя языка и региональных параметров|Имя языка и региональных параметров пользовательского интерфейса|  
|------------------------|------------------|------------------------------------------|  
|Амхарский|AM|en-US|  
|Амхарский (Эфиопия)|AM-ET|en-US|  
|(нейтральный арабский)|ar|en-US|  
|Арабский (ОАЭ)|ar AE|en-US|  
|Арабский (Бахрейн)|ar-BH|en-US|  
|Арабский (Алжир)|Ar-DZ|fr-FR|  
|Арабский (Египет)|ar-EG|en-US|  
|Арабский (Ирак)|ar-IQ|en-US|  
|Арабский (Иордания)|ar-JO|en-US|  
|Арабский (Кувейт)|ar КВТ|en-US|  
|Арабский (Ливан)|ar-LB|en-US|  
|Арабский (Ливия)|ar-LY|en-US|  
|Арабский (Марокко)|ar MA|fr-FR|  
|Арабский (Оман)|ar OM|en-US|  
|Арабский (Катар)|ar-QA|en-US|  
|Арабский (Саудовская Аравия)|ar-SA|en-US|  
|Арабский (Сирия)|ar-SY|en-US|  
|Арабский (Тунис)|ar-TN|fr-FR|  
|Арабский (Йемен)|ar-ЛЯ|en-US|  
|Ассамского|as|en-US|  
|Ассамский (Индия)|как в|en-US|  
|Бенгальский|Бенгальский (Индия)|en-US|  
|Бенгальский (Бангладеш)|BD Бенгальский (Индия)|en-US|  
|Бенгальский (Индия)|Бенгальский (Индия) в|en-US|  
|Тибетский|BO|en-US|  
|Тибетский (КНР)|BO CN|en-US|  
|Дивехи|DV|en-US|  
|Дивехи (Индия)|dv-MV|en-US|  
|персидский|ОС|en-US|  
|Персидский (Иран)|FA-IR|en-US|  
|Гуджарати|gu|en-US|  
|Гуджарати (Индия)|gu-IN|en-US|  
|Иврит|he|en-US|  
|Иврит (Израиль)|he-IL|en-US|  
|Хинди|Привет|en-US|  
|Хинди (Индия)|hi-IN|en-US|  
|Носу|II|en-US|  
|Носу (КНР)|ii-CN|en-US|  
|Слоговое письмо|банок IU|en-US|  
|Слоговое письмо (Канада)|iu-Cans-CA|en-US|  
|Кхмерский|км|en-US|  
|Кхмерский (Камбоджа)|KH км|en-US|  
|Каннада|KN|en-US|  
|Каннада (Индия)|KN-IN|en-US|  
|Конкани|kok|en-US|  
|Конкани (Индия)|kok-IN|en-US|  
|Лаосский|Lo|en-US|  
|Лаосский (Лаосская Народно-Демократическая Республика)|LO LA|en-US|  
|Малаялам|ml|en-US|  
|Малаялам (Индия)|ML-IN|en-US|  
|Mohawk|moh|en-US|  
|Могавк (Канада)|moh ЦС|en-US|  
|маратхи|г-н|en-US|  
|Маратхи (Индия)|г-н в|en-US|  
|Непальский|ne|en-US|  
|Непальский (Непал)|ne-NP|en-US|  
|Норвежский|Нет|nb-NO|  
|Odiya|или|en-US|  
|Odiya (Индия)|или IN|en-US|  
|панджаби|PA|en-US|  
|Панджаби (Индия)|PA-IN|en-US|  
|Dari|запросы на Вытягивание|en-US|  
|Дари (Афганистан)|запросы на Вытягивание AF|en-US|  
|Пушту|PS|en-US|  
|Пушту (Афганистан)|ps-AF|en-US|  
|санскрит|SA|en-US|  
|Санскрит (Индия)|SA-IN|en-US|  
|Сингальский|SI|en-US|  
|Сингальский (Шри-Ланка)|si-LK|en-US|  
|Сирийский|syr|en-US|  
|Сирийский (Сирия)|syr-SY|en-US|  
|Тамильский|TA|en-US|  
|Тамильский (Индия)|TA-IN|en-US|  
|Телугу|TE|en-US|  
|Телугу (Индия)|TE IN|en-US|  
|Тайский|th|en-US|  
|Тайский (Таиланд)|th-Th|en-US|  
|Уйгурский|ug|en-US|  
|Уйгурский (КНР)|ug-CN|en-US|  
|Урду|ваш|en-US|  
|Урду (Пакистан)|Ваш первичный ключ|en-US|  
|Вьетнамский|vi|en-US|  
|Вьетнамский (Вьетнам)|vi-VN|en-US|  
  
 Приложение может использовать <xref:System.Globalization.CultureAndRegionInfoBuilder> для создания замены для, язык и региональные параметры, можно иметь региональных консоли по своему выбору.  
  
   
  
## Examples  
 В следующем примере кода отображает языку резервный пользовательского интерфейса, связанный с объектом языка и региональных параметров.  
  
 [!code-cpp[sys.glob.ci.getCFUIC#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/cpp/cfuic.cpp#1)]
 [!code-csharp[sys.glob.ci.getCFUIC#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/CS/cfuic.cs#1)]
 [!code-vb[sys.glob.ci.getCFUIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.ci.getCFUIC/VB/cfuic.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCultureInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Служит для получения кэшированного экземпляра языка и региональных параметров, доступного только для чтения.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (culture As Integer) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : int -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Идентификатор языка (LCID).</param>
        <summary>Служит для получения кэшированного доступного только для чтения экземпляра языка и региональных параметров с помощью указанного идентификатора языка и региональных параметров.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Мы рекомендуем использовать при перегрузке строки этого метода (<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>), так как вместо LCID следует использовать имена языковых стандартов. Для пользовательских языковых стандартов требуется имя языкового стандарта.  
  
 Если `culture` — идентификатор языка текущего языка и региональных параметров, возвращенного <xref:System.Globalization.CultureInfo> объекта не отражает все переопределения пользователем.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="culture" /> меньше нуля.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">Параметр <paramref name="culture" /> указывает не поддерживаемый язык и региональные параметры. Дополнительные сведения см. в разделе "Примечания к вызывающим объектам".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] И создавать более ранних версий <see cref="T:System.ArgumentException" /> Если <paramref name="culture" /> не является допустимой культурой идентификатором. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], этот метод вызывает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, запускаемых от [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии на Windows 7 или более поздней версии, метод пытается извлечь <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="culture" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры вызывает метод <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя языка и региональных параметров. <paramref name="name" /> не учитывает регистр.</param>
        <summary>Служит для получения кэшированного экземпляра языка и региональных параметров с помощью указанного имени.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных названий языков, см. в разделе [Справочник по API поддержки национальных языков (NLS)](https://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10, `name` может быть любой допустимый тега языка BCP-47.  
  
 <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> Метод получает кэшированный, только для чтения <xref:System.Globalization.CultureInfo> объекта. Он обеспечивает более высокую производительность, чем соответствующий вызов <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> конструктор.  
  
 Если `name` — это имя текущего языка и региональных параметров, возвращенного <xref:System.Globalization.CultureInfo> объекта не отражает все переопределения пользователем. Это делает метод подходит для серверных приложений и других средств, которых не является реальной учетной записью в системе и должны эффективно загружать несколько языков и региональных параметров.  
  
 Если `name` является <xref:System.String.Empty?displayProperty=nameWithType>, метод возвращает инвариантного языка и региональных параметров. Это эквивалентно получение значения <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">Параметр <paramref name="name" /> указывает не поддерживаемый язык и региональные параметры. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] И создавать более ранних версий <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> не является допустимой культурой. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], этот метод вызывает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, запускаемых от [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии на Windows 7 или более поздней версии, метод пытается извлечь <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="name" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры, а <paramref name="name" /> не является именем, с дополнительными символами или замены языка и региональных параметров, вызывает метод <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name, string altName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name, string altName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String, altName As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name, System::String ^ altName);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string * string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo (name, altName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="altName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя языка и региональных параметров. <paramref name="name" /> не учитывает регистр.</param>
        <param name="altName">Имя языка и региональных параметров, предоставляющих объекты <see cref="T:System.Globalization.TextInfo" /> и <see cref="T:System.Globalization.CompareInfo" /> для инициализации параметра <paramref name="name" />. <paramref name="altName" /> не учитывает регистр.</param>
        <summary>Служит для получения кэшированного экземпляра языка и региональных параметров, доступного только для чтения. В параметрах определяется язык и региональные параметры, которые инициализируются вместе с объектами <see cref="T:System.Globalization.TextInfo" /> и <see cref="T:System.Globalization.CompareInfo" />.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных названий языков, см. в разделе [Справочник по API поддержки национальных языков (NLS)](https://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10, `name` может быть любой допустимый тега языка BCP-47.  
  
 <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> Метод получает кэшированный, только для чтения <xref:System.Globalization.CultureInfo> объекта. Он обеспечивает более высокую производительность, чем соответствующий вызов <xref:System.Globalization.CultureInfo.%23ctor%2A> конструктор. Метод используется для создания языка и региональных параметров, аналогично значению, указанному `name` параметра, но с другой сортировке и регистре правила.  
  
 Если `name` или `altName` — это имя текущего языка и региональных параметров, возвращаемых объектов не отражают все переопределения пользователем. Если `name` является <xref:System.String.Empty?displayProperty=nameWithType>, метод возвращает инвариантного языка и региональных параметров. Это эквивалентно получение значения <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство. Если `altName` является <xref:System.String.Empty?displayProperty=nameWithType>, данный метод использует систему письма и сравнение правил, заданных свойством инвариантного языка и региональных параметров.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметров <paramref name="name" /> или <paramref name="altName" /> — null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">Параметры <paramref name="name" /> или <paramref name="altName" /> указывает не поддерживаемый язык и региональные параметры. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] И создавать более ранних версий <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> или <paramref name="altName" /> не является допустимой культурой. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], этот метод вызывает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, запускаемых от [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии на Windows 7 или более поздней версии, метод пытается извлечь <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="name" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры, а <paramref name="name" /> не является именем, с дополнительными символами или замены языка и региональных параметров, вызывает метод <see cref="T:System.Globalization.CultureNotFoundException" /> исключение. Начиная с приложений, запускаемых от [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии на Windows 7 или более поздней версии, метод пытается извлечь <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="name" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры, а <paramref name="name" /> не является именем, с дополнительными символами или замены языка и региональных параметров, вызывает метод <see cref="T:System.Globalization.CultureNotFoundException" /> исключение.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfoByIetfLanguageTag">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfoByIetfLanguageTag (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfoByIetfLanguageTag(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfoByIetfLanguageTag : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя языка по стандарту RFC 4646.</param>
        <summary>Не рекомендуется. Служит для получения объекта <see cref="T:System.Globalization.CultureInfo" />, доступного только для чтения, который имеет языковые характеристики, указываемые определенным языковым тегом RFC 4646.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Этот метод и <xref:System.Globalization.CultureInfo.IetfLanguageTag%2A> свойства являются устаревшими. Вместо того чтобы использовать эти элементы, приложение должно использовать новый <xref:System.Globalization.CultureInfo> объекта и вызовы <xref:System.Globalization.CultureInfo.Name%2A> свойство. Теги IETF и имена идентичны.  
  
 Стандарт RFC 4646, который ведется с Internet Engineering Task Force (IETF) определяет тега языка IETF, который представляет собой универсальное средство идентификации языка. Формат тега языка IETF совпадает с именем языка и региональных параметров, возвращенным <xref:System.Globalization.CultureInfo.Name%2A> свойство, но уникальной идентификации языка и региональных параметров. Разные языки и региональные параметры совместно использовать один и тот же тег языка IETF, если эти языки и региональные параметры имеют идентичные языковые характеристики. Языковые характеристики языка и региональных параметров, содержащихся в <xref:System.Globalization.TextInfo> объект, связанный с <xref:System.Globalization.CultureInfo> объекта.  
  
 Тега языка IETF состоит из обязательного идентификатора языка, необязательного идентификатора набора символов и необязательного идентификатора региона.  
  
 Ваши приложения должны использовать полученный язык и региональные параметры для управления задачами, зависящие от языка, такие как управление правописания. Приложения не должны использовать полученный язык и региональные параметры для управления задачами, зависящие от культуры, таких как сортировка текста или форматирование дат и времени.  
  
 Дополнительные сведения см. в разделе RFC 4646, «Теги для идентификации языков» и самой последней draft standard, черновик Филлипс langtags-05.txt, в [ http://go.microsoft.com/fwlink/?LinkId=100231 ](https://go.microsoft.com/fwlink/?LinkId=100231).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">Параметр <paramref name="name" /> не соответствует поддерживаемому языку и региональным параметрам.</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] И создавать более ранних версий <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> не соответствует имя поддерживаемых языка и региональных параметров. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], этот метод вызывает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultures">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo[] GetCultures (System.Globalization.CultureTypes types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo[] GetCultures(valuetype System.Globalization.CultureTypes types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultures (types As CultureTypes) As CultureInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Globalization::CultureInfo ^&gt; ^ GetCultures(System::Globalization::CultureTypes types);" />
      <MemberSignature Language="F#" Value="static member GetCultures : System.Globalization.CultureTypes -&gt; System.Globalization.CultureInfo[]" Usage="System.Globalization.CultureInfo.GetCultures types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Globalization.CultureTypes" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="types">Побитовая комбинация значений перечисления, определяющих фильтрацию получаемых языков и региональных параметров.</param>
        <summary>Возвращает список поддерживаемых языков и региональных параметров, отфильтрованный по заданным значениям параметра <see cref="T:System.Globalization.CultureTypes" />.</summary>
        <returns>Массив, содержащий языки и региональные параметры, определенные параметром <paramref name="types" />. Массив языков и региональных параметров не упорядочен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo.GetCultures%2A> С наиболее часто вызывается метод `types` параметру присвоить следующие значения:  
  
-   <xref:System.Globalization.CultureTypes.SpecificCultures>, который возвращает все определенные языки и региональные параметры.  
  
-   <xref:System.Globalization.CultureTypes.NeutralCultures>, который возвращает все нейтральных языков и региональных параметров и инвариантный язык и региональные параметры.  
  
-   <xref:System.Globalization.CultureTypes.AllCultures>, который возвращает все нейтральные и конкретные языки и региональные параметры, языков и региональных параметров, установленных в системе Windows и пользовательских языков и региональных параметров, созданных пользователем.  
  
-   <xref:System.Globalization.CultureTypes.UserCustomCulture>, который возвращает все пользовательские языки и региональные параметры, например зарегистрированы с <xref:System.Globalization.CultureAndRegionInfoBuilder> класса. В версиях Windows до Windows 10 <xref:System.Globalization.CultureTypes.UserCustomCulture> значение применяется для всех определяемых пользователем пользовательские языки и региональные параметры. Начиная с Windows 10, он применяется для языков и региональных параметров системы, отсутствуют полные данные, и, не имеющие уникальный локальный идентификатор, обозначенный <xref:System.Globalization.CultureInfo.LCID%2A> значение свойства. Таким образом следующий код будет возвращать другие результаты при работы на Windows 10 и более ранней версии Windows.  
  
     [!code-csharp[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures3.cs#2)]
     [!code-vb[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures3.vb#2)]  
  
   
  
## Examples  
 В следующем примере кода отображается несколько свойств нейтральных языков и региональных параметров.  
  
> [!NOTE]
>  В примере отображается культуры zh-CHS и zh-CHT с идентификаторами языка и региональных параметров идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant имена представляют текущий стандарт и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="types" /> определяет недопустимую комбинацию значений <see cref="T:System.Globalization.CultureTypes" />.</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public virtual object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="cultureInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType"><see cref="T:System.Type" />, для которого нужно получить объект форматирования. Этот метод поддерживает только типы <see cref="T:System.Globalization.NumberFormatInfo" /> и <see cref="T:System.Globalization.DateTimeFormatInfo" />.</param>
        <summary>Возвращает объект, определяющий способ форматирования заданного типа.</summary>
        <returns>Значение свойства <see cref="P:System.Globalization.CultureInfo.NumberFormat" />, являющееся объектом <see cref="T:System.Globalization.NumberFormatInfo" />, который содержит сведения о формате числа по умолчанию для текущего <see cref="T:System.Globalization.CultureInfo" />, если <paramref name="formatType" /> является объектом <see cref="T:System.Type" /> для класса <see cref="T:System.Globalization.NumberFormatInfo" />.  
  
-или- 
Значение свойства <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" />, являющееся объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />, который содержит сведения о формате даты и времени по умолчанию для текущего <see cref="T:System.Globalization.CultureInfo" />, если <paramref name="formatType" /> является объектом <see cref="T:System.Type" /> для класса <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
-или- 
null, если <paramref name="formatType" /> — любой другой объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Globalization.CultureInfo.GetFormat%2A> реализует интерфейс <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 `NumberFormatInfo` предоставляет региональных числовой формат, используемый в сочетании с методами в базовые типы данных. `DateTimeFormatInfo` Определяет способ форматирования значений даты и времени для конкретной культуры.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cultureInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Служит хэш-функцией текущего класса <see cref="T:System.Globalization.CultureInfo" /> для использования в алгоритмах и структурах данных хеширования, например в хэш-таблице.</summary>
        <returns>Хэш-код для текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 Этот метод создает один и тот же хэш-код для двух объектов, которые равны в соответствии с методом <xref:System.Globalization.CultureInfo.Equals%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string" Usage="System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Не рекомендуется. Получает идентификацию языка по стандарту RFC 4646.</summary>
        <value>Строка, являющаяся идентификацией языка по стандарту RFC 4646.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Это свойство и <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> метод являются устаревшими. Вместо этого следует использовать <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> свойство. Теги IETF и имена идентичны.  
  
 Стандарт RFC 4646, который ведется с Internet Engineering Task Force (IETF) определяет тега языка IETF, который представляет собой универсальное средство идентификации языка. Формат тега языка IETF аналогичен имя языка и региональных параметров, возвращаемое функцией <xref:System.Globalization.CultureInfo.Name%2A> свойство, но уникальной идентификации языка и региональных параметров. То есть разных языков и региональных параметров, совместно использовать один и тот же тег языка IETF, если эти языки и региональные параметры имеют идентичные языковые характеристики. Языковые характеристики языка и региональных параметров, содержащихся в <xref:System.Globalization.TextInfo> объект, связанный с <xref:System.Globalization.CultureInfo> объекта.  
  
 Тега языка IETF состоит из обязательного идентификатора языка, необязательного идентификатора набора символов и необязательного идентификатора региона.  
  
 Дополнительные сведения см. в разделе [RFC 5646 «теги для языков, определение](https://go.microsoft.com/fwlink/?LinkId=230876). Список вложенные теги, см. в разделе [реестр подтегов языка IANA](https://go.microsoft.com/fwlink/?LinkId=230877).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstalledUICulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение <see cref="T:System.Globalization.CultureInfo" />, представляющее язык и региональные параметры, установленные с операционной системой.</summary>
        <value>Значение <see cref="T:System.Globalization.CultureInfo" />, представляющее язык и региональные параметры, установленные с операционной системой.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В локализованной операционной системе, например в японских выпуск Windows это свойство возвращает язык и региональные параметры операционной системы. Это свойство является эквивалентом `GetSystemDefaultUILanguage` в Windows API.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InvariantCulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Globalization.CultureInfo" />, не зависящий от языка и региональных параметров (инвариантный).</summary>
        <value>Объект, не зависящий от языка и региональных параметров (инвариантный).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Инвариантный язык и региональные параметры не учитывает язык и региональные параметры; он связан с английским языком, но не с любой страны или региона. Укажите инвариантного языка и региональных параметров по имени, используя пустую строку ("») в вызове <xref:System.Globalization.CultureInfo> создание экземпляра метода. <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> также извлекает экземпляр инвариантного языка и региональных параметров. Он может использоваться практически в любом методе <xref:System.Globalization> пространство имен, которое требует языка и региональных параметров. Объекты, возвращенные свойства, такие как <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и <xref:System.Globalization.CultureInfo.NumberFormat%2A> также отражают то строковое сравнение и форматирование соглашения инвариантных региональных параметров.  
  
 В отличие от культуры данных, который подлежит изменению настройки пользователя или обновления для платформы .NET Framework или операционной системы, данных инвариантного языка и региональных параметров стабилен по времени и установленных языков и региональных параметров и не может настраиваться пользователями. Это делает инвариантный язык и региональные параметры особенно полезна для операций, требующих результаты независимый от языка и региональных параметров, таких как форматирование и разбор операций, которые сохраняются в формате данных, или сортировки и порядок операций, требующих отображения данных в фиксированный порядок независимо от языка и региональных параметров.  
  
## <a name="string-operations"></a>Операции со строками  
 Инвариантный язык и региональные параметры можно использовать для операций строк с учетом языка и региональных параметров, не повлияли правила языка и региональных параметров текущего потока и, одинаковы для языков и региональных параметров. Например вы можете отсортированные данные отображаются в определенном порядке или применить стандартный набор соглашения о регистре в строки, независимо от языка и региональных параметров текущего потока. Чтобы сделать это, следует передать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> в метод, имеющий <xref:System.Globalization.CultureInfo> параметра, такие как <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Globalization.CultureInfo%29> и <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29>.  
  
## <a name="persisting-data"></a>Сохранение данных  
 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> Свойство может использоваться для сохранения данных в формате, независимый от языка и региональных параметров. Это обеспечивает известном формате, не меняется, и который может использоваться для сериализации и десериализации данных в различных региональных параметров. После десериализации данных, его можно соответственно отформатировать в зависимости на национальные стандарты текущего пользователя.  
  
 Например, если вы решили сохранить данные даты и времени в виде строки, можно передать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> объект <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> или <xref:System.DateTimeOffset.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> метод, чтобы создать строку и вы можете передать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> объект <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> или <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод преобразует строку обратно в значение даты и времени. Этот метод гарантирует, что базовый даты и времени значения не изменяются при чтении или записи для пользователей из разных языков и региональных параметров данных.  
  
 В следующем примере используется инвариантный язык и региональные параметры для сохранения <xref:System.DateTime> значение в виде строки. Затем анализирует строку и отображает его значение с помощью соглашений о форматировании французского (Франция) и немецкий (Германия) языков и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/cs/persist1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/vb/persist1.vb#1)]  
  
## <a name="security-decisions"></a>Решения по безопасности  
 Если вы вносите решение безопасности (например, следует ли разрешить доступ к ресурсу системы) на основе результата сравнения строк или изменения регистра, не следует использовать инвариантного языка и региональных параметров. Вместо этого необходимо выполнить порядковое сравнение зависеть от регистра символов, вызвав метод, который включает в себя <xref:System.StringComparison> параметр и указав либо <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> или <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> в качестве аргумента. Код, который выполняет операции со строками с учетом языка и региональных параметров может привести к уязвимости системы безопасности, при изменении текущего языка и региональных параметров или если язык и региональные параметры на компьютере, на котором выполняется код отличается от языка и региональных параметров, который используется для тестирования кода. Напротив порядковое сравнение зависит только от двоичное значение сравниваемых символом.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsNeutralCulture">
      <MemberSignature Language="C#" Value="public virtual bool IsNeutralCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNeutralCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsNeutralCulture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNeutralCulture { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNeutralCulture : bool" Usage="System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, представляет ли текущий <see cref="T:System.Globalization.CultureInfo" /> нейтральный язык и региональные параметры.</summary>
        <value><see langword="true" />, если текущий <see cref="T:System.Globalization.CultureInfo" /> представляет нейтральный язык и региональные параметры, в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Нейтральная культура — это культура, связанный с языком, но не со страной или регионом. Он отличается от конкретного языка и региональных параметров, являющийся языком и региональными параметрами, который связан с как язык и страну или регион. Например fr — имя для нейтральной культуры французского, хотя fr-FR, — это имя для французского языка и региональных параметров во Франции.  
  
 Если это свойство возвращает `false`, языка и региональных параметров является определенного языка и региональных параметров или инвариантного языка и региональных параметров.  
  
   
  
## Examples  
 В следующем примере кода определяет, какие языки и региональные параметры, с помощью китайского языка, нейтральные культуры.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant имена представляют текущий стандарт и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CPP/neutralculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CS/neutralculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/VB/neutralculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.CultureInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, доступен ли текущий объект <see cref="T:System.Globalization.CultureInfo" /> только для чтения.</summary>
        <value>Значение <see langword="true" />, если текущий объект <see cref="T:System.Globalization.CultureInfo" /> доступен только для чтения, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Globalization.CultureInfo> только для чтения, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и <xref:System.Globalization.CultureInfo.NumberFormat%2A> экземпляры также доступны только для чтения.  
  
   
  
## Examples  
 В следующем примере кода показано, что <xref:System.Globalization.CultureInfo.IsReadOnly%2A> также помогает защитить <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo> экземпляры, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public virtual int KeyboardLayoutId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyboardLayoutId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardLayoutId : int" Usage="System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает активный идентификатор языка ввода.</summary>
        <value>32-битный номер со знаком, указывающий идентификатор языка ввода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Идентификатор языка ввода ранее назывался раскладки клавиатуры. Идентификатор языка ввода является более широкие концепции, чем раскладка клавиатуры, так как он может обозначать преобразователь речи в текст, редактор метода ввода (IME) или любые другие формы ввода.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public virtual int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CultureInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает идентификатор языка и региональных параметров для текущего <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Идентификатор языка и региональных параметров для текущего <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В большинстве случаев идентификатор языка и региональных параметров сопоставляется соответствующий идентификатор языка NLS.  
  
 В версиях Windows, предшествующих Windows 10, идентификатор языкового стандарта `LOCALE_CUSTOM_UNSPECIFIED` (0x1000 или 4096) назначается пользовательских языков и региональных параметров, созданных пользователем. Начиная с Windows 10, ему назначается для любого языка и региональных параметров, не имеет уникальный код локали и не содержит полные данные, предоставляемые системой. В результате код, который выполняет итерацию языков и региональных параметров и извлекает с <xref:System.Globalization.CultureInfo.LCID%2A> значение `LOCALE_CUSTOM_UNSPECIFIED` возвращение большего подмножества <xref:System.Globalization.CultureInfo> объектов, если выполняются в Windows 10.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Globalization.CultureInfo> для Испанский (Испания) с международный порядок сортировки, а вторая <xref:System.Globalization.CultureInfo> с традиционный порядок сортировки.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CultureInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя языка и региональных параметров в формате *languagecode2*-*country/regioncode2*.</summary>
        <value>Имя языка и региональных параметров в формате *languagecode2*-*country/regioncode2*. *languagecode2* — двухбуквенный код, в нижнем регистре, производный от ISO 639-1. *Country/regioncode2* является производным от ISO 3166 и обычно состоит из двух прописных букв или из тега языка BCP-47.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных названий языков и идентификаторы, <xref:System.Globalization.CultureInfo.Name%2A> свойство может возвращать, см. в разделе [Справочник по API поддержки национальных языков (NLS)](https://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10, `name` может быть любой допустимый тега языка BCP-47. Обратите внимание, что имена языка и региональных параметров могут меняться, и что они также могут их имена соответствовали именам пользовательских языков и региональных параметров.  
  
 <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> Свойства соответствует стандартам именования, предоставляемых в <xref:System.Globalization.CultureInfo> разделе, посвященном классу. Он возвращает короткое название языка и региональных параметров, не включает какого-либо указания альтернативный порядок сортировки. Например, если вы создаете экземпляры <xref:System.Globalization.CultureInfo> объекта, используя строку «de-DE_phoneb» для отображения альтернативный порядок сортировки, <xref:System.Globalization.CultureInfo.Name%2A> свойство возвращает «de-DE».  
  
 Чтобы получить полное имя языка и региональных параметров, следует использовать <xref:System.Globalization.CultureInfo.DisplayName%2A>, <xref:System.Globalization.CultureInfo.EnglishName%2A>, или <xref:System.Globalization.CultureInfo.NativeName%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода отображается несколько свойств нейтральных языков и региональных параметров.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant имена представляют текущий стандарт и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeName : string" Usage="System.Globalization.CultureInfo.NativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя языка и региональных параметров, состоящих из языка, страны или региона и дополнительного набора символов, которые свойственны для этого языка.</summary>
        <value>Имя языка и региональных параметров. состоит из полного имени языка, полного имени страны или региона и дополнительного набора символов. Дополнительные сведения о формате см. в описании класса <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этого свойства совпадает, независимо от языковой версии платформы .NET Framework.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Globalization.NumberFormatInfo with get, set" Usage="System.Globalization.CultureInfo.NumberFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий формат отображения чисел, денежной единицы и процентов, соответствующий языку и региональным параметрам.</summary>
        <value>Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий формат отображения чисел, денежной единицы и процентов, соответствующий языку и региональным параметрам.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a>Overrides  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем языковых и региональных параметров в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, кроме порта по умолчанию для языка и региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущего языка и региональных параметров Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство, свойства и <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 Значения <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство и <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства не вычисляются, пока пользователь обращается к свойству. Если пользователь использует панели управления для изменения текущего языка и региональных параметров на новый язык и региональные параметры, во время выполнения, а затем обращается к приложения <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> или <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство, приложение получает значения по умолчанию для нового языка и региональных параметров. не переопределения для исходного языка и региональных параметров. Чтобы сохранить переопределения для исходного текущий язык и региональные параметры, приложения должны получать доступ к <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства перед изменением текущего языка и региональных параметров.  
  
   
  
## Examples  
 В следующем примере кода показано, что CultureInfo.Clone копирует также <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo> экземпляры, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Задано свойство <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> или любое из свойств <see cref="T:System.Globalization.NumberFormatInfo" />, а объект <see cref="T:System.Globalization.CultureInfo" /> доступен только для чтения.</exception>
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="OptionalCalendars">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar[] OptionalCalendars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] OptionalCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OptionalCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Globalization::Calendar ^&gt; ^ OptionalCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OptionalCalendars : System.Globalization.Calendar[]" Usage="System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает список календарей, которые могут использоваться в данном языке и региональных параметров.</summary>
        <value>Массив типа <see cref="T:System.Globalization.Calendar" />, представляющий календари, которые могут использоваться в языке и региональных параметрах, представленных текущим <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения изменяется календарь, используемый текущим <xref:System.Globalization.CultureInfo> , задав <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, который является экземпляром <xref:System.Globalization.DateTimeFormatInfo> класса. Новый календарь должен быть одним из календарей, перечисленных в <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> содержит и другие свойства, определяющие форматирование даты и времени, связанные с <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как определить <xref:System.Globalization.GregorianCalendar> версии, поддерживаемые языком и региональными параметрами.  
  
 [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CPP/gregoriancalendartypes.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CS/gregoriancalendartypes.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/VB/gregoriancalendartypes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CultureInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Globalization.CultureInfo" />, представляющий родительский язык и региональные параметры текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Объект <see cref="T:System.Globalization.CultureInfo" />, представляющий родительский язык и региональные параметры текущего <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существует иерархия культур в родительского конкретного языка и региональных параметров это нейтральная культура, является родительским для нейтрального языка и региональных параметров <xref:System.Globalization.CultureInfo.InvariantCulture%2A>, который является родительским для <xref:System.Globalization.CultureInfo.InvariantCulture%2A> инвариантный язык и региональные параметры, сам. Родительский язык и региональные параметры содержат только те сведения, которые являются общими для его дочерних элементов.  
  
 Если в системе не доступны ресурсы для конкретного языка и региональных параметров, используются ресурсы для нейтрального языка и региональных параметров. Если не доступны ресурсы для нейтрального языка и региональных параметров, используются ресурсы, встроенные в основную сборку. Дополнительные сведения о процесс использования резервных ресурсов, см. в разделе [упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
   
  
## Examples  
 В следующем примере кода определяет родительский язык и региональные параметры каждого конкретного языка и региональных параметров с помощью китайского языка.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant имена представляют текущий стандарт и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CPP/parentculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CS/parentculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/VB/parentculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo ReadOnly (System.Globalization.CultureInfo ci);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo ReadOnly(class System.Globalization.CultureInfo ci) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (ci As CultureInfo) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ ReadOnly(System::Globalization::CultureInfo ^ ci);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.CultureInfo -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.ReadOnly ci" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, для которого создается оболочка.</param>
        <summary>Возвращает доступную только для чтения программу-оболочку для заданного объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Доступная только для чтения программа-оболочка <see cref="T:System.Globalization.CultureInfo" /> для параметра <paramref name="ci" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта оболочка предотвращает каких-либо изменений `ci`, или объекты, возвращенные `ci`.<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и `ci`.<xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства.  
  
   
  
## Examples  
 В следующем примере показано, что <xref:System.Globalization.CultureInfo.ReadOnly%2A> метод помогает защитить <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo> экземпляры, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="ci" /> имеет значение null.</exception>
        <altmember cref="P:System.Globalization.CultureInfo.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.TextInfo TextInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TextInfo : System.Globalization.TextInfo" Usage="System.Globalization.CultureInfo.TextInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение <see cref="T:System.Globalization.TextInfo" />, определяющее систему письма, связанную с данным языком и региональными параметрами.</summary>
        <value>Значение <see cref="T:System.Globalization.TextInfo" />, определяющее систему письма, связанную с данным языком и региональными параметрами.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo.TextInfo%2A> Свойстве содержатся сведения о регистре для строк. Чтобы выполнить регистра без учета языка и региональных параметров, приложение должно использовать <xref:System.Globalization.CultureInfo.TextInfo%2A> свойство <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Globalization.CultureInfo> для Испанский (Испания) с международный порядок сортировки, а вторая <xref:System.Globalization.CultureInfo> с традиционный порядок сортировки.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISOLanguageName : string" Usage="System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает трехбуквенный код ISO 639-2 для языка текущего <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Трехбуквенный код ISO 639-2 для языка текущего <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Например трехбуквенное сокращение для английского языка — «eng».  
  
> [!NOTE]
>  При обмене данными между обрабатывает или сохранение данных, обычно лучше использовать всю <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. С помощью только на языке могут быть потеряны, контекст и данные.  
  
   
  
## Examples  
 В следующем примере кода отображается несколько свойств нейтральных языков и региональных параметров.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant имена представляют текущий стандарт и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsLanguageName : string" Usage="System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает трехбуквенный код для языка, определенный в формате Windows API.</summary>
        <value>Трехбуквенный код для языка, определенный в формате Windows API.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает то же значение, что и метод Windows API `GetLocaleInfo` со значением LOCALE_SABBREVLANGNAME. Например трехбуквенный код для английского языка (США), определенный в Windows API является «enu».  
  
> [!NOTE]
>  При обмене данными между обрабатывает или сохранение данных, обычно лучше использовать всю <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. С помощью только на языке могут быть потеряны, контекст и данные.  
  
   
  
## Examples  
 В следующем примере кода отображается несколько свойств нейтральных языков и региональных параметров.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant имена представляют текущий стандарт и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cultureInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, содержащую имя текущего объекта <see cref="T:System.Globalization.CultureInfo" /> в формате *languagecode2*-*country/regioncode2*.</summary>
        <returns>Строка, содержащая имя текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Object.ToString%2A?displayProperty=nameWithType>. Он возвращает нормализованную версию имени языка и региональных параметров, передаваемые <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> или <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> конструктор или <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> или <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29> метод. Выполняется нормализация результирующую строку путем преобразования символов в *languagecode2* символы нижнего регистра и преобразование в *country/regioncode2* в верхний регистр при необходимости.  
  
 Предварительно определенных названий языков, перечислены в [Справочник по API поддержки национальных языков (NLS)](https://go.microsoft.com/fwlink/?LinkId=200048) страницы в центре разработчиков Go Global.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISOLanguageName : string" Usage="System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает двухбуквенный код ISO 639-1 для языка текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Двухбуквенный код ISO 639-1 для языка текущего <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Например Двухсимвольные сокращения для английского языка — «en». <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> Значение свойства для инвариантных региональных параметров является «iv».  
  
> [!NOTE]
>  При обмене данными между обрабатывает или сохранение данных, обычно лучше использовать всю <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. С помощью только на языке могут быть потеряны, контекст и данные.  
  
 Если ISO 639-1 не определяет язык двухбуквенный код для определенной культуры, <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> свойство возвращает строку, которая состоит из трех и более букв. Дополнительные сведения см. пример.  
  
   
  
## Examples  
 В следующем примере перечисляются языки и региональные параметры которого <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> свойство не состоит из языка двухбуквенный код.  
  
 [!code-csharp[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/cs/twoletterisolanguagename1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/vb/twoletterisolanguagename1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="UseUserOverride">
      <MemberSignature Language="C#" Value="public bool UseUserOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseUserOverride" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.UseUserOverride" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseUserOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseUserOverride { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseUserOverride : bool" Usage="System.Globalization.CultureInfo.UseUserOverride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое указывает, использует ли текущий объект <see cref="T:System.Globalization.CultureInfo" /> параметры языка и региональных параметров, выбранные пользователем.</summary>
        <value>Значение <see langword="true" />, если текущий <see cref="T:System.Globalization.CultureInfo" /> использует параметры языка и региональных параметров, выбранные пользователем; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем языковых и региональных параметров в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, кроме порта по умолчанию для языка и региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущего языка и региональных параметров Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство, свойства и <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 Это свойство задается, если <xref:System.Globalization.CultureInfo> создается.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>