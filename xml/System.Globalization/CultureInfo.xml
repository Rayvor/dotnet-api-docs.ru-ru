<Type Name="CultureInfo" FullName="System.Globalization.CultureInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53b72808a88cea9d98b65b026d11cde56d7d100f" /><Meta Name="ms.sourcegitcommit" Value="a6c4dae9c1ba2cfbc4452907ef5697ad1f870c0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/30/2019" /><Meta Name="ms.locfileid" Value="73082638" /></Metadata><TypeSignature Language="C#" Value="public class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit CultureInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CultureInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type CultureInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет сведения об определенном языке и региональных параметрах (которые в совокупности называются *языковым стандартом* для разработки неуправляемого кода). Эти сведения включают имена языков и региональных параметров, систему письма, используемый календарь, порядок сортировки строк и форматы дат и чисел.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Globalization.CultureInfo> предоставляет сведения, зависящие от языка и региональных параметров, такие как язык, язык, страна или регион, календарь и соглашения, связанные с определенным языком и региональными параметрами. Этот класс также предоставляет доступ к экземплярам <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>и <xref:System.Globalization.TextInfo> объектов, относящихся к определенному языку и региональным параметрам. Эти объекты содержат сведения, необходимые для операций, связанных с культурой, таких как регистр, форматирование дат и чисел, а также сравнение строк. Класс <xref:System.Globalization.CultureInfo> используется напрямую или косвенно классами, которые отформатируют, анализируют или обрабатывают данные, относящиеся к языку и региональным параметрам, такие как <xref:System.String>, <xref:System.DateTime>, <xref:System.DateTimeOffset>и числовые типы.  
  
 Содержание  
  
 [Имена и идентификаторы языка и региональных параметров](#CultureNames)   
 [Инвариантные, нейтральные и определенные языки и региональные параметры](#Invariant)   
 [Пользовательские языки и региональные параметры](#Custom)   
 [Данные динамического языка и региональных параметров](#Dynamic)   
 [CultureInfo и культурные данные](#cultureinfo-and-cultural-data) [текущий язык](#Current) и региональные параметры пользовательского интерфейса   
 [Получение всех языков и региональных параметров](#GetAll)   
 [Культура и потоки](#Threads)   
 [Язык и региональные параметры и домены приложений](#AppDomain)   
 [Культура и асинхронные операции на основе задач](#Async)   
   [сериализации объектов CultureInfo](#Serialization)  
 [Панель управления переопределяет](#CPanel)   
 [Альтернативные порядки сортировки](#AlternateSort)   
 [Культура и приложения Windows](#Windows)  

<a name="CultureNames"></a>   
## <a name="culture-names-and-identifiers"></a>Имена и идентификаторы языка и региональных параметров  
 Класс <xref:System.Globalization.CultureInfo> задает уникальное имя для каждого языка и региональных параметров на основе RFC 4646. Имя представляет собой комбинацию кода языка и региональных параметров в формате ISO 639 2 с буквами в нижнем регистре, связанной с языком, и кодом подкультуры в верхнем регистре ISO 3166 2, связанном со страной или регионом. Кроме того, для приложений, предназначенных для [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] или более поздней версии и работающих под управлением Windows 10 или более поздней версии, поддерживаются имена языков и региональных параметров, соответствующие допустимым тегам языка BCP-47.  
  
> [!NOTE]
>  Если имя языка и региональных параметров передается конструктору класса или методу, например <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> или <xref:System.Globalization.CultureInfo>, его регистр не имеет значения.  
  
 Формат имени языка и региональных параметров, основанный на стандарте RFC 4646, — *languagecode2*>-*Country/regioncode2*, где *languagecode2* — двухбуквенный код языка, а *Country/regioncode2* — это двухбуквенный. Примеры включают ja-JP для японского языка (Япония) и EN-US для английского языка (США). В случаях, когда код языка с двумя буквами недоступен, используется трехбуквенный код, производный от ISO 639-2.  
  
 Обратите внимание, что некоторые имена языков и региональных параметров также указывают скрипт ISO 15924. Например, Цирл задает кириллицу script, а ЛАТН — Латинский скрипт. Имя языка и региональных параметров, включающее сценарий, использует шаблон *languagecode2*-*скрипттаг*-*Country/regioncode2*. Примером такого типа имени языка и региональных параметров является uz-Цирл-UZ для узбекский (кириллица, Узбекистан). В операционных системах Windows до Windows Vista имя языка и региональных параметров, включающее сценарий, использует шаблон *languagecode2*-*country/regioncode2*-*СКРИПТТАГ*, например uz-UZ-Цирл для узбекский (кириллица, Узбекистан ).  
  
 Нейтральный язык и региональные параметры задаются только с помощью кода языка из двух букв в нижнем регистре. Например, fr указывает нейтральный язык и региональные параметры для французского языка, а de — нейтральный язык и региональные параметры для немецкого языка.  
  
> [!NOTE]
>  Существует два имени языка и региональных параметров, противоречащих этому правилу. Языки и региональные параметры (упрощенное письмо) с именем zh-Ханс и китайский (традиционное письмо) с именем zh-Hant являются нейтральными. Имена языка и региональных параметров представляют текущий стандарт и должны использоваться, если нет причины использовать старые имена zh-CHS и zh-CHT.  
  
 Идентификатор языка и региональных параметров — это стандартное международные числовые сокращения и компоненты, необходимые для уникальной идентификации одного из установленных языков и региональных параметров. Приложение может использовать предопределенные идентификаторы языка и региональных параметров или определять пользовательские идентификаторы.  
  
 В этом и других классах пространства имен <xref:System.Globalization?displayProperty=nameWithType> используются определенные стандартные имена и идентификаторы языка и региональных параметров. Подробные сведения о культуре для систем Windows см. в столбце **тег языка** в [списке имен языков и регионов, поддерживаемых Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Теги языков указаны в соответствии со стандартом [BCP 47](https://tools.ietf.org/html/bcp47).  
  
 Помните, что имена и идентификаторы языка и региональных параметров представляют только подмножество языков и региональных параметров, которые можно найти на определенном компьютере. Версии Windows или пакеты обновления могут изменять доступные языки и региональные параметры. Приложения добавляют пользовательские языки и региональные параметры с помощью класса <xref:System.Globalization.CultureAndRegionInfoBuilder>. Пользователи добавляют собственные пользовательские языки и региональные параметры с помощью средства Microsoft Locale Builder. Построитель языковых стандартов Майкрософт написан на управляемом коде с помощью класса `CultureAndRegionInfoBuilder`.  
  
 Несколько уникальных имен тесно связаны с культурой, особенно имена, связанные со следующими членами класса:  
  
-   <xref:System.Globalization.CultureInfo.ToString%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CompareInfo.Name%2A?displayProperty=nameWithType>  
  
<a name="Invariant"></a>   
## <a name="invariant-neutral-and-specific-cultures"></a>Инвариантные, нейтральные и конкретные языки и региональные параметры  
 Языки и региональные параметры обычно группируются в три набора: инвариантные, нейтральные и конкретные языки и региональные параметры.  
  
 Инвариантный язык и региональные параметры не чувствительны к языку и региональным параметрам. Приложение задает инвариантный язык и региональные параметры по имени, используя пустую строку ("") или ее идентификатор. <xref:System.Globalization.CultureInfo.InvariantCulture%2A> определяет экземпляр инвариантного языка и региональных параметров. Он связан с английским языком, но не с какой-либо страной или регионом. Он используется практически в любом методе в пространстве имен `Globalization`, для которого требуется язык и региональные параметры.  
  
 Нейтральный язык и региональные параметры — это язык и региональные параметры, связанные с языком, но не со страной или регионом. Конкретный язык и региональные параметры — это язык и региональные параметры, связанные с языком и страной или регионом. Например, fr является нейтральным именем для французского языка и региональных параметров, а fr-FR — именем конкретной французской (Франция) языка и региональных параметров. Обратите внимание, что китайский (упрощенное и традиционное письмо) также считаются нейтральными языками и региональными параметрами.  
  
 Создание экземпляра класса <xref:System.Globalization.CompareInfo> для нейтрального языка и региональных параметров не рекомендуется, так как содержащиеся в нем данные являются произвольными. Чтобы отобразить и отсортировать данные, укажите как язык, так и регион. Кроме того, свойство <xref:System.Globalization.CompareInfo.Name%2A> объекта <xref:System.Globalization.CompareInfo>, созданного для нейтрального языка и региональных параметров, возвращает только страну и не включает в себя регион.  
  
 Определенные языки и региональные параметры имеют иерархию, в которой родительский элемент определенного языка и региональных параметров является нейтральным, а родительский объект нейтрального языка и региональных параметров — инвариантный язык и региональные параметры. Свойство <xref:System.Globalization.CultureInfo.Parent%2A> содержит нейтральный язык и региональные параметры, связанные с конкретным языком и региональными параметрами. Пользовательские языки и региональные параметры должны определять свойство <xref:System.Globalization.CultureInfo.Parent%2A> в согласовании с этим шаблоном.  
  
 Если ресурсы для определенного языка и региональных параметров недоступны в операционной системе, используются ресурсы для связанной нейтральной культуры. Если ресурсы для нейтрального языка и региональных параметров недоступны, используются ресурсы, внедренные в основную сборку. Дополнительные сведения о процессе резервного использования ресурсов см. в разделе [Упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
 Список языковых стандартов в API Windows немного отличается от списка языков и региональных параметров, поддерживаемых .NET Framework. Если требуется взаимодействие с Windows, например с помощью механизма p/Invoke, приложение должно использовать определенные языки и региональные параметры, определенные для операционной системы. Использование определенного языка и региональных параметров обеспечивает согласованность с эквивалентным региональным стандартом Windows, который определяется с помощью идентификатора локали, который совпадает с <xref:System.Globalization.CultureInfo.LCID%2A>.  
  
 <xref:System.Globalization.DateTimeFormatInfo> или <xref:System.Globalization.NumberFormatInfo> можно создать только для инвариантного языка и региональных параметров или для конкретных языков и региональных параметров, а не для нейтральных языков и региональных параметров.  
  
 Если <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> является <xref:System.Globalization.TaiwanCalendar> но <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> не имеет значение zh-TW, то <xref:System.Globalization.DateTimeFormatInfo.NativeCalendarName%2A?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A?displayProperty=nameWithType>и <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A?displayProperty=nameWithType> возвращают пустую строку ("").  
  
<a name="Custom"></a>   
## <a name="custom-cultures"></a>Пользовательские языки и региональные параметры  
 В дополнение к стандартным языкам и региональным параметрам, поддерживаемым операционной системой Windows и .NET Framework, .NET Framework поддерживает три типа пользовательских языков и региональных параметров:  
  
-   Новые языки и региональные параметры, дополняющие языки и региональные параметры, доступные в Windows или .NET Framework. Например, приложение может установить <xref:System.Globalization.CultureInfo> объект, представляющий язык и региональные параметры "fj-FJ" (или Фижан (Фиджи)) в системе.  
  
-   Языки и региональные параметры, свойства которых отличаются от свойств стандартных языков и региональных параметров, поддерживаемых Windows и .NET Framework.  
  
-   Стандартные языки и региональные параметры с переопределениями пользователей. Пользователь может использовать приложение " **язык и региональные стандарты** " на **панели управления** для настройки существующих значений свойств языка и региональных параметров.  
  
> [!NOTE]
>  Класс <xref:System.Globalization.CultureAndRegionInfoBuilder> можно использовать для определения, сохранения и регистрации пользовательских языков и региональных параметров, которые дополняют или заменяют существующие языки и региональные параметры. Метод <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A?displayProperty=nameWithType> создает файл языка разметки данных локали (LDML), который можно использовать для установки пользовательского языка и региональных параметров в целевых системах. Пошаговые инструкции по использованию класса <xref:System.Globalization.CultureAndRegionInfoBuilder> для создания нового или замещающего языка и региональных параметров см. в разделе <xref:System.Globalization.CultureAndRegionInfoBuilder> класса.  
  
 Поскольку .NET Framework поддерживает пользовательские языки и региональные параметры, при работе с данными, зависящими от языка и региональных параметров, следует учитывать следующие особенности.  
  
-   Пользовательские языки и региональные параметры могут иметь значения, превышающие диапазоны предопределенных языков и региональных параметров. Например, некоторые языки и региональные параметры имеют редко длинные названия месяцев, непредвиденные форматы даты и времени, а также другие необычные данные.  
  
-   При отображении в пользовательском интерфейсе данных, зависящих от языка и региональных параметров, следует учитывать пользовательские настройки. Например, пользователю может потребоваться 24-часовой формат даты или ГГГГММДД.  
  
-   Помните, что пользовательские языки и региональные параметры переопределяют значения по умолчанию. Поэтому нельзя считать, что данные языка и региональных параметров стабильны. Названия стран, форматы чисел и дат, а также опечатки могут измениться в будущем. Если требуется выполнить сериализацию данных с учетом языка и региональных параметров, например строк даты и времени, которые будут переданы функциям синтаксического анализа даты и времени, следует использовать инвариантный язык и региональные параметры или конкретный.  
  
 Значение свойства <xref:System.Globalization.CultureInfo.CultureTypes%2A> для пользовательских языков и региональных параметров, установленных в системе, включает флаг <xref:System.Globalization.CultureTypes?displayProperty=nameWithType>, а для пользовательских языков и региональных параметров назначается значение свойства <xref:System.Globalization.CultureInfo.LCID%2A> `LOCALE_CUSTOM_UNSPECIFIED` (0x1000 или 4096). Обратите внимание, что начиная с Windows 10, это значение также назначается системным языкам и региональным параметрам, в которых отсутствуют все данные языка и региональных параметров.  

## <a name="cultureinfo-and-cultural-data"></a>CultureInfo и культурные данные

.NET наследует свои региональные данные из одного из различных источников, в зависимости от реализации, платформы и версии.

- В .NET Framework 3,5 и более ранних версиях данные языка и региональных параметров предоставляются как в операционной системе Windows, так и в .NET Framework.

- В .NET Framework 4 и более поздних версиях данные языка и региональных параметров обеспечиваются операционной системой Windows.

- Во всех версиях .NET Core, работающих в Windows, региональные данные обеспечиваются операционной системой Windows.

- Во всех версиях .NET Core, работающих на платформах UNIX, региональные данные предоставляются [библиотекой международных компонентов для Юникода (ICU)](http://site.icu-project.org/). Конкретная версия библиотеки ICU зависит от конкретной операционной системы.

По этой причине язык и региональные параметры, доступные в конкретной реализации .NET, платформе или версии, могут быть недоступны в другой реализации, платформе или версии .NET.

Некоторые `CultureInfo` объекты различаются в зависимости от базовой платформы. В частности, «zh-CN» или «китайский (упрощенное письмо, Китай)» и «zh-TW» или «китайский (традиционное письмо, Тайвань)» — это доступные языки и региональные параметры в системах UNIX. "zh-CN" — это псевдоним для языка и региональных параметров "zh-Ханс-CN", а "zh-TW" — псевдоним для языка и региональных параметров "zh-Hant-TW". При вызовах метода <xref:System.Globalization.CultureInfo.GetCultures%2A> псевдонимы языка и региональных параметров не возвращаются и могут иметь разные значения свойств, включая различные языки и региональные параметры <xref:System.Globalization.CultureInfo.Parent>, чем их аналоги в Windows. Для языков и региональных параметров zh-CN и zh-TW эти дифференес включают следующее:

- В системах Windows родительский язык и региональные параметры "zh-CN" имеют значение "zh-Ханс", а родительский язык и региональные параметры "zh-TW" — "zh-Hant". Родительский язык и региональные параметры обоих языков — zh. В системах UNIX родительскими для обоих языков являются "zh". Это означает, что, если вы не предоставляете ресурсы для языка и региональных параметров "zh-CN" или "zh-TW", но предоставляете ресурсы для нейтрального языка и региональных параметров "zh-Ханс" или "zh-Hant", приложение загрузит ресурсы для нейтрального языка и региональных параметров в Windows, но не в UNIX . В системах UNIX необходимо явно задать <xref:System.Globalization.CultureInfo.CurrentUICulture> потока: "zh-Ханс" или "zh-Hant". 

- В системах Windows вызов <xref:System.Globalization.CultureInfo.Equals%2A?displayProperty=nameWithType> в экземпляре, который представляет язык и региональные параметры "zh-CN" и передает его экземпляр "zh-Ханс-CN", возвращает `true`. В системах UNIX вызов метода возвращает `false`. Это поведение также применяется для вызова <xref:System.Globalization.CultureInfo.Equals%2A> в экземпляре «zh-TW» <xref:System.Globalization.CultureInfo> и передачи ему экземпляра «zh-Hant-TW».

<a name="Dynamic"></a>   
## <a name="dynamic-culture-data"></a>Динамические данные о культуре  
 За исключением инвариантного языка и региональных параметров, данные языка и региональных параметров являются динамическими. Это справедливо даже для предопределенных языков и региональных параметров. Например, страны или регионы принимают новые валюты, изменяют написание слов или меняют предпочтительный календарь, а определения языка и региональных параметров изменяют их.  Пользовательские языки и региональные параметры могут быть изменены без предварительного уведомления, и любая конкретная культура может быть переопределена с помощью пользовательской замещающей культуры. Кроме того, как описано ниже, отдельный пользователь может переопределить культурные предпочтения. Приложения всегда должны получать данные языка и региональных параметров во время выполнения.  
  
> [!CAUTION]
>  При сохранении данных приложение должно использовать инвариантный язык и региональные параметры, двоичный формат или конкретный формат, не зависящий от языка и региональных параметров. Данные, сохраненные в соответствии с текущими значениями, связанными с конкретным языком и региональными параметрами, отличными от инвариантных, могут стать нечитаемыми или могут измениться в случае изменения этих параметров.  
  
<a name="Current"></a>   
## <a name="the-current-culture-and-current-ui-culture"></a>Текущий и текущий язык и региональные параметры пользовательского интерфейса  
 Каждый поток в приложении .NET имеет текущий язык и региональные параметры пользовательского интерфейса. Текущий язык и региональные параметры определяют соглашения о форматировании для дат, времени, чисел и денежных значений, порядок сортировки текста, соглашения о регистре и способы сравнения строк. Текущий язык и региональные параметры пользовательского интерфейса используются для получения ресурсов, зависящих от языка и региональных параметров, во время выполнения.  
  
> [!NOTE]
>  Сведения о том, как текущий и текущий язык и региональные параметры пользовательского интерфейса определяются на основе каждого потока, см. в разделе [Culture и threads](#Threads) . Сведения о том, как текущий и текущий язык и региональные параметры пользовательского интерфейса определяются в потоках, выполняемых в новом домене приложения, а также в потоках, пересекающих границы домена приложения, см. в разделе [культуры и домены приложений](#AppDomain) . Сведения о том, как текущая и текущая определяется в потоках, выполняющих асинхронные операции на основе задач, см. в разделе [культура и асинхронные операции на основе задач](#Async) .  
  
 Дополнительные сведения о текущем языке и региональных параметрах см. в разделе Свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>. Более подробные сведения о текущем языке и региональных параметрах пользовательского интерфейса см. в разделе Свойства <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>.  
  
### <a name="retrieving-the-current-and-current-ui-cultures"></a>Получение текущих и текущих языков и региональных параметров пользовательского интерфейса  
 Объект <xref:System.Globalization.CultureInfo>, представляющий текущий язык и региональные параметры, можно получить одним из двух способов:  
  
-   Путем получения значения свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.  
  
-   Путем получения значения свойства [Thread. CurrentThread. CurrentCulture](<xref:System.Threading.Thread.CurrentCulture>) .  
  
 В следующем примере извлекаются оба значения свойств, сравниваются, чтобы показать, что они равны, и отображает имя текущего языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Current1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Current1.vb#1)]  
  
 Объект <xref:System.Globalization.CultureInfo>, представляющий текущий язык и региональные параметры пользовательского интерфейса, можно получить одним из двух способов:  
  
-   Путем получения значения свойства <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>.  
  
-   Путем получения значения свойства [Thread. CurrentThread. CurrentUICulture](<xref:System.Threading.Thread.CurrentUICulture>) .  
  
 В следующем примере извлекаются оба значения свойств, сравниваются, чтобы показать, что они равны, и отображает имя текущего языка и региональных параметров пользовательского интерфейса.  
  
 [!code-csharp[System.Globalization.CultureInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/CurrentUI1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/CurrentUI1.vb#2)]  
  
### <a name="setting-the-current-and-current-ui-cultures"></a>Настройка текущего и текущего языка и региональных параметров пользовательского интерфейса  
 Чтобы изменить культуру и культуру пользовательского интерфейса для потока, выполните следующие действия.  
  
1.  Создайте экземпляр объекта <xref:System.Globalization.CultureInfo>, который представляет этот язык и региональные параметры, вызвав конструктор <xref:System.Globalization.CultureInfo> класса и передав ему имя языка и региональных параметров. Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> создает объект <xref:System.Globalization.CultureInfo>, отражающий пользовательские переопределения, если новый язык и региональные параметры совпадают с текущим языком и региональными параметрами Windows.   Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> позволяет указать, соответствует ли недавно созданному экземпляру <xref:System.Globalization.CultureInfo> переопределяемые пользователем объекты, если новый язык и региональные параметры совпадают с текущим языком и региональными параметрами Windows.  
  
2.  Назначьте объект <xref:System.Globalization.CultureInfo> свойству <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> или <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> в .NET Core и .NET Framework 4,6 и более поздних версий. (В .NET Framework 4.5.2 и более ранних версиях йоук присвоить объект `CultureInfo` свойству <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> или <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>.)   
  
 В следующем примере извлекается текущий язык и региональные параметры. Если это все, отличное от французского (Франция) языка и региональных параметров, оно изменяет текущий язык и региональные параметры на французский (Франция). В противном случае текущий язык и региональные параметры меняются на французский (Люксембург).  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 В следующем примере извлекается текущий язык и региональные параметры. Если это какой-либо другой словенский язык (Словения), он изменяет текущий язык и региональные параметры на словенский (Словения). В противном случае текущий язык и региональные параметры меняются на хорватский (Хорватия).  
  
 [!code-csharp[System.Globalization.CultureInfo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/ChangeUI1.cs#4)]
 [!code-vb[System.Globalization.CultureInfo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/ChangeUI1.vb#4)]  
  
<a name="GetAll"></a>   
## <a name="getting-all-cultures"></a>Получение всех культур  
 Вы можете получить категории языков и региональных параметров для отдельных массивов, а также все языки и региональные параметры, доступные на локальном компьютере, вызвав метод <xref:System.Globalization.CultureInfo.GetCultures%2A>. Например, можно получить пользовательские и региональные параметры, а также отдельные или нейтральные языки и региональные параметры.  
  
 В следующем примере метод <xref:System.Globalization.CultureInfo.GetCultures%2A> вызывается дважды, сначала с членом перечисления <xref:System.Globalization.CultureTypes?displayProperty=nameWithType>, чтобы получить все пользовательские языки и региональные параметры, а затем с элементом перечисления <xref:System.Globalization.CultureTypes?displayProperty=nameWithType>, чтобы получить все заменяющие языки и региональные параметры.  
  
 [!code-csharp[System.Globalization.CultureInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/GetCultures1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/GetCultures1.vb#5)]  
  
<a name="Threads"></a>   
## <a name="culture-and-threads"></a>Культура и потоки  
 При запуске нового потока приложения его текущий и текущий язык и региональные параметры пользовательского интерфейса определяются текущей культурой системы, а не культурой текущего потока. В следующем примере демонстрируется это различие. Он устанавливает язык и региональные параметры текущего языка и региональных параметров пользовательского интерфейса для потока приложения на французский (Франция) (fr-FR). Если текущий язык и региональные параметры уже являются fr-FR, в примере задается язык и региональные параметры "Английский (США)" (EN-US). Он отображает три случайных числа в виде денежных значений, а затем создает новый поток, который, в свою очередь, отображает три более случайных числа в виде значений валюты. Но, как видно из выходных данных в примере, значения валют, отображаемые новым потоком, не соответствуют соглашениям о форматировании для французского языка и региональных параметров (Франция), в отличие от выходных данных основного потока приложения.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/defaultthread1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/defaultthread1.vb#1)]  
  
 В версиях .NET Framework до [!INCLUDE[net_v45](~/includes/net-v45-md.md)], наиболее распространенным способом обеспечения совместной работы основного потока приложения с другими рабочими потоками является передача имени языка и региональных параметров уровня приложения или объекта <xref:System.Globalization.CultureInfo>, представляющего Культура уровня приложения для делегата <xref:System.Threading.ParameterizedThreadStart?displayProperty=nameWithType>. В следующем примере используется этот подход, чтобы убедиться, что значения валюты, отображаемые двумя потоками, соответствуют соглашениям о форматировании одного и того же языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/perthread1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/perthread1.vb#2)]  
  
 Язык и региональные параметры пользовательского интерфейса потоков пула потоков можно задать аналогичным образом, вызвав метод <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType>.  
  
 Начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)]можно задать язык и региональные параметры пользовательского интерфейса для всех потоков в домене приложения напрямую, назначив <xref:System.Globalization.CultureInfo> объект, представляющий этот язык и региональные параметры, в свойствах <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>. В следующем примере эти свойства используются, чтобы убедиться, что все потоки в домене приложения по умолчанию используют одну и ту же культуру.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/setthreads1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/setthreads1.vb#3)]  
  
> [!WARNING]
>  Хотя свойства <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> являются статическими членами, они определяют язык и региональные параметры по умолчанию и региональные параметры пользовательского интерфейса по умолчанию только для домена приложения, который является текущим на момент задания этих значений свойств. Дополнительные сведения см. в следующем разделе: [язык и региональные параметры и домены приложений](#AppDomain).  
  
 При присвоении значений свойствам <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> язык и региональные параметры и язык пользовательского интерфейса для потоков в домене приложения также изменяются, если им не было явно назначен язык и региональные параметры. Однако эти потоки отображают новые параметры языка и региональных параметров только при их выполнении в текущем домене приложения. Если эти потоки выполняются в другом домене приложения, их культура станет языком и региональными параметрами по умолчанию, определенными для этого домена приложения. В результате рекомендуется всегда задавать язык и региональные параметры для основного потока приложения, а не полагаться на <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства, чтобы изменить его.  
  
<a name="AppDomain"></a>   
## <a name="culture-and-application-domains"></a>Язык и региональные параметры и домены приложений  
 <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> — это статические свойства, которые явно определяют язык и региональные параметры по умолчанию только для домена приложения, который является текущим при установке или получении значения свойства. В следующем примере для языка и региональных параметров по умолчанию в домене приложения по умолчанию устанавливается значение французский (Франция), а затем используется класс <xref:System.AppDomainSetup> и делегат <xref:System.AppDomainInitializer>, чтобы задать язык и региональные параметры по умолчанию и язык пользовательского интерфейса в новом домене приложения на русском языке ( Россия). Затем один поток выполняет два метода в каждом домене приложения. Обратите внимание, что культура и язык и региональные параметры пользовательского интерфейса не заданы явно. они являются производными от языка и региональных параметров по умолчанию и пользовательского интерфейса домена приложения, в котором выполняется поток. Обратите внимание, что свойства <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> возвращают значения <xref:System.Globalization.CultureInfo> по умолчанию для домена приложения, который является текущим при вызове метода.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/cs/appdomainex1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/vb/appdomainex1.vb#1)]  
  
 Дополнительные сведения о языках и региональных параметрах и доменах приложений см. в разделе "домены приложений и потоки" раздела " [домены](~/docs/framework/app-domains/application-domains.md) приложений".  
  
<a name="Async"></a>   
## <a name="culture-and-task-based-asynchronous-operations"></a>Культура и асинхронные операции на основе задач  
 [Шаблон асинхронного программирования на основе задач](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md) использует <xref:System.Threading.Tasks.Task> и <xref:System.Threading.Tasks.Task%601> объекты для асинхронного выполнения делегатов в потоках пула потоков. Определенный поток, в котором выполняется определенная задача, не известен заранее, но определяется только во время выполнения.  
  
 Для приложений, предназначенных для [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздних версий, язык и региональные параметры являются частью контекста асинхронной операции. Иными словами, начиная с приложений, предназначенных для [!INCLUDE[net_v46](~/includes/net-v46-md.md)], асинхронные операции по умолчанию наследуют значения свойств <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> потока, из которого они запускаются. Если текущий язык и региональные параметры или текущий язык и региональные параметры пользовательского интерфейса отличаются от языка и региональных параметров системы, текущий язык и региональные параметры пересекает границы потоков и становится текущим языком и региональными параметрами потока пула потоков, выполняющего асинхронную операцию.  
  
 Следующий пример иллюстрирует это. Он использует атрибут <xref:System.Runtime.Versioning.TargetFrameworkAttribute> для назначения [!INCLUDE[net_v46](~/includes/net-v46-md.md)]. В примере определяется <xref:System.Func%601> делегат, `formatDelegate`, который возвращает некоторые числа в формате денежных значений. В примере текущий язык и региональные параметры системы переменяются на французский (Франция) или, если французский (Франция) уже является текущим языком и региональными параметрами языка (США). Затем:  
  
-   Вызывает делегат напрямую, чтобы он выполнялся синхронно в главном потоке приложения.  
  
-   Создает задачу, которая выполняет делегат асинхронно в потоке пула потоков.  
  
-   Создает задачу, которая выполняет делегат синхронно в главном потоке приложения, вызывая метод <xref:System.Threading.Tasks.Task.RunSynchronously%2A?displayProperty=nameWithType>.  
  
 Как видно из выходных данных в примере, при изменении текущего языка и региональных параметров на французский (Франция) текущий язык и региональные параметры потока, из которых задачи вызываются асинхронно, становятся текущими языками и региональными параметрами для этой асинхронной операции.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture1.vb#1)]  
  
 Для приложений, предназначенных для версий .NET Framework до [!INCLUDE[net_v46](~/includes/net-v46-md.md)]или для приложений, которые не предназначены для определенной версии .NET Framework, язык и региональные параметры вызывающего потока не являются частью контекста задачи. Вместо этого, если только он не определен явно, язык и региональные параметры новых потоков по умолчанию являются языком и региональными параметрами системы. В следующем примере, который идентичен предыдущему примеру, за исключением того, что в нем отсутствует атрибут <xref:System.Runtime.Versioning.TargetFrameworkAttribute>, показано это. Поскольку язык и региональные параметры системы, в которой выполнялся пример, были англоязычными (США), язык и региональные параметры задачи, выполняемой асинхронно в потоке пула потоков, — это en-US, а не fr-FR.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture2.vb#2)]  
  
 Для приложений, предназначенных для версий .NET Framework из [!INCLUDE[net_v45](~/includes/net-v45-md.md)] и более поздних версиях, но до [!INCLUDE[net_v46](~/includes/net-v46-md.md)]можно использовать свойства <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>, чтобы обеспечить использование языка и региональных параметров вызывающего потока в асинхронных задачах, выполняемых в пуле потоков. многопоточно. Следующий пример идентичен предыдущему, за исключением того, что он использует свойство <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>, чтобы убедиться, что потоки пула потоков имеют те же региональные параметры, что и основной поток приложения.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture3.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture3.vb#3)]  
  
 <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> — это свойства домена для каждого приложения; то есть, они устанавливают язык и региональные параметры по умолчанию для всех потоков, которым явно не присвоено значение языка и региональных параметров в определенном домене приложения. Однако для приложений, предназначенных для [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздней версии, язык и региональные параметры вызывающего потока остаются частью контекста асинхронной задачи, даже если задача пересекает границы домена приложения.  
  
 В следующем примере показано, что язык и региональные параметры вызывающего потока остаются текущим языком и региональными параметрами асинхронной операции на основе задач, даже если метод, выполняемый задачей, пересекает границы домена приложения. Он определяет класс `DataRetriever`с одним методом `GetFormattedNumber`, который возвращает случайное число двойной точности с плавающей запятой в диапазоне от 1 до 1 000 в формате денежного значения. Выполняется первая задача, которая просто создает экземпляр `DataRetriever` и вызывает его метод `GetFormattedNumber`. Вторая задача сообщает о текущем домене приложения, создает новый домен приложения, экземпляр `DataRetriever` в новом домене приложения и вызывает его метод `GetFormattedNumber`. Как видно из выходных данных в примере, текущий язык и региональные параметры остаются в вызывающем потоке, первой задаче и второй задаче как при выполнении в основном домене приложения, так и во втором домене приложения.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture4.cs#4)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture4.vb#4)]  
  
<a name="Serialization"></a>  
## <a name="cultureinfo-object-serialization"></a>Сериализация объектов CultureInfo  
 При сериализации <xref:System.Globalization.CultureInfo>ного объекта все фактически хранимые объекты <xref:System.Globalization.CultureInfo.Name%2A> и <xref:System.Globalization.CultureInfo.UseUserOverride%2A>. Он успешно десериализуется только в среде, в которой <xref:System.Globalization.CultureInfo.Name%2A> имеет то же значение. В следующих трех примерах показано, почему это не всегда так:  
  
- Если значение свойства <xref:System.Globalization.CultureInfo.CultureTypes%2A> равно <xref:System.Globalization.CultureTypes.InstalledWin32Cultures?displayProperty=nameWithType>, и если этот язык и региональные параметры впервые появились в определенной версии операционной системы Windows, десериализовать ее в более ранней версии Windows невозможно. Например, если язык и региональные параметры были введены в Windows 10, то ее нельзя десериализовать в Windows 8.  
  
-   Если <xref:System.Globalization.CultureInfo.CultureTypes%2A> значение равно <xref:System.Globalization.CultureTypes.UserCustomCulture?displayProperty=nameWithType>и на компьютере, на котором он десериализован, не установлена эта пользовательская культура, ее десериализация невозможна.  
  
-   Если <xref:System.Globalization.CultureInfo.CultureTypes%2A> значение равно <xref:System.Globalization.CultureTypes.ReplacementCultures?displayProperty=nameWithType>, а компьютер, на котором она десериализована, не имеет этого заменяющего языка, он десериализуется с тем же именем, но не со всеми теми же характеристиками. Например, если en-US является замещающим языком и региональными параметрами на компьютере а, но не на компьютере б, и если объект <xref:System.Globalization.CultureInfo>, ссылающийся на этот язык, сериализуется на компьютере а и десериализуется на компьютере B, то ни одна из пользовательских характеристик языка и региональных параметров не передается. Язык и региональные параметры успешно десериализуются, но с другим значением.  
  
<a name="CPanel"></a>   
## <a name="control-panel-overrides"></a>Переопределения панели управления  
 Пользователь может переопределить некоторые значения, связанные с текущим языком и региональными параметрами Windows, в разделе язык и региональные стандарты панели управления. Например, пользователь может выбрать отображение даты в другом формате или использовать валюту, отличную от используемой по умолчанию для языка и региональных параметров. Как правило, приложения должны учитывать эти переопределения пользователей.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> `true` и указанные язык и региональные параметры соответствуют текущему языку и региональным параметрам Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские параметры для свойств экземпляра <xref:System.Globalization.DateTimeFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращенный свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств будут неопределенными.  
  
<a name="AlternateSort"></a>   
## <a name="alternate-sort-orders"></a>Альтернативные порядки сортировки  
 Некоторые языки и региональные параметры поддерживают более одного порядка сортировки. Например:  
  
-   Испанский (Испания) язык и региональные параметры имеют два порядка сортировки: по умолчанию международный порядок сортировки и традиционный порядок сортировки. При создании экземпляра объекта <xref:System.Globalization.CultureInfo> с именем языка и региональных параметров es-ES используется международный порядок сортировки. При создании экземпляра объекта <xref:System.Globalization.CultureInfo> с именем языка и региональных параметров es-ES-траднл используется традиционный порядок сортировки.  
  
-   Язык и региональные параметры zh-CN (китайский (упрощенное письмо, КНР)) поддерживают два порядка сортировки: по произношению (по умолчанию) и по числу штрихов. При создании экземпляра объекта <xref:System.Globalization.CultureInfo> с именем языка и региональных параметров zh-CN используется порядок сортировки по умолчанию. При создании экземпляра объекта <xref:System.Globalization.CultureInfo> с локальным идентификатором 0x00020804 строки сортируются по числу штрихов.  
  
 В следующей таблице перечислены языки и региональные параметры, поддерживающие альтернативные порядки сортировки, а также идентификаторы по умолчанию и альтернативные порядки сортировки.  
  
|Название языка и региональных параметров|culture|Имя и идентификатор сортировки по умолчанию|Альтернативное имя и идентификатор сортировки|  
|------------------|-------------|--------------------------------------|----------------------------------------|  
|es-ES|Испанский (Испания)|Национальные 0x00000C0A|Обычную 0x0000040A|  
|zh-TW|Китайский (Тайвань)|Число штрихов: 0x00000404|Бопомофо 0x00030404|  
|zh-CN|Китайский (КНР)|Произношение 0x00000804|Число штрихов: 0x00020804|  
|zh-HK|Китайский (Гонконг)|Число штрихов: 0x00000c04|Число штрихов: 0x00020c04|  
|zh-SG|Китайский (Сингапур)|Произношение 0x00001004|Число штрихов: 0x00021004|  
|zh-MO|Китайский (Макао, САР)|Произношение 0x00001404|Число штрихов: 0x00021404|  
|ja-JP|Японский (Япония)|По умолчанию: 0x00000411|Юникод: 0x00010411|  
|ko-KR|Корейский (Корея)|По умолчанию: 0x00000412|Корейский Ксвансунг — Юникод: 0x00010412|  
|de-DE|Немецкий (Германия)|Словаря 0x00000407|Сортировка по телефонной книге (DIN): 0x00010407|  
|hu-HU|Венгерский (Венгрия)|По умолчанию: 0x0000040e|Техническая сортировка: 0x0001040e|  
|ка-GE|Грузинский (Грузия)|Обычную 0x00000437|Современная сортировка: 0x00010437|  
  
<a name="Windows"></a>   
## <a name="the-current-culture-and-uwp-apps"></a>Текущие язык и региональные параметры и приложения UWP  
 В приложениях универсальная платформа Windows (UWP) свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> доступны для чтения и записи так же, как и в .NET Framework и в приложениях .NET Core. Однако приложения UWP распознают один язык и региональные параметры. Свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> сопоставляются с первым значением в коллекции [Windows. ApplicationModel. Resources. Core. ResourceManager. дефаултконтекст. Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) .  

В .NET Framework и приложениях .NET Core текущий язык и региональные параметры — это параметр для каждого потока, а свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> соответствуют языковым параметрам и региональным параметрам пользовательского интерфейса текущего потока. В приложениях UWP текущий язык и региональные параметры сопоставляются с коллекцией [Windows. ApplicationModel. Resources. Core. ResourceManager. дефаултконтекст. Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) , которая является глобальным параметром. Установка свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> или <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> изменяет язык и региональные параметры для всего приложения. Культура не может быть задана для каждого потока.
  
## Examples  
 В следующем примере показано, как создать объект <xref:System.Globalization.CultureInfo> для испанского языка (Испания) с международной сортировкой и другим <xref:System.Globalization.CultureInfo>ным объектом с традиционной сортировкой.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
    <altmember cref="T:System.Globalization.RegionInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : int -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Предварительно определенный идентификатор <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.LCID" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или идентификатор языка и региональных параметров, свойственных только Windows.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных идентификатором.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Стандартные идентификаторы языка и региональных параметров, доступных в системе Windows, перечислены в столбце **тег языка** в [списке имен языков и регионов, поддерживаемых Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Теги языков указаны в соответствии со стандартом [BCP 47](https://tools.ietf.org/html/bcp47).

 В большинстве случаев параметр `culture` сопоставляется с соответствующим идентификатором локали языковой поддержки (NLS). Значение параметра `culture` преобразуется в значение свойства <xref:System.Globalization.CultureInfo.LCID%2A> нового <xref:System.Globalization.CultureInfo>.  
  
 Рекомендуется вызывать конструктор имени языкового стандарта <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, так как имена языковых стандартов предпочтительны для LCID. Для пользовательских языковых стандартов требуется указать имя локали.  
  
 Пользователь может переопределить некоторые значения, связанные с текущим языком и региональными параметрами Windows, в разделе язык и региональные стандарты панели управления. Например, пользователь может выбрать отображение даты в другом формате или использовать валюту, отличную от используемой по умолчанию для языка и региональных параметров. Если указанный идентификатор языка и региональных параметров совпадает с идентификатором языка и региональных параметров текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo>, который использует эти переопределения, включая пользовательские параметры для свойств экземпляра <xref:System.Globalization.DateTimeFormatInfo>, возвращаемого <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства экземпляра <xref:System.Globalization.NumberFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Если параметры пользователя несовместимы с языком и региональными параметрами, связанными с <xref:System.Globalization.CultureInfo> (например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>) результаты методов и значения свойств не определены.  
  
 Если указанный идентификатор языка и региональных параметров не совпадает с идентификатором текущей культуры Windows, этот конструктор создает <xref:System.Globalization.CultureInfo>, который использует значения по умолчанию для указанного языка и региональных параметров.  
  
 Свойству <xref:System.Globalization.CultureInfo.UseUserOverride%2A> всегда присвоено значение `true`.  
  
 Например, предположим, что арабский (Саудовская Аравия) является текущей культурой Windows, и пользователь изменил календарь с Хиджра на григорианский.  
  
-   При использовании `CultureInfo("0x0401")` (имя языка и региональных параметров AR-SA) <xref:System.Globalization.CultureInfo.Calendar%2A> имеет значение <xref:System.Globalization.GregorianCalendar> (то есть параметр пользователя), а <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `true`.  
  
-   В `CultureInfo("0x041E")` (имя культуры th-TH) <xref:System.Globalization.CultureInfo.Calendar%2A> имеет значение <xref:System.Globalization.ThaiBuddhistCalendar> (календарь по умолчанию для th-TH), а <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `true`.  
  
 Для языков и региональных параметров, использующих евро, .NET Framework и Windows XP устанавливают валюту по умолчанию как евро. Однако более старые версии Windows не имеют. Таким образом, если пользователь более старой версии Windows не изменил настройку валюты с помощью языковых и региональных параметров панели управления, то денежная единица может быть неверной. Чтобы использовать параметр .NET Framework по умолчанию для валюты, приложение должно использовать перегрузку конструктора <xref:System.Globalization.CultureInfo>, которая принимает параметр `useUserOverride` и присвоить ему значение `false`.  
  
> [!NOTE]
>  Для обеспечения обратной совместимости язык и региональные параметры, созданные с помощью параметра `culture` 0x0004 или 0x7C04, будут иметь свойство <xref:System.Globalization.CultureInfo.Name%2A> с zh-CHS или zh-CHT соответственно. Предпочтительнее создавать язык и региональные параметры, используя текущие стандартные имена языка и региональных параметров zh-Ханс или zh-Hant, если нет причины использовать старые имена.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="culture" /> меньше нуля.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="culture" /> не является допустимым идентификатором языка и региональных параметров. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] и более ранние версии вызовут <see cref="T:System.ArgumentException" /> если <paramref name="culture" /> не является допустимым идентификатором языка и региональных параметров. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]этот конструктор создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые выполняются в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить объект <see cref="T:System.Globalization.CultureInfo" />, идентификатор которого <paramref name="culture" /> из операционной системы. Если операционная система не поддерживает этот язык и региональные параметры, метод вызывает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : string -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Предварительно определенное имя <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.Name" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или имя языка и региональных параметров, свойственных только Windows. <paramref name="name" /> не учитывает регистр.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных именем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Список предварительно определенных имен языков и региональных параметров в системах Windows см. в столбце **тег языка** в [списке имен языков и регионов, поддерживаемых Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Теги языков указаны в соответствии со стандартом [BCP 47](https://tools.ietf.org/html/bcp47). Кроме того, начиная с Windows 10 `name` может быть любым допустимым тегом языка BCP-47.  
  
 Если `name` <xref:System.String.Empty?displayProperty=nameWithType>, конструктор создает экземпляр инвариантного языка и региональных параметров; Это эквивалентно извлечению значения свойства <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.  
  
 Пользователь может переопределить некоторые значения, связанные с текущим языком и региональными параметрами Windows, в разделе язык и региональные стандарты панели управления. Например, пользователь может выбрать отображение даты в другом формате или использовать валюту, отличную от используемой по умолчанию для языка и региональных параметров. Если идентификатор языка и региональных параметров, связанный с `name`, совпадает с идентификатором языка и региональных параметров текущего языка и региональных параметров Windows, этот конструктор создает объект <xref:System.Globalization.CultureInfo>, использующий эти переопределения, включая пользовательские параметры для свойств экземпляра <xref:System.Globalization.DateTimeFormatInfo> значение, возвращаемое свойством <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и свойства экземпляра <xref:System.Globalization.NumberFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств будут неопределенными.  
  
 Если идентификатор языка и региональных параметров, связанный с `name`, не совпадает с идентификатором языка и региональных параметров текущего языка и региональных параметров Windows, этот конструктор создает объект <xref:System.Globalization.CultureInfo>, который использует значения по умолчанию для указанного языка и региональных параметров.  
  
 Свойству <xref:System.Globalization.CultureInfo.UseUserOverride%2A> всегда присвоено значение `true`.  
  
 Например, предположим, что арабский (Саудовская Аравия) — это текущий язык и региональные параметры Windows, и пользователь изменил календарь с Хиджра на григорианский.  
  
-   При использовании `CultureInfo("ar-SA")`<xref:System.Globalization.CultureInfo.Calendar%2A> устанавливается в значение <xref:System.Globalization.GregorianCalendar> (что является параметром пользователя), а для <xref:System.Globalization.CultureInfo.UseUserOverride%2A> устанавливается значение `true`.  
  
-   В `CultureInfo("th-TH")`<xref:System.Globalization.CultureInfo.Calendar%2A> имеет значение <xref:System.Globalization.ThaiBuddhistCalendar> (календарь по умолчанию для th-TH), а <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `true`.  
  
 Свойству <xref:System.Globalization.CultureInfo.LCID%2A> нового <xref:System.Globalization.CultureInfo> присваивается идентификатор языка и региональных параметров, связанный с заданным именем.  
  
 Для языков и региональных параметров, использующих евро, .NET Framework и Windows XP устанавливают валюту по умолчанию как евро. Однако более старые версии Windows не делают этого. Таким образом, если пользователь более старой версии Windows не изменил настройку валюты с помощью языковых и региональных параметров панели управления, то денежная единица может быть неверной. Чтобы использовать параметр .NET Framework по умолчанию для валюты, приложение должно использовать перегрузку конструктора <xref:System.Globalization.CultureInfo>, которая принимает параметр `useUserOverride` и присвоить ему значение `false`.  
  
   
  
## Examples  
 В следующем примере извлекается текущий язык и региональные параметры. Если он отличается от языка и региональных параметров "французский (Франция)", он вызывает конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> для создания экземпляра объекта <xref:System.Globalization.CultureInfo>, представляющего язык и региональные параметры "французский (Франция)", и делает его текущим языком и региональными параметрами текущего потока. В противном случае он создает объект <xref:System.Globalization.CultureInfo>, представляющий французский язык (Люксембург), и делает его текущим языком и региональными параметрами.  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> не является допустимым именем культуры. Дополнительные сведения см. в разделе "Примечания к вызывающим объектам".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] и более ранние версии вызовут <see cref="T:System.ArgumentException" /> если <paramref name="name" /> не является допустимым именем языка и региональных параметров. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]этот конструктор создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые выполняются в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить объект <see cref="T:System.Globalization.CultureInfo" />, идентификатор которого <paramref name="name" /> из операционной системы. Если операционная система не поддерживает этот язык и региональные параметры, а <paramref name="name" /> не является именем дополнительного или заменяющего языка и региональных параметров, метод выдает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture, bool useUserOverride);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : int * bool -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo (culture, useUserOverride)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="useUserOverride" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Предварительно определенный идентификатор <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.LCID" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или идентификатор языка и региональных параметров, свойственных только Windows.</param>
        <param name="useUserOverride">Логическое значение, определяющее применение параметров языка и региональных параметров, заданных пользователем (<see langword="true" />) или используемых по умолчанию (<see langword="false" />).</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных идентификатором, и логического значения, указывающего, нужно ли использовать выбранные пользователем параметры языка и региональных параметров в операционной системе.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Стандартные идентификаторы языка и региональных параметров, доступные в системах Windows, перечислены в столбце **тег языка** в [списке имен языков и регионов, поддерживаемых Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Теги языков указаны в соответствии со стандартом [BCP 47](https://tools.ietf.org/html/bcp47).

 В большинстве случаев параметр `culture` сопоставляется с соответствующим идентификатором локали языковой поддержки (NLS). Значение параметра `culture` преобразуется в значение свойства <xref:System.Globalization.CultureInfo.LCID%2A> нового <xref:System.Globalization.CultureInfo>.  
  
 Рекомендуется вызывать конструктор имени языкового стандарта <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, так как имена языковых стандартов предпочтительны для LCID. Для пользовательских языковых стандартов требуется указать имя локали.  
  
 Пользователь может переопределить некоторые значения, связанные с текущим языком и региональными параметрами Windows, в разделе язык и региональные стандарты панели управления. Например, пользователь может выбрать отображение даты в другом формате или использовать валюту, отличную от используемой по умолчанию для языка и региональных параметров.  
  
 Приложения обычно не запрещают переопределение пользователей. Обратите внимание, что запрещение переопределений не гарантирует стабильность данных. см. [сведения о культуре для записи в блоге, которые не должны считаться стабильными (за исключением инвариантного)](https://go.microsoft.com/fwlink/?LinkId=156850).  
  
 Если свойство <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `true` и указанный идентификатор языка и региональных параметров совпадает с идентификатором текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo>, использующую эти переопределения, включая пользовательские параметры для свойств <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый свойством <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и свойства экземпляра <xref:System.Globalization.NumberFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств будут неопределенными.  
  
 В противном случае этот конструктор создает <xref:System.Globalization.CultureInfo>, который использует значения по умолчанию для указанного языка и региональных параметров.  
  
 Значение параметра `useUserOverride` преобразуется в значение свойства <xref:System.Globalization.CultureInfo.UseUserOverride%2A>.  
  
 Например, предположим, что арабский (Саудовская Аравия) является текущим языком и региональными параметрами Windows, и пользователь изменил календарь с Хиджра на григорианский.  
  
-   При использовании `CultureInfo("0x0401", true)` (имя языка и региональных параметров AR-SA) <xref:System.Globalization.CultureInfo.Calendar%2A> имеет значение <xref:System.Globalization.GregorianCalendar> (то есть параметр пользователя), а <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `true`.  
  
-   В `CultureInfo("0x0401", false)` (имя культуры AR-SA) <xref:System.Globalization.CultureInfo.Calendar%2A> имеет значение <xref:System.Globalization.HijriCalendar> (календарь по умолчанию для AR-SA), а <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `false`.  
  
-   В `CultureInfo("0x041E", true)` (имя культуры th-TH) <xref:System.Globalization.CultureInfo.Calendar%2A> имеет значение <xref:System.Globalization.ThaiBuddhistCalendar> (календарь по умолчанию для th-TH), а <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `true`.  
  
-   В `CultureInfo("0x041E", false)` (имя культуры th-TH) <xref:System.Globalization.CultureInfo.Calendar%2A> имеет значение <xref:System.Globalization.ThaiBuddhistCalendar> (календарь по умолчанию для th-TH), а <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `false`.  
  
 Для языков и региональных параметров, использующих евро, .NET Framework и Windows XP устанавливают валюту по умолчанию как евро. Однако более старые версии Windows не имеют. Таким образом, если пользователь более старой версии Windows не изменил настройку валюты с помощью языковых и региональных параметров панели управления, то денежная единица может быть неверной. Чтобы использовать параметр .NET Framework по умолчанию для валюты, приложение должно задать для параметра `useUserOverride` значение `false`.  
  
> [!NOTE]
>  Для обеспечения обратной совместимости язык и региональные параметры, созданные с помощью параметра `culture` 0x0004 или 0x7C04, будут иметь свойство <xref:System.Globalization.CultureInfo.Name%2A> с zh-CHS или zh-CHT соответственно. Предпочтительнее создавать язык и региональные параметры, используя текущие стандартные имена языка и региональных параметров zh-Ханс или zh-Hant, если нет причины использовать старые имена.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="culture" /> меньше нуля.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="culture" /> не является допустимым идентификатором языка и региональных параметров. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] и более ранние версии вызовут <see cref="T:System.ArgumentException" /> если <paramref name="culture" /> не является допустимым идентификатором языка и региональных параметров. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]этот конструктор создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые выполняются в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить объект <see cref="T:System.Globalization.CultureInfo" />, идентификатор которого <paramref name="culture" /> из операционной системы. Если операционная система не поддерживает этот язык и региональные параметры, метод вызывает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name, bool useUserOverride);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : string * bool -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo (name, useUserOverride)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="useUserOverride" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Предварительно определенное имя <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.Name" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или имя языка и региональных параметров, свойственных только Windows. <paramref name="name" /> не учитывает регистр.</param>
        <param name="useUserOverride">Логическое значение, определяющее применение параметров языка и региональных параметров, заданных пользователем (<see langword="true" />) или используемых по умолчанию (<see langword="false" />).</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных именем, и логического значения, указывающего, нужно ли использовать выбранные пользователем параметры языка и региональных параметров в операционной системе.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Список предварительно определенных имен языков и региональных параметров см. в столбце **тег Language** в [списке имен языков и регионов, поддерживаемых Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Теги языков указаны в соответствии со стандартом [BCP 47](https://tools.ietf.org/html/bcp47). Кроме того, начиная с Windows 10 `name` может быть любым допустимым тегом языка BCP-47.  
  
Если `name` <xref:System.String.Empty?displayProperty=nameWithType>, конструктор создает экземпляр инвариантного языка и региональных параметров; Это эквивалентно извлечению значения свойства <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.  
  
 Пользователь может переопределить некоторые значения, связанные с текущим языком и региональными параметрами Windows, с помощью компонента язык и региональные стандарты панели управления. Например, пользователь может выбрать отображение даты в другом формате или использовать валюту, отличную от используемой по умолчанию для языка и региональных параметров.  
  
 Приложения обычно не запрещают переопределение пользователей. Обратите внимание, что запрещение переопределений не гарантирует стабильность данных. см. [сведения о культуре для записи в блоге, которые не должны считаться стабильными (за исключением инвариантного)](https://go.microsoft.com/fwlink/?LinkId=156850).  
  
 Если свойство <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `true` и идентификатор языка и региональных параметров, связанный с указанным именем языка и региональных параметров, совпадает с идентификатором языка и региональных параметров текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo>, использующую эти переопределения, включая пользователя параметры для свойств экземпляра <xref:System.Globalization.DateTimeFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и свойства экземпляра <xref:System.Globalization.NumberFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств будут неопределенными.  
  
 В противном случае этот конструктор создает <xref:System.Globalization.CultureInfo>, который использует значения по умолчанию для указанного языка и региональных параметров.  
  
 Значение параметра `useUserOverride` преобразуется в значение свойства <xref:System.Globalization.CultureInfo.UseUserOverride%2A>.  
  
 Например, предположим, что арабский (Саудовская Аравия) — это текущий язык и региональные параметры Windows, и пользователь изменил календарь с Хиджра на григорианский.  
  
-   При использовании `CultureInfo("ar-SA", true)`<xref:System.Globalization.CultureInfo.Calendar%2A> устанавливается в значение <xref:System.Globalization.GregorianCalendar> (что является параметром пользователя), а для <xref:System.Globalization.CultureInfo.UseUserOverride%2A> устанавливается значение `true`.  
  
-   В `CultureInfo("ar-SA", false)`<xref:System.Globalization.CultureInfo.Calendar%2A> имеет значение <xref:System.Globalization.HijriCalendar> (календарь по умолчанию для AR-SA), а <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `false`.  
  
-   В `CultureInfo("th-TH", true)`<xref:System.Globalization.CultureInfo.Calendar%2A> имеет значение <xref:System.Globalization.ThaiBuddhistCalendar> (календарь по умолчанию для th-TH), а <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `true`.  
  
-   В `CultureInfo("th-TH", false)`<xref:System.Globalization.CultureInfo.Calendar%2A> имеет значение <xref:System.Globalization.ThaiBuddhistCalendar> (календарь по умолчанию для th-TH), а <xref:System.Globalization.CultureInfo.UseUserOverride%2A> имеет значение `false`.  
  
 Свойству <xref:System.Globalization.CultureInfo.LCID%2A> нового <xref:System.Globalization.CultureInfo> присваивается идентификатор языка и региональных параметров, связанный с заданным именем.  
  
 Для языков и региональных параметров, использующих евро, .NET Framework и Windows XP устанавливают валюту по умолчанию как евро. Однако более старые версии Windows не делают этого. Таким образом, если пользователь более старой версии Windows не изменил настройку валюты с помощью языковых и региональных параметров панели управления, то денежная единица может быть неверной. Чтобы использовать параметр .NET Framework по умолчанию для валюты, приложение должно задать для параметра `useUserOverride` значение `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> не является допустимым именем языка и региональных параметров. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] и более ранние версии вызовут <see cref="T:System.ArgumentException" /> если <paramref name="name" /> не является допустимым именем языка и региональных параметров. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]этот конструктор создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые выполняются в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить объект <see cref="T:System.Globalization.CultureInfo" />, идентификатор которого <paramref name="name" /> из операционной системы. Если операционная система не поддерживает этот язык и региональные параметры, а <paramref name="name" /> не является именем дополнительного или заменяющего языка и региональных параметров, метод выдает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar Calendar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar" Usage="System.Globalization.CultureInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает календарь, используемый по умолчанию для языка и региональных параметров.</summary>
        <value>Объект <see cref="T:System.Globalization.Calendar" />, представляющий календарь, используемый по умолчанию в языке и региональных параметрах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователь может переопределить некоторые значения, связанные с текущим языком и региональными параметрами Windows, в разделе язык и региональные стандарты панели управления. Например, пользователь может выбрать отображение даты в другом формате или использовать валюту, отличную от используемой по умолчанию для языка и региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> `true` и указанные язык и региональные параметры соответствуют текущему языку и региональным параметрам Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские параметры для свойств экземпляра <xref:System.Globalization.DateTimeFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращенный свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств будут неопределенными.  
  
 Таким образом, если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> `true`, значение этого свойства может отличаться от календаря по умолчанию, используемого культурой.  
  
 Приложение изменяет календарь, используемый текущими <xref:System.Globalization.CultureInfo>, задавая свойство <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> объекта <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, который является экземпляром класса <xref:System.Globalization.DateTimeFormatInfo>. Новый календарь должен быть одним из календарей, перечисленных в <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> также включает другие свойства, которые настраивают форматирование даты и времени, связанное с этим <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCachedData();" />
      <MemberSignature Language="F#" Value="member this.ClearCachedData : unit -&gt; unit" Usage="cultureInfo.ClearCachedData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет кешированные данные, связанные с языком и региональными параметрами.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Такие сведения, как язык и региональные параметры по умолчанию и шаблоны формата, кэшируются при первом запросе. Эти сведения могут измениться в течение жизненного цикла <xref:System.AppDomain>, например когда пользователь изменяет региональные и языковые параметры панели управления. Однако класс <xref:System.Globalization.CultureInfo> не обнаруживает изменения в параметрах системы автоматически.  
  
 Метод <xref:System.Globalization.CultureInfo.ClearCachedData%2A> очищает кэш объектов <xref:System.Globalization.CultureInfo>, созданных <xref:System.Globalization.CultureInfo.GetCultureInfo%2A>, и обновляет сведения в свойствах <xref:System.Globalization.CultureInfo.CurrentCulture%2A>, <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>и <xref:System.Globalization.RegionInfo.CurrentRegion%2A> в соответствии с текущими параметрами системы.  
  
 Метод <xref:System.Globalization.CultureInfo.ClearCachedData%2A> не обновляет сведения в свойстве <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> для существующих потоков. Однако будущие потоки будут иметь новые значения свойств <xref:System.Globalization.CultureInfo>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="cultureInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает копию текущего поставщика <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Копия текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Копия доступна для записи, даже если исходная <xref:System.Globalization.CultureInfo> доступна только для чтения. Таким образом, свойства клона можно изменить.  
  
 Неполная копия объекта — это копия только объекта. Если объект содержит ссылки на другие объекты, то неполная копия не создает копии объектов, на которые они ссылаются. Вместо этого он ссылается на исходные объекты. В отличие от этого, глубокая копия объекта создает копию объекта и копию всех объектов, на которые прямо или косвенно ссылается этот объект.  
  
 Метод <xref:System.Globalization.CultureInfo.Clone%2A> создает расширенную неполную копию. Объекты, возвращаемые свойствами <xref:System.Globalization.CultureInfo.NumberFormat%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.TextInfo%2A>и <xref:System.Globalization.CultureInfo.Calendar%2A>, также копируются. Таким образом, клонированный объект <xref:System.Globalization.CultureInfo> может изменять его скопированные свойства, не влияя на исходный объект <xref:System.Globalization.CultureInfo>.  
  
   
  
## Examples  
 В следующем примере кода показано, что CultureInfo. Clone также клонируется экземпляры <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo>, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CompareInfo CompareInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Globalization.CompareInfo" Usage="System.Globalization.CultureInfo.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.CompareInfo" />, который определяет способ сравнения строк в данном языке и региональных параметрах.</summary>
        <value><see cref="T:System.Globalization.CompareInfo" /> для определения способа сравнения строк в данном языке и региональных параметрах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Globalization.CultureInfo.CompareInfo%2A> возвращает объект <xref:System.Globalization.CompareInfo>, предоставляющий сведения, относящиеся к языку и региональным параметрам, которые используются в операциях сортировки и сравнения строк с учетом языка и региональных параметров.  
  
 Пользователь может переопределить некоторые значения, связанные с текущим языком и региональными параметрами Windows, в разделе язык и региональные стандарты панели управления. Например, пользователь может выбрать отображение даты в другом формате или использовать валюту, отличную от используемой по умолчанию для языка и региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> `true` и указанные язык и региональные параметры соответствуют текущему языку и региональным параметрам Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские параметры для свойств экземпляра <xref:System.Globalization.DateTimeFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращенный свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств будут неопределенными.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Globalization.CultureInfo> для испанского языка (Испания) с международной сортировкой и другой <xref:System.Globalization.CultureInfo> с традиционной сортировкой.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateSpecificCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CreateSpecificCulture (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo CreateSpecificCulture(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSpecificCulture (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ CreateSpecificCulture(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CreateSpecificCulture : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.CreateSpecificCulture name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Предварительно определенное имя <see cref="T:System.Globalization.CultureInfo" /> или имя существующего объекта <see cref="T:System.Globalization.CultureInfo" />. <paramref name="name" /> не учитывает регистр.</param>
        <summary>Создает объект <see cref="T:System.Globalization.CultureInfo" />, который представляет определенный язык и региональные параметры, соответствующие заданному имени.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, который может представлять перечисленные ниже параметры. 
Инвариантный язык и региональные параметры, если <paramref name="name" /> является пустой строкой ("").  
  
- или - 
определенный язык и региональные параметры, связанные с <paramref name="name" />, если <paramref name="name" /> является нейтральным языком и региональными параметрами.  
  
- или - 
язык и региональные параметры, указанные в параметре <paramref name="name" />, если <paramref name="name" /> уже относится к определенному языку и региональным параметрам.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> создает оболочку для вызова конструктора <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29>.  
  
> [!NOTE]
> Список предварительно определенных имен языков и региональных параметров в системах Windows см. в столбце **тег языка** в [списке имен языков и регионов, поддерживаемых Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Теги языков указаны в соответствии со стандартом [BCP 47](https://tools.ietf.org/html/bcp47). Кроме того, начиная с Windows 10 `name` может быть любым допустимым тегом языка BCP-47.  
  
 Языки и региональные параметры группируются в три набора: инвариантные, нейтральные и конкретные культуры. Дополнительные сведения см. в описании класса <xref:System.Globalization.CultureInfo>.  
  
 Если идентификатор языка и региональных параметров, возвращаемый этим методом, совпадает с идентификатором языка и региональных параметров текущего языка и региональных параметров Windows, этот метод создает объект <xref:System.Globalization.CultureInfo>, использующий переопределения языка и региональных параметров Windows. Переопределения включают пользовательские параметры для свойств объекта <xref:System.Globalization.DateTimeFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и объект <xref:System.Globalization.NumberFormatInfo>, возвращаемый свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Чтобы создать экземпляр объекта <xref:System.Globalization.CultureInfo>, который имеет параметры языка и региональных параметров по умолчанию, а не переопределяется пользователем, вызовите конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> со значением `false` для аргумента `useUserOverride`.  
  
 Несмотря на то, что имя метода <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> включает термин "Специальный", помните, что данные языка и региональных параметров могут изменяться в разных версиях или из-за пользовательских языков и региональных параметров, либо вследствие переопределений пользователей. Используйте инвариантные или двоичные или фиксированные формы для сохранения данных.  
  
   
  
## Examples  
 В следующем примере извлекается массив объектов <xref:System.Globalization.CultureInfo>, которые представляют нейтральные языки и региональные параметры из метода <xref:System.Globalization.CultureInfo.GetCultures%2A> и сортирует массив. Когда он выполняет итерацию элементов массива, он передает имя каждой нейтральной культуры методу <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> и отображает имя конкретной культуры, возвращаемой методом.  
  
> [!NOTE]
>  В примере используются имена языка и региональных параметров zh-CHS и zh-CHT. Однако приложения, предназначенные для Windows Vista и более поздних версий, должны использовать zh-Ханс вместо zh-CHS и zh-Hant вместо zh-CHT. zh-Ханс и zh-Hant представляют текущий стандарт и должны использоваться, если нет причины использовать старые имена.  
>   
>  Обратите внимание, что результаты этого примера могут отличаться при установке тайваньский Windows, где входные данные для китайского (традиционного) языка и региональных параметров (zh, zh-CHT или zh-Hant) будут возвращать zh-TW.  
  
 [!code-csharp[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/CS/createspecificculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/VB/createspecificculture2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> не является допустимым именем культуры.  
  
- или - 
Язык и региональные параметры, заданные параметром <paramref name="name" />, не имеет соответствующего ему определенного языка и региональных параметров.</exception>
        <exception cref="T:System.NullReferenceException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] и более ранние версии вызовут <see cref="T:System.ArgumentException" /> если <paramref name="name" /> не является допустимым именем языка и региональных параметров. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]этот метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureTypes : System.Globalization.CultureTypes" Usage="System.Globalization.CultureInfo.CultureTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает типы языков и региональных параметров, относящихся к текущему объекту <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Побитовая комбинация одного или нескольких значений <see cref="T:System.Globalization.CultureTypes" />. Значение по умолчанию отсутствует.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере демонстрируется перечисление <xref:System.Globalization.CultureTypes> и свойство <xref:System.Globalization.CultureInfo.CultureTypes%2A>.  
  
 [!code-csharp[system.globalization.cultureTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cs/ct.cs#1)]
 [!code-vb[system.globalization.cultureTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureTypes/vb/ct.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentCulture { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentCulture As CultureInfo" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.CurrentCulture" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentCulture { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCulture As CultureInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.CurrentCulture" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Globalization.CultureInfo" />, который представляет язык и региональные параметры, используемые текущим потоком.</summary>
        <value>Объект, представляющий язык и региональные параметры, используемые текущим потоком.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Globalization.CultureInfo>, возвращаемый этим свойством и связанными с ним объектами, определяет формат по умолчанию для дат, времени, чисел, значений валют, порядка сортировки текста, соглашений о регистре и сравнения строк.  
  
 Текущий язык и региональные параметры — это свойство выполняющегося потока. Получение значения свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> является более производительным аналогом получения объекта <xref:System.Globalization.CultureInfo>, возвращаемого свойством `Thread.CurrentThread.CurrentCulture`.
  
> [!NOTE]
>  В .NET Framework 4.5.2 и более ранних версиях свойство <xref:System.Globalization.CultureInfo.CurrentCulture%2A> доступно только для чтения.  Это значит, что вы можете получить значение свойства, но не можете его задать. Чтобы изменить текущий язык и региональные параметры, необходимо назначить объект <xref:System.Globalization.CultureInfo>, представляющий новый язык и региональные параметры, в свойство `Thread.CurrentThread.CurrentCulture`. Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)]свойство <xref:System.Globalization.CultureInfo.CurrentCulture%2A> доступно для чтения и записи; можно задать и получить значение свойства. Если задать для свойства значение <xref:System.Globalization.CultureInfo> объект, представляющий новый язык и региональные параметры, значение свойства `Thread.CurrentThread.CurrentCulture` также изменится.  
  
 Содержание  
  
 [Как определяется культура потока](#ThreadCulture)   
 [Получение текущего языка и региональных параметров](#Getting)   
 [Явное задание свойства CurrentCulture](#ExplicitSetting)   
 [Текущий язык и региональные параметры и пользовательские переопределения](#Overrides)   
 [Культура и приложения Windows](#WindowsAndCurr)  
  
<a name="ThreadCulture"></a>   
## <a name="how-a-threads-culture-is-determined"></a>Определение языка и региональных параметров потока  
 При запуске потока его язык и региональные параметры изначально определяются следующим образом:  
  
-   При извлечении языка и региональных параметров, заданных свойством <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> в домене приложения, в котором выполняется поток, если значение свойства не `null`.  
  
-   Если поток является потоком пула потоков, который выполняет асинхронную операцию на основе задач, а приложение предназначено для [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздней версии .NET Framework, его язык и региональные параметры определяются культурой вызывающего потока.  Следующий пример изменяет текущий язык и региональные параметры на португальский (Бразилия) и запускает шесть задач, каждый из которых отображает идентификатор своего потока, идентификатор задачи и текущий язык и региональные параметры. Каждая из задач (и потоков) унаследовала культуру вызывающего потока.  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Async1.vb#14)]  
  
     Дополнительные сведения см. в разделе "Культура и асинхронные операции на основе задач" статьи <xref:System.Globalization.CultureInfo>.  
  
-   Путем вызова функции Windows `GetUserDefaultLocaleName`.  
  
 Обратите внимание, что при задании определенного языка и региональных параметров, отличающегося от языка, установленного системой, или предпочитаемого пользователем языка и региональных параметров, и ваше приложение запускает несколько потоков, текущим языком и региональными параметрами этих потоков будет язык и региональные параметры, возвращаемые `GetUserDefaultLocaleName` , если не назначить язык и региональные параметры свойству <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> в домене приложения, в котором выполняется поток.  
  
 Дополнительные сведения о том, как определяется язык и региональные параметры потока, см. в разделе "Культура и потоки" на странице справочника по <xref:System.Globalization.CultureInfo>.  
  
<a name="Getting"></a>   
## <a name="getting-the-current-culture"></a>Получение текущего языка и региональных параметров  
 Свойство <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> — это параметр для каждого потока; то есть каждый поток может иметь свой собственный язык и региональные параметры. Вы получаете язык и региональные параметры текущего потока, извлекая значение свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>, как показано в следующем примере.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Get1.vb#5)]  
  
 Также можно получить значение языка и региональных параметров текущего потока из свойства <xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType>.  
  
<a name="ExplicitSetting"></a>   
## <a name="explicitly-setting-the-currentculture-property"></a>Явное задание свойства CurrentCulture  
 С [!INCLUDE[net_v46](~/includes/net-v46-md.md)]для изменения языка и региональных параметров, используемых существующим потоком, свойству <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> присваивается новый язык и региональные параметры. Если вы явно изменяете язык и региональные параметры потока таким образом, это изменение сохраняется, если поток пересекает границы домена приложения. В следующем примере язык и региональные параметры текущего потока изменяются на Нидерландский (Нидерланды). Также показано, что, когда текущий поток пересекает границы домена приложения, его текущий язык и региональные параметры останутся измененными.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/changeculture11.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/changeculture11.vb#11)]  
  
> [!NOTE]
>  Для изменения языка и региональных параметров с помощью свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> требуется разрешение <xref:System.Security.Permissions.SecurityPermission> с установленным значением <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread>. Управление потоками опасно из-за состояния безопасности, связанного с потоками. Таким образом, это разрешение должно предоставляться только доверенному коду, а затем только по мере необходимости. Невозможно изменить культуру потока в частично доверяемом коде.  
  
 Начиная с [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]можно явно изменить язык и региональные параметры текущего потока на конкретную культуру (например, французский (Канада)) или нейтральную культуру (например, французский). Если <xref:System.Globalization.CultureInfo> объект представляет нейтральный язык и региональные параметры, значения <xref:System.Globalization.CultureInfo> таких свойств, как <xref:System.Globalization.CultureInfo.Calendar%2A>, <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.NumberFormat%2A>и <xref:System.Globalization.CultureInfo.TextInfo%2A>, соответствуют определенному языку и региональным параметрам, связанным с нейтральным языком и региональными параметрами. Например, главным языком и региональными параметрами для нейтрального английского языка является английский (США); главным языком и региональными параметрами для немецкого языка является немецкий (Германия). В следующем примере показано различие в форматировании, когда текущий язык и региональные параметры заданы для определенного языка и региональных параметров, французского (Канада) и нейтрального языка и региональных параметров французский.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/specific12.cs#12)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/specific12.vb#12)]  
  
 Также можно использовать свойство <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> вместе со свойством <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>, чтобы задать для свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> приложения ASP.NET предпочитаемый язык и региональные параметры пользователя, как показано в следующем примере.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/aspculture13.cs#13)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/aspculture13.vb#13)]  
  
<a name="Overrides"></a>   
## <a name="the-current-culture-and-user-overrides"></a>Текущий язык и региональные параметры и пользовательские переопределения  
 Windows позволяет пользователям переопределять стандартные значения свойств объекта <xref:System.Globalization.CultureInfo> и связанных с ним объектов, используя **региональные и языковые параметры** на панели управления. Объект <xref:System.Globalization.CultureInfo>, возвращаемый свойством <xref:System.Globalization.CultureInfo.CurrentCulture%2A>, отражает эти переопределения пользователя в следующих случаях:  
  
-   Если язык и региональные параметры текущего потока задаются неявно функцией Windows `GetUserDefaultLocaleName`.  
  
-   Если язык и региональные параметры текущего потока, определенные свойством <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>, соответствуют текущей культуре системы Windows.  
  
-   Если язык и региональные параметры текущего потока заданы явно для языка и региональных параметров, возвращаемых методом <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>, а этот язык и региональные параметры соответствуют текущей культуре системы Windows.  
  
-   Если язык и региональные параметры текущего потока явно заданы для языка и региональных параметров, созданных конструктором <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29>, а этот язык и региональные параметры соответствуют текущей культуре системы Windows.  
  
 В некоторых случаях, особенно для серверных приложений, установка текущего языка и региональных параметров на <xref:System.Globalization.CultureInfo> объект, отражающий переопределяемые пользователем переопределения, может быть нежелательным. Вместо этого можно задать текущий язык и региональные параметры текущего потока как объект <xref:System.Globalization.CultureInfo>, который не отражает переопределяемые пользователем переопределения следующими способами.  
  
-   Путем вызова конструктора <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> со значением `false` аргумента `useUserOverride`.  
  
-   Путем вызова метода <xref:System.Globalization.CultureInfo.GetCultureInfo%2A>, который возвращает кэшированный объект <xref:System.Globalization.CultureInfo>, предназначенный только для чтения.  
  
<a name="WindowsAndCurr"></a>   
## <a name="the-current-culture-and-uwp-apps"></a>Текущие язык и региональные параметры и приложения UWP  
 В приложениях универсальная платформа Windows (UWP) свойство <xref:System.Globalization.CultureInfo.CurrentCulture%2A> доступно для чтения и записи, точно так же, как в .NET Framework и в приложениях .NET Core. его можно использовать для получения и установки текущего языка и региональных параметров. Однако приложения UWP не различают текущий язык и региональные параметры пользовательского интерфейса. Свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> сопоставляются с первым значением в коллекции [Windows. ApplicationModel. Resources. Core. ResourceManager. дефаултконтекст. Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) .  

В .NET Framework и приложениях .NET Core текущий язык и региональные параметры — это параметр для каждого потока, а свойство <xref:System.Globalization.CultureInfo.CurrentCulture%2A> отражает язык и региональные параметры только текущего потока. В приложениях UWP текущий язык и региональные параметры сопоставляются со свойством [Windows. ApplicationModel. Resources. Core. ResourceManager. дефаултконтекст. Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) , которое является глобальным параметром. Установка свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> изменяет язык и региональные параметры для всего приложения. Культура не может быть задана для каждого потока.
  
## Examples  
 В следующем примере показано, как изменить <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> текущего потока.  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для настройки текущего языка и региональных параметров. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></permission>
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
        <altmember cref="T:System.Security.Permissions.SecurityPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentUICulture { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentUICulture As CultureInfo" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.CurrentUICulture" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentUICulture { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentUICulture As CultureInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.CurrentUICulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.CurrentUICulture" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Globalization.CultureInfo" />, представляющий текущий язык и региональные параметры пользовательского интерфейса, используемые диспетчером ресурсов для поиска ресурсов, связанных с конкретным языком и региональными параметрами, во время выполнения.</summary>
        <value>Язык и региональные параметры, используемые диспетчером ресурсов для поиска ресурсов, связанных с языком и региональными параметрами, во время выполнения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текущий язык и региональные параметры пользовательского интерфейса — это свойство для каждого потока. То есть каждый поток имеет собственный текущий язык и региональные параметры пользовательского интерфейса. Это свойство эквивалентно извлечению или, начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], устанавливая объект <xref:System.Globalization.CultureInfo>, назначенный свойству `System.Threading.Thread.CurrentThread.CurrentUICulture`. При запуске потока его культура пользовательского интерфейса изначально определяется следующим образом:  
  
-   При извлечении языка и региональных параметров, заданных свойством <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> в домене приложения, в котором выполняется поток, если значение свойства не `null`.  
  
-   Если поток является потоком пула потоков, который выполняет асинхронную операцию на основе задач, а приложение предназначено для [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздней версии .NET Framework, его культура пользовательского интерфейса определяется культурой пользовательского интерфейса вызывающего потока.  Следующий пример изменяет текущий язык и региональные параметры пользовательского интерфейса на португальский (Бразилия) и запускает шесть задач, каждый из которых отображает идентификатор своего потока, идентификатор задачи и текущий язык и региональные параметры пользовательского интерфейса. Каждая из задач (и потоков) унаследовала культуру пользовательского интерфейса вызывающего потока.  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Async1.vb#14)]  
  
     Дополнительные сведения см. в разделе "Культура и асинхронные операции на основе задач" статьи <xref:System.Globalization.CultureInfo>.  
  
-   Путем вызова функции Windows `GetUserDefaultUILanguage`.  
  
> [!NOTE]
>  В [!INCLUDE[Compact](~/includes/compact-md.md)]свойство <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> доступно только для чтения. Текущий язык и региональные параметры пользовательского интерфейса определяются региональными параметрами системы и не могут быть изменены программным способом.  
  
 Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], чтобы изменить язык и региональные параметры пользовательского интерфейса, используемые потоком, задайте для свойства <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> новый язык и региональные параметры. Если вы явно изменяете язык и региональные параметры пользовательского интерфейса потока таким образом, это изменение сохраняется, если поток пересекает границы домена приложения.  
  
> [!NOTE]
>  В .NET Framework 4.5.2 и более ранних версиях свойство <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> доступно только для чтения.  Это значит, что вы можете получить значение свойства, но не можете его задать. Чтобы изменить текущий язык и региональные параметры пользовательского интерфейса, необходимо назначить объект <xref:System.Globalization.CultureInfo>, который представляет новый язык и региональные параметры пользовательского интерфейса, в свойство `Thread.CurrentThread.CurrentUICulture`. Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)]свойство <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> доступно для чтения и записи; можно задать и получить значение свойства. Если задать для свойства значение <xref:System.Globalization.CultureInfo> объект, представляющий новый язык и региональные параметры, значение свойства `Thread.CurrentThread.CurrentCulture` также изменится.  
  
 Содержание  
  
 [Получение текущего языка и региональных параметров пользовательского интерфейса](#Getting)   
 [Явная Установка текущего языка и региональных параметров пользовательского интерфейса](#Explicit)   
 [Неявная установка текущего языка и региональных параметров пользовательского интерфейса](#Implicit)   
 [Вопросы безопасности](#Security)   
 [Текущий язык и региональные параметры пользовательского интерфейса и приложения Windows](#WindowsAndCurrUI)  
  
<a name="Getting"></a>   
## <a name="getting-the-current-ui-culture"></a>Получение текущего языка и региональных параметров пользовательского интерфейса  
 Свойство <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> — это параметр для каждого потока; то есть каждый поток может иметь собственный язык и региональные параметры пользовательского интерфейса. Вы получаете язык и региональные параметры пользовательского интерфейса текущего потока, извлекая значение свойства <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>, как показано в следующем примере.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Get1.vb#5)]  
  
 Также можно получить значение языка и региональных параметров пользовательского интерфейса текущего потока из свойства <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>.  
  
<a name="Explicit"></a>   
## <a name="explicitly-setting-the-current-ui-culture"></a>Явное задание текущего языка и региональных параметров пользовательского интерфейса  
 Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)]можно изменить текущий язык и региональные параметры пользовательского интерфейса, назначив объект <xref:System.Globalization.CultureInfo>, представляющий новый язык и региональные параметры, в свойство <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>. Для текущего языка и региональных параметров пользовательского интерфейса можно задать определенную культуру (например, EN-US или de-DE) или нейтральную культуру (например, EN или de). В следующем примере текущий язык и региональные параметры пользовательского интерфейса устанавливаются в значение fr-FR или французский (Франция).  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/currentuiculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/currentuiculture1.vb#1)]  
  
 В многопоточном приложении можно явно задать язык и региональные параметры пользовательского интерфейса для любого потока, назначив объект <xref:System.Globalization.CultureInfo>, представляющий этот язык и региональные параметры, в свойство <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> потока. Если поток, язык и региональные параметры которого необходимо задать, является текущим потоком, можно назначить новый язык и региональные параметры свойству <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>. Если язык и региональные параметры пользовательского интерфейса для потока заданы явно, этот поток будет хранить те же региональные параметры даже в том случае, если он пересекает границы домена приложения и выполняет код в другом домене приложения.  
  
<a name="Implicit"></a>   
## <a name="implicitly-setting-the-current-ui-culture"></a>Неявная установка текущего языка и региональных параметров пользовательского интерфейса  
 Когда сначала создается поток, включая основной поток приложения, по умолчанию его текущий язык и региональные параметры пользовательского интерфейса устанавливаются следующим образом:  
  
-   Используя язык и региональные параметры, определенные свойством <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> для текущего домена приложения, если значение свойства не `null`.  
  
-   С использованием языка и региональных параметров по умолчанию для системы. В системах, использующих операционную систему Windows, среда CLR вызывает функцию Windows `GetUserDefaultUILanguage`, чтобы задать текущий язык и региональные параметры пользовательского интерфейса. `GetUserDefaultUILanguage` возвращает культуру пользовательского интерфейса по умолчанию, заданную пользователем. Если пользователь не установил язык пользовательского интерфейса по умолчанию, он возвращает язык и региональные параметры, установленные в системе изначально.  
  
 Если поток пересекает границы приложения и выполняет код в другом домене приложения, его язык и региональные параметры определяются так же, как и у вновь созданного потока.  
  
 Обратите внимание, что при задании определенного языка и региональных параметров пользовательского интерфейса, отличающегося от установленного системой языка и региональных параметров пользовательского интерфейса пользователя, и если приложение запускает несколько потоков, текущий язык и региональные параметры пользовательского интерфейса для этих потоков будут являться культурой, возвращаемой `GetUserDefaultUILanguage` , если не назначить язык и региональные параметры свойству <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> в домене приложения, в котором выполняется поток.  
  
<a name="Security"></a>   
## <a name="security-considerations"></a>Вопросы безопасности  
 Для изменения языка и региональных параметров текущего потока требуется разрешение <xref:System.Security.Permissions.SecurityPermission> с установленным значением <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread>.  
  
> [!CAUTION]
>  Управление потоками опасно из-за состояния безопасности, связанного с потоками. Таким образом, это разрешение должно предоставляться только доверенному коду, а затем только по мере необходимости. Невозможно изменить культуру потока в частично доверяемом коде.  
  
<a name="WindowsAndCurrUI"></a>   
## <a name="the-current-ui-culture-and-uwp-apps"></a>Текущий язык и региональные параметры пользовательского интерфейса и приложения UWP  
 
В приложениях универсальная платформа Windows (UWP) свойство <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> доступно для чтения и записи, точно так же, как в .NET Framework и в приложениях .NET Core. его можно использовать для получения и установки текущего языка и региональных параметров. Однако приложения UWP не различают текущий язык и региональные параметры пользовательского интерфейса. Свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> сопоставляются с первым значением в коллекции [Windows. ApplicationModel. Resources. Core. ResourceManager. дефаултконтекст. Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) .

В .NET Framework и приложениях .NET Core текущий язык и региональные параметры пользовательского интерфейса являются параметром для каждого потока, а свойство <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> отражает язык и региональные параметры пользовательского интерфейса только для текущего потока. В приложениях UWP текущий язык и региональные параметры сопоставляются со свойством [Windows. ApplicationModel. Resources. Core. ResourceManager. дефаултконтекст. Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) , которое является глобальным параметром. Установка свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> изменяет язык и региональные параметры для всего приложения. Культура не может быть задана для каждого потока.    
  
## Examples  
 В следующем примере кода показано, как изменить <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> текущего потока.  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойству присвоено имя языка и региональных параметров, которое не может использоваться для нахождения файла ресурсов. Имена файлов ресурсов могут содержать только буквы, цифры, дефисы или символы подчеркивания.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для настройки текущего языка и региональных параметров пользовательского интерфейса. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></permission>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.DateTimeFormatInfo DateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo DateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::DateTimeFormatInfo ^ DateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeFormat : System.Globalization.DateTimeFormatInfo with get, set" Usage="System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, определяющий формат отображения даты и времени, соответствующий языку и региональным параметрам.</summary>
        <value><see cref="T:System.Globalization.DateTimeFormatInfo" />, определяющий формат отображения даты и времени, соответствующий языку и региональным параметрам.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a>Overrides  
 Пользователь может переопределить некоторые значения, связанные с текущим языком и региональными параметрами Windows, в разделе язык и региональные стандарты панели управления. Например, пользователь может выбрать отображение даты в другом формате или использовать валюту, отличную от используемой по умолчанию для языка и региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> `true` и указанные язык и региональные параметры соответствуют текущему языку и региональным параметрам Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские параметры для свойств экземпляра <xref:System.Globalization.DateTimeFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращенный свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств будут неопределенными.  
  
 Значение свойства <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и свойства <xref:System.Globalization.CultureInfo.NumberFormat%2A> не рассчитывается, пока приложение не будет иметь доступ к свойству. Если пользователь может изменить текущий язык и региональные параметры на новый язык и региональные параметры во время работы приложения, а затем приложение обращается к свойству <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> или <xref:System.Globalization.CultureInfo.NumberFormat%2A>, приложение извлекает значения по умолчанию для нового языка и региональных параметров вместо переопределений для исходной языком. Чтобы сохранить переопределения для исходного текущего языка и региональных параметров, приложение должно получить доступ к свойствам <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и <xref:System.Globalization.CultureInfo.NumberFormat%2A>, прежде чем изменять текущий язык и региональные параметры.  
  
   
  
## Examples  
 В следующем примере кода показано, что CultureInfo. Clone также клонируется экземпляры <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo>, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> или любого из свойств <see cref="T:System.Globalization.DateTimeFormatInfo" /> заданы значения, а <see cref="T:System.Globalization.CultureInfo" /> доступен только для чтения.</exception>
        <block subset="none" type="usage"><para>Если <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> является <see cref="T:System.Globalization.TaiwanCalendar" /> но <see cref="P:System.Threading.Thread.CurrentCulture" /> не имеет значение Китайский (Тайвань), с именем zh-TW, <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращают пустую строку ("").</para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultThreadCurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает язык и региональные параметры, используемые по умолчанию для потоков в текущем домене приложения.</summary>
        <value>Язык и региональные параметры по умолчанию для потоков в текущем домене приложения или значение <see langword="null" />, если текущий язык и региональные параметры системы являются заданными по умолчанию для потока в домене приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] и предыдущих версиях по умолчанию для языка и региональных параметров всех потоков задана культура системы Windows. Для приложений, текущие язык и региональные параметры которых отличаются от языка и региональных параметров системы по умолчанию, такое поведение часто нежелательно. В [!INCLUDE[net_v45](~/includes/net-v45-md.md)]свойство <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> позволяет приложению определить язык и региональные параметры по умолчанию для всех потоков в домене приложения.  
  
> [!IMPORTANT]
>  Если язык и региональные параметры не заданы явным образом для всех существующих потоков, выполняющихся в домене приложения, то установка свойства <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> также изменяет язык и региональные параметры этих потоков. Однако если эти потоки выполняются в другом домене приложения, их язык и региональные параметры определяются свойством <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> в этом домене приложения или, если значение по умолчанию не определено в соответствии с языком по умолчанию системы. Поэтому рекомендуется всегда явно задавать язык и региональные параметры для основного потока приложения, а не использовать свойство <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> для определения языка и региональных параметров основного потока приложения.  
  
 Если это свойство не задано явно, значение свойства <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> `null`, а язык и региональные параметры потоков в домене приложения, которым не назначен явный язык и региональные параметры, определяются языком и региональными параметрами по умолчанию системы Windows.  
  
 Дополнительные сведения о языках и региональных параметрах, потоках и доменах приложений см. в разделах "Культура и потоки" и "языки и региональные параметры и домены приложений" на странице справочника по <xref:System.Globalization.CultureInfo>.  
  
   
  
## Examples  
 В следующем примере показано поведение по умолчанию .NET Framework при определении текущего языка и региональных параметров нового потока. При запуске в примере текущий язык и региональные параметры, а также текущий язык и региональные параметры пользовательского интерфейса задаются на французском (Франция) во всех системах, за исключением тех, для которых язык и региональные параметры по умолчанию уже французский (Франция). Если язык и региональные параметры по умолчанию уже являются французскими (Франция), код задает для текущего языка и региональных параметров текущий язык и региональные параметры пользовательского интерфейса значение Английский (США). Затем он вызывает подпрограммы `DisplayRandomNumbers`, которая создает три случайных числа и отображает их в виде денежных значений. Затем создается новый поток, который также выполняет подпрограммы `DisplayRandomNumbers`.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture1.vb#1)]  
  
 Как видно из выходных данных примера, при запуске примера на компьютере, для которого используется английский язык (США), основной поток отображает значения валют, используя соглашения о форматировании для французского языка и региональных параметров (Франция). Однако поскольку язык и региональные параметры рабочего потока являются производными от текущей культуры системы Windows, а не текущего языка и региональных параметров приложения, Рабочий поток отображает значения денежных единиц, используя соглашения о форматировании для английского (США) языка и региональных параметров.  
  
 В следующем примере свойства <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> используются для определения текущего языка и региональных параметров и текущего языка и региональных параметров пользовательского интерфейса нового потока приложения. При запуске в примере текущий язык и региональные параметры, а также текущий язык и региональные параметры пользовательского интерфейса задаются на французском (Франция) во всех системах, за исключением тех, для которых язык и региональные параметры по умолчанию уже французский (Франция). Если язык и региональные параметры по умолчанию уже являются французскими (Франция), она устанавливает для текущего языка и региональных параметров текущий язык и региональные параметры пользовательского интерфейса значение Английский (США). Затем он вызывает подпрограммы `DisplayRandomNumbers`, которая создает три случайных числа и отображает их в виде денежных значений. Затем создается новый поток, который также выполняет подпрограммы `DisplayRandomNumbers`.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture2.vb#2)]  
  
 Как видно из выходных данных примера, при запуске примера на компьютере, для которого используется английский язык (США), как основной поток, так и рабочий поток отображают значения валют, используя соглашения о форматировании для французского (Франция) языка и региональных параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultThreadCurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает язык и региональные параметры пользовательского интерфейса, используемые по умолчанию для потоков в текущем домене приложения.</summary>
        <value>Язык и региональные параметры по умолчанию пользовательского интерфейса для потоков в текущем домене приложения или значение <see langword="null" />, если текущий язык и региональные параметры пользовательского интерфейса системы являются заданными по умолчанию для потока пользовательского интерфейса в домене приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] и предыдущих версиях по умолчанию для языка и региональных параметров пользовательского интерфейса для всех потоков задана культура системы Windows. Для приложений, текущий язык пользовательского интерфейса которых отличается от языка и региональных параметров по умолчанию, это поведение часто нежелательно. В [!INCLUDE[net_v45](~/includes/net-v45-md.md)]свойство <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> позволяет определить язык и региональные параметры пользовательского интерфейса по умолчанию для всех потоков в домене приложения.  
  
> [!IMPORTANT]
>  Если язык и региональные параметры пользовательского интерфейса не заданы явным образом для всех существующих потоков, выполняющихся в домене приложения, установка свойства <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> также изменяет язык и региональные параметры этих потоков. Однако если эти потоки выполняются в другом домене приложения, их язык и региональные параметры определяются свойством <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> в этом домене приложения или, если значение по умолчанию не определено в соответствии с языком по умолчанию системы. Поэтому рекомендуется всегда явно задавать язык и региональные параметры для основного потока приложения и не полагаться на свойство <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> для определения языка и региональных параметров основного потока приложения.  
  
 Если он не задан явно, значение свойства <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> `null`, а текущий язык и региональные параметры всех потоков в домене приложения, которым не назначен явный язык и региональные параметры, определяются языком и региональными параметрами по умолчанию системы Windows.  
  
 Дополнительные сведения о языках и региональных параметрах, потоках и доменах приложений см. в разделах "Культура и потоки" и "языки и региональные параметры и домены приложений" на странице справочника по <xref:System.Globalization.CultureInfo>.  
  
   
  
## Examples  
 В следующем примере показано поведение по умолчанию .NET Framework при определении текущего языка и региональных параметров нового потока. Он использует ресурсы на английском и русском языке. Следующий текстовый файл с именем Гритингстрингс. txt содержит языковые ресурсы на английском языке:  
  
```  
greeting =Hello again!  
newGreeting=Hello!  
```  
  
 Он компилируется в двоичный RESOURCES-файл с именем Гритингстрингс. Resources с помощью [генератора файлов ресурсов](~/docs/framework/tools/resgen-exe-resource-file-generator.md) , используя следующую команду.  
  
```console  
resgen greetingstrings.txt  
```  
  
 Следующий текстовый файл с именем GreetingStrings.ru-RU. txt содержит ресурсы на русском языке:  
  
```  
greeting=Еще раз привет!  
newGreeting=Привет!  
```  
  
 Он компилируется в файл binary. Resources с именем GreetingStrings.ru-RU. Resources, используя [генератор файлов ресурсов](~/docs/framework/tools/resgen-exe-resource-file-generator.md) с помощью следующей команды.  
  
```console  
resgen greetingstrings.ru-RU.txt  
```  
  
 Код приложения, показанный ниже, находится в файле с именем example1. vb или Example1.cs. Он компилируется в исполняемый файл с помощью следующей команды для компилятора Visual Basic:  
  
```console  
vbc Example1.vb /resource:GreetingStrings.resources  
```  
  
 Для C# компилятора команда аналогична:  
  
```console  
csc /resource:GreetingStrings.resources Example1.cs  
```  
  
 При этом создается сборка, включающая исполняемый код примера и ресурсы для его резервного языка и региональных параметров. Также можно использовать [Компоновщик сборок](~/docs/framework/tools/al-exe-assembly-linker.md) для создания файла ресурсов для языка и региональных параметров "Русский (Россия)" с помощью следующей команды:  
  
```console  
>al /embed:greetingstrings.ru-RU.resources /c:ru-RU /template:example1.exe /out:ru-RU\Example1.resources.dll  
```  
  
 При запуске этот пример устанавливает текущий язык и региональные параметры пользовательского интерфейса в Русский (Россия) во всех системах, за исключением тех, для которых язык и региональные параметры по умолчанию уже Русский (Россия). Если язык и региональные параметры по умолчанию уже Русский (Россия), код задает для текущего языка и региональных параметров текущий язык и региональные параметры пользовательского интерфейса значение Английский (США). Затем он вызывает подпрограммы `ShowGreeting`, которая отображает простую строку при первом вызове, и немного другую строку при последующих вызовах метода. Затем создается новый поток, который также выполняет подпрограммы `ShowGreeting`.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example1.vb#1)]  
  
 Как видно из выходных данных примера, при запуске примера на компьютере, для которого используется английский язык (США), основной поток отображает свою первоначальную строку на русском языке. Однако поскольку язык и региональные параметры рабочего потока являются производными от текущей культуры системы Windows, а не текущего языка и региональных параметров приложения, Рабочий поток отображает свою строку на английском языке.  
  
 В следующем примере свойства <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> используются для определения текущего языка и региональных параметров и текущего языка и региональных параметров пользовательского интерфейса нового потока приложения.  
  
 В примере используются те же файлы ресурсов, что и в предыдущем примере. Команды для компиляции и внедрения локализованных ресурсов русского языка в вспомогательную сборку также идентичны, за исключением того, что имя исполняемой сборки изменяется.  
  
 При запуске этот пример устанавливает текущий язык и региональные параметры пользовательского интерфейса в Русский (Россия) во всех системах, за исключением тех, для которых язык и региональные параметры по умолчанию уже Русский (Россия). Если язык и региональные параметры по умолчанию уже Русский (Россия), он устанавливает для текущего языка и региональных параметров текущий язык и региональные параметры пользовательского интерфейса значение Английский (США). Затем он вызывает подпрограммы `ShowGreeting`, которая отображает простую строку при первом вызове, и немного другую строку при последующих вызовах метода. Затем создается новый поток, который также выполняет подпрограммы `ShowGreeting`.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example2.vb#2)]  
  
 Как видно из выходных данных примера, при запуске примера на компьютере, для которого используется английский язык (США), основной поток и рабочий поток отображают свои строки на русском языке.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В операции задания значение свойства <see cref="P:System.Globalization.CultureInfo.Name" /> является недопустимым.</exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Globalization.CultureInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает полное локализованное имя языка и региональных параметров.</summary>
        <value>Полное локализованное имя языка и региональных параметров в формате *languagefull* [*country/regionfull*], где *languagefull* — полное имя языка, а *country/regionfull* — полное имя страны или региона.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство представляет локализованное имя объекта <xref:System.Globalization.CultureInfo>.  
  
 Имена языков и региональных параметров могут отличаться в зависимости от соглашений о сценариях или форматировании. Для вывода следует использовать возвращаемое имя, а не пытаться его проанализировать.  
  
 Если пользовательский язык и региональные параметры создаются с помощью класса <xref:System.Globalization.CultureAndRegionInfoBuilder>, свойство <xref:System.Globalization.CultureInfo.DisplayName%2A> инициализируется значением свойства <xref:System.Globalization.CultureInfo.NativeName%2A>.  
  
   
  
## Examples  
 В следующем примере кода выводится несколько свойств нейтральных культур.  
  
> [!NOTE]
>  В примере отображаются языки и региональные параметры zh-CHS и zh-CHT с идентификаторами языка и региональных параметров 0x0004 и 0x7C04 соответственно. Однако приложения Windows Vista должны использовать имя zh-Ханс вместо zh-CHS и имя zh-Hant вместо zh-CHT. Имена zh-Ханс и zh-Hant представляют текущий стандарт, и его следует использовать, если нет причины использовать старые имена.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.EnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnglishName : string" Usage="System.Globalization.CultureInfo.EnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя языка и региональных параметров в формате *languagefull* [*country/regionfull*] на английском языке.</summary>
        <value>Имя языка и региональных параметров в формате *languagefull* [*country/regionfull*] на английском языке, где *languagefull* — полное имя языка, а *country/regionfull* — полное имя страны или региона.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Например, <xref:System.Globalization.CultureInfo.EnglishName%2A> для конкретного имени языка и региональных параметров en-US — «Английский (США)».  
  
 Значение этого свойства одинаково независимо от языковой версии .NET Framework.  
  
   
  
## Examples  
 В следующем примере кода выводится несколько свойств нейтральных культур.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Однако приложения Windows Vista должны использовать имя zh-Ханс вместо zh-CHS и имя zh-Hant вместо zh-CHT. Имена zh-Ханс и zh-Hant представляют текущий стандарт, и его следует использовать, если нет причины использовать старые имена.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cultureInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Globalization.CultureInfo" />.</param>
        <summary>Определяет, является ли заданный объект тем же языком и региональными параметрами, что и текущий <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="value" /> относится к тому же языку и региональным параметрам, что и текущий объект <see cref="T:System.Globalization.CultureInfo" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
 Два <xref:System.Globalization.CultureInfo> объектов считаются равными, если их <xref:System.Globalization.CultureInfo.Name%2A> и свойства <xref:System.Globalization.CultureInfo.CompareInfo%2A> равны.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetConsoleFallbackUICulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetConsoleFallbackUICulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsoleFallbackUICulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetConsoleFallbackUICulture();" />
      <MemberSignature Language="F#" Value="member this.GetConsoleFallbackUICulture : unit -&gt; System.Globalization.CultureInfo" Usage="cultureInfo.GetConsoleFallbackUICulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает язык и региональные стандарты интерфейса пользователя, подходящие для приложений консоли, если при этом неприменим язык и региональные стандарты графического пользовательского интерфейса по умолчанию.</summary>
        <returns>Альтернативный язык и региональные параметры, используемые для чтения и отображения текста на консоли.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Языки, такие как арабский, иврит, урду и сирийский, основываются на двунаправленном тексте. Приложения Windows с графическим пользовательским интерфейсом поддерживают двунаправленные языки. Однако консольные приложения, использующие текстовый пользовательский интерфейс консоли операционной системы, не поддерживают двунаправленную поддержку. Поэтому при локализации консольного приложения на арабском языке или иврите приложение отображает нечитаемый текст на экране консоли.  
  
 Язык и региональные параметры пользовательского интерфейса указывают ресурсы, необходимые приложению для поддержки ввода и вывода данных пользователем, и по умолчанию совпадает с культурой операционной системы. Например, свойство <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> возвращает арабский язык и региональные параметры для арабской операционной системы. Используйте метод <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> для получения языка и региональных параметров, подходящих для пользовательского интерфейса консольного приложения. После того как приложение извлекает языковой стандарт для резервного пользовательского интерфейса, он должен назначить язык и региональные параметры для текущего пользовательского интерфейса текущего потока. Дополнительные сведения см. в разделе "явное задание текущего языка и региональных параметров пользовательского интерфейса" свойства <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>.  
  
 Ниже приведены предопределенные языки и региональные параметры, имеющие разные имена языка и региональных параметров пользовательского интерфейса из предопределенного имени языка и региональных параметров.  
  
|Предопределенный язык и региональные параметры|Название языка и региональных параметров|Имя базового языка и региональных параметров пользовательского интерфейса|  
|------------------------|------------------|------------------------------------------|  
|Амхарский|пользуюсь|en-US|  
|Амхарский (Эфиопия)|am-ET|en-US|  
|(нейтральный арабский)|ar|en-US|  
|Арабский (ОАЭ)|AR-AE|en-US|  
|Арабский (Бахрейн)|AR-BH|en-US|  
|Арабский (Алжир)|Ar-DZ|fr-FR|  
|Арабский (Египет)|ar-EG|en-US|  
|Арабский (Ирак)|AR-IQ|en-US|  
|Арабский (Иордания)|AR-Джо|en-US|  
|Арабский (Кувейт)|AR-кВт *|en-US|  
|Арабский (Ливан)|AR-фунтов|en-US|  
|Арабский (Ливия)|AR-LY|en-US|  
|Арабский (Марокко)|AR-MA|fr-FR|  
|Арабский (Оман)|AR-OM|en-US|  
|Арабский (Катар)|AR — вопросы и ответы|en-US|  
|Арабский (Саудовская Аравия)|AR-SA|en-US|  
|Арабский (Сирия)|AR-SY|en-US|  
|Арабский (Тунис)|AR-тн|fr-FR|  
|Арабский (Йемен)|AR-YE|en-US|  
|Ассамская|as|en-US|  
|Ассамский (Индия)|по мере необходимости|en-US|  
|Бенгальский|млрд долл|en-US|  
|Бенгальский (Бангладеш)|млрд долл-BD|en-US|  
|Бенгальский (Индия)|млрд долл|en-US|  
|Тибетский|BO|en-US|  
|Тибетский (КНР)|контейнер \ CN|en-US|  
|Дивехи|DV|en-US|  
|Дивехи (Индия)|DV-MV|en-US|  
|персидский|серию|en-US|  
|Персидский (Иран)|ОС — IR|en-US|  
|Гуджарати|GU|en-US|  
|Гуджарати (Индия)|GU|en-US|  
|Иврит|he|en-US|  
|Иврит (Израиль)|Он-IL|en-US|  
|Хинди|Привет|en-US|  
|Хинди (Индия)|hi-IN|en-US|  
|Yi|II|en-US|  
|Ий (КНР)|II — CN|en-US|  
|Инуктитут слоговое письмо|IU-, то есть|en-US|  
|Инуктитут слоговое письмо (Канада)|IU-штат-Калифорния — CA|en-US|  
|Кхмерский|км|en-US|  
|Кхмерский (Камбоджа)|км — KH|en-US|  
|Каннада|kn|en-US|  
|Каннада (Индия)|KN-вход|en-US|  
|Конкани|Kok|en-US|  
|Конкани (Индия)|Kok|en-US|  
|Лаосский|Lo|en-US|  
|Лаосский (Лаос Народно-)|с-LA|en-US|  
|Малаялам|ml|en-US|  
|Малаялам (Индия)|ML-IN|en-US|  
|Mohawk|мох|en-US|  
|Mohawk (Канада)|мох — CA|en-US|  
|маратхи|выражения|en-US|  
|Маратхи (Индия)|Mr|en-US|  
|Непальск|ne|en-US|  
|Непальский (Непал)|Ne-NP|en-US|  
|Норвежский|Нет|nb-NO|  
|одийа|или|en-US|  
|Одийа (Индия)|или-IN|en-US|  
|панджаби|PA|en-US|  
|Панджаби (Индия)|PA-IN|en-US|  
|Dari|Вытягивание|en-US|  
|Dari (Афганистан)|Вытягивание-AF|en-US|  
|Пушту|ps|en-US|  
|Пушту (Афганистан)|PS-AF|en-US|  
|санскрит|sa|en-US|  
|Санскрит (Индия)|SA — в|en-US|  
|Сингальский|Си|en-US|  
|Синхала (Шри-Ланка)|Si-LK|en-US|  
|Сирийский|сир|en-US|  
|Сирийский (Сирия)|Сир-SY|en-US|  
|Тамильский|TA|en-US|  
|Тамильский (Индия)|TA — в|en-US|  
|Телугу|TE|en-US|  
|Телугу (Индия)|Вход в|en-US|  
|Тайский|маркирован|en-US|  
|Тайский (Таиланд)|TH-й|en-US|  
|Uighur|UG|en-US|  
|Uighur (КНР)|ug-CN|en-US|  
|Урду|веб|en-US|  
|Урду (Пакистан)|Ваш-PK|en-US|  
|Вьетнамский|Редактор|en-US|  
|Вьетнамский (Вьетнам)|vi-VN|en-US|  
  
 Приложение может использовать <xref:System.Globalization.CultureAndRegionInfoBuilder> для создания замены для языка и региональных параметров, и эта культура может иметь резервный вариант консоли по своему выбору.  
  
   
  
## Examples  
 В следующем примере кода отображается резервный язык и региональные параметры пользовательского интерфейса, связанные с объектом языка и региональных параметров.  
  
 [!code-cpp[sys.glob.ci.getCFUIC#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/cpp/cfuic.cpp#1)]
 [!code-csharp[sys.glob.ci.getCFUIC#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/CS/cfuic.cs#1)]
 [!code-vb[sys.glob.ci.getCFUIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.ci.getCFUIC/VB/cfuic.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCultureInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Служит для получения кешированного экземпляра языка и региональных параметров, доступного только для чтения.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (culture As Integer) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : int -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Идентификатор языка (LCID).</param>
        <summary>Служит для получения кэшированного доступного только для чтения экземпляра языка и региональных параметров с помощью указанного идентификатора языка и региональных параметров.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Рекомендуется использовать перегрузку строк этого метода (<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>), так как вместо LCID следует использовать имена языковых стандартов. Для пользовательских языковых стандартов требуется указать имя локали.  
  
 Если `culture` является идентификатором локали текущего языка и региональных параметров, то возвращаемый <xref:System.Globalization.CultureInfo> объект не отражает никаких переопределений пользователя.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="culture" /> меньше нуля.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">Параметр <paramref name="culture" /> указывает не поддерживаемый язык и региональные параметры. Дополнительные сведения см. в разделе "Примечания к вызывающим объектам".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] и более ранние версии вызовут <see cref="T:System.ArgumentException" /> если <paramref name="culture" /> не является допустимым идентификатором языка и региональных параметров. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]этот метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые выполняются в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить объект <see cref="T:System.Globalization.CultureInfo" />, идентификатор которого <paramref name="culture" /> из операционной системы. Если операционная система не поддерживает этот язык и региональные параметры, метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя языка и региональных параметров. <paramref name="name" /> не учитывает регистр.</param>
        <summary>Служит для получения кэшированного экземпляра языка и региональных параметров с помощью указанного имени.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Список предварительно определенных имен языков и региональных параметров в системах Windows см. в столбце **тег языка** в [списке имен языков и регионов, поддерживаемых Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Теги языков указаны в соответствии со стандартом [BCP 47](https://tools.ietf.org/html/bcp47). Кроме того, начиная с Windows 10 `name` может быть любым допустимым тегом языка BCP-47.  
  
 Метод <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> извлекает кэшированный объект <xref:System.Globalization.CultureInfo>, который доступен только для чтения. Он обеспечивает лучшую производительность, чем соответствующий вызов конструктора <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>.  
  
 Если `name` — имя текущего языка и региональных параметров, то возвращаемый <xref:System.Globalization.CultureInfo> объект не отражает никаких переопределений пользователя. Это делает метод пригодным для серверных приложений или средств, которые не имеют реальной учетной записи пользователя в системе и должны эффективно загружать несколько культур.  
  
 Если `name` <xref:System.String.Empty?displayProperty=nameWithType>, метод возвращает инвариантный язык и региональные параметры. Это эквивалентно извлечению значения свойства <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> указывает язык и региональные параметры, которые не поддерживаются. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] и более ранние версии вызовут <see cref="T:System.ArgumentException" /> если <paramref name="name" /> не является допустимым именем языка и региональных параметров. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]этот метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые выполняются в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить объект <see cref="T:System.Globalization.CultureInfo" />, идентификатор которого <paramref name="name" /> из операционной системы. Если операционная система не поддерживает этот язык и региональные параметры, а <paramref name="name" /> не является именем дополнительного или заменяющего языка и региональных параметров, метод выдает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name, string altName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name, string altName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String, altName As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name, System::String ^ altName);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string * string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo (name, altName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="altName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя языка и региональных параметров. <paramref name="name" /> не учитывает регистр.</param>
        <param name="altName">Имя языка и региональных параметров, предоставляющих объекты <see cref="T:System.Globalization.TextInfo" /> и <see cref="T:System.Globalization.CompareInfo" /> для инициализации параметра <paramref name="name" />. <paramref name="altName" /> не учитывает регистр.</param>
        <summary>Служит для получения кешированного экземпляра языка и региональных параметров, доступного только для чтения. В параметрах определяется язык и региональные параметры, которые инициализируются вместе с объектами <see cref="T:System.Globalization.TextInfo" /> и <see cref="T:System.Globalization.CompareInfo" />.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных имен языков и региональных параметров в системах Windows см. в столбце **тег языка** в [списке имен языков и регионов, поддерживаемых Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Теги языков указаны в соответствии со стандартом [BCP 47](https://tools.ietf.org/html/bcp47). Кроме того, начиная с Windows 10 `name` может быть любым допустимым тегом языка BCP-47.  
  
 Метод <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> Получает кэшированный объект <xref:System.Globalization.CultureInfo>, который доступен только для чтения. Он обеспечивает лучшую производительность, чем соответствующий вызов конструктора <xref:System.Globalization.CultureInfo.%23ctor%2A>. Метод используется для создания языка и региональных параметров, аналогичных параметру `name`, но с различными правилами сортировки и учета регистра.  
  
 Если `name` или `altName` является именем текущего языка и региональных параметров, то возвращаемые объекты не отразит какие-либо пользовательские переопределения. Если `name` <xref:System.String.Empty?displayProperty=nameWithType>, метод возвращает инвариантный язык и региональные параметры. Это эквивалентно извлечению значения свойства <xref:System.Globalization.CultureInfo.InvariantCulture%2A>. Если `altName` <xref:System.String.Empty?displayProperty=nameWithType>, метод использует правила системы и сравнения, заданные в инвариантном языке и региональных параметрах.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметров <paramref name="name" /> или <paramref name="altName" /> — null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">Параметры <paramref name="name" /> или <paramref name="altName" /> указывает не поддерживаемый язык и региональные параметры. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] и более ранние версии вызовут <see cref="T:System.ArgumentException" /> если <paramref name="name" /> или <paramref name="altName" /> не являются допустимыми именами языка и региональных параметров. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]этот метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые выполняются в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить объект <see cref="T:System.Globalization.CultureInfo" />, идентификатор которого <paramref name="name" /> из операционной системы. Если операционная система не поддерживает этот язык и региональные параметры, а <paramref name="name" /> не является именем дополнительного или заменяющего языка и региональных параметров, метод выдает исключение <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые выполняются в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить объект <see cref="T:System.Globalization.CultureInfo" />, идентификатор которого <paramref name="name" /> из операционной системы. Если операционная система не поддерживает этот язык и региональные параметры, а <paramref name="name" /> не является именем дополнительного или заменяющего языка и региональных параметров, метод выдает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfoByIetfLanguageTag">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfoByIetfLanguageTag (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfoByIetfLanguageTag(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfoByIetfLanguageTag : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя языка по стандарту RFC 4646.</param>
        <summary>Не рекомендуется. Служит для получения объекта <see cref="T:System.Globalization.CultureInfo" />, доступного только для чтения, который имеет языковые характеристики, указываемые определенным языковым тегом RFC 4646.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Этот метод и свойство <xref:System.Globalization.CultureInfo.IetfLanguageTag%2A> являются устаревшими. Вместо использования этих элементов приложение должно использовать новый объект <xref:System.Globalization.CultureInfo> и вызывать свойство <xref:System.Globalization.CultureInfo.Name%2A>. Теги и имена IETF идентичны.  
  
 Стандарт RFC 4646, поддерживаемый IETF, определяет тег языка IETF, который предоставляет единообразные средства идентификации языка. Формат тега языка IETF совпадает с именем языка и региональных параметров, возвращаемого свойством <xref:System.Globalization.CultureInfo.Name%2A>, но не определяет уникальную культуру. Разные языки и региональные параметры совместно используют один и тот же тег языка IETF, если эти культуры имеют одинаковые лингвистические характеристики. Лингвистические характеристики языка и региональных параметров содержатся в объекте <xref:System.Globalization.TextInfo>, связанном с объектом <xref:System.Globalization.CultureInfo>.  
  
 Тег языка IETF состоит из обязательного идентификатора языка, необязательного идентификатора скрипта и необязательного идентификатора региона.  
  
 Приложения должны использовать полученный язык и региональные параметры для управления задачами конкретного языка, такими как управление проверкой орфографии или грамматики. Приложения не должны использовать полученный язык и региональные параметры для управления задачами, зависящими от языка и региональных параметров, например для сортировки текста или форматирования дат и времени.  
  
 Дополнительные сведения см. в разделе RFC 4646, "Теги для идентификации языков" и последнем черном стандарте Draft-Phillips-langtags-05. txt, по адресу [https://go.microsoft.com/fwlink/?LinkId=100231](https://go.microsoft.com/fwlink/?LinkId=100231).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> не соответствует поддерживаемому языку и региональным параметрам.</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] и более ранние версии вызовут <see cref="T:System.ArgumentException" />, если <paramref name="name" /> не соответствует имени поддерживаемого языка и региональных параметров. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]этот метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultures">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo[] GetCultures (System.Globalization.CultureTypes types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo[] GetCultures(valuetype System.Globalization.CultureTypes types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultures (types As CultureTypes) As CultureInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Globalization::CultureInfo ^&gt; ^ GetCultures(System::Globalization::CultureTypes types);" />
      <MemberSignature Language="F#" Value="static member GetCultures : System.Globalization.CultureTypes -&gt; System.Globalization.CultureInfo[]" Usage="System.Globalization.CultureInfo.GetCultures types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Globalization.CultureTypes" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="types">Побитовая комбинация значений перечисления, определяющих фильтрацию получаемых языков и региональных параметров.</param>
        <summary>Возвращает список поддерживаемых языков и региональных параметров, отфильтрованный по заданным значениям параметра <see cref="T:System.Globalization.CultureTypes" />.</summary>
        <returns>Массив, содержащий языки и региональные параметры, определенные параметром <paramref name="types" />. Массив языков и региональных параметров не упорядочен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Globalization.CultureInfo.GetCultures%2A> наиболее часто вызывается с параметром `types`, для которого заданы следующие значения:  
  
-   <xref:System.Globalization.CultureTypes.SpecificCultures>, который возвращает все определенные языки и региональные параметры.  
  
-   <xref:System.Globalization.CultureTypes.NeutralCultures>, который возвращает все нейтральные и инвариантные языки и региональные параметры.  
  
-   <xref:System.Globalization.CultureTypes.AllCultures>, который возвращает все нейтральные и определенные языки и региональные параметры, установленные в системе Windows, а также пользовательские языки и региональные параметры, созданные пользователем.  
  
-   <xref:System.Globalization.CultureTypes.UserCustomCulture>, который возвращает все пользовательские языки и региональные параметры, такие как зарегистрированные классом <xref:System.Globalization.CultureAndRegionInfoBuilder>. В версиях Windows до Windows 10 значение <xref:System.Globalization.CultureTypes.UserCustomCulture> применяется ко всем пользовательским языкам и региональным параметрам. Начиная с Windows 10, он применяется к языкам и региональным параметрам системы, в которых отсутствуют полные региональные данные, и у которых нет уникального локального идентификатора, как указано значением свойства <xref:System.Globalization.CultureInfo.LCID%2A>. В результате код, подобный приведенному ниже, будет возвращать разные результаты при запуске в Windows 10 и более ранней версии Windows.  
  
     [!code-csharp[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures3.cs#2)]
     [!code-vb[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures3.vb#2)]  
  
   
  
## Examples  
 В следующем примере кода выводится несколько свойств нейтральных культур.  
  
> [!NOTE]
>  В примере отображаются языки и региональные параметры zh-CHS и zh-CHT с идентификаторами языка и региональных параметров 0x0004 и 0x7C04 соответственно. Однако приложения Windows Vista должны использовать имя zh-Ханс вместо zh-CHS и имя zh-Hant вместо zh-CHT. Имена zh-Ханс и zh-Hant представляют текущий стандарт, и его следует использовать, если нет причины использовать старые имена.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="types" /> указывает недопустимое сочетание значений <see cref="T:System.Globalization.CultureTypes" />.</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public virtual object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="cultureInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType"><see cref="T:System.Type" />, для которого нужно получить объект форматирования. Этот метод поддерживает только типы <see cref="T:System.Globalization.NumberFormatInfo" /> и <see cref="T:System.Globalization.DateTimeFormatInfo" />.</param>
        <summary>Возвращает объект, определяющий способ форматирования заданного типа.</summary>
        <returns>Значение свойства <see cref="P:System.Globalization.CultureInfo.NumberFormat" />, являющееся объектом <see cref="T:System.Globalization.NumberFormatInfo" />, который содержит сведения о формате числа по умолчанию для текущего <see cref="T:System.Globalization.CultureInfo" />, если <paramref name="formatType" /> является объектом <see cref="T:System.Type" /> для класса <see cref="T:System.Globalization.NumberFormatInfo" />.  
  
- или - 
Значение свойства <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" />, являющееся объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />, который содержит сведения о формате даты и времени по умолчанию для текущего <see cref="T:System.Globalization.CultureInfo" />, если <paramref name="formatType" /> является объектом <see cref="T:System.Type" /> для класса <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
- или - 
null, если <paramref name="formatType" /> — любой другой объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Globalization.CultureInfo.GetFormat%2A> реализует интерфейс <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 `NumberFormatInfo` предоставляет числовой формат, зависящий от языка и региональных параметров, используемый в сочетании с методами Format в базовых типах данных. `DateTimeFormatInfo` управляет форматированием значений даты и времени для определенного языка и региональных параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cultureInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Служит хэш-функцией текущего класса <see cref="T:System.Globalization.CultureInfo" /> для использования в алгоритмах и структурах данных хеширования, например в хэш-таблице.</summary>
        <returns>Хэш-код для текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 Этот метод создает один и тот же хэш-код для двух объектов, которые равны в соответствии с методом <xref:System.Globalization.CultureInfo.Equals%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string" Usage="System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Не рекомендуется. Получает идентификацию языка по стандарту RFC 4646.</summary>
        <value>Строка, являющаяся идентификацией языка по стандарту RFC 4646.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Это свойство и метод <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> являются устаревшими. Вместо этого следует использовать свойство <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Теги и имена IETF идентичны.  
  
 Стандарт RFC 4646, поддерживаемый IETF, определяет тег языка IETF, который предоставляет единообразные средства идентификации языка. Формат тега языка IETF аналогичен имени языка и региональных параметров, возвращаемого свойством <xref:System.Globalization.CultureInfo.Name%2A>, но не однозначно определяет язык и региональные параметры. То есть разные языки и региональные параметры совместно используют один и тот же тег языка IETF, если эти культуры имеют одинаковые лингвистические характеристики. Лингвистические характеристики языка и региональных параметров содержатся в объекте <xref:System.Globalization.TextInfo>, связанном с объектом <xref:System.Globalization.CultureInfo>.  
  
 Тег языка IETF состоит из обязательного идентификатора языка, необязательного идентификатора скрипта и необязательного идентификатора региона.  
  
 Дополнительные сведения см. в [документе RFC 5646 "Теги для идентификации языков](https://go.microsoft.com/fwlink/?LinkId=230876). Список вложенных тегов см. [в разделе реестр Субтаг языка IANA](https://go.microsoft.com/fwlink/?LinkId=230877).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstalledUICulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.CultureInfo" />, представляющий язык и региональные параметры, установленные с операционной системой.</summary>
        <value>Объект <see cref="T:System.Globalization.CultureInfo" />, представляющий язык и региональные параметры, установленные с операционной системой.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В локализованной операционной системе, такой как японский выпуск Windows, это свойство возвращает язык и региональные параметры операционной системы. Это свойство эквивалентно `GetSystemDefaultUILanguage` в Windows API.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InvariantCulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.CultureInfo" />, не зависящий от языка и региональных параметров (инвариантный).</summary>
        <value>Объект, не зависящий от языка и региональных параметров (инвариантный).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Инвариантный язык и региональные параметры не чувствительны к языку и региональным параметрам; Он связан с английским языком, но не с какой-либо страной или регионом. Инвариантные язык и региональные параметры задаются с помощью пустой строки ("") в вызове метода создания экземпляра <xref:System.Globalization.CultureInfo>. <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> также извлекает экземпляр инвариантного языка и региональных параметров. Его можно использовать практически в любом методе в пространстве имен <xref:System.Globalization>, для которого требуется язык и региональные параметры. Объекты, возвращаемые свойствами, такими как <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>и <xref:System.Globalization.CultureInfo.NumberFormat%2A>, также соответствуют соглашениям сравнения строк и форматирования инвариантного языка и региональных параметров.  
  
 В отличие от данных, зависящих от языка и региональных параметров, которые могут изменяться пользовательской настройкой или обновлениями .NET Framework или операционной системы, инвариантные данные языка и региональных параметров стабильны со временем и между установленными культурами и не могут быть настроены пользователями. Это делает инвариантные язык и региональные параметры особенно полезными для операций, которым требуются независимые от языка и региональных параметров результаты, такие как операции форматирования и анализа, сохраняющие форматированные данные, или операции сортировки и упорядочивания, требующие отображения данных в фиксированный порядок, независимо от языка и региональных параметров.  
  
## <a name="string-operations"></a>Операции со строками  
 Инвариантные язык и региональные параметры можно использовать для строковых операций с учетом языка и региональных параметров, которые не затрагиваются соглашениями о текущем языке и являются согласованными между языками и региональными параметрами. Например, может потребоваться, чтобы отсортированные данные отображались в фиксированном порядке или применялись стандартные наборы соглашений о регистре к строкам независимо от языка и региональных параметров текущего потока. Для этого необходимо передать объект <xref:System.Globalization.CultureInfo.InvariantCulture%2A> в метод, имеющий параметр <xref:System.Globalization.CultureInfo>, например <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Globalization.CultureInfo%29> и <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29>.  
  
## <a name="persisting-data"></a>Сохранение данных  
 Свойство <xref:System.Globalization.CultureInfo.InvariantCulture%2A> можно использовать для сохранения данных в формате, независимом от языка и региональных параметров. Это обеспечивает известный формат, который не изменяется и может использоваться для сериализации и десериализации данных в разных культурах. После десериализации данные можно отформатировать в соответствии с региональными соглашениями текущего пользователя.  
  
 Например, если вы решили сохранить данные даты и времени в виде строки, можно передать объект <xref:System.Globalization.CultureInfo.InvariantCulture%2A> в метод <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> или <xref:System.DateTimeOffset.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>, чтобы создать строку, а также передать объект <xref:System.Globalization.CultureInfo.InvariantCulture%2A> в метод <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> или <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> для преобразования строки обратно в значение даты и времени. Этот метод гарантирует, что базовые значения даты и времени не изменяются, когда данные считываются или записываются пользователями из разных языков и региональных параметров.  
  
 В следующем примере инвариантный язык и региональные параметры используются для сохранения <xref:System.DateTime> значения в виде строки. Затем он анализирует строку и отображает ее значение с помощью соглашений о форматировании для французского (Франция) и немецкого (Германия) языков.  
  
 [!code-csharp[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/cs/persist1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/vb/persist1.vb#1)]  
  
## <a name="security-decisions"></a>Решения по безопасности  
 Если вы принимаете решение о безопасности (например, разрешает ли доступ к системному ресурсу) на основе сравнения строк или изменения регистра, не следует использовать инвариантный язык и региональные параметры. Вместо этого необходимо выполнить порядковое сравнение с учетом регистра или без учета регистра, вызвав метод, который включает параметр <xref:System.StringComparison> и указать в качестве аргумента <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> или <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>. Код, выполняющий строковые операции с учетом языка и региональных параметров, может привести к уязвимостям безопасности при изменении текущего языка и региональных параметров или в том случае, если язык и региональные параметры на компьютере, на котором выполняется код, отличаются от культуры, используемой для проверки кода. Порядковое сравнение, напротив, зависит только от двоичного значения сравниваемых символов.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsNeutralCulture">
      <MemberSignature Language="C#" Value="public virtual bool IsNeutralCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNeutralCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsNeutralCulture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNeutralCulture { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNeutralCulture : bool" Usage="System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, представляет ли текущий объект <see cref="T:System.Globalization.CultureInfo" /> нейтральный язык и региональные параметры.</summary>
        <value>Значение <see langword="true" />, если текущий объект <see cref="T:System.Globalization.CultureInfo" /> представляет нейтральный язык и региональные параметры, в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Нейтральный язык и региональные параметры — это язык и региональные параметры, связанные с языком, но не со страной или регионом. Он отличается от конкретного языка и региональных параметров, которые связаны как с языком, так и со страной или регионом. Например, fr — это имя нейтрального французского языка, а fr-FR — имя французского языка и региональных параметров в Франции.  
  
 Если это свойство возвращает `false`, то язык и региональные параметры являются либо конкретными, либо инвариантными.  
  
   
  
## Examples  
 Следующий пример кода определяет, какие языки и региональные параметры, использующие китайский язык, являются нейтральными.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Однако приложения Windows Vista должны использовать имя zh-Ханс вместо zh-CHS и имя zh-Hant вместо zh-CHT. Имена zh-Ханс и zh-Hant представляют текущий стандарт, и его следует использовать, если нет причины использовать старые имена.  
  
 [!code-cpp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CPP/neutralculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CS/neutralculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/VB/neutralculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.CultureInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли текущий объект <see cref="T:System.Globalization.CultureInfo" /> доступным только для чтения.</summary>
        <value>Значение <see langword="true" />, если текущий объект <see cref="T:System.Globalization.CultureInfo" /> доступен только для чтения, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Globalization.CultureInfo> доступен только для чтения, экземпляры <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и <xref:System.Globalization.CultureInfo.NumberFormat%2A> также доступны только для чтения.  
  
   
  
## Examples  
 В следующем примере кода показано, что <xref:System.Globalization.CultureInfo.IsReadOnly%2A> также помогает защитить экземпляры <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo>, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public virtual int KeyboardLayoutId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyboardLayoutId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardLayoutId : int" Usage="System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает активный идентификатор языка ввода.</summary>
        <value>32-битный номер со знаком, указывающий идентификатор языка ввода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Идентификатор языка ввода ранее назывался раскладкой клавиатуры. Идентификатор языка ввода является более широкой концепцией, чем раскладка клавиатуры, так как она также может указывать на преобразователь речи в текст, редактор методов ввода (IME) или любую другую форму входных данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public virtual int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CultureInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает идентификатор языка и региональных параметров для текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Идентификатор языка и региональных параметров для текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В большинстве случаев идентификатор языка и региональных параметров сопоставляется с соответствующим идентификатором локали NLS.  
  
 В версиях Windows до Windows 10 идентификатор локали `LOCALE_CUSTOM_UNSPECIFIED` (0x1000 или 4096) назначается пользовательским языкам и региональным параметрам, созданным пользователем. Начиная с Windows 10, он назначается любой культуре, не имеющей уникального идентификатора локали и не имеющей полных системных данных. В результате код, который выполняет итерацию культур и извлекает их с <xref:System.Globalization.CultureInfo.LCID%2A> значением `LOCALE_CUSTOM_UNSPECIFIED` возвращает большее подмножество объектов <xref:System.Globalization.CultureInfo> при запуске в Windows 10.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Globalization.CultureInfo> для испанского языка (Испания) с международным порядком сортировки и другой <xref:System.Globalization.CultureInfo> традиционным порядком сортировки.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CultureInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя языка и региональных параметров в формате *languagecode2*-*country/regioncode2*.</summary>
        <value>Имя языка и региональных параметров в формате *languagecode2*-*country/regioncode2*. *languagecode2* — двухбуквенный код в нижнем регистре, производный от ISO 639-1. *country/regioncode2* является производным от ISO 3166 и обычно состоит из 2 прописных букв или из тега языка BCP-47.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Список предопределенных имен и идентификаторов языка и региональных параметров, которые может возвращать свойство <xref:System.Globalization.CultureInfo.Name%2A> в системах Windows, см. в столбце **тег языка** в [списке имен языков и регионов, поддерживаемых Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Теги языков указаны в соответствии со стандартом [BCP 47](https://tools.ietf.org/html/bcp47). Кроме того, начиная с Windows 10 `name` может быть любым допустимым тегом языка BCP-47. Обратите внимание, что имена языков и региональных параметров могут изменяться, а также отображать имена пользовательских языков и региональных параметров.  
  
 Свойство <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> соответствует стандартам именования, приведенным в разделе класс <xref:System.Globalization.CultureInfo>. Она возвращает краткую форму имени языка и региональных параметров, которая исключает указание на альтернативный порядок сортировки. Например, при создании экземпляра объекта <xref:System.Globalization.CultureInfo> с помощью строки "de-DE_phoneb" для отражения альтернативного порядка сортировки свойство <xref:System.Globalization.CultureInfo.Name%2A> возвращает "de-DE".  
  
 Чтобы получить полное имя языка и региональных параметров, следует использовать свойство <xref:System.Globalization.CultureInfo.DisplayName%2A>, <xref:System.Globalization.CultureInfo.EnglishName%2A>или <xref:System.Globalization.CultureInfo.NativeName%2A>.  
  
   
  
## Examples  
 В следующем примере кода выводится несколько свойств нейтральных культур.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Однако приложения Windows Vista должны использовать имя zh-Ханс вместо zh-CHS и имя zh-Hant вместо zh-CHT. Имена zh-Ханс и zh-Hant представляют текущий стандарт, и его следует использовать, если нет причины использовать старые имена.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeName : string" Usage="System.Globalization.CultureInfo.NativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя языка и региональных параметров, состоящих из языка, страны или региона и дополнительного набора символов, которые свойственны для этого языка.</summary>
        <value>Имя языка и региональных параметров. состоит из полного имени языка, полного имени страны или региона и дополнительного набора символов. Дополнительные сведения о формате см. в описании класса <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этого свойства одинаково независимо от языковой версии .NET Framework.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Globalization.NumberFormatInfo with get, set" Usage="System.Globalization.CultureInfo.NumberFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий формат отображения чисел, денежной единицы и процентов, соответствующий языку и региональным параметрам.</summary>
        <value>Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий формат отображения чисел, денежной единицы и процентов, соответствующий языку и региональным параметрам.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a>Overrides  
 Пользователь может переопределить некоторые значения, связанные с текущим языком и региональными параметрами Windows, в разделе язык и региональные стандарты панели управления. Например, пользователь может выбрать отображение даты в другом формате или использовать валюту, отличную от используемой по умолчанию для языка и региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> `true` и указанные язык и региональные параметры соответствуют текущему языку и региональным параметрам Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские параметры для свойств экземпляра <xref:System.Globalization.DateTimeFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращенный свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств будут неопределенными.  
  
 Значения свойства <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и свойства <xref:System.Globalization.CultureInfo.NumberFormat%2A> не вычисляются до тех пор, пока пользователь не забудет получить доступ к свойству. Если пользователь использует панель управления для изменения текущего языка и региональных параметров на новый язык и региональные параметры во время работы приложения, а затем обращается к свойству <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> или <xref:System.Globalization.CultureInfo.NumberFormat%2A>, приложение извлекает значения по умолчанию для нового языка и региональных параметров. не являются переопределениями для исходного языка и региональных параметров. Чтобы сохранить переопределения для исходного текущего языка и региональных параметров, приложение должно получить доступ к свойствам <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и <xref:System.Globalization.CultureInfo.NumberFormat%2A>, прежде чем изменять текущий язык и региональные параметры.  
  
   
  
## Examples  
 В следующем примере кода показано, что CultureInfo. Clone также клонируется экземпляры <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo>, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> или любого из свойств <see cref="T:System.Globalization.NumberFormatInfo" /> заданы значения, а <see cref="T:System.Globalization.CultureInfo" /> доступен только для чтения.</exception>
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="OptionalCalendars">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar[] OptionalCalendars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] OptionalCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OptionalCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Globalization::Calendar ^&gt; ^ OptionalCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OptionalCalendars : System.Globalization.Calendar[]" Usage="System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает список календарей, которые могут использоваться в данном языке и региональных параметров.</summary>
        <value>Массив типа <see cref="T:System.Globalization.Calendar" />, представляющий календари, которые могут использоваться в языке и региональных параметрах, представленных текущим <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложение изменяет календарь, используемый текущими <xref:System.Globalization.CultureInfo>, задавая свойство <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> объекта <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, который является экземпляром класса <xref:System.Globalization.DateTimeFormatInfo>. Новый календарь должен быть одним из календарей, перечисленных в <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> также включает другие свойства, которые настраивают форматирование даты и времени, связанное с этим <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как определить версии <xref:System.Globalization.GregorianCalendar>, поддерживаемые культурой.  
  
 [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CPP/gregoriancalendartypes.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CS/gregoriancalendartypes.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/VB/gregoriancalendartypes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CultureInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.CultureInfo" />, представляющий родительский язык и региональные параметры текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Объект <see cref="T:System.Globalization.CultureInfo" />, представляющий родительский язык и региональные параметры текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В языках и региональных параметрах есть иерархия, в которой родительский элемент определенного языка и региональных параметров является нейтральным, а родительский элемент нейтрального языка и региональных параметров — <xref:System.Globalization.CultureInfo.InvariantCulture%2A>, а родительский элемент <xref:System.Globalization.CultureInfo.InvariantCulture%2A> — это инвариантный язык и региональные параметры. Родительский язык и региональные параметры охватывают только набор сведений, общих для дочерних элементов.  
  
 Если ресурсы для конкретных региональных параметров недоступны в системе, используются ресурсы для нейтрального языка и региональных параметров. Если ресурсы для нейтрального языка и региональных параметров недоступны, используются ресурсы, внедренные в основную сборку. Дополнительные сведения о процессе резервного использования ресурсов см. в разделе [Упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
   
  
## Examples  
 В следующем примере кода определяется родительский язык и региональные параметры для каждого конкретного языка и региональных параметров с использованием китайского языка.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Однако приложения Windows Vista должны использовать имя zh-Ханс вместо zh-CHS и имя zh-Hant вместо zh-CHT. Имена zh-Ханс и zh-Hant представляют текущий стандарт, и его следует использовать, если нет причины использовать старые имена.  
  
 [!code-cpp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CPP/parentculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CS/parentculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/VB/parentculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo ReadOnly (System.Globalization.CultureInfo ci);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo ReadOnly(class System.Globalization.CultureInfo ci) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (ci As CultureInfo) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ ReadOnly(System::Globalization::CultureInfo ^ ci);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.CultureInfo -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.ReadOnly ci" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, для которого создается оболочка.</param>
        <summary>Возвращает доступную только для чтения программу-оболочку для заданного объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Доступная только для чтения программа-оболочка <see cref="T:System.Globalization.CultureInfo" /> для параметра <paramref name="ci" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта оболочка предотвращает любые изменения `ci`или объекты, возвращаемые `ci`.<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и `ci`.<xref:System.Globalization.CultureInfo.NumberFormat%2A> Свойства .  
  
   
  
## Examples  
 В следующем примере показано, что метод <xref:System.Globalization.CultureInfo.ReadOnly%2A> помогает защитить экземпляры <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo>, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="ci" /> имеет значение null.</exception>
        <altmember cref="P:System.Globalization.CultureInfo.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.TextInfo TextInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TextInfo : System.Globalization.TextInfo" Usage="System.Globalization.CultureInfo.TextInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение <see cref="T:System.Globalization.TextInfo" />, определяющее систему письма, связанную с данным языком и региональными параметрами.</summary>
        <value>Объект <see cref="T:System.Globalization.TextInfo" />, определяющий систему письма, связанную с данным языком и региональными параметрами.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Globalization.CultureInfo.TextInfo%2A> предоставляет сведения о регистре для строк в зависимости от языка и региональных параметров. Для выполнения регистра без учета языка и региональных параметров приложение должно использовать свойство <xref:System.Globalization.CultureInfo.TextInfo%2A> <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Globalization.CultureInfo> для испанского языка (Испания) с международным порядком сортировки и другой <xref:System.Globalization.CultureInfo> традиционным порядком сортировки.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISOLanguageName : string" Usage="System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает трехбуквенный код ISO 639-2 для языка текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Трехбуквенный код ISO 639-2 для языка текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Например, трехзначный аббревиатура для английского языка — «ENG».  
  
> [!NOTE]
>  При обмене данными между процессами или сохранением данных обычно лучше использовать полную <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Использование только языка может приводить к потере контекста и данных.  
  
   
  
## Examples  
 В следующем примере кода выводится несколько свойств нейтральных культур.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Однако приложения Windows Vista должны использовать имя zh-Ханс вместо zh-CHS и имя zh-Hant вместо zh-CHT. Имена zh-Ханс и zh-Hant представляют текущий стандарт, и его следует использовать, если нет причины использовать старые имена.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsLanguageName : string" Usage="System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает трехбуквенный код для языка, определенный в формате Windows API.</summary>
        <value>Трехбуквенный код для языка, определенный в формате Windows API.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает то же значение, что и метод Windows API, `GetLocaleInfo` со значением LOCALE_SABBREVLANGNAME. Например, трехбуквенный код для английского языка (США), как определено в Windows API, — ENU.  
  
> [!NOTE]
>  При обмене данными между процессами или сохранением данных обычно лучше использовать полную <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Использование только языка может приводить к потере контекста и данных.  
  
   
  
## Examples  
 В следующем примере кода выводится несколько свойств нейтральных культур.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Однако приложения Windows Vista должны использовать имя zh-Ханс вместо zh-CHS и имя zh-Hant вместо zh-CHT. Имена zh-Ханс и zh-Hant представляют текущий стандарт, и его следует использовать, если нет причины использовать старые имена.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cultureInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, содержащую имя текущего объекта <see cref="T:System.Globalization.CultureInfo" /> в формате *languagecode2*-*country/regioncode2*.</summary>
        <returns>Строка, содержащая имя текущего объекта<see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Object.ToString%2A?displayProperty=nameWithType>. Он возвращает нормализованную версию имени языка и региональных параметров, которая передается конструктору <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> или <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> или методу <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> или <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>. Он нормализует результирующую строку путем преобразования символов в *languagecode2* в нижний регистр и преобразования символов в *Country/regioncode2* в верхний регистр при необходимости.  
  
 Стандартные имена языков и региональных параметров в системах Windows перечислены в столбце **тег языка** в [списке имен языков и регионов, поддерживаемых Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Теги языков указаны в соответствии со стандартом [BCP 47](https://tools.ietf.org/html/bcp47).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISOLanguageName : string" Usage="System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает двухбуквенный код ISO 639-1 для языка текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Двухбуквенный код ISO 639-1 для языка текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Например, двузначное обозначение английского языка — «en». Значение свойства <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> для инвариантного языка и региональных параметров — "IV".  
  
> [!NOTE]
>  При обмене данными между процессами или сохранением данных обычно лучше использовать полную <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Использование только языка может приводить к потере контекста и данных.  
  
 Если ISO 639-1 не определяет двухбуквенный код языка для определенного языка и региональных параметров, свойство <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> возвращает строку, состоящую из трех или более букв. Дополнительные сведения см. в примере.  
  
   
  
## Examples  
 В следующем примере перечисляются языки и региональные параметры, свойства <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> которых не состоят из двухбуквенный кода языка.  
  
 [!code-csharp[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/cs/twoletterisolanguagename1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/vb/twoletterisolanguagename1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="UseUserOverride">
      <MemberSignature Language="C#" Value="public bool UseUserOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseUserOverride" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.UseUserOverride" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseUserOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseUserOverride { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseUserOverride : bool" Usage="System.Globalization.CultureInfo.UseUserOverride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое указывает, использует ли текущий объект <see cref="T:System.Globalization.CultureInfo" /> параметры языка и региональных параметров, выбранные пользователем.</summary>
        <value>Значение <see langword="true" />, если текущий <see cref="T:System.Globalization.CultureInfo" /> использует параметры языка и региональных параметров, выбранные пользователем; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователь может переопределить некоторые значения, связанные с текущим языком и региональными параметрами Windows, в разделе язык и региональные стандарты панели управления. Например, пользователь может выбрать отображение даты в другом формате или использовать валюту, отличную от используемой по умолчанию для языка и региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> `true` и указанные язык и региональные параметры соответствуют текущему языку и региональным параметрам Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские параметры для свойств экземпляра <xref:System.Globalization.DateTimeFormatInfo>, возвращаемого свойством <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращенный свойством <xref:System.Globalization.CultureInfo.NumberFormat%2A>. Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств будут неопределенными.  
  
 Это свойство задается при создании <xref:System.Globalization.CultureInfo>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
