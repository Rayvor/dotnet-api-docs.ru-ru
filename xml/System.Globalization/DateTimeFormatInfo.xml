<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b1e283fb9ebc6357a9142602cdb861da0bad2c4" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70350645" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type DateTimeFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет сведения о форматировании значений даты и времени, связанные с языком и региональными параметрами.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства <xref:System.Globalization.DateTimeFormatInfo> класса содержат сведения, относящиеся к языку и региональным параметрам, для форматирования или синтаксического анализа значений даты и времени, как показано ниже:  
  
-   Шаблоны, используемые для форматирования значений даты.  
  
-   Шаблоны, используемые для форматирования значений времени.  
  
-   Названия дней недели.  
  
-   Названия месяцев года.  
  
-   A.M. и P.M. обозначения, используемые в значениях времени.  
  
-   Календарь, в котором выражаются даты.  
  
 Содержание  
  
-   [Создание экземпляра объекта DateTimeFormatInfo](#instantiating)  
  
    -   [Для инвариантного языка и региональных параметров](#instantiating_Invariant)  
  
    -   [Для определенного языка и региональных параметров](#instantiating_Specific)  
  
    -   [Для нейтрального языка и региональных параметров](#instantiating_neutral)  
  
    -   [Для текущего языка и региональных параметров](#instantiating_Current)  
  
-   [DateTimeFormatInfo и динамические данные](#dynamic)  
  
-   [Форматирование даты и времени](#Formatting_dates_times)  
  
-   [Строки формата и свойства DateTimeFormatInfo](#format-strings-and-datetimeformatinfo-properties)  
  
-   [Изменение свойств DateTimeFormatInfo](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>Создание экземпляра объекта DateTimeFormatInfo  
 <xref:System.Globalization.DateTimeFormatInfo> Объект может представлять соглашения о форматировании инвариантного языка, конкретного языка и региональных параметров, нейтрального языка и региональных параметров. В этом разделе описывается создание экземпляра каждого типа <xref:System.Globalization.DateTimeFormatInfo> объекта.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для инвариантного языка и региональных параметров  
 Инвариантная культура представляет язык и региональные параметры, не учитывающие язык и региональные параметры. Он основан на английском языке, но не в какой-либо стране или регионе, говорящей на английском языке. Хотя данные определенных языков и региональных параметров могут быть динамическими и могут меняться в соответствии с новыми региональными соглашениями или предпочтениями пользователя, данные инвариантного языка и региональных параметров не меняются. Создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> объекта, который представляет соглашения о форматировании инвариантного языка и региональных параметров, можно следующими способами.  
  
-   Путем извлечения значения <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> свойства. Возвращаемый <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Путем вызова <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> конструктора без параметров. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
-   Путем получения значения <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства <xref:System.Globalization.CultureInfo> из объекта <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> , возвращаемого свойством. Возвращаемый <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
 В следующем примере каждый из этих методов используется для создания экземпляра <xref:System.Globalization.DateTimeFormatInfo> объекта, представляющего инвариантный язык и региональные параметры. Затем он указывает, доступен ли объект только для чтения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для определенного языка и региональных параметров  
 Конкретный язык и региональные параметры представляют язык, который говорят в определенной стране или регионе. Например, EN-US — это конкретная культура, представляющая английский язык, произнесенный в США, а en-CA — это конкретная культура, представляющая английский язык, произнесенный в Канаде. Создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> объекта, который представляет соглашения о форматировании для определенного языка и региональных параметров, можно следующими способами.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> метода и получения значения <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойства возвращенного <xref:System.Globalization.CultureInfo> объекта. Возвращаемый <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Передавая статический <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> <xref:System.Globalization.CultureInfo> метод объекту <xref:System.Globalization.DateTimeFormatInfo> , который представляет язык и региональные параметры, объект которых необходимо получить. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
-   Путем вызова статического <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> метода и получения значения <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойства возвращенного <xref:System.Globalization.CultureInfo> объекта. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> конструктора класса и получения значения <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойства возвращенного <xref:System.Globalization.CultureInfo> объекта. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
 В следующем примере демонстрируется каждый из этих способов создания экземпляра <xref:System.Globalization.DateTimeFormatInfo> объекта и показывает, доступен ли полученный объект только для чтения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для нейтрального языка и региональных параметров  
 Нейтральный язык и региональные параметры представляют язык и региональные параметры, независимые от страны или региона. Обычно это родительский элемент для одного или нескольких конкретных языков и региональных параметров. Например, fr — это нейтральный язык и региональные параметры для французского языка и родителя языка и региональных параметров fr-FR. Можно создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> объекта, представляющий соглашения о форматировании нейтрального языка и региональных параметров, тем же способом, что <xref:System.Globalization.DateTimeFormatInfo> и объект, представляющий соглашения о форматировании для определенного языка и региональных параметров. Кроме того <xref:System.Globalization.DateTimeFormatInfo> , можно получить объект нейтральной культуры, извлекая нейтральную культуру из <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo> свойства конкретного языка и региональных параметров и получая объект, возвращенный его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойством. Если родительский язык и региональные параметры не представляют инвариантный язык <xref:System.Globalization.DateTimeFormatInfo> и региональные параметры, возвращаемый объект доступен для чтения и записи. В следующем примере показаны способы создания экземпляра <xref:System.Globalization.DateTimeFormatInfo> объекта, представляющего нейтральную культуру.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  В .NET Framework версиях 1,0 до [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], попытка <xref:System.Globalization.DateTimeFormatInfo> получить объект, отражающий соглашения о форматировании нейтрального языка и региональных параметров <xref:System.NotSupportedException> , вызывает исключение.  
  
 Однако нейтральная культура не имеет сведений о форматировании, связанных с языком и региональными параметрами, так как она не зависит от конкретной страны или региона. Вместо того чтобы заполнять <xref:System.Globalization.DateTimeFormatInfo> объект универсальными значениями, .NET Framework <xref:System.Globalization.DateTimeFormatInfo> возвращает объект, отражающий соглашения о форматировании для конкретного языка и региональных параметров, которые являются дочерними для нейтрального языка и региональных параметров. Например, <xref:System.Globalization.DateTimeFormatInfo> объект нейтрального языка и региональных параметров en отражает соглашения о форматировании языка и региональных параметров en-US, <xref:System.Globalization.DateTimeFormatInfo> а объект для языка и региональных параметров fr отражает соглашения о форматировании языка и региональных параметров fr-FR.  
  
 Можно использовать код, подобный приведенному ниже, чтобы определить, какие соглашения о форматировании для языка и региональных параметров представляют нейтральный язык и региональные параметры. В примере отражение используется для сравнения <xref:System.Globalization.DateTimeFormatInfo> свойств нейтрального языка и региональных параметров с свойствами определенного дочернего языка и региональных параметров. В этом случае два календаря считаются эквивалентными, если они имеют один и тот же тип календаря, и для григорианского <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> календаря, если их свойства имеют одинаковые значения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для текущего языка и региональных параметров  
 Создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> объекта, который представляет соглашения о форматировании для текущего языка и региональных параметров, можно следующими способами.  
  
-   Путем извлечения значения <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> свойства. Возвращаемый <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Путем получения значения <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства <xref:System.Globalization.CultureInfo> из объекта <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> , возвращаемого свойством. Возвращаемый <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Путем вызова <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> метода <xref:System.Globalization.CultureInfo> с объектом, представляющим текущий язык и региональные параметры. Возвращаемый <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
 В следующем примере каждый из этих методов используется для создания экземпляра <xref:System.Globalization.DateTimeFormatInfo> объекта, представляющего соглашения о форматировании для текущего языка и региональных параметров. Затем он указывает, доступен ли объект только для чтения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 Можно создать доступный для записи <xref:System.Globalization.DateTimeFormatInfo> объект, представляющий соглашения о текущем языке и региональных параметрах текущего потока, одним из следующих способов:  
  
-   Путем извлечения <xref:System.Globalization.DateTimeFormatInfo> объекта в любом из трех описанных выше способов и <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> вызова метода для возвращенного <xref:System.Globalization.DateTimeFormatInfo> объекта. При этом создается копия исходного <xref:System.Globalization.DateTimeFormatInfo> объекта, за исключением того, что его `false` <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> свойство имеет значение.  
  
-   Вызвав <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> метод, чтобы <xref:System.Globalization.CultureInfo> создать объект, представляющий текущий язык и региональные параметры, а затем использовать <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo> его свойство для получения объекта.  
  
 В следующем примере демонстрируется каждый способ создания экземпляра объекта, доступного <xref:System.Globalization.DateTimeFormatInfo> для чтения и записи, и отображается <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> значение его свойства.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 В Windows пользователь может переопределить некоторые <xref:System.Globalization.DateTimeFormatInfo> значения свойств, используемые в операциях форматирования и анализа, с помощью приложения " **язык и региональные стандарты** " на панели управления. Например, пользователь, чья культура которого имеет значение Английский (США), может отображать длинные значения времени, используя 24-часовой формат (в формате чч: мм: СС) вместо 12-часового времени по умолчанию (в формате ч: СС TT). Объекты <xref:System.Globalization.DateTimeFormatInfo> , полученные в описанных выше способах, соответствуют этим переопределениям пользователя. Если это <xref:System.Globalization.NumberFormatInfo> нежелательно, можно создать объект, который не отражает переопределяемые пользователем переопределения (а также доступен для чтения и записи, а не только для чтения), <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> вызвав конструктор и `false` указав значение для `useUserOverride` аргумента. Следующий пример иллюстрирует это для системы, текущий язык и региональные параметры которых — английский (США), а длительный шаблон времени был изменен со значения по умолчанию, равного чч: мм: СС.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo и динамические данные  
 Данные, зависящие от языка и региональных параметров, для форматирования значений даты <xref:System.Globalization.DateTimeFormatInfo> и времени, предоставляемых классом, являются динамическими <xref:System.Globalization.CultureInfo> , так же как и культурными данными, предоставляемыми классом. Не следует делать никаких предположений о стабильности значений для <xref:System.Globalization.DateTimeFormatInfo> объектов, связанных с определенными <xref:System.Globalization.CultureInfo> объектами. Стабильными являются только данные, предоставленные инвариантным и связанным <xref:System.Globalization.DateTimeFormatInfo> с ним объектом. Другие данные могут изменяться между сеансами приложения или даже во время работы приложения. Существует четыре основных источника изменений:  
  
-   Обновления системы. Параметры культуры, такие как предпочтительный календарь или настраиваемые форматы даты и времени, изменяются с течением времени. В этом случае центр обновления Windows включает изменения <xref:System.Globalization.DateTimeFormatInfo> значения свойства для определенного языка и региональных параметров.  
  
-   Языки и региональные параметры замены. <xref:System.Globalization.CultureAndRegionInfoBuilder> Класс можно использовать для замены данных существующего языка и региональных параметров.  
  
-   Каскадные изменения в значениях свойств. Некоторые свойства, связанные с культурой, могут изменяться во время выполнения, что, в <xref:System.Globalization.DateTimeFormatInfo> свою очередь, приводит к изменению данных. Например, текущий язык и региональные параметры можно изменить программно или с помощью действия пользователя. В <xref:System.Globalization.DateTimeFormatInfo> этом случае объект, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> свойством, изменяется на объект, связанный с текущим языком и региональными параметрами. Аналогичным образом, календарь языка и региональных параметров может измениться, что может привести <xref:System.Globalization.DateTimeFormatInfo> к изменениям множества значений свойств.  
  
-   Предпочтения пользователя. Пользователи приложения могут переопределить некоторые значения, связанные с текущей культурой системы, с помощью языковых и региональных параметров на панели управления. Например, пользователи могут выбрать отображение даты в другом формате. Если свойство имеет `true` значение<xref:System.Globalization.DateTimeFormatInfo> , свойства объекта также извлекаются из параметров пользователя. <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> Если параметры пользователя несовместимы с культурой, связанной с <xref:System.Globalization.CultureInfo> объектом (например, если выбранный календарь не является одним из календарей, указанных <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> свойством), то результаты методов и значения свойств не определены.  
  
 Чтобы максимально сокращать вероятность несоответствия данных, все переопределяемые пользователем свойства <xref:System.Globalization.DateTimeFormatInfo> объекта инициализируются при создании объекта. Существует вероятность несогласованности, так как ни создание объекта, ни процесс переопределения пользователем не являются атомарными, и при создании объекта соответствующие значения могут измениться. Однако такая ситуация должна быть крайне редки.  
  
 Вы можете управлять тем, отражают ли пользовательские переопределения <xref:System.Globalization.DateTimeFormatInfo> в объектах, представляющих ту же культуру, что и язык и региональные параметры системы. В следующей таблице перечислены способы <xref:System.Globalization.DateTimeFormatInfo> извлечения объекта и указано, отражают ли результирующий объект переопределения пользователя.  
  
|Источник объекта CultureInfo и DateTimeFormatInfo|Отражает переопределения, переопределяемые пользователем|  
|---------------------------------------------------------|-----------------------------|  
|Свойство`CultureInfo.CurrentCulture.DateTimeFormat`|Да|  
|Свойство<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>|Да|  
|Метод <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>|Да|  
|Метод <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>|Нет|  
|Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>|Да|  
|Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>|Зависит от значения `useUserOverride` параметра|  
  
 Если нет достаточной причины для этого, следует учитывать переопределения пользователей при использовании <xref:System.Globalization.DateTimeFormatInfo> объекта в клиентских приложениях для форматирования и синтаксического анализа вводимых пользователем данных или вывода. Для серверных и необслуживаемых приложений нет необходимости. Однако если вы используете <xref:System.Globalization.DateTimeFormatInfo> объект явно или неявно для сохранения данных даты и времени в виде строки, следует <xref:System.Globalization.DateTimeFormatInfo> использовать объект, отражающий соглашения о форматировании инвариантного языка и региональных параметров, или указать Строка настраиваемого формата даты и времени, используемая независимо от языка и региональных параметров.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>Форматирование даты и времени  
 <xref:System.Globalization.DateTimeFormatInfo> Объект используется неявно или явно во всех операциях форматирования даты и времени. К ним относятся вызовы следующих методов:  
  
-   Все методы форматирования даты и времени, такие как <xref:System.DateTime.ToString?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.  
  
-   Основной метод составного форматирования, который имеет <xref:System.String.Format%2A?displayProperty=nameWithType>значение.  
  
-   Другие методы составного форматирования, такие <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> как <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>и.  
  
 Все операции форматирования даты и времени используют <xref:System.IFormatProvider> реализацию. Интерфейс включает один метод, <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>. <xref:System.IFormatProvider> Этому методу обратного вызова <xref:System.Type> передается объект, представляющий тип, необходимый для предоставления сведений о форматировании. Метод возвращает либо экземпляр этого типа, либо `null` , если он не может предоставить экземпляр типа. .NET Framework включает две <xref:System.IFormatProvider> реализации для форматирования даты и времени:  
  
-   <xref:System.Globalization.CultureInfo> Класс, представляющий конкретный язык и региональные параметры (или конкретный язык в определенной стране или регионе). В операции <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> форматирования даты и времени метод <xref:System.Globalization.DateTimeFormatInfo> возвращает объект, связанный со <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойством.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Класс, предоставляющий сведения о соглашениях о форматировании соответствующего языка и региональных параметров. <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> Метод возвращает экземпляр самого себя.  
  
 Если реализация не предоставляется явно для метода форматирования <xref:System.Globalization.CultureInfo> , используется объект, возвращаемый <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойством, представляющим язык и региональные параметры текущего потока. <xref:System.IFormatProvider>  
  
 В следующем примере показана связь между <xref:System.IFormatProvider> интерфейсом <xref:System.Globalization.DateTimeFormatInfo> и классом в операциях форматирования. Он определяет пользовательскую <xref:System.IFormatProvider> реализацию, <xref:System.IFormatProvider.GetFormat%2A> метод которой отображает тип объекта, запрошенного операцией форматирования. Если запрашивается <xref:System.Globalization.DateTimeFormatInfo> объект, метод <xref:System.Globalization.DateTimeFormatInfo> предоставляет объект для языка и региональных параметров текущего потока. Как видно из выходных данных в примере, <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> метод <xref:System.Globalization.DateTimeFormatInfo> запрашивает объект для предоставления <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> сведений о форматировании, в то время как <xref:System.Globalization.NumberFormatInfo> запросы <xref:System.Globalization.DateTimeFormatInfo> и объекты <xref:System.ICustomFormatter> методов, а также реализации.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
## <a name="format-strings-and-datetimeformatinfo-properties"></a>Строки формата и свойства DateTimeFormatInfo  
 <xref:System.Globalization.DateTimeFormatInfo> Объект содержит три вида свойств, которые используются в операциях форматирования со значениями даты и времени:  
  
-   Свойства, связанные с календарем. Такие свойства, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>как <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> ,, и <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, связаны с календарем, используемым языком и региональными параметрами, определяемым свойством. <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> Эти свойства используются для длинных форматов даты и времени.  
  
-   Свойства, создающие определяемую стандартом строку результатов. Свойства <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> и<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> содержат строки настраиваемого формата, которые создают результирующие строки, определенные международными стандартами. Эти свойства доступны только для чтения и не могут быть изменены.  
  
-   Свойства, определяющие строки результатов с учетом языка и региональных параметров. Некоторые свойства, такие как <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> и <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, содержат [строки настраиваемого формата](~/docs/standard/base-types/custom-date-and-time-format-strings.md) , задающих формат результирующей строки. Другие, такие как <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>,, и <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, определяют символы с учетом языка и региональных параметров или подстроки, которые могут быть добавлены в результирующую строку.  
  
 [Строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md), например "d", "d", "f" и "f", являются псевдонимами, соответствующими определенным <xref:System.Globalization.DateTimeFormatInfo> свойствам шаблона формата. Большинство [строк настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md) связаны со строками или подстроками, которые операция форматирования вставляет в результирующий поток. В следующей таблице перечислены описатели стандартных и пользовательских форматов даты и времени, а также связанные <xref:System.Globalization.DateTimeFormatInfo> с ними свойства. Дополнительные сведения об использовании этих описателей формата см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Обратите внимание, что каждая строка стандартного формата <xref:System.Globalization.DateTimeFormatInfo> соответствует свойству, значение которого является строкой настраиваемого формата даты и времени. Отдельные описатели в этой строке настраиваемого формата, в свою очередь, соответствуют <xref:System.Globalization.DateTimeFormatInfo> другим свойствам. В таблице перечислены только те <xref:System.Globalization.DateTimeFormatInfo> свойства, для которых строки стандартного формата являются псевдонимами, и не перечислены свойства, к которым могут обращаться строки настраиваемого формата, назначенные этим свойствам с псевдонимами. Кроме того, в таблице перечислены только описатели настраиваемого формата, соответствующие <xref:System.Globalization.DateTimeFormatInfo> свойствам.  
  
|Описатель формата|Связанные свойства|  
|----------------------|---------------------------|  
|"d" (краткая Дата; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, чтобы определить общий формат результирующей строки.|  
|"D" (длинный формат даты; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, чтобы определить общий формат результирующей строки.|  
|"f" (полный формат даты и времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|"F" (полная дата и длинный формат времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|"g" (Общая Дата и короткий формат времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|"G" (Общая Дата и длинный формат времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|"M", "m" (месяц/день; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, чтобы определить общий формат результирующей строки.|  
|"O", "o" (Дата и время приема-передачи; строка стандартного формата)|Отсутствует.|  
|"R", "r" (RFC1123; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, чтобы определить результирующую строку, которая соответствует стандарту RFC 1123. Свойство доступно только для чтения.|  
|"s" (Дата и время сортировки; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, чтобы определить результирующую строку, которая соответствует стандарту ISO 8601. Свойство доступно только для чтения.|  
|"t" (краткий формат времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, чтобы определить общий формат результирующей строки.|  
|T (длинное время; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, чтобы определить общий формат результирующей строки.|  
|u (универсальная Дата и время для сортировки; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, чтобы определить результирующую строку, которая соответствует стандарту ISO 8601 для времени в формате UTC. Свойство доступно только для чтения.|  
|"U" (универсальная полная дата и время; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, чтобы определить общий формат результирующей строки.|  
|"Y", "y" (год месяца; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, чтобы определить общий формат результирующей строки.|  
|"ddd" (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, чтобы включить сокращенное название дня недели в результирующую строку.|  
|"g", "GG" (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> Вызывает метод, чтобы вставить имя эры в результирующую строку.|  
|"MMM" (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, чтобы включить сокращенное название месяца в результирующую строку.|  
|"MMMM" (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>или <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>, чтобы включить полное название месяца в результирующую строку.|  
|"t" (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>или <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, чтобы включить первый символ указателя AM/PM в результирующую строку.|  
|"TT" (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>или <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, чтобы включить в результирующую строку полный указатель AM/PM.|  
|":" (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, чтобы включить в результирующую строку разделитель времени.|  
|"/" (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, чтобы включить в результирующую строку разделитель даты.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>Изменение свойств DateTimeFormatInfo  
 Вы можете изменить результирующую строку, созданную строками формата даты и времени, изменив связанные свойства объекта <xref:System.Globalization.DateTimeFormatInfo> , доступного для записи. Чтобы определить, доступен <xref:System.Globalization.DateTimeFormatInfo> ли объект для записи, <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> используйте свойство. Чтобы настроить объект <xref:System.Globalization.DateTimeFormatInfo> таким образом, выполните следующие действия.  
  
1.  Создайте копию <xref:System.Globalization.DateTimeFormatInfo> объекта, предназначенного для чтения и записи, соглашения о форматировании которого необходимо изменить. (См. раздел [Создание экземпляра объекта DateTimeFormatInfo](#instantiating) .)  
  
2.  Измените свойство или свойства, которые используются для получения требуемой результирующей строки. (Сведения о том, как методы форматирования <xref:System.Globalization.DateTimeFormatInfo> используют свойства для определения результирующих строк, см. в предыдущем разделе, [Формат строк и свойства DateTimeFormatInfo](#format-strings-and-datetimeformatinfo-properties).)  
  
3.  Используйте пользовательский <xref:System.Globalization.DateTimeFormatInfo> объект, созданный в <xref:System.IFormatProvider> качестве аргумента в вызовах методов форматирования.  
  
 Существует два других способа изменить формат результирующей строки:  
  
-   <xref:System.Globalization.CultureAndRegionInfoBuilder> Класс можно использовать для определения настраиваемого языка и региональных параметров (язык и региональные параметры с уникальным именем, которые дополняют существующие языки и региональные параметры) или заменяющего языка и региональных параметров (используется вместо конкретного языка и региональных параметров). Вы можете сохранить и получить доступ к этой культуре программно, <xref:System.Globalization.CultureInfo> как любой объект, поддерживаемый .NET Framework.  
  
-   Если результирующая строка не зависит от языка и региональных параметров и не соответствует стандартному формату, можно использовать строку настраиваемого формата даты и времени. Например, при сериализации данных даты и времени в формате YYYYMMDDHHmmss можно создать результирующую строку, передав в <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> метод строку настраиваемого формата, а также преобразовать результирующую строку обратно <xref:System.DateTime> в значение путем вызова метода <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> метод.  
  
### <a name="changing-the-short-date-pattern"></a>Изменение шаблона короткой даты  
 В следующем примере изменяется формат результирующей строки, полученной строкой стандартного формата "d" (Краткая дата). Он изменяет связанное <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство для языка и региональных параметров en-US или English (США) по умолчанию с "M/d/гггг" на "гггг"-"mm"-"DD" и использует строку стандартного формата "d" для вывода даты как до, так и <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> после свойства изменившиеся.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>Изменение символа разделителя даты  
 В следующем примере символ разделителя даты изменяется в <xref:System.Globalization.DateTimeFormatInfo> объекте, который представляет соглашения о форматировании для языка и региональных параметров fr-FR. В примере используется строка стандартного формата "g" для вывода даты как до, так и после <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> изменения свойства.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>Изменение сокращенных названий дней и шаблона полного формата даты  
 В некоторых случаях шаблон длинной даты, который обычно отображает полное название дня и месяца, а также число дней месяца и года, может быть слишком длинным. В следующем примере сокращен шаблон длинной даты для языка и региональных параметров en-US, который возвращает буквенное сокращение из одного или двух символов, за которым следует номер дня, название месяца и год. Это достигается путем присвоения <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> массиву коротких сокращений названий дней и изменения строки настраиваемого формата, назначенной <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойству. Это влияет на результирующие строки, возвращаемые строками стандартного формата "D" и "f".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 Обычно изменение <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойства также <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> влияет на свойство, которое, в свою очередь, определяет результирующую строку, возвращаемую строкой стандартного формата "F". Чтобы сохранить исходный полный шаблон даты и времени, в примере переназначается исходная строка настраиваемого формата, назначенная <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойству <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> после изменения свойства.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>Переход с 12-часового времени на 24-часовой формат  
 Для многих языков и региональных параметров в .NET Framework время выражается с помощью 12-часового времени и указателя AM/PM. В следующем примере определяется `ReplaceWith24HourClock` метод, который заменяет любой формат времени, в котором используется 12-часовое время с форматом, использующим 24-часовое время.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 В примере используется регулярное выражение для изменения строки формата. Шаблон `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` регулярного выражения определяется следующим образом:  
  
|Шаблон|Описание|  
|-------------|-----------------|  
|`^`|Начало совпадения в начале строки.|  
|`(?<openAMPM>\s*t+\s*)?`|Совпадение с нулевым или одним вхождением нуля или более символов пробела, за которым следует буква "t" один или несколько раз, за которыми следует ноль или больше символов пробела. Эта группа записи называется `openAMPM`.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|`openAMPM` Если группа имеет совпадение, сопоставьте букву "h" один или несколько раз, за которыми следует один или несколько символов, не являющихся "h" или "t". Совпадение заканчивается в конце строки. Все символы, захваченные после "h", включены в группу записи с `nonHours`именем.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|Если в `openAMPM` группе не найдено совпадений, сопоставьте букву "h" один или несколько раз, за которыми следует один или несколько символов, не являющихся "h" или "t", за которыми следует ноль или больше символов пробела. Наконец, сопоставьте одно или несколько вхождений буквы «t». Все символы, захваченные после "h" и перед пробелами и "t", включаются в группу записи с именем `nonHours`.|  
  
 Группа `nonHours` записи содержит минуты и, возможно, второй компонент настраиваемой строки формата даты и времени, а также все символы разделителя времени. Шаблон `HH${nonHours}` замены добавляет к этим элементам подстроку "HH".  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>Отображение и изменение эры в дате  
 В следующем примере настраиваемый описатель формата "g" добавляется к <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойству объекта, представляющего соглашения о форматировании для языка и региональных параметров en-US. Это добавление влияет на следующие три строки стандартного формата:  
  
-   Строка стандартного формата "D" (длинная Дата), которая сопоставляется непосредственно со <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойством.  
  
-   Строка стандартного формата "f" (полная дата и короткий формат времени), которая создает результирующую строку, объединяющую подстроки, созданные <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойствами и. <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>  
  
-   Строка стандартного формата "F" (полная дата и длинное время), которая напрямую <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> сопоставляется свойству. Поскольку значение этого свойства не задано явным образом, оно создается динамически путем сцепления <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойств и. <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>  
  
 В примере также показано, как изменить название эры для языка и региональных параметров, чей календарь имеет одну эру. В этом случае в языке и региональных параметрах en-US используется григорианский календарь, представленный <xref:System.Globalization.GregorianCalendar> объектом. <xref:System.Globalization.GregorianCalendar> Класс поддерживает одну эру, имя которой — н.э.. (Анно Домини). В примере имя эры изменяется на Н.Э. (Общая эра) замена настраиваемого описателя формата "g" в строке формата, назначенной <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойству строкой литерала. Необходимо использовать литеральную строку, так как имя эры обычно возвращается <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> методом из личных данных в таблицах языка и региональных параметров, предоставляемых .NET Framework или операционной системой Windows.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>Анализ строк даты и времени  
 Анализ предполагает преобразование строкового представления даты и времени в <xref:System.DateTime> значение или. <xref:System.DateTimeOffset> Оба `Parse`этих типа включают методы, `TryParse`, `ParseExact`и `TryParseExact` для поддержки операций синтаксического анализа. `ParseExact` `TryParseExact` Методы и преобразуют`TryParse` строку, которая может иметь различные форматы, в то время как и требует, чтобы строка имела определенный формат или форматы. `Parse` Значение, если операция синтаксического анализа `Parse` завершается неудачно `ParseExact` и вызывает исключение `TryParseExact` , `false`в то время как `TryParse` и возвращает.  
  
 Методы синтаксического анализа неявно или явно используют <xref:System.Globalization.DateTimeStyles> значение перечисления для определения того, какие элементы стиля (например, ведущие, завершающие или внутренние пробелы) могут присутствовать в строке для анализа и как интерпретировать проанализированную строку или любые отсутствующие элементов. Если <xref:System.Globalization.DateTimeStyles> не указать значение при `Parse` вызове метода или `TryParse` , по умолчанию используется <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, то есть составной стиль, включающий <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>флаги, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>и <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> . Для методов `TryParseExact` <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>и значение по умолчанию —; входная строка должна точно соответствовать определенной строке настраиваемого формата даты и времени. `ParseExact`  
  
 Методы анализа также неявно или явно используют <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет конкретные символы и шаблоны, которые могут возникать в анализируемой строке. Если <xref:System.Globalization.DateTimeFormatInfo> объект не предоставлен <xref:System.Globalization.DateTimeFormatInfo> , по умолчанию используется объект для языка и региональных параметров текущего потока. Дополнительные сведения о синтаксическом анализе строк даты и времени см. в описании отдельных методов синтаксического анализа <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>таких <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>как, <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>, и.  
  
 В следующем примере показана структура синтаксического анализа строк даты и времени с учетом языка и региональных параметров. Он пытается выполнить синтаксический анализ двух строк даты с использованием правил языка и региональных параметров en-US, EN-GB, fr-FR и Fi-FI. Дата, интерпретируемая как 8/18/2014 в культуре en-US, вызывает <xref:System.FormatException> исключение в других трех культурах, поскольку 18 интерпретируется как номер месяца. 1/2/2015 анализируется как второй день первого месяца в культуре en-US, но как первый день второго месяца в остальных культурах.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 Строки даты и времени обычно анализируются по двум причинам:  
  
-   Для преобразования вводимых пользователем данных в значение даты и времени.  
  
-   Для округления значения даты и времени; то есть для десериализации значения даты и времени, которое было ранее сериализовано в виде строки.  
  
 В следующих разделах эти две операции рассматриваются более подробно.  
  
### <a name="parsing-user-strings"></a>Анализ пользовательских строк  
 При синтаксическом анализе строк даты и времени, вводимых пользователем, всегда следует создавать экземпляр <xref:System.Globalization.DateTimeFormatInfo> объекта, отражающий региональные параметры пользователя, включая любые настройки, которые могли быть сделаны пользователем. В противном случае объект даты и времени может иметь неверные значения. Сведения о том, как создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> объекта, отражающего пользовательские настройки культуры, см. в разделе [DateTimeFormatInfo и Dynamic Data](#dynamic) .  
  
 В следующем примере показана разница между операцией синтаксического анализа, которая отражает региональные параметры пользователя, а другая — нет. В этом случае языком по умолчанию является en-US, но пользователь использовал панель управления, **регион и язык** , чтобы изменить шаблон краткой даты с "M/d/гггг" на "гг/мм/дд". Когда пользователь вводит строку, отражающую пользовательские параметры, и строка анализируется <xref:System.Globalization.DateTimeFormatInfo> объектом, который также отражает пользовательские параметры (переопределения), операция анализа возвращает правильный результат. Однако если строка анализируется <xref:System.Globalization.DateTimeFormatInfo> объектом, который отражает стандартные региональные параметры en-US, метод анализа <xref:System.FormatException> создает исключение, поскольку оно интерпретирует 14 как число месяца, а не последние две цифры года.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>Сериализация и десериализация данных даты и времени  
 Сериализованные данные даты и времени ожидаются с циклическим обменом; то есть все сериализованные и десериализованные значения должны быть идентичными. Если значение даты и времени представляет один момент времени, десериализованное значение должно представлять тот же момент времени независимо от языка и региональных параметров или часового пояса системы, в которой он был восстановлен. Для успешного приема данных даты и времени необходимо использовать соглашения инвариантного языка и региональных параметров, возвращаемых <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> свойством для создания и анализа данных. Операции форматирования и анализа никогда не должны отражать соглашения о культуре по умолчанию. При использовании региональных параметров по умолчанию переносимость данных строго ограничена; его можно успешно десериализовать только в потоке, параметры культуры которого идентичны параметрам потока, в котором он был сериализован. В некоторых случаях это означает, что данные не могут быть даже успешно сериализованы и десериализованы в одной системе.  
  
 Если компонент времени значения даты и времени важен, его также следует преобразовать в формат UTC и сериализовать с помощью [строки стандартного формата](~/docs/standard/base-types/standard-date-and-time-format-strings.md)"o" или "r". Затем данные времени можно восстановить, вызвав метод синтаксического анализа и передав ему соответствующую строку формата вместе с инвариантным языком и региональными параметрами в `provider` качестве аргумента.  
  
 В следующем примере показан процесс обработки значения даты и времени в цикле. Она сериализует дату и время в системе, которая отслеживает США. Тихоокеанское время и текущий язык и региональные параметры en-US.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 Он десериализует данные в системе в часовом поясе Брюссель, Копенгаген, Мадрид и Париж, а текущий язык и региональные параметры — fr-FR. Дата восстановления составляет девять часов позже, чем исходная дата, что отражает настройку часового пояса от восьми часов после UTC до времени в формате UTC до 1 часа. Как исходная дата, так и дата восстановления представляют один и тот же момент времени.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 В следующем примере отражение используется для получения свойств <xref:System.Globalization.DateTimeFormatInfo> объекта для языка и региональных параметров "Английский (США)". Он отображает значения этих свойств, которые содержат строки настраиваемого формата, и использует эти строки для отображения форматированных дат.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый доступный для записи экземпляр класса <see cref="T:System.Globalization.DateTimeFormatInfo" />, не зависящий от языка и региональных параметров (инвариантный).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает <xref:System.Globalization.DateTimeFormatInfo> объект, представляющий сведения о дате и времени для инвариантного языка и региональных параметров. Чтобы создать <xref:System.Globalization.DateTimeFormatInfo> объект для определенного языка и региональных параметров, <xref:System.Globalization.CultureInfo> создайте объект для <xref:System.Globalization.DateTimeFormatInfo> этого языка и региональных параметров и извлеките объект <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> , возвращаемый его свойством.  
  
 Свойства <xref:System.Globalization.DateTimeFormatInfo> объекта, созданного этим конструктором, можно изменить. Однако нельзя изменить <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство, так как инвариантный язык и региональные параметры поддерживают только локализованную версию григорианского календаря. Чтобы <xref:System.Globalization.DateTimeFormatInfo> создать объект, использующий конкретный календарь, необходимо создать экземпляр <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> <xref:System.Globalization.CultureInfo> объекта, который поддерживает этот календарь, и назначить календарь свойству <xref:System.Globalization.DateTimeFormatInfo> объекта, возвращаемого <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойством. .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает одномерный массив типа <see cref="T:System.String" />, содержащий сокращения дней недели, принятые в определенном языке и региональных параметрах.</summary>
        <value>Одномерный массив типа <see cref="T:System.String" />, содержащий сокращения дней недели, принятые в определенном языке и региональных параметрах. Массив для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит сокращения "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При задании этого свойства массив должен быть одномерным и должен содержать ровно семь элементов. Первый элемент (элемент с нулевым индексом) представляет первый день недели в календаре, определенном <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойством.  
  
 Если строка настраиваемого формата содержит описатель формата "ddd", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> метод или <xref:System.DateTimeOffset.ToString%2A> включает в результирующую строку соответствующий элемент <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> массива вместо "ddd".  
  
 Это свойство изменяется при изменении значения <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойства. Если выбранный <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> параметр не поддерживает сокращенные названия дней, массив будет содержать полные названия дней.  
  
   
  
## Examples  
 В следующем примере создается объект для чтения и <xref:System.Globalization.CultureInfo> записи, представляющий язык и региональные параметры "Английский (США)", и в его <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> свойство присваиваются сокращенные названия дней. Затем он использует описатель формата ddd в [строке настраиваемого формата даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md) для отображения строкового представления дат в течение одной недели, начиная с 28 мая, 2014.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство задается для многомерного массива или для массива, длина которого не равна 7.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает массив строк сокращенных названий месяцев, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <value>Массив сокращенных имен месяцев.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В некоторых языках название месяца, которое является частью даты, отображается в женитиве случае. Например, Дата в культуре ru-RU или русский (Россия) состоит из номера дня и названия месяца женитиве, например 1 января (1 января). Для этих языков и региональных параметров, если строка настраиваемого формата содержит описатель формата "MMM", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> метод <xref:System.DateTimeOffset.ToString%2A> или включает соответствующий элемент <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> массива вместо "MMM" в результирующей строке.  
  
 В операции с наборами массив должен быть одномерным с точно 13 элементами, поскольку <xref:System.Globalization.Calendar> объекты размещает календари, имеющие 13 месяцев. Для календарей, имеющих 12 месяцев, элемент тринадцатого должен иметь <xref:System.String.Empty?displayProperty=nameWithType>значение. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определенный <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойством.  
  
 Если задано <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойство, необходимо также <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> задать свойство.  
  
   
  
## Examples  
 В следующем примере создается объект для чтения и <xref:System.Globalization.CultureInfo> записи, представляющий язык и региональные параметры «Английский (США)», и ему присваиваются сокращенные <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> имена <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> женитиве месяцев. Затем он отображает строковое представление дат, содержащих сокращенное название месяца каждого месяца в поддерживаемом календаре языка и региональных параметрах.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В операции присваивания массив является многомерным или имеет длину, это не точно 13.</exception>
        <exception cref="T:System.ArgumentNullException">В наборе операций массив или один из элементов массива имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">В операции задания текущий объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает одномерный строковый массив, содержащий сокращения месяцев, принятые в определенном языке и региональных параметрах.</summary>
        <value>Одномерный строковый массив, состоящий из 13 элементов и содержащий сокращения месяцев, принятые в определенном языке и региональных параметрах. В 12-месячных календарях тринадцатый элемент массива представляет собой пустую строку. Массив для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит элементы "Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек" и "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если задать это свойство, массив должен быть одномерным и содержать ровно 13 элементов. <xref:System.Globalization.Calendar>объекты, содержащие календари с 13 месяцами. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определенный <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойством.  
  
 Если задано <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> свойство, необходимо также <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> задать свойство. Свойства <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> и<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> используются для форматирования дат с помощью следующих строк формата:  
  
-   Строка стандартного формата даты и времени, которая используется для псевдонима строки настраиваемого формата, включающей описатель формата "MMM".  
  
-   Строка настраиваемого формата даты и времени, включающая описатель формата "MMM".  
  
 Это свойство изменяется при изменении значения <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойства. Если выбранный <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> параметр не поддерживает сокращенные названия месяцев, массив содержит полные названия месяцев.  
  
   
  
## Examples  
 В следующем примере создается объект для чтения и <xref:System.Globalization.CultureInfo> записи, представляющий язык и региональные параметры «Английский (США)», и ему присваиваются сокращенные <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> имена <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> женитиве месяцев. Затем он отображает строковое представление дат, включающее сокращенное название каждого месяца в поддерживаемом календаре языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство задается для многомерного массива или для массива, длина которого не равна 13.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку указателя часов до полудня (АМ — "ante meridiem").</summary>
        <value>Строка указателя часов до полудня. По умолчанию для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> установлено значение AM.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> Свойство используется для всех значений времени от 0:00:00 (полночь) до 11:59:59.999.  
  
 Если строка настраиваемого формата содержит описатель формата "TT" и время до полудня, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> метод или <xref:System.DateTimeOffset.ToString%2A> <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> включает значение свойства вместо "TT" в результирующей строке. Если строка настраиваемого формата содержит описатель настраиваемого формата "t", включается только первый символ <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> значения свойства. Следует использовать "TT" для языков, для которых необходимо сохранить различие между утра и P.M. Примером является японский, в котором и P.M. обозначения отличаются вторым символом, а не первым символом.  
  
 Для языков и региональных параметров, не использующих A.M. , это свойство возвращает пустую строку.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar with get, set" Usage="System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает календарь, используемый в текущей языке и региональных параметрах.</summary>
        <value>Календарь, используемый в текущем языке и региональных параметрах. Значением по умолчанию для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> является объект <see cref="T:System.Globalization.GregorianCalendar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство принимает только календари, допустимые для языка и региональных параметров, связанных <xref:System.Globalization.DateTimeFormatInfo> с объектом. <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Свойство задает календари, которые могут использоваться в определенной культуре, <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> а свойство указывает календарь по умолчанию для языка и региональных параметров. <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>Изменение значения этого свойства также влияет на следующие свойства:, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>,,,,, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> и <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.  
  
 Например, если языком и региональными параметрами текущего потока является японский, это свойство принимает <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>или <xref:System.Globalization.GregorianCalendarTypes.USEnglish>. <xref:System.Globalization.GregorianCalendar> <xref:System.Globalization.JapaneseCalendar> При использовании используется спецификатор длинной даты по умолчанию "GG y" \x5e74 "\x6708" \x65e5 "". <xref:System.Globalization.GregorianCalendarTypes.Localized> Прииспользованиииспользуетсяспецификатордлиннойдатыпоумолчанию"yyyy"\x5e74"\x6708<xref:System.Globalization.GregorianCalendar>" \x65e5 "".  
  
   
  
## Examples  
 В следующем примере определяется `ChangeCalendar` метод, который изменяет текущий календарь языка и региональных параметров на указанный календарь, если он еще не является текущим календарем или не поддерживается культурой. Код, вызывающий метод, создает экземпляр <xref:System.Globalization.CultureInfo> объекта, представляющий арабский (Египет), и сначала пытается сменить календарь на японский. Поскольку японский календарь не поддерживается, метод не изменяет календарь языка и региональных параметров. Однако, поскольку календарь аль-Кура единой системы обмена сообщениями является членом <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> коллекции, метод делает его текущим календарем для языка и региональных параметров ar-EG.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задается объект <see cref="T:System.Globalization.Calendar" />, недопустимый для текущего языка и региональных параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarWeekRule : System.Globalization.CalendarWeekRule with get, set" Usage="System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее правило, используемое для определения первой календарной недели года.</summary>
        <value>Значение, определяющее первую календарную неделю года. Значение по умолчанию для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> равно <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство изменяется при изменении значения <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойства.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задается значение, не являющееся допустимым значением <see cref="T:System.Globalization.CalendarWeekRule" />.</exception>
        <exception cref="T:System.InvalidOperationException">В операции задания текущий объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Clone() cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clone();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает неполную копию <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Новый объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, скопированный из исходного <see cref="T:System.Globalization.DateTimeFormatInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Копия доступна для записи, даже если исходный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения. Таким образом, свойства клона можно изменить с помощью пользовательских шаблонов.  
  
 Неполная копия объекта — это копия только объекта. Если объект содержит ссылки на другие объекты, то неполная копия не создает копии объектов, на которые они ссылаются. Вместо этого он ссылается на исходные объекты. В отличие от этого, глубокая копия объекта создает копию объекта и копию всех объектов, на которые прямо или косвенно ссылается этот объект.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает доступный только для чтения объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, форматирующий значения на основе текущего языка и региональных параметров.</summary>
        <value>Доступный только для чтения объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> на основе объекта <see cref="T:System.Globalization.CultureInfo" /> текущего потока.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект, возвращаемый свойством, отражает переопределения, переопределяемые пользователем. <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> <xref:System.Globalization.DateTimeFormatInfo>  
  
   
  
## Examples  
 В следующем примере <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> свойство используется для <xref:System.Globalization.DateTimeFormatInfo> извлечения объекта, представляющего соглашения о форматировании текущего языка и региональных параметров, в данном случае — язык и региональные параметры en-US. Затем он отображает строку форматирования и результирующую строку для шести свойств форматирования.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, разделяющую компоненты даты — год, месяц и день.</summary>
        <value>Строка, разделяющая компоненты даты — год, месяц и день. Значение по умолчанию для объекта <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> равно "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если строка настраиваемого формата содержит описатель формата "/", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> метод отображает значение вместо <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> "/" в результирующей строке.  
  
 <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> Свойство определяет строку, которая заменяет разделитель даты ("/" настраиваемый описатель формата даты и времени) в результирующей строке в операции форматирования. Он также определяет строку разделителя даты в операции синтаксического анализа.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Globalization.CultureInfo> объект для языка и региональных параметров en-US, изменяется его разделитель дат на "-" и отображается дата с использованием строк стандартного формата "d", "g" и "g".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает одномерный массив строк, содержащий полные названия дней недели, принятые в определенном языке и региональных параметрах.</summary>
        <value>Одномерный массив строк, содержащий полные названия дней недели, принятые в определенном языке и региональных параметрах. Массив для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит значения "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота" и "Воскресенье".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При задании этого свойства массив должен быть одномерным и должен содержать ровно семь элементов. Первый элемент (элемент с нулевым индексом) представляет первый день недели в календаре, определенном <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойством.  
  
 Если строка настраиваемого формата содержит описатель формата "dddd", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> метод включает значение соответствующего <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> члена вместо "dddd" в результирующей строке.  
  
 Это свойство изменяется при изменении значения <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойства.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство задается для многомерного массива или для массива, длина которого не равна 7.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает первый день недели.</summary>
        <value>Значение перечисления, представляющее первый день недели. Значение по умолчанию для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> равно <see cref="F:System.DayOfWeek.Sunday" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство изменяется при изменении значения <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойства.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задается значение, не являющееся допустимым значением <see cref="T:System.DayOfWeek" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullDateTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для длинного значения даты и длинного значения времени.</summary>
        <value>Строка пользовательского формата для длинного значения даты и длинного значения времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка стандартного формата "F" является псевдонимом для <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойства. Иными словами, строка настраиваемого формата, назначенная этому свойству, определяет формат результирующей строки для строки стандартного формата "F". Дополнительные сведения см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
 Значение <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойства создается динамически путем сцепления <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойств и <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> , разделенных пробелом. Это динамическое назначение происходит при следующих условиях.  
  
-   , Если значение свойства извлекается до того, как оно было задано явно.  
  
-   При изменении значения <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойства.  
  
-   При изменении значения <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> свойства.  
  
 Это свойство изменяется при изменении значения <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойства.  
  
   
  
## Examples  
 В следующем примере выводится значение <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Значение <see cref="T:System.DayOfWeek" />.</param>
        <summary>Возвращает полное название указанного дня недели, принятое в определенном языке и региональных параметрах, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Сокращение дня недели, принятое в определенном языке и региональных параметрах, представленных свойством <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для инвариантного <xref:System.Globalization.DateTimeFormatInfo> объекта по умолчанию этот метод возвращает строку <xref:System.Globalization.GregorianCalendar>из:  
  
|`dayofweek`|Возвращаемое значение|  
|-----------------|------------------|  
|Воскресенье|Воскресенье|  
|понедельник|Понедельник|  
|Вторник|Вторник|  
|среда|СР|  
|Четверг|Четверг|  
|пятница|Будни|  
|Суббота|Кот|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> не является допустимым значением <see cref="T:System.DayOfWeek" />.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Целое число, представляющее собой эру.</param>
        <summary>Возвращает строку, содержащую сокращенное название указанной эры, если такое сокращение существует.</summary>
        <returns>Строка, содержащая сокращенное название указанной эры, если такое сокращение существует,  
  
 - или -  
  
 Строка, содержащая полное название указанной эры, если сокращение отсутствует.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Название эры — это имя, которое календарь использует для ссылки на период времени, недюжинной с фиксированной точки или события. Например, «н. э.» или «Н.Э.» Текущая эра григорианского календаря.  
  
 Допустимые значения для `era` указаны <xref:System.Globalization.Calendar.Eras%2A> в свойстве соответствующего класса, производного от <xref:System.Globalization.Calendar>. Например: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> отображает список Эр, поддерживаемых этой реализацией.  
  
 <xref:System.Globalization.JapaneseCalendar> В классе сокращенное название эры является первым символом полного имени эры. Этот символ является либо буквенным алфавитом, не учитывающим регистр буквами, либо аббревиатурой, сооснованной на одном символе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="era" /> не является допустимым значением эры в календаре, определенном в свойстве <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />.</exception>
        <block subset="none" type="usage"><para>Если <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> параметр имеет <see cref="T:System.Globalization.TaiwanCalendar" /> значение, <see cref="P:System.Threading.Thread.CurrentCulture" /> но не является "zh-TW", <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />то <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращает пустую строку ("").</para></block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Целое число от 1 до 13, представляющее собой название извлекаемого месяца.</param>
        <summary>Возвращает сокращение указанного месяца, принятое в определенном языке и региональных параметрах, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Сокращенное название месяца, принятое в определенном языке и региональных параметрах, представленное свойством <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для инвариантного <xref:System.Globalization.DateTimeFormatInfo> объекта по умолчанию этот метод возвращает строку <xref:System.Globalization.GregorianCalendar> из объекта.  
  
|`month`|Возвращаемое значение|  
|-------------|------------------|  
|1|Янв|  
|2|Февраля|  
|3|Марта|  
|4|Apr|  
|5|Мая|  
|6|Июля|  
|7|Июля|  
|8|Август|  
|9|Сентября|  
|10|Октября|  
|11|Ноября|  
|12|Уменьшение|  
|13|""|  
  
 <xref:System.Globalization.Calendar>объекты могут размещать календари за 13 месяцев. Для 12-месячных календарей пустая строка всегда возвращается в виде названия за 13 месяцев.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> меньше 1 или больше 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает стандартные шаблоны, в которых можно форматировать значения даты и времени.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : unit -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает все стандартные шаблоны, в которых можно форматировать значения даты и времени.</summary>
        <returns>Массив, содержащий стандартные шаблоны, в которых можно форматировать значения даты и времени.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает массив, который содержит все строки настраиваемого формата, соответствующие строкам стандартного формата. Список строк стандартного формата см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) .  
  
 Вы можете использовать строки настраиваемого формата в массиве, возвращаемом <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> методом, в операциях форматирования. Однако при этом строковое представление значения даты и времени, возвращаемого в этой операции форматирования, не всегда может быть успешно `Parse` проанализировано методами и. `TryParse` Таким образом, нельзя предположить, что строки настраиваемого формата, возвращаемые <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> методом, могут использоваться для значений даты и времени приема-передачи. Приведенный ниже пример иллюстрирует данную проблему. Он извлекает <xref:System.Globalization.DateTimeFormatInfo> объект, содержащий сведения о форматировании для языка и региональных параметров Италии (Итальянский). Он передает каждую строку настраиваемого формата в массиве, возвращаемом <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> методом <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> , в метод для создания строкового представления даты и времени. Затем этот пример пытается проанализировать это значение путем <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> вызова метода. Как видно из выходных данных в примере, некоторые строки настраиваемого формата не создают значение даты и времени, которое успешно прошло циклический обмен.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 Чтобы проанализировать строковое представление даты и времени, которые могут быть выражены в нескольких предопределенных пользовательских форматах, вызовите один из следующих методов.  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Строки настраиваемого формата в массиве, возвращаемом <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> методом, зависят от текущего календаря языка и региональных параметров, <xref:System.Globalization.DateTimeFormatInfo> для которого объект предоставляет сведения о форматировании. При изменении календаря массив, возвращаемый этим методом, также изменяется.  
  
   
  
## Examples  
 В следующем примере выводятся строки формата даты и времени для инвариантных региональных параметров, а также результирующая строка, которая создается, если эта строка формата используется для форматирования определенной даты.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 В примере создается экземпляр <xref:System.Globalization.DateTimeFormatInfo> объекта, представляющий инвариантный язык и региональные параметры, путем <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> вызова конструктора. Он также может получить объект <xref:System.Globalization.DateTimeFormatInfo> , представляющий инвариантный язык и региональные параметры <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> из свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : char -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="format">Строка стандартного формата.</param>
        <summary>Возвращает все шаблоны, в которых значения даты и времени можно форматировать с использованием заданной стандартной строки формата.</summary>
        <returns>Массив, содержащий стандартные шаблоны, в которых значения даты и времени можно форматировать с помощью указанной строки формата.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает массив, содержащий строки настраиваемого формата, соответствующие определенной строке стандартного формата. Список строк стандартного формата см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) .  
  
 Вы можете использовать строки настраиваемого формата в массиве, возвращаемом <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> методом, в операциях форматирования. Однако при этом строковое представление значения даты и времени, возвращаемого в этой операции форматирования, не всегда может быть успешно `Parse` проанализировано методами и. `TryParse` Таким образом, нельзя предположить, что строки настраиваемого формата, возвращаемые <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> методом, могут использоваться для значений даты и времени приема-передачи. Приведенный ниже пример иллюстрирует данную проблему. Он извлекает <xref:System.Globalization.DateTimeFormatInfo> объект, который содержит сведения о форматировании для языка и региональных параметров России (Русский язык). Он вызывает <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> метод для каждой строки стандартного формата, а затем передает каждую строку настраиваемого формата в возвращенном массиве <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> в метод для создания строкового представления даты и времени. Затем этот пример пытается проанализировать это значение путем <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> вызова метода. Как видно из выходных данных в примере, некоторые строки настраиваемого формата не создают значение даты и времени, которое успешно прошло циклический обмен.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 Чтобы проанализировать строковое представление даты и времени, которые могут быть выражены в нескольких предопределенных пользовательских форматах, вызовите один из следующих методов.  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Строки настраиваемого формата в массиве, возвращаемом <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> методом, зависят от текущего календаря языка и региональных параметров, <xref:System.Globalization.DateTimeFormatInfo> для которого объект предоставляет сведения о форматировании. При изменении календаря массив, возвращаемый этим методом, также изменяется.  
  
   
  
## Examples  
 В следующем примере отображаются шаблоны даты и времени для текущего календаря.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="format" /> не является допустимой строкой стандартного формата.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Значение <see cref="T:System.DayOfWeek" />.</param>
        <summary>Возвращает сокращение указанного дня недели, принятое в определенном языке и региональных параметрах, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Полное название дня недели, принятое в определенном языке и региональных параметрах, представленное свойством <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для инвариантного <xref:System.Globalization.DateTimeFormatInfo> объекта по умолчанию этот метод возвращает строку <xref:System.Globalization.GregorianCalendar> из объекта.  
  
|`dayofweek`|Возвращаемое значение|  
|-----------------|------------------|  
|Воскресенье|Воскресенье|  
|понедельник|Понедельник|  
|Вторник|Вторник|  
|среда|Среда|  
|Четверг|Четверг|  
|пятница|Пятница|  
|Суббота|Сегодня|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> не является допустимым значением <see cref="T:System.DayOfWeek" />.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberSignature Language="F#" Value="member this.GetEra : string -&gt; int" Usage="dateTimeFormatInfo.GetEra eraName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">Строка, содержащая название эры.</param>
        <summary>Возвращает целое число, представляющее собой указанную эру.</summary>
        <returns>Целое число, представляющее эру, если <paramref name="eraName" /> является допустимым; в противном случае -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Название эры — это имя, которое календарь использует для ссылки на период времени, недюжинной с фиксированной точки или события. Например, «н. э.» или «Н.Э.» Текущая эра григорианского календаря.  
  
 Сравнение с `eraName` не учитывает регистр, например "н. э." эквивалентно «н. э.».  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A>игнорирует знаки препинания в сокращенных названиях эпохи, только <xref:System.Globalization.GregorianCalendar> Если выбрано <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> в и в культуре используется "н/д" как название эры, то есть "н. э." эквивалентно "AD".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A>Сравнивает с полным именем эры, возвращаемым функцией <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> , и с сокращенным именем эры, <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>возвращаемым. `eraName`  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## Examples  
 В следующем примере показано, <xref:System.Globalization.DateTimeFormatInfo> что игнорирует знаки пунктуации в названии эры, только если календарь — григорианский, а в культуре используется название эры «н. э.».  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="eraName" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Целое число, представляющее собой эру.</param>
        <summary>Возвращает строку, содержащую название указанной эры.</summary>
        <returns>Строка, содержащая название эры.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Название эры — это имя, которое календарь использует для ссылки на период времени, недюжинной с фиксированной точки или события. Например, «н. э.» или «Н.Э.» Текущая эра григорианского календаря.  
  
 Допустимые значения для `era` указаны <xref:System.Globalization.Calendar.Eras%2A> в свойстве соответствующего класса, производного от <xref:System.Globalization.Calendar>. Например: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> отображает список Эр, поддерживаемых этой реализацией.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="era" /> не является допустимым значением эры в календаре, определенном в свойстве <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />.</exception>
        <block subset="none" type="usage"><para>Если календарь <see cref="T:System.Globalization.TaiwanCalendar" /> представлен, <see cref="P:System.Threading.Thread.CurrentCulture" /> но не является "zh <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />- <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />TW", и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращает пустую строку ("").</para></block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="dateTimeFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Тип требуемой службы форматирования.</param>
        <summary>Возвращает объект указанного типа, предоставляющий службу форматирования времени и даты.</summary>
        <returns>Текущий объект, если параметр <paramref name="formatType" /> совпадает с типом текущего объекта <see cref="T:System.Globalization.DateTimeFormatInfo" />; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод, поддерживаемый базовыми типами данных, вызывает этот метод, когда <xref:System.Globalization.DateTimeFormatInfo> текущий <xref:System.IFormatProvider> объект передается в качестве параметра. `Format(String, IFormatProvider)` Этот метод реализует <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.GetInstance provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><see cref="T:System.IFormatProvider" />, который получает объект <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
- или - 
 Значение<see langword="null" /> , чтобы получить <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</param>
        <summary>Возвращает объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, связанный с указанным <see cref="T:System.IFormatProvider" />.</summary>
        <returns>Объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, связанный с <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> метод использует `formatProvider` метод <xref:System.Globalization.DateTimeFormatInfo>использованияобъекта в качестве параметра.`Type` Если `formatProvider` имеет `null` значение или <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> возвращает <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>, этот `null`метод возвращает.  
  
 Приложение может получить <xref:System.Globalization.DateTimeFormatInfo> объект для определенного языка и региональных параметров с помощью одного из следующих методов:  
  
-   Свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.  
  
-   Метод, где `provider` — это <xref:System.Globalization.CultureInfo> объект. <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A>  
  
 <xref:System.Globalization.DateTimeFormatInfo> Объект может быть создан только для инвариантного языка и региональных параметров или для конкретных языков и региональных параметров, а не для нейтральных языков и региональных параметров.  
  
 Дополнительные сведения о инвариантных региональных параметрах, конкретных культурах и нейтральных культурах см <xref:System.Globalization.CultureInfo> . в описании класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Целое число от 1 до 13, представляющее собой название извлекаемого месяца.</param>
        <summary>Возвращает полное имя указанного месяца, принятое в определенном языке и региональных параметрах, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Полное название месяца, принятое в определенном языке и региональных параметрах, представленное параметром <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для инвариантного <xref:System.Globalization.DateTimeFormatInfo> объекта по умолчанию этот метод возвращает строку <xref:System.Globalization.GregorianCalendar> из объекта.  
  
|`month`|Возвращаемое значение|  
|-------------|------------------|  
|1|Января|  
|2|Г|  
|3|Марта|  
|4|Апрель|  
|5|Мая|  
|6|Выпущен|  
|7|Июле|  
|8|Августа|  
|9|Сентябрь|  
|10|Октябре|  
|11|Ноября|  
|12|Декабрь|  
|13|""|  
  
 <xref:System.Globalization.Calendar>объекты могут размещать календари за 13 месяцев. Для 12-месячных календарей пустая строка всегда возвращается в виде названия за 13 месяцев.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> меньше 1 или больше 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberSignature Language="F#" Value="member this.GetShortestDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetShortestDayName dayOfWeek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek">Одно из значений <see cref="T:System.DayOfWeek" />.</param>
        <summary>Получает самое короткое сокращенное название дня для определенного дня недели, связанное с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Сокращение для недели, соответствующее параметру <paramref name="dayOfWeek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показаны несколько методов и свойств, задающих шаблоны формата даты и времени, имя собственного календаря, а также полные и сокращенные названия месяца и дня.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="dayOfWeek" /> не является значением перечисления <see cref="T:System.DayOfWeek" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает доступный только для чтения объект по умолчанию <see cref="T:System.Globalization.DateTimeFormatInfo" />, который не зависит от языка и региональных параметров (инвариантный).</summary>
        <value>Объект, доступный только для чтения, который не зависит от языка и региональных параметров (инвариантный).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство не изменяется независимо от текущего языка и региональных параметров. По этой причине <xref:System.Globalization.DateTimeFormatInfo> объект инвариантного языка и региональных параметров можно использовать для получения согласованных, независимых от языка и региональных параметров результатов синтаксического анализа и форматирования данных, которые являются многоязычными. Например, если данные даты и времени из нескольких языков и региональных параметров должны сохраняться в строковой форме, их можно отформатировать с <xref:System.Globalization.DateTimeFormatInfo> помощью объекта инвариантной культуры и сохранить. Затем его можно проанализировать с помощью <xref:System.Globalization.DateTimeFormatInfo> объекта инвариантного языка и региональных параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, показывающее, является ли объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступным только для чтения.</summary>
        <value>Значение <see langword="true" />, если объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для длинного значения даты.</summary>
        <value>Строка пользовательского формата для длинного значения даты.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство определяет формат строк даты, которые возвращаются в зависимости от языка и региональных параметров, возвращаемых <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> вызовами методов и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> , а также строками составного формата, которым предоставлена строка стандартного формата "D". <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> В следующем примере показаны связи между следующими параметрами: строка стандартного формата "D", строка настраиваемого формата, возвращаемая <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойством, и представление даты в зависимости от языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 В разделе [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md) для отдельных настраиваемых описателей формата, которые можно комбинировать для создания строк настраиваемого формата, таких как dddd, дд мммм гггг.  
  
 Необходимо задать для разделителя даты в шаблоне длинной даты точную строку, а не заполнитель разделителя даты. Например, чтобы получить шаблон MM-ДД-ГГГГ, задайте для шаблона длинной даты значение "MM-ДД-ГГГГ".  
  
 Значение этого свойства может измениться, если изменяется календарь, используемый культурой. Например, в следующем примере показано, как <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство <xref:System.Globalization.CultureInfo> объекта, представляющего арабский (сирийский <xref:System.Globalization.Calendar> ) язык, изменяется при изменении объекта, используемого в культуре.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 В следующем примере показано значение <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойства для нескольких культур.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для длинного значения времени.</summary>
        <value>Шаблон формата для долговременного значения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство определяет формат строк даты, которые возвращаются в зависимости от языка и региональных параметров, возвращаемых <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> вызовами методов и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> , а также строками составного формата, которым предоставлена строка стандартного формата "T". <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>  
  
 Рекомендуется задать для разделителя времени в шаблоне длинного времени точную строку, а не заполнитель разделителя времени. Например, чтобы получить шаблон h-mm-ss, задайте для шаблона длинной даты значение "h-mm-ss".  
  
   
  
## Examples  
 В следующем примере выводится значение <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthDayPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для значения месяца и дня.</summary>
        <value>Строка пользовательского формата для значения месяца и дня.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство определяет формат строк даты, которые возвращаются в зависимости от языка и региональных параметров, возвращаемых <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> вызовами методов и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> , а также строками составного формата, которые представляют строки стандартного формата m и m. <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>  
  
 Это свойство изменяется при изменении значения <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойства.  
  
 Рекомендуется задать для разделителя даты в шаблоне "месяц" и "день" точную строку, а не заполнитель разделителя дат. Например, чтобы получить шаблон MM-ДД, задайте для параметра "месяц и день" значение "мм-дд".  
  
   
  
## Examples  
 В следующем примере выводится значение <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает массив строк имен месяцев, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <value>Массив строк имен месяцев.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В некоторых языках название месяца, которое является частью даты, отображается в женитиве случае. Например, Дата в русском (Россия) или ru-RU языке и региональных параметрах состоят из номера дня и названия месяца женитиве, например 1 января.  
  
 Если это свойство задано, массив должен быть одномерным и должен содержать ровно 13 элементов. <xref:System.Globalization.Calendar>объекты, содержащие календари с 13 месяцами. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определенный <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойством. Если задано <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> свойство, необходимо также <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> задать свойство.  
  
   
  
## Examples  
 В следующем примере показаны несколько методов и свойств, задающих шаблоны формата даты и времени, имя собственного календаря, а также полные и сокращенные названия месяца и дня.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В операции присваивания массив является многомерным или имеет длину, это не точно 13.</exception>
        <exception cref="T:System.ArgumentNullException">В операции задания массив или один из его элементов имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">В операции задания текущий объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает одномерный массив типа <see cref="T:System.String" />, содержащий полные названия месяцев, принятые в определенном языке и региональных параметрах.</summary>
        <value>Одномерный массив типа <see cref="T:System.String" />, содержащий полные названия месяцев, принятые в определенном языке и региональных параметрах. В 12-месячном календаре тринадцатый элемент массива представляет собой пустую строку. Массив для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит элементы "Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь" и "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это свойство задано, массив должен быть одномерным и должен содержать ровно 13 элементов. <xref:System.Globalization.Calendar>объекты, содержащие календари с 13 месяцами. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определенный <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойством.  
  
 Если задано <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> свойство, необходимо также <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> задать свойство.  
  
 Если пользовательский шаблон содержит шаблон формата «MMMM», <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> то <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> в шаблоне формата отобразится значение вместо «MMMM».  
  
 Это свойство изменяется при изменении значения <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойства.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство задается для многомерного массива или для массива, длина которого не равна 13.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeCalendarName : string" Usage="System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает собственное имя календаря, связанного с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <value>Собственное имя календаря, используемое в языке и региональных параметрах, связано с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />, если имя доступно, или с пустой строкой (""), если собственное имя календаря недоступно.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показаны несколько методов и свойств, задающих шаблоны формата даты и времени, имя собственного календаря, а также полные и сокращенные названия месяца и дня.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Если <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> параметр имеет <see cref="T:System.Globalization.TaiwanCalendar" /> значение, <see cref="P:System.Threading.Thread.CurrentCulture" /> но не является "zh-TW", <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />то <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращает пустую строку ("").</para></block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку указателя часов после полудня (PМ — "post meridiem").</summary>
        <value>Строка указателя часов после полудня (PМ — "post meridiem"). Значение по умолчанию для объекта <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> равно PM.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> Свойство используется для всех значений времени от 12:00:00 (полдень) до 23:59:59.999.  
  
 Если пользовательский шаблон содержит шаблон формата TT, а время после полудня, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> то отображает <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> значение вместо "TT" в шаблоне формата. Если пользовательский шаблон содержит шаблон формата t, отображается только первый символ <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> . Приложение должно использовать "TT" для языков, для которых необходимо сохранить различие между AM и PM. Например, японский язык, для которого AM и PM указатели различаются во втором символе вместо первого.  
  
 Для языков и региональных параметров, не использующих указатель PM, это свойство возвращает пустую строку.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.DateTimeFormatInfo -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.ReadOnly dtfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi">Объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, для которого создается оболочка.</param>
        <summary>Возвращает программу-оболочку <see cref="T:System.Globalization.DateTimeFormatInfo" />, доступную только для чтения.</summary>
        <returns>Оболочка <see cref="T:System.Globalization.DateTimeFormatInfo" />, доступная только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта оболочка предотвращает любые изменения `dtfi`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dtfi" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RFC1123Pattern : string" Usage="System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку пользовательского формата для значения времени, основанного на спецификации IETF Request for Comments 1123 (RFC IETF).</summary>
        <value>Строка пользовательского формата для значения времени на основе спецификации 1123 IETF RFC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство определяет формат строк даты, определяемый языком и региональными параметрами, возвращаемых вызовами <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> методов <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> и, а также строками составного формата, которые представляют строки стандартного формата "r" и "r". <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>  
  
 Шаблон RFC1123 отражает определенный стандарт, и свойство доступно только для чтения. Таким образом, он всегда один и тот же, независимо от языка и региональных параметров. Строкой пользовательского формата является "ддд, дд ммм гггг чч':'мм':'сс 'GMT'".  
  
   
  
## Examples  
 В следующем примере показано значение RFC1123Pattern для нескольких культур.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberSignature Language="F#" Value="member this.SetAllDateTimePatterns : string[] * char -&gt; unit" Usage="dateTimeFormatInfo.SetAllDateTimePatterns (patterns, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="patterns">Массив пользовательских строк формата.</param>
        <param name="format">Строка стандартного формата, связанная со строками пользовательского формата, указанными в параметре <paramref name="patterns" />.</param>
        <summary>Задает строки пользовательского формата даты и времени, соответствующие заданной стандартной строке формата.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> Метод определяет строки настраиваемого формата, соответствующие определенной строке стандартного формата даты и времени. Если вызов метода форматирования даты и времени включает строку стандартного формата даты и времени, заданную параметром `format`, метод использует первый элемент `patterns` массива для определения формата результирующей строки.  
  
> [!WARNING]
>  Методы `Parse` `patterns` и `TryParse` не выполняют полный перебор всех строк в при синтаксическом анализе строкового представления даты и времени. Если требуется, чтобы строка даты и времени имели определенные форматы в операции синтаксического анализа, <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>необходимо передать массив допустимых форматов в метод, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>или <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> .  
  
 Можно определить строки настраиваемого формата, соответствующие строкам "d", "D", "t", "T" и "y", а также стандартным форматам даты и времени. Если значение `format` равно любой другой строке стандартного формата <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> , метод создает исключение <xref:System.ArgumentException>.  
  
 Если строки настраиваемого формата даты и времени содержат разделители дат, следует явно указать разделитель дат вместо того, чтобы полагаться на метод синтаксического анализа или форматирования, который заменяет описатель настраиваемого формата "/" на определенный разделитель дат. Например, чтобы получить шаблон MM-ДД-ГГГГ, используйте шаблон «MM-ДД-ГГГГ».  
  
   
  
## Examples  
 В следующем примере создается экземпляр <xref:System.Globalization.CultureInfo> объекта, который представляет язык и региональные параметры "en-US" (Английский США) и использует его для синтаксического анализа массива строк даты и времени с использованием строки стандартного формата "Y". Затем он использует <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> метод, чтобы связать новую строку настраиваемого формата со строкой стандартного формата "Y", а затем пытается выполнить синтаксический анализ массива строк даты и времени. Выходные данные в примере показывают, что новая строка настраиваемого формата используется в операциях синтаксического анализа и форматирования.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="patterns" /> имеет значение <see langword="null" /> или является массивом нулевой длины.  
  
- или - 
 <paramref name="format" /> не является допустимым строка стандартного формата или является строка стандартного формата, шаблоны которых не может быть задано.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="patterns" /> имеет элемент массива со значением <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Данный объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для короткого значения даты.</summary>
        <value>Строка пользовательского формата для короткого значения даты.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство определяет формат строк даты, которые возвращаются в зависимости от языка и региональных параметров, возвращаемых <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> вызовами методов и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> , а также строками составного формата, которым предоставлена строка стандартного формата "d". <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>  
  
 Это свойство изменяется при изменении значения <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойства.  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойства и значение даты, отформатированное <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> с помощью свойства, для нескольких языков и региональных параметров.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 В следующем примере изменяется <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство <xref:System.Globalization.DateTimeFormatInfo> объекта, представляющего соглашения о форматировании для языка и региональных параметров "Английский (США)". Он также отображает значение даты дважды, сначала отражая исходное <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство, а затем отразит новое значение свойства.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortestDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает массив строк самых кратких уникальных сокращений имен дней, связанный с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <value>Массив строк имен дней.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показаны несколько методов и свойств, задающих шаблоны формата даты и времени, имя собственного календаря, а также полные и сокращенные названия месяца и дня.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В операции присваивания массив не имеет ровно семь элементов.</exception>
        <exception cref="T:System.ArgumentNullException">В наборе операций массив значений или один из элементов массива значений имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">В операции задания текущий объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для короткого значения времени.</summary>
        <value>Строка пользовательского формата для короткого значения времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство определяет формат строк даты, которые возвращаются в зависимости от языка и региональных параметров, возвращаемых <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> вызовами методов и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> , а также строками составного формата, которым предоставлена строка стандартного формата "t". <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>  
  
 Рекомендуется задать для разделителя времени в кратком шаблоне времени точную строку вместо использования заполнителя разделителя времени. Например, чтобы получить шаблон h-mm-ss, установите короткий шаблон времени в значение "h-mm-ss".  
  
   
  
## Examples  
 В следующем примере выводится значение <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку пользовательского формата для сортируемого значения даты и времени.</summary>
        <value>Строка пользовательского формата для сортируемого значения даты и времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство определяет формат строк даты, которые возвращаются в зависимости от языка и региональных параметров, возвращаемых <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> вызовами методов и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> , а также строками составного формата, которым предоставлена строка стандартного формата "s". <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>  
  
 Строка формата, возвращаемая <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> свойством, отражает определенный стандарт (ISO 8601), а свойство доступно только для чтения. Таким образом, он всегда один и тот же, независимо от языка и региональных параметров. Строкой пользовательского формата является "гггг'-'мм'-'дд'T'чч':'мм':'сс".  
  
   
  
## Examples  
 В следующем примере выводится значение <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, разделяющую компоненты времени — час, минуты и секунды.</summary>
        <value>Строка, разделяющая компоненты времени. Значение по умолчанию для объекта <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> равно ":".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если пользовательский шаблон содержит шаблон формата ":", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> в шаблоне формата отображается <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> значение вместо ":".  
  
 Разделитель времени является производным от <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> свойства. Рекомендуется задать для разделителя времени в коротком или длинном шаблоне точное строковое значение вместо использования заполнителя разделителя времени. Например, чтобы получить шаблон h-mm-ss, задайте для шаблона значение "h-mm-ss". Эта практика также позволяет задать такие шаблоны, как "х'х" mm "SS" (3h 36m 12S), которые включают несколько типов разделителей. <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> Свойство определяет строку, которая заменяет разделитель времени (":" настраиваемый описатель формата даты и времени) в результирующей строке в операции форматирования. Он также определяет строку разделителя времени в операции синтаксического анализа.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Globalization.CultureInfo> объект для языка и региональных параметров en-US, изменяется его разделитель дат на "." и отображается дата с использованием строк стандартного формата "t", "t", "f", "f", "g" и "g".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniversalSortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку пользовательского формата для универсальной, сортируемой строки даты и времени в соответствии со стандартом ISO 8601.</summary>
        <value>Строка пользовательского формата для универсальной, сортируемой строки даты и времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство определяет формат строк даты, возвращаемых вызовами <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> методов и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> , а также строками составного формата, которым предоставлена строка стандартного формата "u". <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> Он может использоваться для вывода даты и времени в порядке сортировки с универсальным указателем времени "Z" в конце. Формат доступен для сортировки, поскольку в нем используются начальные нули для года, месяца, дня, часа, минуты и секунды. Строка настраиваемого формата ("yyyy'-'MM'-'дд чч": "mm": "Сс'з" ") одинакова независимо от языка и региональных параметров или поставщика формата.  
  
 Строка формата, возвращаемая <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> свойством, отражает определенный стандарт, а свойство доступно только для чтения. Таким образом, он всегда один и тот же, независимо от языка и региональных параметров. Строкой пользовательского формата является "гггг'-'мм'-'дд чч':'мм':'сс'Z'".  
  
   
  
## Examples  
 В следующем примере выводится значение <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартного формата DateTime</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YearMonthPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для значения года и месяца.</summary>
        <value>Строка пользовательского формата для значения года и месяца.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство определяет формат строк даты, определяемый языком и региональными параметрами, возвращаемых вызовами <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> методов <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> и, а также строками составного формата, которые представляют строки стандартного формата "y" и "y". <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>  
  
 Это свойство изменяется при изменении значения <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойства.  
  
 Рекомендуется задавать в качестве разделителя даты в шаблоне year month точную строку вместо использования заполнителя разделителя даты. Например, чтобы получить шаблон MM-гггг, задайте для параметра год года значение "мм-гггг".  
  
   
  
## Examples  
 В следующем примере выводится значение <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
  </Members>
</Type>
