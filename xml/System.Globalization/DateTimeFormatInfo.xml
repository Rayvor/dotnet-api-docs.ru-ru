<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c33fbc3f6719b6418cc8d374bd486319f2d0a33" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66007580" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type DateTimeFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет сведения о форматировании значений даты и времени, связанные с языком и региональными параметрами.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства <xref:System.Globalization.DateTimeFormatInfo> класса содержат сведения об особенностях язык и региональные параметры для форматирования или разбора значений даты и времени, например следующие:  
  
-   Шаблоны, используемые для форматирования значения даты.  
  
-   Шаблоны, используемые для форматирования значения времени.  
  
-   Названия дней недели.  
  
-   Названия месяцев года.  
  
-   Полудня и после полудня обозначения, используемые в значения времени.  
  
-   Календарь, в котором выражаются дат.  
  
 Содержание  
  
-   [Создание экземпляра объекта DateTimeFormatInfo](#instantiating)  
  
    -   [Для инвариантных региональных параметров](#instantiating_Invariant)  
  
    -   [Для конкретной культуры](#instantiating_Specific)  
  
    -   [Для нейтрального языка и региональных параметров](#instantiating_neutral)  
  
    -   [Для текущего языка и региональных параметров](#instantiating_Current)  
  
-   [DateTimeFormatInfo и динамических данных](#dynamic)  
  
-   [Форматирование значения даты и времени](#Formatting_dates_times)  
  
-   [Строки форматов и свойства DateTimeFormatInfo](#format-strings-and-datetimeformatinfo-properties)  
  
-   [Изменение свойства DateTimeFormatInfo](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>Создание экземпляра объекта DateTimeFormatInfo  
 Объект <xref:System.Globalization.DateTimeFormatInfo> объект может представлять соглашения о форматировании инвариантных региональных параметров, заданных региональных параметров, нейтрального языка и региональных параметров или текущего языка и региональных параметров. В этом разделе описываются способы создания экземпляра каждого типа <xref:System.Globalization.DateTimeFormatInfo> объекта.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для инвариантного языка и региональных параметров  
 Инвариантный язык и региональные параметры представляет язык и региональные параметры без учета языка и региональных параметров. Он основан на английском языке, но не на любой определенной англоговорящего страны или региона. Несмотря на то, что данные конкретных языков и региональных параметров может быть динамическим и можно изменить в соответствии с новой национальные стандарты или пользовательские настройки, не приводит к изменению данных инвариантного языка и региональных параметров. Можно создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании инвариантного языка и региональных параметров одним из следующих способов:  
  
-   Извлекая значение <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> свойства. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Путем вызова без параметров <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> конструктор. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
-   Извлекая значение <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства из <xref:System.Globalization.CultureInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> свойство. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
 В следующем примере используется каждый из этих методов для создания экземпляра <xref:System.Globalization.DateTimeFormatInfo> , представляющий инвариантного языка и региональных параметров. Затем он сообщает, является ли объект только для чтения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для конкретной культуры  
 Конкретной культуры представляет язык, используемый в определенной страны или региона. Например определенного языка и региональных параметров, представляющий английский язык, используемый в США является en US и en-CA является определенного языка и региональных параметров, представляющий английский язык, используемый в Канаде. Можно создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании для определенного языка и региональных параметров одним из следующих способов:  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> метод и получение значения, возвращаемого <xref:System.Globalization.CultureInfo> объекта <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Путем передачи статического <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> метод <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры которого <xref:System.Globalization.DateTimeFormatInfo> объекта, которые необходимо получить. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
-   Путем вызова статического <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> метод и получение значения, возвращаемого <xref:System.Globalization.CultureInfo> объекта <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> класса конструктор и получение значения, возвращаемого <xref:System.Globalization.CultureInfo> объекта <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
 В следующем примере демонстрируется каждый из этих способов создания экземпляров <xref:System.Globalization.DateTimeFormatInfo> и указывает, является ли результирующий объект только для чтения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для нейтрального языка и региональных параметров  
 Представляет нейтральный язык и региональные параметры языка и региональных параметров или языка, который не зависит от страны или региона; Обычно он является родительским для одного или нескольких конкретных культур. Например Fr — это нейтральная культура для французского языка и родительского языка и региональных параметров fr-FR. Можно создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании нейтрального языка и региональных параметров теми же способами, созданный <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании для определенного языка и региональных параметров. Кроме того, вы можете получить нейтральная культура <xref:System.Globalization.DateTimeFormatInfo> путем извлечения нейтрального языка и региональных параметров из конкретной культуры <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> свойство и получение <xref:System.Globalization.DateTimeFormatInfo> объект, возвращенный его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство. Если родительский язык и региональные параметры представляет инвариантных региональных параметров, возвращенного <xref:System.Globalization.DateTimeFormatInfo> объект доступен для чтения/записи. Следующий пример иллюстрирует эти способа создания экземпляров <xref:System.Globalization.DateTimeFormatInfo> объект, который представляет нейтральный язык и региональные параметры.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  В .NET Framework версии 1.0 через [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], при попытке получить <xref:System.Globalization.DateTimeFormatInfo> , который отражает соглашения о форматировании нейтрального языка и региональных параметров создает <xref:System.NotSupportedException> исключение.  
  
 Тем не менее нейтрального языка и региональных параметров не имеет сведений об особенностях язык и региональные параметры форматирования, так как он не зависит от конкретную страну или регион. Вместо заполнения <xref:System.Globalization.DateTimeFormatInfo> объект универсального значениями, платформа .NET Framework возвращает <xref:System.Globalization.DateTimeFormatInfo> , который отражает, правила форматирования конкретного языка и региональных параметров, является дочерним для нейтрального языка и региональных параметров. Например <xref:System.Globalization.DateTimeFormatInfo> объекта для языка и региональных параметров en нейтральный отражает соглашения о форматировании языка и региональных параметров en US и <xref:System.Globalization.DateTimeFormatInfo> объекта для языка и региональных параметров fr отражает соглашения о форматировании языка и региональных параметров fr-FR.  
  
 Чтобы определить, какие определенного языка и региональных параметров соглашения о форматировании представляет нейтральный язык и региональные параметры, можно использовать код, аналогичный следующему. В примере отражение используется для сравнения <xref:System.Globalization.DateTimeFormatInfo> свойства со свойствами данного объекта с определенным дочерним культурой нейтрального языка и региональных параметров. Он рассматривает двух календарей как эквивалентные, если они относятся к одному типу календаря и, по григорианскому календарю календари, если их <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> свойства имеют одинаковые значения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для текущего языка и региональных параметров  
 Можно создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании текущего языка и региональных параметров одним из следующих способов:  
  
-   Извлекая значение <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> свойства. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Извлекая значение <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства из <xref:System.Globalization.CultureInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Путем вызова <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> метод с <xref:System.Globalization.CultureInfo> объект, представляющий текущий язык и региональные параметры. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
 В следующем примере используется каждый из этих методов для создания экземпляра <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании текущего языка и региональных параметров. Затем он сообщает, является ли объект только для чтения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 Можно создать доступный для записи <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения текущих региональных параметров потока в одном из следующих способов:  
  
-   Получая <xref:System.Globalization.DateTimeFormatInfo> объекта в любом из трех предыдущих способов и вызова метода <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> метод возвращенного <xref:System.Globalization.DateTimeFormatInfo> объекта. При этом создается копия исходного <xref:System.Globalization.DateTimeFormatInfo> объекта, за исключением случаев, его <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> свойство `false`.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> метод для создания <xref:System.Globalization.CultureInfo> объект, представляющий текущий язык и региональные параметры, а затем использовать его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> извлекаемого свойства <xref:System.Globalization.DateTimeFormatInfo> объекта.  
  
 В следующем примере демонстрируется каждый способ создания экземпляра для чтения и записи <xref:System.Globalization.DateTimeFormatInfo> и отображает значение его <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> свойство.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 В Windows, пользователь может переопределить некоторые из <xref:System.Globalization.DateTimeFormatInfo> значений свойств, используемых в форматирование и разбор операции с помощью **регион и язык** приложения панели управления. К примеру, языком и региональными параметрами является английский (США) пользователь может выбрать отображение долго значения времени в 24-часовом формате (в формате чч: мм:) вместо в 12-часовом формате по умолчанию (в формате ч: мин: tt). <xref:System.Globalization.DateTimeFormatInfo> Объектами, возвращаемыми в способы, с помощью описанных ранее отражают эти переопределения пользователем. Если это нежелательно, можно создать <xref:System.Globalization.NumberFormatInfo> объект, который не отражает пользователя переопределяет (и также является чтение и запись, а не только для чтения), вызвав <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> конструктор и при задании значения `false` для `useUserOverride` аргумент. В следующем примере это для системы, текущий язык — Русский (Россия) и было изменено, долго шаблоном по умолчанию tt ч: мин: на чч: мм:.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo и динамических данных  
 Данные язык и региональные параметры для форматирования значений даты и времени, представленных <xref:System.Globalization.DateTimeFormatInfo> класс является динамическим, так же, как региональные данные, предоставляемые <xref:System.Globalization.CultureInfo> класса. Не следует вносить никаких предположений о стабильности значений для <xref:System.Globalization.DateTimeFormatInfo> объектов, которые связаны с конкретным <xref:System.Globalization.CultureInfo> объектов. Только данные, предоставляемые инвариантного языка и региональных параметров и связанный с ним <xref:System.Globalization.DateTimeFormatInfo> стабильна, объект. Другие данные можно изменить между сеансами приложения или даже в том случае, если приложение запущено. Существует четыре основных источника изменений.  
  
-   Обновления системы. Со временем меняться культурные предпочтения, такие как предпочтительный календарь или традиционные форматы даты и времени. В этом случае обновление Windows включает в себя изменения <xref:System.Globalization.DateTimeFormatInfo> значение свойства для конкретного языка и региональных параметров.  
  
-   Замена языков и региональных параметров. <xref:System.Globalization.CultureAndRegionInfoBuilder> Класс может использоваться для замены данных существующего языка и региональных параметров.  
  
-   Каскадные изменения значений свойств. Можно изменить несколько свойств, связанных с языком и региональными параметрами, во время выполнения, который, в свою очередь, приводит к <xref:System.Globalization.DateTimeFormatInfo> об изменениях. Например текущий язык и региональные параметры можно изменить программно или через действия пользователя. В этом случае <xref:System.Globalization.DateTimeFormatInfo> объект, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> изменения свойств объекта, связанного с текущей культурой. Аналогичным образом, можно изменить календарь культуры, который можно привести к изменениям многочисленных <xref:System.Globalization.DateTimeFormatInfo> значения свойств.  
  
-   Персональные настройки пользователя. Пользователи приложения можно переопределить некоторые значения, связанные с текущего языка и региональных параметров системы через региональные и языковые параметры на панели управления. Например пользователи могут использовать для отображения даты в другом формате. Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> свойству `true`, свойства <xref:System.Globalization.DateTimeFormatInfo> объекта зависят от параметров пользователя. Если параметры пользователя, несовместимы с языка и региональных параметров, связанных с <xref:System.Globalization.CultureInfo> объекта (например, в том случае, если выбранный календарь не является одним из календарей, обозначается <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> свойство), результаты методов и значения свойств не определены.  
  
 Чтобы свести к минимуму вероятность несогласованности данных, все свойства могут быть переопределены пользователем <xref:System.Globalization.DateTimeFormatInfo> объект инициализируются при создании объекта. По-прежнему вероятность несогласованности, так как ни создание объекта, ни процесс переопределения пользователем будут элементарными и их соответствующие значения можно изменить при создании объекта. Тем не менее это должен быть крайне редко.  
  
 Вы можете управлять ли переопределений пользователя, отражаются в <xref:System.Globalization.DateTimeFormatInfo> объекты, представляющие языка и региональных параметров, как язык и региональные параметры. В следующей таблице перечислены ситуации, в которых <xref:System.Globalization.DateTimeFormatInfo> объекта можно получить и показывает, отражает ли полученный объект переопределений пользователя.  
  
|Источник объекта CultureInfo и DateTimeFormatInfo|Отражает переопределений пользователя|  
|---------------------------------------------------------|-----------------------------|  
|Свойство`CultureInfo.CurrentCulture.DateTimeFormat` |Да|  
|Свойство<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> |Да|  
|Метод <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>|Да|  
|Метод <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>|Нет|  
|Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>|Да|  
|Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>|Зависит от значения `useUserOverride` параметр|  
  
 Если нет весомого повода делать иначе, должен подчиняться переопределений пользователя при использовании <xref:System.Globalization.DateTimeFormatInfo> объекта в клиентских приложениях для форматирования и анализа пользовательского ввода или для отображения данных. Для сервера приложений и автоматической установки приложений следует не. Тем не менее если вы используете <xref:System.Globalization.DateTimeFormatInfo> объект либо явно или неявно для сохранения данных даты и времени в виде строки, следует использовать либо <xref:System.Globalization.DateTimeFormatInfo> следует указать объект, который отражает соглашения о форматировании инвариантных региональных параметров, или даты и времени пользовательского формата, используемого независимо от языка и региональных параметров.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>Форматирование значения даты и времени  
 Объект <xref:System.Globalization.DateTimeFormatInfo> используются явно или неявно в все даты и времени, в операциях форматирования. К ним относятся вызовы следующих методов:  
  
-   Все форматирования даты и времени методы, такие как <xref:System.DateTime.ToString?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.  
  
-   Основной метод составного форматирования, который является <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Других методов составного форматирования, такие как <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> и <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Все даты и времени, операций форматирования сделать использование <xref:System.IFormatProvider> реализации. <xref:System.IFormatProvider> Интерфейс включает один метод <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>. Этот метод обратного вызова передается <xref:System.Type> , представляющий тип, необходимый для предоставления сведений о форматировании. Метод возвращает экземпляр этого типа или `null` если он не может предоставить экземпляр типа. .NET Framework включает две <xref:System.IFormatProvider> реализации для форматирования значения даты и времени:  
  
-   <xref:System.Globalization.CultureInfo> Класс, который представляет конкретного языка и региональных параметров (или определенном языке в конкретную страну или регион). В форматировании даты и времени операции <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> возвращает <xref:System.Globalization.DateTimeFormatInfo> объект, связанный с его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Класс, который предоставляет сведения о соглашения о форматировании языка и региональных параметров, его связанный. <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> Метод возвращает экземпляр самой себя.  
  
 Если <xref:System.IFormatProvider> реализация не предоставляется явно, в метод форматирования <xref:System.Globalization.CultureInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> используется свойство, представляющее язык и региональные параметры текущего потока.  
  
 В следующем примере показано отношение между <xref:System.IFormatProvider> интерфейс и <xref:System.Globalization.DateTimeFormatInfo> класс в операциях форматирования. Он определяет пользовательский <xref:System.IFormatProvider> реализации которого <xref:System.IFormatProvider.GetFormat%2A> метод отображает тип объекта, запрошенный операцией форматирования. Если он запрашивает <xref:System.Globalization.DateTimeFormatInfo> объекта, этот метод предоставляет <xref:System.Globalization.DateTimeFormatInfo> объект для текущего языка и региональных параметров потока. Как видно в результатах показано в примере <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> запросы метода <xref:System.Globalization.DateTimeFormatInfo> объекта, предоставляющего сведения о форматировании, тогда как <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> запросы метода <xref:System.Globalization.NumberFormatInfo> и <xref:System.Globalization.DateTimeFormatInfo> объектов, а также <xref:System.ICustomFormatter> Реализация.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
## <a name="format-strings-and-datetimeformatinfo-properties"></a>Строки форматов и свойства DateTimeFormatInfo  
 <xref:System.Globalization.DateTimeFormatInfo> Объект включает в себя три типа свойства, используемые в операциях форматирования со значениями даты и времени:  
  
-   Свойства, связанных с календарем. Свойства, такие как <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, и <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, связаны с календарь, используемый язык и региональные параметры, которая определяется <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство. Эти свойства используются для даты и времени форматов.  
  
-   Свойства, которые образуют определенные стандарты результирующую строку. <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, И <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> свойства содержат строк настраиваемого формата, создавать результирующие строки, определенные с международными стандартами. Эти свойства доступны только для чтения и не может быть изменен.  
  
-   Свойства, определяющие строки результата с учетом языка и региональных параметров. Некоторые свойства, такие как <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> и <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, содержат [строк настраиваемого формата](~/docs/standard/base-types/custom-date-and-time-format-strings.md) , укажите формат результирующей строки. Другие, такие как <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>, <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, и <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, определить символы с учетом языка и региональных параметров или подстрок, которые могут быть включены в результирующую строку.  
  
 [Стандартных форматов даты и времени строки](~/docs/standard/base-types/standard-date-and-time-format-strings.md), такие как «d», «D», «f» и «F», — это псевдонимы, которые соответствуют определенным <xref:System.Globalization.DateTimeFormatInfo> форматирование свойства шаблона. Большая часть [настраиваемых форматов даты и времени строки](~/docs/standard/base-types/custom-date-and-time-format-strings.md) связаны с строк или подстрок, операция форматирования вставляет в результирующем потоке. В следующей таблице перечислены стандартные и настраиваемые даты и времени описателей формата, а связанные с ними <xref:System.Globalization.DateTimeFormatInfo> свойства. Сведения о том, как использовать эти описатели формата, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Обратите внимание, что соответствует каждой строки стандартного формата <xref:System.Globalization.DateTimeFormatInfo> свойства, значение которого представляет собой пользовательского формата даты и времени. Отдельные спецификаторы в данной строке настраиваемого формата в свою очередь соответствуют другу <xref:System.Globalization.DateTimeFormatInfo> свойства. В таблице перечислены только <xref:System.Globalization.DateTimeFormatInfo> свойства, для которых — это псевдонимы строк стандартного формата и выполняет не перечислены свойства, которые может получить доступ к назначены эти свойства-псевдонимы строк настраиваемого формата. Кроме того, в таблице перечислены только настраиваемых описателей формата, которые соответствуют <xref:System.Globalization.DateTimeFormatInfo> свойства.  
  
|Описатель формата|Связанные свойства|  
|----------------------|---------------------------|  
|«d» (краткий формат даты, строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, чтобы определить общий формат результирующей строки.|  
|«D» (длинный формат даты, строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, чтобы определить общий формат результирующей строки.|  
|«f» (полная дата / краткая времени; Стандартная строка формата)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|«F» (полная дата / длительное время; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|«g» (полный формат даты и краткий формат времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|«G» (полный формат даты / времени времени; в стандартный строка формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|«M», «m» (месяц/день; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, чтобы определить общий формат результирующей строки.|  
|«O», «o» (обратного преобразования даты и времени; строка стандартного формата)|Отсутствует.|  
|«R», «r» (RFC1123; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, чтобы определить результирующую строку, которая соответствует стандарту RFC 1123. Свойство доступно только для чтения.|  
|«s» (Сортируемый формат даты/времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, чтобы определить результирующую строку, которая соответствует стандарту ISO 8601. Свойство доступно только для чтения.|  
|«t» (краткий формат времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, чтобы определить общий формат результирующей строки.|  
|«T» (долго; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, чтобы определить общий формат результирующей строки.|  
|«u» (универсальный формат даты времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, для определения результата строку, которая соответствует стандарту ISO 8601 для формате UTC. Свойство доступно только для чтения.|  
|«U» (универсальный полный формат даты/времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, чтобы определить общий формат результирующей строки.|  
|«Y», «y» (месяц года; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, чтобы определить общий формат результирующей строки.|  
|«ddd» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, чтобы включить в результирующую строку сокращенное название дня недели.|  
|«g», «gg» (настраиваемый описатель формата)|Вызовы <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> метод, чтобы вставить имя эру в результирующую строку.|  
|«MMM» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, чтобы включить в результирующую строку сокращенное название месяца.|  
|«MMMM» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> или <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>для включения в результирующую строку полное название месяца.|  
|«t» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> или <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>с целью включить первый символ указателя AM/PM в результирующей строке.|  
|«tt» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> или <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, чтобы включить полный указатель AM/PM в результирующей строке.|  
|«:» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, чтобы включить в результирующую строку разделителя времени.|  
|«/» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, для включения в результирующую строку разделителя даты.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>Изменение свойства DateTimeFormatInfo  
 Можно изменить строк, формируемых строк формата даты и времени, изменив связанных свойств доступный для записи <xref:System.Globalization.DateTimeFormatInfo> объекта. Чтобы определить, если <xref:System.Globalization.DateTimeFormatInfo> объект доступен для записи, используйте <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> свойство. Чтобы настроить <xref:System.Globalization.DateTimeFormatInfo> объекта таким образом:  
  
1.  Создать копию чтения и записи <xref:System.Globalization.DateTimeFormatInfo> объекта соглашения о форматировании которых требуется изменить. (См. в разделе [создание экземпляра объекта DateTimeFormatInfo](#instantiating) разделе.)  
  
2.  Измените свойства или свойств, которые используются для создания нужного результирующей строки. (Сведения об использовании как форматирования методы <xref:System.Globalization.DateTimeFormatInfo> свойства для определения результирующие строки, см. в предыдущем разделе, [строки форматов и свойства DateTimeFormatInfo](#format-strings-and-datetimeformatinfo-properties).)  
  
3.  Использование настраиваемого <xref:System.Globalization.DateTimeFormatInfo> объект был создан как <xref:System.IFormatProvider> аргументов в вызовах методов форматирования.  
  
 Существует два других способа для изменения формата строки результата:  
  
-   Можно использовать <xref:System.Globalization.CultureAndRegionInfoBuilder> класса для определения пользовательского языка и региональных параметров (язык и региональные параметры, имеет уникальное имя и который дополняет существующие языка и региональных параметров) или замены языка и региональных параметров (один, который используется вместо конкретного языка и региональных параметров). Можно сохранить и программный доступ к этой языка и региональных параметров, как любой <xref:System.Globalization.CultureInfo> объекта, поддерживаемые платформой .NET Framework.  
  
-   Если не выполнить предварительно определенный формат результирующей строки не учитывает язык и региональные параметры, можно использовать пользовательского формата даты и времени. Например, при сериализации данных даты и времени в формате ггггммддччммсс, можно создать результирующую строку путем передачи строки пользовательского формата для <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> метод и можно преобразовать в результирующую строку к <xref:System.DateTime> значение путем вызова метода <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> метод.  
  
### <a name="changing-the-short-date-pattern"></a>Изменение шаблона короткого формата даты  
 В следующем примере изменяется формат строк, формируемых строка стандартного формата «d» (краткий формат даты). Он изменяет связанного <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство en US или русский (Россия) языка и региональных параметров, по умолчанию «М/гггг», чтобы «yyyy "-«MM»-«dd» и «d» стандартного формата строки для отображения даты до и после применения <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство изменить.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>Изменение знака разделения даты  
 В следующем примере изменяется знак разделителя даты в <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании языка и региональных параметров fr-FR. В примере используется строка стандартного формата «g» для отображения даты до и после <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> изменении свойства.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>Изменение сокращенные названия дней и шаблоном длинной даты  
 В некоторых случаях шаблон полной даты, который обычно отображает полный день и название месяца, а также номер дня месяца и года, может быть слишком много времени. Следующий пример сокращает шаблон полной даты для языка и региональных параметров en US для возврата сокращение названия дня одного символа или двух символов, за которым следует число дней, сокращение названия месяца и года. Это достигается путем назначения короче сокращенные названия дня для <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> массива и изменяя строкой пользовательского формата, назначенной <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство. Это влияет на результат строк, возвращаемых «D» и строки стандартного формата «f».  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 Как правило, изменение <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> также влияет на свойство <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойство, которое в свою очередь определяет результат строка, возвращаемая строка стандартного формата «F». Чтобы сохранить исходный полный шаблон даты и времени, пример переназначает исходную строку пользовательского формата, назначенные <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойства после <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> изменяется свойство.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>Изменение в 24-часовом формате с в 12-часовом формате  
 Для многих языков в .NET Framework время задается с помощью 12-часовом формате и указатель AM/PM. В следующем примере определяется `ReplaceWith24HourClock` метод, который заменяет любой формат времени, используется 12-часовом формате с форматом, который использует 24-часовом формате.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 В примере используется регулярное выражение для изменения формата строки. Шаблон регулярного выражения `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` определяется следующим образом:  
  
|Шаблон|Описание|  
|-------------|-----------------|  
|`^`|Начало совпадения в начале строки.|  
|`(?<openAMPM>\s*t+\s*)?`|Совпадение ноль или одно вхождение ноль или более пробелов, символов, заканчивающаяся буквой «t», один или несколько раз, за которой следует ноль или более символов пробела. Эта группа записи называется `openAMPM`.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|Если `openAMPM` группа имеет совпадение, соответствует букве «h» на один или несколько раз, за которыми следует один или несколько символов, которые не являются ни «h», ни «t». Соответствие заканчивается в конце строки. Все символы, записанные после включения «h» в группе записи с именем `nonHours`.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|Если `openAMPM` группы нет соответствий, соответствует букве «h» один или несколько раз, за которыми следует один или несколько символов, которые не являются ни «h», ни «t», за которой следует ноль или более символов пробела. Наконец сопоставление одного или нескольких вхождений букву «t». Все символы, записанные после «h», а также перед пробельные символы и «t», включенных в группе записи с именем `nonHours`.|  
  
 `nonHours` Захваченная группа содержит минуты и, возможно, компонент секунд текущего пользовательского формата даты и времени, наряду с символы разделителя времени. Шаблон замены `HH${nonHours}` добавляет в начало подстроки «HH» для этих элементов.  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>Отображение и изменение эру в дату  
 В следующем примере добавляется описатель настраиваемого формата «g», чтобы <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойства объекта, представляющий соглашения о форматировании языка и региональных параметров en US. Это дополнение влияет на следующие три строки стандартного формата:  
  
-   Строки стандартного формата «D» (даты), который не сопоставляется непосредственно с <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство.  
  
-   «f» (полная дата / время краткая) строка стандартного формата, который формирует результирующую строку, представляющим собой сцепление подстрок, созданные <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> и <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> свойства.  
  
-   «F» (полная дата / полный формат времени) строка стандартного формата, который сопоставляется непосредственно с <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойство. Так как мы не задали явным образом значение этого свойства, он формируется динамически путем сцепления <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> и <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> свойства.  
  
 В примере также как изменить имя эры для языка и региональных параметров, чей календарь имеет одну эру. В этом случае en-US использует григорианский календарь, представленный <xref:System.Globalization.GregorianCalendar> объекта. <xref:System.Globalization.GregorianCalendar> Класс поддерживает одну эру, который его именует н. э. (Полуночи). В примере изменяется имя эры на года нашей эры (Нашей эры), заменив описатель настраиваемого формата «g» в строке формата, назначенные <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойство со строковым литералом. Использование строкового литерала необходима, так как название эры обычно возвращается <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> метода из личных данных в таблицах язык и региональные параметры, предоставляемые .NET Framework или операционной системы Windows.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>Анализ строк даты и времени  
 Синтаксический анализ включает в себя преобразование строковое представление даты и времени в <xref:System.DateTime> или <xref:System.DateTimeOffset> значение. Оба этих типа включают `Parse`, `TryParse`, `ParseExact`, и `TryParseExact` методы, поддерживающие операции синтаксического анализа. `Parse` И `TryParse` методы преобразования строки, которая может иметь различные форматы, тогда как `ParseExact` и `TryParseExact` требуют наличия строки определенный формат или форматов. При сбое операции синтаксического анализа `Parse` и `ParseExact` исключение, тогда как `TryParse` и `TryParseExact` возвращают `false`.  
  
 Методы анализа неявно или явно используют <xref:System.Globalization.DateTimeStyles> значение перечисления, чтобы определить, какие элементы стиля (такие как начальные, конечные и внутренние пробелы) могут присутствовать в анализируемой строке и как интерпретировать анализируемая строка или отсутствующих элементы. Если вы не укажете <xref:System.Globalization.DateTimeStyles> значение при вызове `Parse` или `TryParse` , значение по умолчанию является <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, являющийся составной стиль, который включает в себя <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>, и <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> флаги. Для `ParseExact` и `TryParseExact` методов, по умолчанию используется <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; входная строка должно соответствовать точно определенного настраиваемые дата и время, в строку формата.  
  
 Методы синтаксического анализа также неявно или явно используют <xref:System.Globalization.DateTimeFormatInfo> , определяющий специальные символы и шаблоны, которые может произойти в строке, который необходимо проанализировать. Если вы не укажете <xref:System.Globalization.DateTimeFormatInfo> объекта, <xref:System.Globalization.DateTimeFormatInfo> объекта для языка и региональных параметров текущего потока используется по умолчанию. Дополнительные сведения о синтаксический анализ строк даты и времени, см. в разделе отдельные методы синтаксического анализа, таких как <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>, и <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>.  
  
 В следующем примере показано суть культуры строк синтаксического анализа даты и времени. Предпринимается попытка выполнить анализ двух строк дат с помощью правил языка "en US", "en-GB", "fr-FR" и "fi-FI языков и региональных параметров. Даты, который интерпретируется как 8/18/2014 в en US, языка и региональных параметров создает <xref:System.FormatException> исключение в других трех культур, поскольку 18 интерпретируется как номер месяца. 1/2/2015 анализируется как второй день первого месяца в культуре en US, но в качестве первого дня месяца второго в оставшихся языков и региональных параметров.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 Строки даты и времени, обычно анализируются по двум причинам:  
  
-   Для преобразования входных данных пользователя в значение даты и времени.  
  
-   Выполнение цикла обработки значения даты и времени; то есть для десериализации значения даты и времени, который ранее был сериализован как строка.  
  
 В следующих разделах рассматриваются эти две операции, более подробно.  
  
### <a name="parsing-user-strings"></a>Синтаксический анализ строк пользователя  
 При синтаксическом анализе строки даты и времени, введенное пользователем, следует всегда создавать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , который отражает региональные настройки пользователя, включая все настройки, пользователь может сделать. В противном случае объекта даты и времени могут иметь неверные значения. Сведения о том, как создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , который отражает региональные настройки пользователя, см. в разделе [DateTimeFormatInfo и динамические данные](#dynamic) раздел.  
  
 В следующем примере показано различие между операции анализа, которая отражает региональные настройки пользователя, а другая — нет. Таким образом, язык и региональные параметры по умолчанию — en US, но пользователь использовал панели управления **регион и язык** Чтобы изменить шаблон короткого формата даты по умолчанию «М/гггг» на «гг/мм/дд». Когда пользователь вводит строку, которая отражает параметры пользователя, и строка анализируется с <xref:System.Globalization.DateTimeFormatInfo> , который также отражает параметров пользователя (переопределения), операция анализа возвращает правильный результат. Тем не менее, когда строка анализируется с <xref:System.Globalization.DateTimeFormatInfo> , который отражает региональные настройки стандартных en US, синтаксического анализа методом исключения <xref:System.FormatException> исключение, так как он интерпретирует 14 как число месяца, а не две последние цифры года.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>Сериализации и десериализации данных даты и времени  
 Сериализовать данные даты и времени должны выполнить цикл обработки; то есть все сериализации и десериализованные значения должны быть идентичными. Если значение даты и времени представляет один момент времени, десериализованное значение должно представлять один и тот же момент времени независимо от языка и региональных параметров или часового пояса системы, на котором он был восстановлен. Для данных обратного преобразования даты и времени успешно, необходимо использовать соглашения инвариантных региональных параметров, который возвращается методом <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> свойства, чтобы создавать и анализировать данные. Операции форматирования и синтаксического анализа должно никогда не соответствуют правилам культуры по умолчанию. Если вы используете региональные настройки по умолчанию, мобильность данных строго ограничены; Это может быть успешно десериализован только в потоке, региональные параметры потока, на котором он был сериализован идентичны. В некоторых случаях это означает, что данные нельзя даже успешно сериализовать и десериализовать в одной системе.  
  
 Если компонент времени в значении даты и времени является существенным, ее нужно также преобразуется в формат UTC и сериализации с помощью «o» или «r» [строка стандартного формата](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Впоследствии можно восстановить данные времени путем вызова методу анализа и передает его в формат, соответствующий строку вместе с инвариантным языком как `provider` аргумент.  
  
 Следующий пример иллюстрирует процесс цикла обработки значения даты и времени. Он сериализует датой и временем в системе, которая обнаруживает США По тихоокеанскому времени и которого текущий язык — en US.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 Он выполняет десериализацию данных в системе в часовом поясе Брюссель, Копенгаген, Мадрид и Париж и которого текущий язык — fr-FR. Извлеченные дата является более поздней версии, чем исходное, что отражает изменение часового пояса из восьми часов отстает от времени UTC, до одного часа раньше UTC девять часов. Исходная дата и извлеченные Дата представляют один и тот же момент времени.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 Следующий пример использует отражение для получения свойств <xref:System.Globalization.DateTimeFormatInfo> объект для английского языка (США). Он отображает значения этих свойств, содержащих строки настраиваемого формата и использует эти строки для отображения в формате даты.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый доступный для записи экземпляр класса <see cref="T:System.Globalization.DateTimeFormatInfo" />, не зависящий от языка и региональных параметров (инвариантный).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает <xref:System.Globalization.DateTimeFormatInfo> объект, представляющий сведения о дате и времени инвариантного языка и региональных параметров. Для создания <xref:System.Globalization.DateTimeFormatInfo> следует создать для конкретной культуры <xref:System.Globalization.CultureInfo> объекта для этого языка и региональных параметров и получения <xref:System.Globalization.DateTimeFormatInfo> объект, возвращенный его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство.  
  
 Свойства <xref:System.Globalization.DateTimeFormatInfo> можно изменить объект, созданный этим конструктором. Тем не менее, нельзя изменять <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство, так как инвариантный язык и региональные параметры поддерживает только локализованную версию григорианского календаря. Для создания <xref:System.Globalization.DateTimeFormatInfo> объект, который использует конкретный календарь, необходимо создать экземпляр <xref:System.Globalization.CultureInfo> объект, который поддерживает, календарь и календарь, назначить <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство <xref:System.Globalization.DateTimeFormatInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает одномерный массив типа <see cref="T:System.String" />, содержащий сокращения дней недели, принятые в определенном языке и региональных параметрах.</summary>
        <value>Одномерный массив типа <see cref="T:System.String" />, содержащий сокращения дней недели, принятые в определенном языке и региональных параметрах. Массив для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит сокращения "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При установке данного свойства, массив должен быть одномерным и должен иметь ровно семь элементов. Первый элемент (элемент с нулевым индексом) представляет первый день недели в календаре, определяется <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство.  
  
 Если описатель формата «ddd», включает строку пользовательского формата <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> или <xref:System.DateTimeOffset.ToString%2A> метод включает соответствующий член <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> массива вместо «ddd» в результирующей строке.  
  
 Это свойство изменяется в том случае, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств. Если выбранный <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> не поддерживает сокращенные названия дней, массив содержит полные названия дней недели.  
  
   
  
## Examples  
 В следующем примере создается для чтения и записи <xref:System.Globalization.CultureInfo> объект, представляющий английского языка (США) и назначает сокращается названия дней, чтобы его <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> свойство. Затем используется описатель формата «ddd» в [настраиваемых форматов даты и времени строковое](~/docs/standard/base-types/custom-date-and-time-format-strings.md) для отображения строкового представления дат, одна неделя, начиная с 28 мая 2014 г.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство задается для многомерного массива или для массива, длина которого не равна 7.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает массив строк сокращенных названий месяцев, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <value>Массив сокращенных имен месяцев.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В некоторых языках название месяца, который является частью даты отображается в падеж. Например Дата в ru-RU или русский (Россия) языка и региональных параметров состоит из номер дня и месяца родительный имени, например 1 Января (1 января). Для этих языков и региональных параметров, если строка настраиваемого формата содержит описатель формата «MMM» <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> или <xref:System.DateTimeOffset.ToString%2A> метод включает соответствующий член <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> массива вместо «MMM» в результирующей строке.  
  
 В наборе операций массив должны быть одномерными с точно 13 элементов, так как <xref:System.Globalization.Calendar> объектов вместить календарей, в которых 13 месяцев. Для календарей, в которых 12 месяцев, должно быть тринадцатого элемента <xref:System.String.Empty?displayProperty=nameWithType>. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определяется <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство.  
  
 Если задать <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойство, необходимо также задать <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> свойства.  
  
   
  
## Examples  
 В следующем примере создается для чтения и записи <xref:System.Globalization.CultureInfo> объект, представляющий английского языка (США) и назначает сокращенные наименования родительный месяц для его <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> и <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойства. Затем отображается строковым представлением даты, которые включают сокращенное название месяца каждого месяца в календаре поддерживаемые культуры.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В операции присваивания массив является многомерным или имеет длину, это не точно 13.</exception>
        <exception cref="T:System.ArgumentNullException">В наборе операций массив или один из элементов массива имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">В операции задания текущий объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает одномерный строковый массив, содержащий сокращения месяцев, принятые в определенном языке и региональных параметрах.</summary>
        <value>Одномерный строковый массив, состоящий из 13 элементов и содержащий сокращения месяцев, принятые в определенном языке и региональных параметрах. В 12-месячных календарях тринадцатый элемент массива представляет собой пустую строку. Массив для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит элементы "Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек" и "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это свойство задано, должны быть одномерными с точно 13 элементов массива. <xref:System.Globalization.Calendar> объекты размещения календарей с 13 месяцев. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определяется <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство.  
  
 Если задать <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> свойство, необходимо также задать <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойства. <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> И <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойства используются для форматирования дат, с помощью следующих строк формата:  
  
-   Стандартные Дата и время, в строку формата что псевдонимы пользовательского форматирования строки, которая включает «MMM» описатель формата.  
  
-   Описатель формата пользовательского формата даты и времени, включающий «MMM».  
  
 Это свойство изменяется в том случае, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств. Если выбранный <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> не поддерживает сокращенные названия месяцев, массив содержит полные названия месяцев.  
  
   
  
## Examples  
 В следующем примере создается для чтения и записи <xref:System.Globalization.CultureInfo> объект, представляющий английского языка (США) и назначает сокращенные наименования родительный месяц для его <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> и <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойства. Затем отображается строковым представлением даты, которые включают сокращенное название каждого месяца в календаре поддерживаемые культуры.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство задается для многомерного массива или для массива, длина которого не равна 13.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку указателя часов до полудня (АМ — "ante meridiem").</summary>
        <value>Строка указателя часов до полудня. По умолчанию для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> установлено значение AM.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> Свойство используется для всех попыток от 0:00:00 (полночь) до 11:59:59.999.  
  
 Если в строке настраиваемого формата описатель формата «tt», а время, до полудня, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> или <xref:System.DateTimeOffset.ToString%2A> метод содержит значение <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> свойство вместо «tt» в результирующей строке. Если строка настраиваемого формата содержит описатель настраиваемого формата «t», только первый символ <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> включено значение свойства. Следует использовать «tt» для языков, для которых необходимо поддерживать различие между утра и после полудня Например, японский, в котором полудня и после полудня указатели различаются во втором символе вместо первого символа.  
  
 Для языков и региональных параметров, которые не используют по обозначение, это свойство возвращает пустую строку.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar with get, set" Usage="System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает календарь, используемый в текущей языке и региональных параметрах.</summary>
        <value>Календарь, используемый в текущем языке и региональных параметрах. Значением по умолчанию для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> является объект <see cref="T:System.Globalization.GregorianCalendar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Свойство принимает только календари, которые являются допустимыми для языка и региональных параметров, с которым связан <xref:System.Globalization.DateTimeFormatInfo> объекта. <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> Свойство указывает, календари, которые могут использоваться в конкретной культурной среде, и <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> свойство задает календарь по умолчанию для языка и региональных параметров.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

Изменение значения этого свойства влияет на также следующие свойства: <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>, <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> , и <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.  
  
 Например, если японского языка и региональных параметров текущего потока, это свойство принимает <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, или <xref:System.Globalization.GregorianCalendarTypes.USEnglish> <xref:System.Globalization.GregorianCalendar>. Когда <xref:System.Globalization.JapaneseCalendar> используется полный формат даты по умолчанию имеет спецификатор «gg y'\x5e74 'M' \x6708 'd '\x65e5'». Когда <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, используется полный формат даты по умолчанию имеет спецификатор «гггг '\x5e74 'M' \x6708 'd '\x65e5'».  
  
   
  
## Examples  
 В следующем примере определяется `ChangeCalendar` метод, который изменяет текущий календарь культуры по для заданного календаря, если это уже не текущего календаря или если он не поддерживается языком и региональными параметрами. Создает код, который вызывает метод <xref:System.Globalization.CultureInfo> объект, представляющий язык и региональные параметры арабский (Египет) и сначала пытается изменить его календарь японского календаря. Так как японский календарь не поддерживается, метод не дает не изменить календарь культуры. Тем не менее так как единой системы обмена сообщениями по саудовскому календарю является членом <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> коллекции, метод успешно делать его текущим календарем ar-EG языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задается объект <see cref="T:System.Globalization.Calendar" />, недопустимый для текущего языка и региональных параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarWeekRule : System.Globalization.CalendarWeekRule with get, set" Usage="System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее правило, используемое для определения первой календарной недели года.</summary>
        <value>Значение, определяющее первую календарную неделю года. Значение по умолчанию для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> равно <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство изменяется в том случае, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задается значение, не являющееся допустимым значением <see cref="T:System.Globalization.CalendarWeekRule" />.</exception>
        <exception cref="T:System.InvalidOperationException">В операции задания текущий объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает неполную копию <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Новый объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, скопированный из исходного <see cref="T:System.Globalization.DateTimeFormatInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клон доступен для записи даже в том случае, если исходный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения. Таким образом можно изменить свойства копии с помощью пользовательских шаблонов.  
  
 Неполная копия объекта является копией только данного объекта. Если объект содержит ссылки на другие объекты, неполная копия не приводит к созданию копии объектов, который указывает ссылка. Он ссылается на исходные объекты вместо этого. Напротив глубокую копию объекта создает копию объекта и копию всего содержимого, прямо или косвенно ссылается этот объект.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает доступный только для чтения объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, форматирующий значения на основе текущего языка и региональных параметров.</summary>
        <value>Доступный только для чтения объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> на основе объекта <see cref="T:System.Globalization.CultureInfo" /> текущего потока.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> свойство отражает переопределений пользователя.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> извлекаемого свойства <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании текущего языка и региональных параметров, который в данном случае является en-US. Затем он отобразит строку формата и строка результата для шести свойства форматирования.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, разделяющую компоненты даты — год, месяц и день.</summary>
        <value>Строка, разделяющая компоненты даты — год, месяц и день. Значение по умолчанию для объекта <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> равно "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если описатель формата «/», включает строку пользовательского формата <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> метод отображает значение <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> вместо «/» в результирующей строке.  
  
 <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> Свойство определяет строка, замещающая разделителя даты («/» описатель формата даты и времени пользовательского) в результирующую строку в операции форматирования. Он также определяет разделитель строки даты в операции анализа.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Globalization.CultureInfo> объекта для региональных параметров en US, изменяет его разделитель даты для «-» и дата отображается с помощью «d», строки стандартного формата «g» и «G».  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает одномерный массив строк, содержащий полные названия дней недели, принятые в определенном языке и региональных параметрах.</summary>
        <value>Одномерный массив строк, содержащий полные названия дней недели, принятые в определенном языке и региональных параметрах. Массив для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит значения "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота" и "Воскресенье".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При установке данного свойства, массив должен быть одномерным и должен иметь ровно семь элементов. Первый элемент (элемент с нулевым индексом) представляет первый день недели в календаре, определяется <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство.  
  
 Если описатель формата «dddd», включает строку пользовательского формата <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> метод содержит значение соответствующего <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> член вместо «dddd» в результирующей строке.  
  
 Это свойство изменяется в том случае, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство задается для многомерного массива или для массива, длина которого не равна 7.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает первый день недели.</summary>
        <value>Значение перечисления, представляющее первый день недели. Значение по умолчанию для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> равно <see cref="F:System.DayOfWeek.Sunday" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство изменяется в том случае, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задается значение, не являющееся допустимым значением <see cref="T:System.DayOfWeek" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullDateTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для длинного значения даты и длинного значения времени.</summary>
        <value>Строка пользовательского формата для длинного значения даты и длинного значения времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка стандартного формата «F» — это псевдоним для <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойство. Другими словами строкой пользовательского формата, назначенная этому свойству определяет формат результирующей строки для строки стандартного формата «F». Дополнительные сведения см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
 Значение <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойство динамически формируется путем сцепления <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> и <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> свойств, разделенных пробелом. Это динамическое назначение происходит при следующих условиях:  
  
-   Если значение свойства извлекается прежде чем он был явно указан.  
  
-   Если значение <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> изменения свойств.  
  
-   Если значение <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> изменения свойств.  
  
 Это свойство изменяется в том случае, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Значение <see cref="T:System.DayOfWeek" />.</param>
        <summary>Возвращает полное название указанного дня недели, принятое в определенном языке и региональных параметрах, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Сокращение дня недели, принятое в определенном языке и региональных параметрах, представленных свойством <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию инвариантного <xref:System.Globalization.DateTimeFormatInfo> объекта, этот метод возвращает строку из <xref:System.Globalization.GregorianCalendar>:  
  
|`dayofweek`|Возвращаемое значение|  
|-----------------|------------------|  
|Воскресенье|«Sun»|  
|понедельник|«ПН»|  
|Вторник|«Вт»|  
|среда|«Ср»|  
|Четверг|«Чт»|  
|пятница|«Пт»|  
|Суббота|«Вс»|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> не является допустимым значением <see cref="T:System.DayOfWeek" />.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Целое число, представляющее собой эру.</param>
        <summary>Возвращает строку, содержащую сокращенное название указанной эры, если такое сокращение существует.</summary>
        <returns>Строка, содержащая сокращенное название указанной эры, если такое сокращение существует,  
  
-или- 
Строка, содержащая полное название указанной эры, если сокращение отсутствует.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Название эры — имя календаря, используемый для ссылки на определенный период времени, отсчитывается от с фиксированной запятой или событий. Например «н. э.» или «Года нашей эры» является текущей эры в григорианском календаре.  
  
 Допустимые значения для `era` , перечислены в <xref:System.Globalization.Calendar.Eras%2A> свойство соответствующего класса, производным от <xref:System.Globalization.Calendar>. Например: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> список эр, поддерживаемых этой реализации.  
  
 В <xref:System.Globalization.JapaneseCalendar> класса сокращенное имя является первым символом имени полного эру. Этот символ может без учета регистра латинского алфавита одиночные либо канджи одного символа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="era" /> не является допустимым значением эры в календаре, определенном в свойстве <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />.</exception>
        <block subset="none" type="usage"><para>Если <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> — <see cref="T:System.Globalization.TaiwanCalendar" /> , но <see cref="P:System.Threading.Thread.CurrentCulture" /> не является «zh-TW», затем <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращается пустая строка (»»).</para></block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Целое число от 1 до 13, представляющее собой название извлекаемого месяца.</param>
        <summary>Возвращает сокращение указанного месяца, принятое в определенном языке и региональных параметрах, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Сокращенное название месяца, принятое в определенном языке и региональных параметрах, представленное свойством <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию инвариантного <xref:System.Globalization.DateTimeFormatInfo> объекта, этот метод возвращает строку из <xref:System.Globalization.GregorianCalendar> объекта.  
  
|`month`|Возвращаемое значение|  
|-------------|------------------|  
|1|«Янв»|  
|2|«Фев»|  
|3|«Мар»|  
|4|«Апр»|  
|5|«Возможно»|  
|6|«Июн»|  
|7|«Июл»|  
|8|«Авг»|  
|9|«Сен»|  
|10|«Окт»|  
|11|«Ноя»|  
|12|«Дек»|  
|13|""|  
  
 <xref:System.Globalization.Calendar> объекты можно разместить календарей с 13 месяцев. Для 12-месячных календарях как имя тринадцатого месяца всегда возвращается пустая строка.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> меньше 1 или больше 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает стандартные шаблоны, в которых можно форматировать значения даты и времени.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : unit -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает все стандартные шаблоны, в которых можно форматировать значения даты и времени.</summary>
        <returns>Массив, содержащий стандартные шаблоны, в которых можно форматировать значения даты и времени.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает массив, содержащий собственные форматирующие строки, соответствующие строки стандартного формата. См. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) список строк стандартного формата.  
  
 Строки настраиваемого формата можно использовать в массиве, возвращенном <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод в операциях форматирования. Тем не менее, в противном случае строковое представление значения даты и времени, возвращаемое в том, что операция форматирования не всегда поддается успешно по `Parse` и `TryParse` методы. Таким образом, нельзя предполагать, что строки пользовательского формата, возвращаемый методом <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод может использоваться для значения кругового пути даты и времени. Приведенный ниже пример иллюстрирует данную проблему. Он извлекает <xref:System.Globalization.DateTimeFormatInfo> , содержащий сведения о форматировании для языка и региональных параметров Италия (итальянский язык). Он передает каждой строки пользовательского формата в массиве, возвращенном <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> метод <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> метод, чтобы создать строковое представление даты и времени. В этом примере, который затем пытается выполнить синтаксический анализ это значение путем вызова <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> метод. Как видно из примера, некоторые из строк настраиваемого формата создает даты и времени, успешно значение циклов приема-передачи.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 Для синтаксического анализа строковое представление даты и времени, который может быть выражен в ряд стандартных пользовательских форматов, вызовите один из следующих методов:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Строки настраиваемых форматов в массиве, возвращенном <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод зависит от текущий календарь языка и региональных параметров, для которого <xref:System.Globalization.DateTimeFormatInfo> предоставляет сведения о форматировании. Если изменяется календарь, массив, возвращаемый этим методом также изменяется.  
  
   
  
## Examples  
 Следующий пример отображает дату и время строки формата для инвариантных региональных параметров, а также результирующую строку, которая создается, если использование строка формата для форматирования определенной даты.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 В примере создается экземпляр <xref:System.Globalization.DateTimeFormatInfo> , представляющий инвариантного языка и региональных параметров, вызвав <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> конструктор. Он также может получить <xref:System.Globalization.DateTimeFormatInfo> , представляющий инвариантного языка и региональных параметров из <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : char -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="format">Строка стандартного формата.</param>
        <summary>Возвращает все шаблоны, в которых значения даты и времени можно форматировать с использованием заданной стандартной строки формата.</summary>
        <returns>Массив, содержащий стандартные шаблоны, в которых значения даты и времени можно форматировать с помощью указанной строки формата.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает массив, содержащий строки пользовательского формата, которые соответствуют определенной стандартной строки формата. См. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) список строк стандартного формата.  
  
 Строки настраиваемого формата можно использовать в массиве, возвращенном <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод в операциях форматирования. Тем не менее, в противном случае строковое представление значения даты и времени, возвращаемое в том, что операция форматирования не всегда поддается успешно по `Parse` и `TryParse` методы. Таким образом, нельзя предполагать, что строки пользовательского формата, возвращаемый методом <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод может использоваться для значения кругового пути даты и времени. Приведенный ниже пример иллюстрирует данную проблему. Он извлекает <xref:System.Globalization.DateTimeFormatInfo> , содержащий сведения о форматировании для языка и региональных параметров Россия (русский). Он вызывает <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> метод для каждой строки стандартного формата, а затем передает строки в возвращенном массиве для формата каждый пользовательский <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> метод, чтобы создать строковое представление даты и времени. В этом примере, который затем пытается выполнить синтаксический анализ это значение путем вызова <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> метод. Как видно из примера, некоторые из строк настраиваемого формата создает даты и времени, успешно значение циклов приема-передачи.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 Для синтаксического анализа строковое представление даты и времени, который может быть выражен в ряд стандартных пользовательских форматов, вызовите один из следующих методов:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Строки настраиваемых форматов в массиве, возвращенном <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод зависит от текущий календарь языка и региональных параметров, для которого <xref:System.Globalization.DateTimeFormatInfo> предоставляет сведения о форматировании. Если изменяется календарь, массив, возвращаемый этим методом также изменяется.  
  
   
  
## Examples  
 В следующем примере отображаются шаблоны даты и времени для текущего календаря.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="format" /> не является допустимой строкой стандартного формата.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Значение <see cref="T:System.DayOfWeek" />.</param>
        <summary>Возвращает сокращение указанного дня недели, принятое в определенном языке и региональных параметрах, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Полное название дня недели, принятое в определенном языке и региональных параметрах, представленное свойством <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию инвариантного <xref:System.Globalization.DateTimeFormatInfo> объекта, этот метод возвращает строку из <xref:System.Globalization.GregorianCalendar> объекта.  
  
|`dayofweek`|Возвращаемое значение|  
|-----------------|------------------|  
|Воскресенье|«Воскресенье»|  
|понедельник|«Понедельник»|  
|Вторник|«Вторник»|  
|среда|«Среда»|  
|Четверг|«Четверг»|  
|пятница|«Пятница»|  
|Суббота|«Saturday»|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> не является допустимым значением <see cref="T:System.DayOfWeek" />.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberSignature Language="F#" Value="member this.GetEra : string -&gt; int" Usage="dateTimeFormatInfo.GetEra eraName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">Строка, содержащая название эры.</param>
        <summary>Возвращает целое число, представляющее собой указанную эру.</summary>
        <returns>Целое число, представляющее эру, если <paramref name="eraName" /> является допустимым; в противном случае -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Название эры — имя календаря, используемый для ссылки на определенный период времени, отсчитывается от с фиксированной запятой или событий. Например «н. э.» или «Года нашей эры» является текущей эры в григорианском календаре.  
  
 Сравнение с `eraName` не учитывается регистр, например, «Н. э.» эквивалентно «н. э.».  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> пропускает знаки препинания в сокращенные названия, только в том случае, если <xref:System.Globalization.GregorianCalendar> выбран в <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> и в культуре «Н. э.» как и имя эры, то есть «н. э.» эквивалентно «AD».  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> Сравнивает `eraName` с именем полного, возвращенным <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> и с именем сокращенное эры, возвращенным <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## Examples  
 В следующем примере показано, что <xref:System.Globalization.DateTimeFormatInfo> пропускает знаки препинания в названии эры только в том случае, если используется григорианский календарь и языка и региональных параметров используется имя эры «Н. э.».  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="eraName" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Целое число, представляющее собой эру.</param>
        <summary>Возвращает строку, содержащую название указанной эры.</summary>
        <returns>Строка, содержащая название эры.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Название эры — имя календаря, используемый для ссылки на определенный период времени, отсчитывается от с фиксированной запятой или событий. Например «н. э.» или «Года нашей эры» является текущей эры в григорианском календаре.  
  
 Допустимые значения для `era` , перечислены в <xref:System.Globalization.Calendar.Eras%2A> свойство соответствующего класса, производным от <xref:System.Globalization.Calendar>. Например: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> список эр, поддерживаемых этой реализации.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="era" /> не является допустимым значением эры в календаре, определенном в свойстве <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />.</exception>
        <block subset="none" type="usage"><para>Если представленный календарь <see cref="T:System.Globalization.TaiwanCalendar" /> , но <see cref="P:System.Threading.Thread.CurrentCulture" /> не является «zh-TW», затем <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращается пустая строка (»»).</para></block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="dateTimeFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Тип требуемой службы форматирования.</param>
        <summary>Возвращает объект указанного типа, предоставляющий службу форматирования времени и даты.</summary>
        <returns>Текущий объект, если параметр <paramref name="formatType" /> совпадает с типом текущего объекта <see cref="T:System.Globalization.DateTimeFormatInfo" />; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Format(String, IFormatProvider)` Метода, поддерживаемого в базовые типы данных этот метод вызывается при текущего <xref:System.Globalization.DateTimeFormatInfo> объект передается как <xref:System.IFormatProvider> параметр. Этот метод реализует <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.GetInstance provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><see cref="T:System.IFormatProvider" />, который получает объект <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
-или- 
 Значение <see langword="null" />, чтобы получить <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</param>
        <summary>Возвращает объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, связанный с указанным <see cref="T:System.IFormatProvider" />.</summary>
        <returns>Объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, связанный с <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> метод `formatProvider` с помощью <xref:System.Globalization.DateTimeFormatInfo> объекта в виде `Type` параметра. Если `formatProvider` — `null` или, если <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> возвращает `null`, этот метод возвращает <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>.  
  
 Приложение может получить <xref:System.Globalization.DateTimeFormatInfo> объект для определенного языка и региональных параметров с помощью одного из следующих методов:  
  
-   Свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.  
  
-   <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> Метод, где `provider` является <xref:System.Globalization.CultureInfo> объекта.  
  
 Объект <xref:System.Globalization.DateTimeFormatInfo> объекта могут создаваться только для инвариантного языка и региональных параметров или для конкретных языков и региональных параметров, но не для нейтральной культуры.  
  
 Дополнительные сведения о инвариантного языка и региональных параметров, определенных и нейтральных языков и региональных параметров, см. в разделе <xref:System.Globalization.CultureInfo> Описание класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Целое число от 1 до 13, представляющее собой название извлекаемого месяца.</param>
        <summary>Возвращает полное имя указанного месяца, принятое в определенном языке и региональных параметрах, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Полное название месяца, принятое в определенном языке и региональных параметрах, представленное параметром <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию инвариантного <xref:System.Globalization.DateTimeFormatInfo> объекта, этот метод возвращает строку из <xref:System.Globalization.GregorianCalendar> объекта.  
  
|`month`|Возвращаемое значение|  
|-------------|------------------|  
|1|«Январь»|  
|2|«Февраль»|  
|3|«Март»|  
|4|«Апрель»|  
|5|«Возможно»|  
|6|«Июнь»|  
|7|«Июль»|  
|8|«Август»|  
|9|«Сентябрь»|  
|10|«Октябрь»|  
|11|«Ноябрь»|  
|12|«Декабрь»|  
|13|""|  
  
 <xref:System.Globalization.Calendar> объекты можно разместить календарей с 13 месяцев. Для 12-месячных календарях как имя тринадцатого месяца всегда возвращается пустая строка.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> меньше 1 или больше 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberSignature Language="F#" Value="member this.GetShortestDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetShortestDayName dayOfWeek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek">Одно из значений <see cref="T:System.DayOfWeek" />.</param>
        <summary>Получает самое короткое сокращенное название дня для определенного дня недели, связанное с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Сокращение для недели, соответствующее параметру <paramref name="dayOfWeek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере несколько методов и свойств, укажите дату и время шаблоны форматирования, собственное имя календаря и полное и сокращенное месяц и названия дней.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="dayOfWeek" /> не является значением перечисления <see cref="T:System.DayOfWeek" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает доступный только для чтения объект по умолчанию <see cref="T:System.Globalization.DateTimeFormatInfo" />, который не зависит от языка и региональных параметров (инвариантный).</summary>
        <value>Объект, доступный только для чтения, который не зависит от языка и региональных параметров (инвариантный).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство не меняется независимо от текущего языка и региональных параметров. По этой причине инвариантного языка и региональных параметров <xref:System.Globalization.DateTimeFormatInfo> объект может использоваться для получения результатов согласованный, независимый от языка и региональных параметров в синтаксического анализа и форматирования данных, региональными параметрами. Например, если должна быть сохранена в виде строки даты и времени данные из нескольких языков и региональных параметров, их можно отформатировать с помощью <xref:System.Globalization.DateTimeFormatInfo> объект инвариантного языка и региональных параметров и сохраняется. Затем можно проанализировать с помощью инвариантного языка и региональных параметров <xref:System.Globalization.DateTimeFormatInfo> объекта.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, показывающее, является ли объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступным только для чтения.</summary>
        <value>Значение <see langword="true" />, если объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для длинного значения даты.</summary>
        <value>Строка пользовательского формата для длинного значения даты.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Свойство определяет формат зависящие от культуры строк дат, которые возвращаются при вызове <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методы и по составного формата строки, строка стандартного формата «D». Следующий пример иллюстрирует связи из следующих вариантов: строка стандартного формата «D», пользовательского форматирования строкой, возвращенной <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство и представление региональными даты.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 См. в разделе [пользовательские строки даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md) для отдельных настраиваемых описателей формата, которые могут быть объединены для построения строк настраиваемого формата, например «дддд, дд мммм гггг».  
  
 Разделитель компонентов даты следует задавать в шаблон полной даты для точного совпадения со строкой вместо заполнителя разделителя даты. Например чтобы получить шаблон мм-дд гггг, установите шаблон полной даты «Мм-дд-гггг».  
  
 Значение этого свойства может изменяться, если календарь используется для изменения языка и региональных параметров. Например, в следующем примере показано как <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство <xref:System.Globalization.CultureInfo> объект, представляющий культуру, арабский (Сирия) изменяется при <xref:System.Globalization.Calendar> объект, используемый для изменения языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойства для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для длинного значения времени.</summary>
        <value>Шаблон формата для долговременного значения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> Свойство определяет формат зависящие от культуры строк дат, которые возвращаются при вызове <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методы и по составного формата строки, строка стандартного формата «T».  
  
 Мы рекомендуем установить разделителя времени в шаблоне много времени для точного совпадения со строкой вместо заполнителя разделителя времени. Например чтобы получить шаблон h мм сс, задайте шаблон полной даты для «h мм сс».  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthDayPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для значения месяца и дня.</summary>
        <value>Строка пользовательского формата для значения месяца и дня.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> Свойство определяет формат зависящие от культуры строк дат, которые возвращаются при вызове <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методы и по составного форматирования строк, которые являются строки стандартного формата «M» и «m».  
  
 Это свойство изменяется в том случае, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 Мы рекомендуем установить разделитель компонентов даты в шаблон вместо заполнителя разделителя даты точного совпадения со строкой, месяц и день. Например чтобы получить шаблон мм-дд, задайте шаблон, месяц и день «Мм-дд».  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает массив строк имен месяцев, связанных с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <value>Массив строк имен месяцев.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В некоторых языках название месяца, который является частью даты отображается в падеж. Например Дата в русский (Россия) или «ru-RU», языка и региональных параметров состоит из номер дня и месяца родительный имени, например 1 Января.  
  
 Если это свойство имеет значение, массив должен быть одномерным и должен иметь ровно 13 элементов. <xref:System.Globalization.Calendar> объекты размещения календарей с 13 месяцев. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определяется <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство. Если задать <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> свойство, необходимо также задать <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> свойства.  
  
   
  
## Examples  
 В следующем примере несколько методов и свойств, укажите дату и время шаблоны форматирования, собственное имя календаря и полное и сокращенное месяц и названия дней.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В операции присваивания массив является многомерным или имеет длину, это не точно 13.</exception>
        <exception cref="T:System.ArgumentNullException">В операции задания массив или один из его элементов имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">В операции задания текущий объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает одномерный массив типа <see cref="T:System.String" />, содержащий полные названия месяцев, принятые в определенном языке и региональных параметрах.</summary>
        <value>Одномерный массив типа <see cref="T:System.String" />, содержащий полные названия месяцев, принятые в определенном языке и региональных параметрах. В 12-месячном календаре тринадцатый элемент массива представляет собой пустую строку. Массив для свойства <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит элементы "Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь" и "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это свойство имеет значение, массив должен быть одномерным и должен иметь ровно 13 элементов. <xref:System.Globalization.Calendar> объекты размещения календарей с 13 месяцев. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определяется <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство.  
  
 Если задать <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> свойство, необходимо также задать <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> свойства.  
  
 Если используется пользовательский шаблон содержит шаблон формата «MMMM», <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> отображает значение <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> вместо в шаблоне формата «MMMM».  
  
 Это свойство изменяется в том случае, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство задается для многомерного массива или для массива, длина которого не равна 13.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeCalendarName : string" Usage="System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает собственное имя календаря, связанного с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <value>Собственное имя календаря, используемое в языке и региональных параметрах, связано с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />, если имя доступно, или с пустой строкой (""), если собственное имя календаря недоступно.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере несколько методов и свойств, укажите дату и время шаблоны форматирования, собственное имя календаря и полное и сокращенное месяц и названия дней.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Если <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> — <see cref="T:System.Globalization.TaiwanCalendar" /> , но <see cref="P:System.Threading.Thread.CurrentCulture" /> не является «zh-TW», затем <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращается пустая строка (»»).</para></block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку указателя часов после полудня (PМ — "post meridiem").</summary>
        <value>Строка указателя часов после полудня (PМ — "post meridiem"). Значение по умолчанию для объекта <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> равно PM.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> Свойство используется для всех значений времени от 12:00:00 (от полудня) для 23:59:59.999.  
  
 Если пользовательский шаблон содержит шаблон формата «tt» и был создан после полудня, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> отображает значение <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> вместо в шаблоне формата «tt». Если используется пользовательский шаблон содержит шаблон формата «t», только первый символ <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> отображается. В приложении следует использовать «tt» для языков, для которых необходимо поддерживать различие между AM и PM. Например, японский язык, для которого AM и PM указатели различаются во втором символе вместо первого.  
  
 Для языков и региональных параметров, которые не используют указатель PM это свойство возвращает пустую строку.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.DateTimeFormatInfo -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.ReadOnly dtfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi">Объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, для которого создается оболочка.</param>
        <summary>Возвращает программу-оболочку <see cref="T:System.Globalization.DateTimeFormatInfo" />, доступную только для чтения.</summary>
        <returns>Оболочка <see cref="T:System.Globalization.DateTimeFormatInfo" />, доступная только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта оболочка предотвращает каких-либо изменений `dtfi`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dtfi" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RFC1123Pattern : string" Usage="System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку пользовательского формата для значения времени, основанного на спецификации IETF Request for Comments 1123 (RFC IETF).</summary>
        <value>Строка пользовательского формата для значения времени на основе спецификации 1123 IETF RFC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> Свойство определяет формат зависящие от культуры строк дат, которые возвращаются при вызове <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методы и по составного форматирования строк, которые являются строки стандартного формата «R» и «r».  
  
 Шаблон RFC1123 отражает определенный стандарт, а свойство доступно только для чтения. Таким образом это всегда же, независимо от языка и региональных параметров. Строкой пользовательского формата является "ддд, дд ммм гггг чч':'мм':'сс 'GMT'".  
  
   
  
## Examples  
 Следующий пример отображает значение RFC1123Pattern для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberSignature Language="F#" Value="member this.SetAllDateTimePatterns : string[] * char -&gt; unit" Usage="dateTimeFormatInfo.SetAllDateTimePatterns (patterns, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="patterns">Массив пользовательских строк формата.</param>
        <param name="format">Строка стандартного формата, связанная со строками пользовательского формата, указанными в параметре <paramref name="patterns" />.</param>
        <summary>Задает строки пользовательского формата даты и времени, соответствующие заданной стандартной строке формата.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> Метод определяет строк настраиваемого формата, которые соответствуют конкретному стандартные Дата и время, в строку формата. Если вызов даты и времени, включает метод форматирования стандартных формата даты и времени, заданный `format`, данный метод использует первый элемент в `patterns` массива для определения формата, возвращаемой строки.  
  
> [!WARNING]
>  `Parse` И `TryParse` методы не полностью итерации все строки в `patterns` при синтаксическом анализе строковое представление даты и времени. Если требуется, чтобы строки даты и времени требуется определенный форматов в операции синтаксического анализа, необходимо передать массив допустимых форматов для <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>, или <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> метод.  
  
 Вы можете определить строк настраиваемого формата, которые соответствуют «d», «D», «t», «T» и «y» или «Y» стандартный формат даты и времени. Если значение `format` является любая другая строка стандартного формата, <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> вызывает метод <xref:System.ArgumentException>.  
  
 Если ваши пользовательские строки даты и времени формат включает разделители компонентов даты, следует явно указать разделитель компонентов даты, а не полагаться на метод синтаксического анализа и форматирования, который заменяет описатель настраиваемого формата «/» разделитель определенной даты. Например чтобы получить шаблон мм-дд гггг, используйте шаблон «Мм-дд гггг».  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Globalization.CultureInfo> , представляющий «en US» (английский — США) язык и региональные параметры, и использует ее для синтаксического анализа массив строк даты и времени, с помощью строки стандартного формата «Y». Затем он использует <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> метод должен быть сопоставлен новую строку настраиваемого формата строки стандартного формата «Y», а затем пытается проанализировать массив строк даты и времени. Выходные данные примера показано, что новая строка настраиваемого формата используется в операциях форматирования и синтаксического анализа.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="patterns" /> имеет значение <see langword="null" /> или является массивом нулевой длины.  
  
-или- 
 <paramref name="format" /> не является допустимым строка стандартного формата или является строка стандартного формата, шаблоны которых не может быть задано.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="patterns" /> имеет элемент массива со значением <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Данный объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для короткого значения даты.</summary>
        <value>Строка пользовательского формата для короткого значения даты.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Свойство определяет формат зависящие от культуры строк дат, которые возвращаются при вызове <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методы и по составного формата строки, строка стандартного формата «d».  
  
 Это свойство изменяется в том случае, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство и значение даты в формате с помощью <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство для нескольких языков и региональных параметров.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 В следующем примере изменяется <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании для английского языка (США). Она также отображает значение даты в два раза, сначала в соответствии с исходным <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойства и затем, чтобы отразить новое значение свойства.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortestDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает массив строк самых кратких уникальных сокращений имен дней, связанный с текущим объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <value>Массив строк имен дней.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере несколько методов и свойств, укажите дату и время шаблоны форматирования, собственное имя календаря и полное и сокращенное месяц и названия дней.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В операции присваивания массив не имеет ровно семь элементов.</exception>
        <exception cref="T:System.ArgumentNullException">В наборе операций массив значений или один из элементов массива значений имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">В операции задания текущий объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для короткого значения времени.</summary>
        <value>Строка пользовательского формата для короткого значения времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> Свойство определяет формат зависящие от культуры строк дат, которые возвращаются при вызове <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методы и по составного формата строки, строка стандартного формата «t».  
  
 Мы рекомендуем установить разделителя времени в короткий формат времени для точного совпадения со строкой вместо заполнителя разделителя времени. Например чтобы получить шаблон h мм сс, задайте шаблон короткого времени «h мм сс».  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку пользовательского формата для сортируемого значения даты и времени.</summary>
        <value>Строка пользовательского формата для сортируемого значения даты и времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> Свойство определяет формат зависящие от культуры строк дат, которые возвращаются при вызове <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методы и по составного формата строки, строка стандартного формата «s».  
  
 Строка формата, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> свойство отражает определенный стандарт (ISO 8601), а свойство доступно только для чтения. Таким образом это всегда же, независимо от языка и региональных параметров. Строкой пользовательского формата является "гггг'-'мм'-'дд'T'чч':'мм':'сс".  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, разделяющую компоненты времени — час, минуты и секунды.</summary>
        <value>Строка, разделяющая компоненты времени. Значение по умолчанию для объекта <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> равно ":".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если используется пользовательский шаблон содержит шаблон формата «:», <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> отображает значение <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> вместо «:» в шаблоне формата.  
  
 Разделитель компонентов времени является производным от <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> свойство. Мы рекомендуем задать разделитель компонентов времени в двух словах, или долго времени шаблонов для точного совпадения со строкой вместо заполнителя разделителя времени. Например чтобы получить шаблон h мм сс, задайте шаблон «h мм сс». Такой подход также позволяет задать шаблоны, такие как «ч "мм «ss» меня» (3 ч 36 м 12), которые включают несколько типов разделителей. <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> Свойство определяет строка, замещающая разделителя времени (»:» пользовательские даты и Описатель полного формата времени) в результирующую строку в операции форматирования. Он также определяет строку разделителя времени в операции анализа.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Globalization.CultureInfo> объекта для региональных параметров en US, изменяет его разделитель даты для «.» и дата отображается с помощью «t», «T», «F», «f», «G» и строки стандартного формата «g».  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniversalSortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку пользовательского формата для универсальной, сортируемой строки даты и времени в соответствии со стандартом ISO 8601.</summary>
        <value>Строка пользовательского формата для универсальной, сортируемой строки даты и времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> Свойство определяет формат строки даты, которые возвращаются при вызове <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методы и по составного формата строки, строка стандартного формата «u». Его можно использовать для отображения значения даты и времени в порядке сортировки с обозначением времени «Z», в конце. Этот формат допускает сортировку, так как оно использует начальные нули для года, месяца, дня, часа, минуты и секунды. Строка пользовательского формата ("гггг '-' MM'-' дд чч ': 'mm': 'СС ' z'») независимо от языка и региональных параметров или поставщика формата.  
  
 Строка формата, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> свойство отражает определенный стандарт, а свойство доступно только для чтения. Таким образом это всегда же, независимо от языка и региональных параметров. Строкой пользовательского формата является "гггг'-'мм'-'дд чч':'мм':'сс'Z'".  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартного формата даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YearMonthPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку пользовательского формата для значения года и месяца.</summary>
        <value>Строка пользовательского формата для значения года и месяца.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> Свойство определяет формат зависящие от культуры строк дат, которые возвращаются при вызове <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методы и по составного форматирования строк, которые являются строки стандартного формата «Y» и «y».  
  
 Это свойство изменяется в том случае, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 Мы рекомендуем установить разделитель компонентов даты в шаблон месяца года для точного совпадения со строкой вместо заполнителя разделителя даты. Например чтобы получить шаблон мм гггг, задайте шаблон месяца года «Мм-гггг».  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
  </Members>
</Type>