<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15c56dd1f6beef1a76b091da57d1eedab23e02e0" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75175759" /></Metadata><TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет сведения, которые приложения, предоставляющие специальные возможности, используют при настройке пользовательского интерфейса приложения для пользователей с ограниченными возможностями.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения со специальными возможностями могут настраивать функции приложения для повышения удобства работы пользователей с ограниченными возможностями.  
  
 Для пользователей с ослабленным зрением можно настроить программное обеспечение и компоненты операционной системы в соответствии с потребностями. Например, можно увеличить текст и изображения и отобразить их с контрастом. Кроме того, можно обеспечить отправку цветов с помощью соответствующих цветов. Для пользователей с серьезными нарушениями зрения компьютеры доступны с помощью вспомогательных средств проверки экрана, которые преобразуют текст на экране в речь или на динамическое, обновляемое изображение Брайля.  
  
 Для пользователей с недостаточной слухом можно создавать программы, использующие визуальные подсказки, например мигающие панель инструментов. также можно отображать речевые сообщения в виде текста. Например, если параметр включен, функция `SoundSentry`, Специальные возможности на панели управления, предоставляет визуальное предупреждение всякий раз, когда система создает звуковой сигнал.  
  
 Для пользователей с ограниченными возможностями разработки можно создавать элементы управления, позволяющие уточнять или исключать использование клавиатуры и мыши, тем самым улучшая специальные возможности компьютера. Панель управления предлагает помощь. Например, одним из альтернативных способов является использование цифровой клавиатуры вместо мыши для навигации. Другой вариант, называемый `StickyKeys`, позволяет пользователям, которые не могут удерживать два или более клавиши одновременно (например, CTRL + P), получить тот же результат, введя по одному ключу за раз.  
  
 Для пользователей с некачественными и языковыми нарушениями можно разрабатывать программные программы в соответствии с потребностями. Например, использование последовательности видных или куед, несложный вывод, меньшее количество слов и уровень чтения, предназначенный для простейших школьных стандартов, может помочь этим пользователям.  
  
 Для пользователей с захватом от можно разработать программные программы, чтобы устранить заставляющегоные закономерности.  
  
 Дополнительные сведения о специальных возможностях, включая сведения о приложениях специальных возможностей, см. в документации по Microsoft Accessibility в библиотеке MSDN или на веб-сайте Майкрософт.  
  
> [!NOTE]
>  Чтобы использовать <xref:System.Windows.Forms.AccessibleObject>, необходимо добавить ссылку на сборку `Accessibility`, установленную вместе с [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Windows Forms поддерживает только Active Accessibility 2,0.  
  
   
  
## Examples  
 В следующем примере кода показано создание элемента управления диаграммы с поддержкой специальных возможностей с помощью классов <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> для предоставления доступной информации. Элемент управления отображает две кривые вместе с условными обозначениями. Класс `ChartControlAccessibleObject`, производный от `ControlAccessibleObject`, используется в методе <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> для предоставления настраиваемой информации, доступной для элемента управления диаграммы. Поскольку условные обозначения диаграммы не являются фактическим элементом управления на основе <xref:System.Windows.Forms.Control>, а отрисовывается элементом управления диаграммы, он не имеет встроенных доступных сведений. В связи с этим класс `ChartControlAccessibleObject` переопределяет метод <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> для возврата `CurveLegendAccessibleObject`, представляющего доступную информацию для каждой части условных обозначений. Если приложение, поддерживающее доступ, использует этот элемент управления, элемент управления может предоставить необходимые сведения о специальных возможностях.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>При наследовании от этого класса можно переопределить все члены.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, при использовании этого метода для создания доступного объекта вы предоставляете собственные реализации свойств и методов класса, чтобы обеспечить функциональные возможности, характерные для вашего приложения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility::IAccessible::accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает число дочерних интерфейсов, принадлежащих этому объекту. Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accChildCount" />.</summary>
        <value>Число дочерних объектов со специальными возможностями, принадлежащих этому объекту. Если у объекта отсутствуют дочерние объекты, значение равно 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификатор дочернего объекта в паре "интерфейс-идентификатор дочернего элемента" <see cref="T:Accessibility.IAccessible" />, которая представляет объект со специальными возможностями.</param>
        <summary>Выполняет действие по умолчанию для указанного объекта. Не все объекты имеют действия по умолчанию. Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект, получивший фокус ввода. Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accFocus" />.</summary>
        <value>Объект, имеющий фокус ввода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Тип возвращаемого значения свойства <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> зависит от объекта, имеющего фокус клавиатуры. В следующей таблице описаны типы объектов, возвращаемые свойством <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A>.  
  
|Type|Описание|  
|----------|-----------------|  
|`null`|Этот объект не имеет фокуса клавиатуры и не содержит дочернего элемента, имеющего фокус клавиатуры.|  
|целочисленный|0, если текущий объект имеет фокус клавиатуры; в противном случае — дочерний идентификатор дочернего доступного объекта с фокусом клавиатуры.|  
|<xref:Accessibility.IAccessible>|Дочерний объект со специальными возможностями, имеющий фокус клавиатуры.|  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">Горизонтальная координата.</param>
        <param name="yTop">Вертикальная координата.</param>
        <summary>Получает дочерний объект с указанными экранными координатами. Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</summary>
        <returns>Объект со специальными возможностями, расположенный в точке, заданной параметрами <paramref name="xLeft" /> и <paramref name="yTop" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице описаны типы объектов, которые может возвращать метод <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A>.  
  
|Type|Описание|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|Доступный объект в указанном направлении.|  
|целочисленный|0, если указанная точка является либо текущим объектом, либо вне границ объекта; в противном случае — идентификатор дочернего объекта, определяющий доступный объект в указанном направлении.|  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">При возвращении этот метод содержит координату x левого края объекта. Этот параметр передается неинициализированным.</param>
        <param name="pyTop">При возвращении этот метод содержит координату y верхнего края объекта. Этот параметр передается неинициализированным.</param>
        <param name="pcxWidth">При возвращении этот метод содержит ширину объекта. Этот параметр передается неинициализированным.</param>
        <param name="pcyHeight">При возвращении этот метод содержит высоту объекта. Этот параметр передается неинициализированным.</param>
        <param name="childID">Идентификационный номер объекта со специальными возможностями. Задайте для этого параметра значение 0, чтобы получить расположение объекта, или идентификатор дочернего объекта, чтобы получить расположение одного из дочерних объектов данного объекта.</param>
        <summary>Получает текущее расположение объекта на экране. Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">Одно из значений перечисления <see cref="T:System.Windows.Forms.AccessibleNavigation" />, которое указывает направление перехода.</param>
        <param name="childID">Идентификационный номер объекта со специальными возможностями. Задайте для этого параметра значение 0, чтобы начать с данного объекта, или идентификатор дочернего объекта, чтобы начать перемещение с одного из дочерних объектов данного объекта.</param>
        <summary>Переходит к объекту со специальными возможностями, расположение которого задается относительно текущего объекта. Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</summary>
        <returns>Объект со специальными возможностями, расположение которого задается значением <paramref name="navDir" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице описаны типы объектов, которые может возвращать метод <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A>.  
  
|Type|Описание|  
|----------|-----------------|  
|`null`|В указанном направлении нет доступного объекта.|  
|<xref:Accessibility.IAccessible>|Доступный объект в указанном направлении.|  
|целочисленный|Идентификатор дочернего объекта, определяющий доступный объект в указанном направлении. Для доступа к доступному объекту используйте родительский <xref:Accessibility.IAccessible> и идентификатор дочернего объекта.|  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает родительский объект со специальными возможностями для данного объекта. Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accParent" />.</summary>
        <value>Объект <see cref="T:Accessibility.IAccessible" />, представляющий родительский объект для объекта со специальными возможностями, или значение <see langword="null" />, если родительский объект отсутствует.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>. 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect">Поразрядное сочетание значений <see cref="T:System.Windows.Forms.AccessibleSelection" />.</param>
        <param name="childID">Идентификационный номер доступного объекта, для которого изменяется выделение. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <summary>Изменяет выделение или перемещает фокус ввода объекта со специальными возможностями. Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже описано, какие <xref:System.Windows.Forms.AccessibleSelection> значения, которые необходимо указать при вызове `Select` для выполнения сложных операций выбора.  
  
|Операция|Сочетание флагов|  
|---------------|----------------------|  
|Имитация щелчка|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> или <xref:System.Windows.Forms.AccessibleSelection.TakeSelection>|  
|Выбор целевого элемента путем имитации щелчка CTRL + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> или <xref:System.Windows.Forms.AccessibleSelection.AddSelection>|  
|Отмена выбора целевого элемента путем имитации нажатия клавиш CTRL + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> или <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>|  
|Имитация НАЖАТия SHIFT + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> или <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>|  
|Выбор диапазона объектов и помещение фокуса на последний объект|Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> начального объекта, чтобы задать привязку выбора. Затем снова вызовите SELECT и укажите <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> или <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> последнего объекта.|  
|Чтобы отменить выбор всех объектов|Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> для любого объекта. Этот флаг отменяет выбор всех выбранных объектов, кроме одного выбранного. Затем снова вызовите SELECT и укажите <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> для того же объекта.|  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает выбранные дочерние объекты для объекта со специальными возможностями. Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accSelection" />.</summary>
        <value>Выбранные дочерние объекты для объекта со специальными возможностями.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице описаны типы объектов, возвращаемые свойством <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A>  
  
|Type|Описание|  
|----------|-----------------|  
|`null`|Дочерние объекты не выбраны.|  
|<xref:Accessibility.IAccessible>|Выбранный дочерний объект со специальными возможностями.|  
|целочисленный|Идентификатор дочернего объекта, определяющий выбранный доступный объект. Для доступа к доступному объекту используйте родительский <xref:Accessibility.IAccessible> и идентификатор дочернего объекта.|  
|`IEnumVARIANT`|Список выбранных дочерних объектов.|  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификатор извлекаемого дочернего объекта.</param>
        <summary>Извлекает указанный дочерний объект.</summary>
        <returns>Указанный дочерний объект, если он существует, или <see langword="null" />, если не существует.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить действие по умолчанию. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <summary>Возвращает строку, которая описывает выполняемое по умолчанию действие заданного объекта.</summary>
        <returns>Строка, которая указывает действие по умолчанию для <paramref name="childID" />, или <see langword="name" />, если для <paramref name="childID" /> не настроено действие по умолчанию.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить описание. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <summary>Возвращает строку, которая описывает внешний вид указанного доступного объекта.</summary>
        <returns>Локализованная строка, которая описывает внешний вид указанного доступного объекта.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить информацию. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <summary>Получает полный путь файла WinHelp, который связан с указанным доступным объектом.</summary>
        <returns>Полный путь файла WinHelp, который связан с <paramref name="childID" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">При возврате метода — полный путь к файлу WinHelp, который связан с указанным объектом.</param>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить раздел справки. Задайте для этого параметра значение 0, чтобы выбрать этот объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов этого объекта.</param>
        <summary>Извлекает полный путь к файлу WinHelp, который связан с указанным объектом, а также идентификатор определенного раздела в этом файле.</summary>
        <returns>Идентификатор определенного раздела в <paramref name="pszHelpFile" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить сочетание клавиш. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <summary>Извлекает сочетание клавиш или клавишу доступа для указанного объекта.</summary>
        <returns>Локализованная строка, которая определяет сочетание клавиш, или значение <see langword="null" />, если с указанным объектом не связано сочетание клавиш.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого требуется получить имя. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <summary>Извлекает имя указанного объекта.</summary>
        <returns>Имя указанного объекта.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить информацию о ролях. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <summary>Получает информацию, которая описывает роль указанного объекта.</summary>
        <returns>Объект, который предоставляет сведения о роли указанного доступного объекта.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить информацию о состоянии. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <summary>Извлекает текущее состояние указанного доступного объекта.</summary>
        <returns>Объект, который описывает текущее состояние указанного доступного объекта.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого требуется получить значение. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <summary>Извлекает значение указанного доступного объекта. Не все объекты имеют значение.</summary>
        <returns>Значение <paramref name="childID" /> или <see langword="null" />, если объект не имеет значение.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, которому нужно присвоить новое имя. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <param name="newName">Новое имя, которое нужно присвоить <paramref name="childID" />.</param>
        <summary>Присваивает новое доступное имя указанному элементу.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, которому нужно присвоить новое значение. Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</param>
        <param name="newValue">Новое имя, которое будет присвоено указанному доступному объекту.</param>
        <summary>Присваивает новое значение указанному элементу.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает расположение и размер доступного объекта.</summary>
        <value>Структура <see cref="T:System.Drawing.Rectangle" />, представляющая границы объекта специальных возможностей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> извлекает ограничивающий прямоугольник объекта в экранных координатах. Если объект имеет непрямоугольную форму, это свойство представляет самый маленький прямоугольник, полностью охватывающий всю область объекта. Таким образом, для непрямоугольных объектов, таких как элементы представления списка, координаты ограничивающего прямоугольника объекта могут завершиться ошибкой, если он протестирован, вызвав метод <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, поскольку <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> определяет границы объекта в зависимости от пикселя.  
  
   
  
## Examples  
 В следующем примере демонстрируется создание элемента управления диаграммы с поддержкой специальных возможностей с помощью классов <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> для предоставления доступной информации. Элемент управления отображает две кривые вместе с условными обозначениями. Класс `ChartControlAccessibleObject`, производный от `ControlAccessibleObject`, используется в методе <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> для предоставления настраиваемой информации, доступной для элемента управления диаграммы. Поскольку условные обозначения диаграммы не являются фактическим элементом управления на основе <xref:System.Windows.Forms.Control>, а отрисовывается элементом управления диаграммы, он не имеет встроенных доступных сведений. В связи с этим класс `ChartControlAccessibleObject` переопределяет метод <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> для возврата `CurveLegendAccessibleObject`, представляющего доступную информацию для каждой части условных обозначений. Если приложение, поддерживающее доступ, использует этот элемент управления, элемент управления может предоставить необходимые сведения о специальных возможностях.  
  
 Этот фрагмент кода демонстрирует переопределение свойства <xref:System.Windows.Forms.AccessibleObject.Bounds%2A>. Полный пример кода см. в разделе Общие сведения о классе <xref:System.Windows.Forms.AccessibleObject>.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить границы элемента управления.</exception>
        <block subset="none" type="overrides"><para>Реализация по умолчанию возвращает ограничивающий прямоугольник доступного объекта, если объект создает оболочку для системного элемента управления; в противном случае возвращается <see cref="F:System.Drawing.Rectangle.Empty" />. Все видимые объекты, доступные для доступа, должны поддерживать этот метод. Объекты Sound не поддерживают этот метод.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку, описывающую выполняемое по умолчанию действие объекта. Не все объекты имеют действия по умолчанию.</summary>
        <value>Описание действия по умолчанию для объекта или значение <see langword="null" />, если этот объект не имеет действия по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка описывает действие, выполняемое над объектом, а не то, что делает объект. То есть кнопка на панели инструментов, на которой печатается документ, имеет действие по умолчанию "нажать", а не "печатать текущий документ". Не путайте действие объекта по умолчанию со своим значением.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить выполняемое по умолчанию действие для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Реализация по умолчанию возвращает действие по умолчанию доступного объекта, если объект создает оболочку для системного элемента управления, имеющего действие по умолчанию. в противном случае возвращается <see langword="null" />. Этот метод должен поддерживать только те элементы управления, которые выполняют действия. Не все объекты имеют действия по умолчанию, а некоторые объекты могут иметь действие по умолчанию, связанное со свойством <see cref="P:System.Windows.Forms.AccessibleObject.Value" />, как показано в следующих примерах: выбранный флажок имеет действие по умолчанию "снять флажок" и значение "Проверено". Снятый флажок имеет действие по умолчанию "проверить" и значение "снят флажок". Кнопка «Печать» имеет действие по умолчанию «Press» без значения. Элемент управления "статический текст" или элемент управления "поле ввода", который отображает "принтер", не имеет действия по умолчанию, но имеет значение "принтер". Свойство <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> объекта должно быть глаголом или короткой глаголовой фразой.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку, описывающую внешний вид указанного объекта. Не все объекты имеют описание.</summary>
        <value>Описание внешнего вида объекта для пользователя или значение <see langword="null" />, если объект не имеет описания.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство описывает визуальный внешний вид объекта для пользователя.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить описание для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Реализация по умолчанию возвращает описание доступного объекта, если объект создает оболочку для системного элемента управления; в противном случае возвращается <see langword="null" />. Описание обычно используется для предоставления более высокого контекста для пользователей с ослабленным зрением или пользователями с потерей зрения. Его также можно использовать для контекстного поиска или других приложений. Серверы должны поддерживать свойство <see cref="P:System.Windows.Forms.AccessibleObject.Description" />, если описание не очевидно или избыточно в зависимости от свойств <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />и <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> объекта. Например, для кнопки со «ОК» не требуется дополнительная информация, а кнопка, показывающая рисунок кактуса, —. <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />и, возможно, <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> свойства для кнопки кактуса описывают ее назначение, но свойство <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> передает менее ощутимую информацию, например "кнопку, показывающую рисунок кактуса".</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет действие по умолчанию, сопоставленное с объектом со специальными возможностями.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клиенты могут извлекать действие по умолчанию объекта, изучая свойство <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> объекта. Клиент может использовать автоматизацию (если поддерживается) вместо <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> для выполнения действия объекта по умолчанию. Однако <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> предоставляет простой способ выполнения наиболее часто используемого действия объекта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось выполнить действие по умолчанию для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Действие по умолчанию, выполняемое предоставляемыми системой элементами пользовательского интерфейса, зависит от состояния клавиатуры. То есть, если клавиша-модификатор, такая как SHIFT, ALT или CTRL, не нажата (действие пользователя или программно) при вызове <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />, действие по умолчанию может не совпадать с тем, когда эти ключи не работают. Не все объекты имеют действия по умолчанию.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс доступного дочернего элемента.</param>
        <summary>Извлекает доступный дочерний элемент, соответствующий указанному индексу.</summary>
        <returns>Класс <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет доступный дочерний элемент, соответствующий указанному индексу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере демонстрируется создание элемента управления диаграммы с поддержкой специальных возможностей с помощью классов <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> для предоставления доступной информации. Элемент управления отображает две кривые вместе с условными обозначениями. Класс `ChartControlAccessibleObject`, производный от `ControlAccessibleObject`, используется в методе <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> для предоставления настраиваемой информации, доступной для элемента управления диаграммы. Поскольку условные обозначения диаграммы не являются фактическим элементом управления на основе <xref:System.Windows.Forms.Control>, а отрисовывается элементом управления диаграммы, он не имеет встроенных доступных сведений. В связи с этим класс `ChartControlAccessibleObject` переопределяет метод <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> для возврата `CurveLegendAccessibleObject`, представляющего доступную информацию для каждой части условных обозначений. Если приложение, поддерживающее доступ, использует этот элемент управления, элемент управления может предоставить необходимые сведения о специальных возможностях.  
  
 Этот фрагмент кода демонстрирует переопределение метода <xref:System.Windows.Forms.AccessibleObject.GetChild%2A>. Полный пример кода см. в разделе Общие сведения о классе <xref:System.Windows.Forms.AccessibleObject>.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Все доступные объекты должны поддерживать это свойство. Если метод не переопределен, возвращается <see langword="null" />. Переопределите этот метод, если доступный объект должен предоставлять пользовательские доступные дочерние элементы. Если индекс является недопустимым, этот метод должен возвращать <see langword="null" />. При переопределении этого метода необходимо также переопределить <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает число дочерних объектов, принадлежащих доступному объекту.</summary>
        <returns>Число дочерних объектов, принадлежащих доступному объекту.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере демонстрируется создание элемента управления диаграммы с поддержкой специальных возможностей с помощью классов <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> для предоставления доступной информации. Элемент управления отображает две кривые вместе с условными обозначениями. Класс `ChartControlAccessibleObject`, производный от `ControlAccessibleObject`, используется в методе <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> для предоставления настраиваемой информации, доступной для элемента управления диаграммы. Поскольку условные обозначения диаграммы не являются фактическим элементом управления на основе <xref:System.Windows.Forms.Control>, а отрисовывается элементом управления диаграммы, он не имеет встроенных доступных сведений. В связи с этим класс `ChartControlAccessibleObject` переопределяет метод <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> для возврата `CurveLegendAccessibleObject`, представляющего доступную информацию для каждой части условных обозначений. Если приложение, поддерживающее доступ, использует этот элемент управления, элемент управления может предоставить необходимые сведения о специальных возможностях.  
  
 В этом коде показано переопределение метода <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A>. Полный пример кода см. в разделе Общие сведения о классе <xref:System.Windows.Forms.AccessibleObject>.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Все объекты должны поддерживать это свойство. Реализация по умолчанию возвращает значение -1. Переопределите этот метод, если доступный объект должен предоставлять пользовательские доступные дочерние элементы. При переопределении этого метода необходимо также переопределить <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает объект, получивший фокус ввода.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который указывает дочерний объект, имеющий фокус в настоящий момент. Данный метод возвращает вызывающий объект, если сам объект имеет фокус. Возвращает значение <see langword="null" />, если отсутствует объект, имеющий фокус.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Понятие фокуса клавиатуры относится к активному окну. Активное окно — это окно переднего плана, в котором работает пользователь. Объект с фокусом клавиатуры — это либо активное окно, либо дочерний объект активного окна.  
  
 Только один объект или элемент в контейнере может иметь фокус в один момент времени. Объект с фокусом клавиатуры не обязательно является выбранным объектом.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить элемент управления.</exception>
        <block subset="none" type="overrides"><para>Все объекты, которые могут получать фокус клавиатуры, должны поддерживать это свойство.</para></block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic : string -&gt; int&#xA;override this.GetHelpTopic : string -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">После возвращения это свойство содержит путь к файлу справки, связанному с данным объектом со специальными возможностями.</param>
        <summary>Получает идентификатор для идентификатора раздела справки и путь к файлу справки, связанному с данным объектом со специальными возможностями.</summary>
        <returns>Идентификатор для раздела справки или значение -1, если раздел справки отсутствует. После возвращения параметр <paramref name="fileName" /> содержит путь к файлу справки, связанному с данным объектом со специальными возможностями.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы отобразить справку для <xref:System.Windows.Forms.AccessibleObject> с помощью справочной системы Windows, можно передать имя файла и идентификатор раздела соответствующему методу <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Help>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить раздел справки для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Не все объекты должны поддерживать это свойство.</para></block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает выбранный в данный момент дочерний объект.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет выбранный в данный момент дочерний объект. Данный метод возвращает вызывающий объект, если выделен сам объект. Возвращает значение <see langword="null" />, если ни один из дочерних объектов в данный момент не выделен, а сам объект не имеет фокус.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить выделенный дочерний объект.</exception>
        <block subset="none" type="overrides"><para>Все объекты, которые могут быть выбраны, должны поддерживать это свойство.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает описание действий, выполняемых объектом, и порядка его использования.</summary>
        <value>Объект <see cref="T:System.String" />, который содержит описание действий, выполняемых объектом, и порядка его использования. Возвращает значение <see langword="null" />, если справка не определена.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить строку справки для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Не все объекты должны поддерживать это свойство. Как правило, это свойство содержит сведения о стиле подсказок, которые используются для описания того, что делает объект, и как его использовать. Например, свойство <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> для кнопки панели инструментов, показывающей принтер, может иметь значение «печать текущего документа». Текст свойства <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> не обязательно должен быть уникальным в пользовательском интерфейсе. Серверам не требуется поддерживать свойство <see cref="P:System.Windows.Forms.AccessibleObject.Help" />, если другие свойства предоставляют достаточно сведений о назначении объекта и действиях, которые может выполнять объект.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Горизонтальная экранная координата.</param>
        <param name="y">Вертикальная экранная координата.</param>
        <summary>Получает дочерний объект с указанными экранными координатами.</summary>
        <returns>Класс <see cref="T:System.Windows.Forms.AccessibleObject" />, представляющий дочерний объект с указанными экранными координатами. Данный метод возвращает вызывающий объект, если сам объект находится в указанном местоположении. Возвращает значение <see langword="null" />, если в проверяемом местоположении нет объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для непрямоугольных объектов, таких как элементы представления списка, координаты ограничивающего прямоугольника объекта, получаемого <xref:System.Windows.Forms.AccessibleObject.Bounds%2A>, могут завершиться ошибкой, если проверка выполняется с <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, так как <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> определяет границы объекта в зависимости от пикселя.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось проверить попадание курсора в элемент управления.</exception>
        <block subset="none" type="overrides"><para>Все визуальные объекты должны поддерживать этот метод; объекты Sound не поддерживают его.</para></block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сочетание клавиш или клавишу доступа для объекта со специальными возможностями.</summary>
        <value>Сочетание клавиш или клавиша доступа для объекта со специальными возможностями либо значение <see langword="null" />, если отсутствует сочетание клавиш, связанное с объектом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клавиша доступа, также известная как клавиша, представляет собой подчеркнутый символ в тексте меню, пункте меню, метке кнопки или другом элементе управления. Например, пользователь может отобразить меню, нажав клавишу ALT, а также нажав указанный подчеркнутый ключ, например ALT + F, чтобы открыть меню `File`. Чтобы использовать ключ доступа пункта меню, меню, содержащее этот элемент, должно быть активным. Элементы управления, такие как кнопки панели инструментов и пункты меню, часто имеют связанную клавишу. С пунктом меню могут быть связаны как ключ доступа, так и сочетание клавиш. Если значение свойства <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> является одним символом, можно предположить, что это ключ доступа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить сочетание клавиш для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Все объекты, имеющие сочетание клавиш или клавишу доступа, должны поддерживать это свойство.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя объекта.</summary>
        <value>Имя объекта или значение <see langword="null" />, если свойство не было задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Windows.Forms.AccessibleObject.Name%2A> — это строка, используемая клиентами для определения, поиска или объявления объекта для пользователя. Чтобы получить доступ к имени дочернего объекта, необходимо сначала вызвать <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> с индексом дочернего элемента, имя которого вы извлекаете.  
  
   
  
## Examples  
 В следующем примере демонстрируется создание элемента управления диаграммы с поддержкой специальных возможностей с помощью классов <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> для предоставления доступной информации. Элемент управления отображает две кривые вместе с условными обозначениями. Класс `ChartControlAccessibleObject`, производный от `ControlAccessibleObject`, используется в методе <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> для предоставления настраиваемой информации, доступной для элемента управления диаграммы. Поскольку условные обозначения диаграммы не являются фактическим элементом управления на основе <xref:System.Windows.Forms.Control>, а отрисовывается элементом управления диаграммы, он не имеет встроенных доступных сведений. В связи с этим класс `ChartControlAccessibleObject` переопределяет метод <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> для возврата `CurveLegendAccessibleObject`, представляющего доступную информацию для каждой части условных обозначений. Если приложение, поддерживающее доступ, использует этот элемент управления, элемент управления может предоставить необходимые сведения о специальных возможностях.  
  
 Этот фрагмент кода демонстрирует переопределение свойства <xref:System.Windows.Forms.AccessibleObject.Name%2A>. Полный пример кода см. в разделе Общие сведения о классе <xref:System.Windows.Forms.AccessibleObject>.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить или задать имя элемента управления.</exception>
        <block subset="none" type="overrides"><para>Все объекты должны поддерживать это свойство. Имя объекта должно быть интуитивно понятным, чтобы пользователи понимали значение или назначение объекта. Кроме того, убедитесь, что свойство <see langword="Name" /> является уникальным относительно любого родственного объекта в родительском объекте. Переходы между таблицами представляют собой особенно сложные проблемы некоторых пользователей. Таким образом, разработчики сервера должны сделать имена ячеек таблицы как можно более описательными. Например, можно создать имя ячейки, объединив имена строки и столбца, которые она занимает, например a1. Однако обычно лучше использовать более описательные имена, например "Карин, Февраль". Многие объекты, такие как значки, меню, флажки, поля со списками и другие элементы управления, имеют метки, отображаемые пользователям. Любую метку, отображаемую для пользователей, следует использовать для свойства <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> объекта. Дополнительные сведения см. в описании свойства <see cref="P:System.Windows.Forms.AccessibleObject.Name" />.  
  
Если для свойства <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> используется текст меню или кнопки, удалите амперсанды (&amp;), которые отмечают клавиши доступа клавиатуры.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir">Одно из значений перечисления <see cref="T:System.Windows.Forms.AccessibleNavigation" />.</param>
        <summary>Переходит к другому доступному объекту.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет одно из значений <see cref="T:System.Windows.Forms.AccessibleNavigation" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Навигация, как пространственные, так и логическая, всегда ограничена элементами пользовательского интерфейса в контейнере. При пространственной навигации клиенты могут переходить только к элементу того же уровня, что и начальный объект. В зависимости от флага навигации, используемого для логической навигации, клиенты могут переходить к дочернему элементу или к родственному объекту начального объекта. Этот метод не изменяет выделенный фрагмент или фокус. Чтобы изменить фокус или выбрать объект, используйте <xref:System.Windows.Forms.AccessibleObject.Select%2A>. Метод <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> извлекает только элементы пользовательского интерфейса с определенным расположением на экране.  
  
   
  
## Examples  
 В следующем примере демонстрируется создание элемента управления диаграммы с поддержкой специальных возможностей с помощью классов <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> для предоставления доступной информации. Элемент управления отображает две кривые вместе с условными обозначениями. Класс `ChartControlAccessibleObject`, производный от `ControlAccessibleObject`, используется в методе <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> для предоставления настраиваемой информации, доступной для элемента управления диаграммы. Поскольку условные обозначения диаграммы не являются фактическим элементом управления на основе <xref:System.Windows.Forms.Control>, а отрисовывается элементом управления диаграммы, он не имеет встроенных доступных сведений. В связи с этим класс `ChartControlAccessibleObject` переопределяет метод <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> для возврата `CurveLegendAccessibleObject`, представляющего доступную информацию для каждой части условных обозначений. Если приложение, поддерживающее доступ, использует этот элемент управления, элемент управления может предоставить необходимые сведения о специальных возможностях.  
  
 В этом коде показано переопределение метода <xref:System.Windows.Forms.AccessibleObject.Navigate%2A>. Полный пример кода см. в разделе Общие сведения о классе <xref:System.Windows.Forms.AccessibleObject>.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удается выполнить попытку перехода.</exception>
        <block subset="none" type="overrides"><para>Все визуальные объекты должны поддерживать этот метод. Если объект имеет <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />состояния, переход к этому скрытому объекту может завершиться ошибкой. Некоторые определенные системой элементы интерфейса, такие как меню, пункты меню и всплывающие меню, позволяют переходить к невидимым объектам. Однако другие определяемые системой элементы пользовательского интерфейса не поддерживают это. По возможности серверы должны поддерживать переход к невидимым объектам, но эта поддержка не является обязательной, и клиенты не должны их ждать.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект доступного объекта.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет родительский элемент доступного объекта или <see langword="null" />, если родительский объект отсутствует.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере демонстрируется создание элемента управления диаграммы с поддержкой специальных возможностей с помощью классов <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> для предоставления доступной информации. Элемент управления отображает две кривые вместе с условными обозначениями. Класс `ChartControlAccessibleObject`, производный от `ControlAccessibleObject`, используется в методе <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> для предоставления настраиваемой информации, доступной для элемента управления диаграммы. Поскольку условные обозначения диаграммы не являются фактическим элементом управления на основе <xref:System.Windows.Forms.Control>, а отрисовывается элементом управления диаграммы, он не имеет встроенных доступных сведений. В связи с этим класс `ChartControlAccessibleObject` переопределяет метод <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> для возврата `CurveLegendAccessibleObject`, представляющего доступную информацию для каждой части условных обозначений. Если приложение, поддерживающее доступ, использует этот элемент управления, элемент управления может предоставить необходимые сведения о специальных возможностях.  
  
 Этот фрагмент кода демонстрирует переопределение свойства <xref:System.Windows.Forms.AccessibleObject.Parent%2A>. Полный пример кода см. в разделе Общие сведения о классе <xref:System.Windows.Forms.AccessibleObject>.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Все объекты должны поддерживать это свойство.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationNotification">
      <MemberSignature Language="C#" Value="public bool RaiseAutomationNotification (System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RaiseAutomationNotification(valuetype System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, valuetype System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind,System.Windows.Forms.Automation.AutomationNotificationProcessing,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseAutomationNotification (notificationKind As AutomationNotificationKind, notificationProcessing As AutomationNotificationProcessing, notificationText As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RaiseAutomationNotification(System::Windows::Forms::Automation::AutomationNotificationKind notificationKind, System::Windows::Forms::Automation::AutomationNotificationProcessing notificationProcessing, System::String ^ notificationText);" />
      <MemberSignature Language="F#" Value="member this.RaiseAutomationNotification : System.Windows.Forms.Automation.AutomationNotificationKind * System.Windows.Forms.Automation.AutomationNotificationProcessing * string -&gt; bool" Usage="accessibleObject.RaiseAutomationNotification (notificationKind, notificationProcessing, notificationText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationKind" Type="System.Windows.Forms.Automation.AutomationNotificationKind" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.8" />
        <Parameter Name="notificationProcessing" Type="System.Windows.Forms.Automation.AutomationNotificationProcessing" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.8" />
        <Parameter Name="notificationText" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="notificationKind">Тип уведомления.</param>
        <param name="notificationProcessing">Указывает способ обработки уведомлений.</param>
        <param name="notificationText">Текст уведомления.</param>
        <summary>Вызывает событие уведомления автоматизации пользовательского интерфейса.</summary>
        <returns>Значение <see langword="true" />, если операция прошла успешно; значение <see langword="false" />, если базовая инфраструктура Windows недоступна или произошел сбой операции. Для получения подробных сведений вызовите <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Это событие доступно начиная с Windows 10, версия 1709.
  
       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseLiveRegionChanged">
      <MemberSignature Language="C#" Value="public virtual bool RaiseLiveRegionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RaiseLiveRegionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseLiveRegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RaiseLiveRegionChanged () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RaiseLiveRegionChanged();" />
      <MemberSignature Language="F#" Value="abstract member RaiseLiveRegionChanged : unit -&gt; bool&#xA;override this.RaiseLiveRegionChanged : unit -&gt; bool" Usage="accessibleObject.RaiseLiveRegionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает событие автоматизации пользовательского интерфейса LiveRegionChanged.</summary>
        <returns>Значение <see langword="true" />, если операция прошла успешно; в противном случае — значение <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Этот метод должен быть переопределен в производных классах, поддерживающих функцию динамической области UI Automation.
  
     ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Динамические области объекта специальных возможностей, не поддерживаются.</exception>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает роль данного доступного объекта.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.AccessibleRole" /> или член <see cref="F:System.Windows.Forms.AccessibleRole.None" />, если роль не была указана.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Роль объекта помогает описать функцию объекта.  
  
   
  
## Examples  
 В следующем примере демонстрируется создание элемента управления диаграммы с поддержкой специальных возможностей с помощью классов <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> для предоставления доступной информации. Элемент управления отображает две кривые вместе с условными обозначениями. Класс `ChartControlAccessibleObject`, производный от `ControlAccessibleObject`, используется в методе <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> для предоставления настраиваемой информации, доступной для элемента управления диаграммы. Поскольку условные обозначения диаграммы не являются фактическим элементом управления на основе <xref:System.Windows.Forms.Control>, а отрисовывается элементом управления диаграммы, он не имеет встроенных доступных сведений. В связи с этим класс `ChartControlAccessibleObject` переопределяет метод <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> для возврата `CurveLegendAccessibleObject`, представляющего доступную информацию для каждой части условных обозначений. Если приложение, поддерживающее доступ, использует этот элемент управления, элемент управления может предоставить необходимые сведения о специальных возможностях.  
  
 Этот фрагмент кода демонстрирует переопределение свойства <xref:System.Windows.Forms.AccessibleObject.Role%2A>. Полный пример кода см. в разделе Общие сведения о классе <xref:System.Windows.Forms.AccessibleObject>.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Все объекты должны поддерживать это свойство.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags">Одно из значений перечисления <see cref="T:System.Windows.Forms.AccessibleSelection" />.</param>
        <summary>Изменяет выделение или перемещает фокус ввода объекта со специальными возможностями.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения могут использовать этот метод для выполнения сложных операций выбора.  
  
 Ниже описано, какие <xref:System.Windows.Forms.AccessibleSelection> значения, которые необходимо указать при вызове <xref:System.Windows.Forms.AccessibleObject.Select%2A> для выполнения сложных операций выбора.  
  
|Операция|Сочетание флагов|  
|---------------|----------------------|  
|Имитация щелчка|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **Примечание.** это сочетание не выбирает нужный элемент управления, если он вызывается из вашего приложения. Однако при вызове из внешнего приложения он будет иметь нужный результат.|  
|Выбор целевого элемента путем имитации щелчка CTRL + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType>|  
|Отмена выбора целевого элемента путем имитации нажатия клавиш CTRL + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>|  
|Имитация НАЖАТия SHIFT + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>|  
|Выбор диапазона объектов и помещение фокуса на последний объект|Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> начального объекта, чтобы задать привязку выбора. Затем снова вызовите <xref:System.Windows.Forms.AccessibleObject.Select%2A> и укажите <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType>`OR`<xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> для последнего объекта.|  
|Чтобы отменить выбор всех объектов|Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> для любого объекта. Этот флаг отменяет выбор всех выбранных объектов, кроме одного выбранного. Затем снова вызовите <xref:System.Windows.Forms.AccessibleObject.Select%2A> и укажите <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> для того же объекта.|  
  
   
  
## Examples  
 В следующем примере демонстрируется создание элемента управления диаграммы с поддержкой специальных возможностей с помощью классов <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> для предоставления доступной информации. Элемент управления отображает две кривые вместе с условными обозначениями. Класс `ChartControlAccessibleObject`, производный от `ControlAccessibleObject`, используется в методе <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> для предоставления настраиваемой информации, доступной для элемента управления диаграммы. Поскольку условные обозначения диаграммы не являются фактическим элементом управления на основе <xref:System.Windows.Forms.Control>, а отрисовывается элементом управления диаграммы, он не имеет встроенных доступных сведений. В связи с этим класс `ChartControlAccessibleObject` переопределяет метод <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> для возврата `CurveLegendAccessibleObject`, представляющего доступную информацию для каждой части условных обозначений. Если приложение, поддерживающее доступ, использует этот элемент управления, элемент управления может предоставить необходимые сведения о специальных возможностях.  
  
 В этом коде показано переопределение метода <xref:System.Windows.Forms.AccessibleObject.Select%2A>. Полный пример кода см. в разделе Общие сведения о классе <xref:System.Windows.Forms.AccessibleObject>.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось выполнить выделение.</exception>
        <block subset="none" type="overrides"><para>Этот метод должен поддерживать все объекты, которые можно выбрать или получить фокус клавиатуры.</para></block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает состояние данного доступного объекта.</summary>
        <value>Одно из значений <see cref="T:System.Windows.Forms.AccessibleStates" /> или значение <see cref="F:System.Windows.Forms.AccessibleStates.None" />, если состояние не было задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере демонстрируется создание элемента управления диаграммы с поддержкой специальных возможностей с помощью классов <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> для предоставления доступной информации. Элемент управления отображает две кривые вместе с условными обозначениями. Класс `ChartControlAccessibleObject`, производный от `ControlAccessibleObject`, используется в методе <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> для предоставления настраиваемой информации, доступной для элемента управления диаграммы. Поскольку условные обозначения диаграммы не являются фактическим элементом управления на основе <xref:System.Windows.Forms.Control>, а отрисовывается элементом управления диаграммы, он не имеет встроенных доступных сведений. В связи с этим класс `ChartControlAccessibleObject` переопределяет метод <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> для возврата `CurveLegendAccessibleObject`, представляющего доступную информацию для каждой части условных обозначений. Если приложение, поддерживающее доступ, использует этот элемент управления, элемент управления может предоставить необходимые сведения о специальных возможностях.  
  
 Этот фрагмент кода демонстрирует переопределение свойства <xref:System.Windows.Forms.AccessibleObject.State%2A>. Полный пример кода см. в разделе Общие сведения о классе <xref:System.Windows.Forms.AccessibleObject>.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Все объекты должны поддерживать это свойство.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Имя искомого поля.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает объект <see cref="T:System.Reflection.FieldInfo" />, соответствующий заданному полю и флагу привязки. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Объект <see cref="T:System.Reflection.FieldInfo" />, содержащий данные поля для именованного объекта, который удовлетворяет ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">В объекте реализовано несколько полей с одним именем.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает массив объектов <see cref="T:System.Reflection.FieldInfo" />, соответствующих всем полям текущего класса. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</summary>
        <returns>Массив объектов <see cref="T:System.Reflection.FieldInfo" />, содержащих все данные полей этого объекта отражения, который удовлетворяет ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждое поле должно иметь уникальное имя. Флаг <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> указывает, что в поиск включаются неоткрытые поля. Флаг <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> указывает, что в поиск включаются открытые поля.  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Имя искомого элемента.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем открытым элементам или всем элементам, которые удовлетворяют заданному имени. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих параметру имени.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем открытым элементам или всем элементам текущего класса. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</summary>
        <returns>Массив объектов <see cref="T:System.Reflection.MemberInfo" />, содержащих все данные элементов для этого объекта отражения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Имя искомого элемента.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает объект <see cref="T:System.Reflection.MethodInfo" />, соответствующий заданному методу при заданных ограничениях поиска. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, содержащий данные метода, отвечающие имени метода и ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">В объекте реализовано несколько методов с одним именем.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Имя искомого элемента.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <param name="binder">Объект, реализующий <see cref="T:System.Reflection.Binder" />, содержащий свойства, связанные с этим методом.</param>
        <param name="types">Массив, используемый для выбора среди перегруженных версий метода.</param>
        <param name="modifiers">Массив модификаторов параметров, используемый для работы привязки с подписями параметров, в которых были изменены типы.</param>
        <summary>Получает объект <see cref="T:System.Reflection.MethodInfo" />, соответствующий заданному методу, используя для выбора среди перегруженных версий метода массив Type. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>Запрошенный метод, который соответствует всем заданным параметрам.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение — это совпадение, основанное на имени метода, перечислении <xref:System.Reflection.BindingFlags?displayProperty=nameWithType>, типе преобразования типа, заданном параметром `binder`, перегрузке и <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType>, описывающем сигнатуру метода.  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">В объекте реализовано несколько методов с одним именем.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает массив объектов <see cref="T:System.Reflection.MethodInfo" /> со всеми открытыми методами или всеми методами текущего класса. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</summary>
        <returns>Массив объектов <see cref="T:System.Reflection.MethodInfo" />, содержащих все методы, определенные для этого объекта отражения, который удовлетворяет ограничениям поиска, задаваемым параметром <see langword="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Атрибут привязки, используемый для управления поиском.</param>
        <summary>Получает массив объектов <see cref="T:System.Reflection.PropertyInfo" />, соответствующих всем открытым свойствам или всем свойствам текущего класса. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</summary>
        <returns>Массив объектов <see cref="T:System.Reflection.PropertyInfo" /> для всех свойств, определенных в объекте отражения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Имя искомого свойства.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает объект <see cref="T:System.Reflection.PropertyInfo" />, соответствующий заданному свойству при заданных ограничениях поиска. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Объект <see cref="T:System.Reflection.PropertyInfo" /> для найденного свойства, которое удовлетворяет ограничениям поиска, заданным в параметре <paramref name="bindingAttr" />, или значение <see langword="null" />, если свойство не было найдено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">В объекте реализовано несколько методов с одним именем.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Имя искомого элемента.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <param name="binder">Объект, который реализует класс Binder, содержащий свойства, связанные с этим методом.</param>
        <param name="returnType">Массив, используемый для выбора среди перегруженных версий метода.</param>
        <param name="types">Массив модификаторов параметров, используемый для работы привязки с подписями параметров, в которых были изменены типы.</param>
        <param name="modifiers">Массив, используемый для выбора модификаторов параметров.</param>
        <summary>Получает объект <see cref="T:System.Reflection.PropertyInfo" />, соответствующий заданному свойству при заданных ограничениях поиска. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>Объект <see cref="T:System.Reflection.PropertyInfo" /> для найденного свойства, если свойство с заданным именем было найдено в данном объекте отражения, или значение <see langword="null" />, если свойство не было найдено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">Имя искомого элемента.</param>
        <param name="invokeAttr">Один из атрибутов вызова <see cref="T:System.Reflection.BindingFlags" />.</param>
        <param name="binder">Один из битовых флагов <see cref="T:System.Reflection.BindingFlags" />. Реализует класс Binder, содержащий свойства, связанные с этим методом.</param>
        <param name="target">Объект, для которого следует вызвать указанный член. Для статических элементов этот параметр не обрабатывается.</param>
        <param name="args">Массив объектов, содержащих число, порядок и тип параметров вызываемого элемента. Если параметров нет, этот массив пуст.</param>
        <param name="modifiers">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />.</param>
        <param name="culture">Экземпляр объекта <see cref="T:System.Globalization.CultureInfo" />, используемого для управления приведением типов.</param>
        <param name="namedParameters">Строковый массив параметров.</param>
        <summary>Вызывает заданный элемент. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</summary>
        <returns>Заданный член.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр `invokeAttr` может быть конструктором, методом, свойством или полем. Необходимо указать подходящий атрибут вызова. Чтобы вызвать стандартный элемент класса, передайте в качестве имени элемента пустую строку ("").  
  
 Параметр `modifiers` имеет ту же длину, что и параметр `args`, представляющий атрибуты аргумента вызванного члена в метаданных. Параметр может иметь следующие атрибуты: ПДИН, Пдаут, Пдретвал, Пдоптионал и Пдхасдефаулт. Эти значения представляют, соответственно, параметры [In], [Out], [retval], [optional] и стандартный параметр.  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="invokeAttr" /> имеет значение <see cref="F:System.Reflection.BindingFlags.CreateInstance" />, и также установлен другой битовый флаг.

- или - <paramref name="invokeAttr" /> не имеет значение <see cref="F:System.Reflection.BindingFlags.CreateInstance" />, а имя равно <see langword="null" />.

-или-

Параметр <paramref name="invokeAttr" /> не является атрибутом вызова из объекта <see cref="T:System.Reflection.BindingFlags" />.

-или-

Параметр <paramref name="invokeAttr" /> одновременно задает методы get и set для свойства или поля.

-или-

<paramref name="invokeAttr" /> указывает как набор полей, так и метод Invoke.<paramref name="args" /> предоставляется для операции получения (Get) поля.

-или-

Для операции set поля задано более одного аргумента.</exception>
        <exception cref="T:System.MissingFieldException">Невозможно найти поле или свойство.</exception>
        <exception cref="T:System.MissingMethodException">Не удается найти метод.</exception>
        <exception cref="T:System.Security.SecurityException">Закрытый элемент вызван без необходимого разрешения <see cref="T:System.Security.Permissions.ReflectionPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Reflection::IReflect::UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает базовый тип, представляющий объект <see cref="T:System.Reflection.IReflect" />. Описание этого члена см. в разделе <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</summary>
        <value>Базовый тип, представляющий объект <see cref="T:System.Reflection.IReflect" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Сопоставляет объект с экземпляром объекта <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Объект <see cref="T:System.IntPtr" />, который содержит дескриптор объекта.</param>
        <summary>Сопоставляет объект с экземпляром объекта <see cref="T:System.Windows.Forms.AccessibleObject" /> на основании дескриптора объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Серверные приложения могут вызывать эту функцию, если они содержат пользовательский объект пользовательского интерфейса, похожий на объект, предоставляемый системой. Серверные приложения вызывают `CreateStdAccessibleObject` и переопределяют методы и свойства <xref:Accessibility.IAccessible> по мере необходимости для сопоставления с их пользовательским объектом. Этот подход позволяет разработчикам сервера работать с полной реализацией всех <xref:Accessibility.IAccessible> свойств и методов. Эта функция аналогична `CreateStdAccessibleProxy`, за исключением того, что `CreateStdAccessibleProxy` позволяет указать имя класса в качестве параметра, тогда как `CreateStdAccessibleObject` использует имя класса, связанное с `hwnd`.  
  
 Вызов этой версии `UseStdAccessible` аналогичен вызову двух версий параметров с ObjId клиента.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">Объект <see cref="T:System.IntPtr" />, который содержит дескриптор объекта.</param>
        <param name="objid">Значение Int, определяющее тип объекта, на который ссылается параметр <paramref name="handle" />.</param>
        <summary>Сопоставляет объект с экземпляром объекта<see cref="T:System.Windows.Forms.AccessibleObject" /> на основании дескриптора и идентификатора объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создает доступный объект с методами и свойствами для указанного типа элемента пользовательского интерфейса, предоставляемого системой.  
  
 Серверные приложения могут вызывать эту функцию, если они содержат пользовательский объект пользовательского интерфейса, похожий на объект, предоставляемый системой. Серверные приложения вызывают `CreateStdAccessibleObject` и переопределяют методы и свойства <xref:Accessibility.IAccessible> по мере необходимости для сопоставления с их пользовательским объектом. Этот подход позволяет разработчикам сервера работать с полной реализацией всех <xref:Accessibility.IAccessible> свойств и методов.  
  
 Допустимые значения `objid`.  
  
|Object|Значение|Описание|  
|------------|-----------|-----------------|  
|ПРЕДУПРЕЖДЕНИЕ|0xFFFFFFF6|Ссылается на сообщение, связанное с окном или приложением.|  
|КУРСОР|0xFFFFFFF8|Ссылается на строку вставки текста (курсор) в окне.|  
|КОМПЬЮТЕРА|0xFFFFFFFC|Ссылается на клиентскую область окна. В большинстве случаев операционная система управляет элементами Frame, а клиентский объект содержит все элементы, которые контролирует приложение.|  
|НАБОРА|0xFFFFFFF7|Ссылается на указатель мыши. В системе имеется только один указатель мыши, который не является дочерним по отношению к окну.|  
|HSCROLL|0xFFFFFFFA|Ссылается на горизонтальную полосу прокрутки окна.|  
|MENU|0xFFFFFFFD|Ссылается на строку меню окна.|  
|сизегрип|0xFFFFFFF9|Ссылается на захват размера окна, дополнительный компонент Frame, расположенный в правом нижнем углу фрейма окна.|  
|АУДИОДАННЫЕ|0xFFFFFFF5|Ссылается на объект Sound. Объекты Sound не имеют расположений на экране или дочерних элементов, но имеют атрибуты Name и State. Они являются дочерними объектами приложения, которое воспроизводит звук.|  
|сисмену|0xFFFFFFFF|Ссылается на системное меню окна.|  
|TITLEBAR|0xFFFFFFFE|Ссылается на строку заголовка окна.|  
|VSCROLL|0xFFFFFFFB|Ссылается на вертикальную полосу прокрутки окна.|  
|ОКНО|0x00000000|Ссылается на само окно, а не на дочерний объект.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение объекта с поддержкой специальных возможностей.</summary>
        <value>Значение доступного объекта или значение <see langword="null" />, если значение для объекта не  задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, свойство <xref:System.Windows.Forms.AccessibleObject.Value%2A> представляет визуальные сведения, содержащиеся в объекте. Не все объекты поддерживают свойство <xref:System.Windows.Forms.AccessibleObject.Value%2A>.  
  
 В большинстве случаев свойство <xref:System.Windows.Forms.AccessibleObject.Value%2A> используется, чтобы сообщить клиенту о том, какие визуальные сведения содержит объект. Например, значением для элемента управления "поле ввода" является текст, который он содержит, но у пункта меню нет значения.  
  
 Свойство <xref:System.Windows.Forms.AccessibleObject.Value%2A> может предоставлять иерархическую информацию в таких случаях, как элемент управления иерархического представления. Несмотря на то, что родительский объект в элементе управления иерархического представления не предоставляет сведения в свойстве <xref:System.Windows.Forms.AccessibleObject.Value%2A>, каждый элемент в элементе управления имеет отсчитываемое от нуля значение, представляющее его уровень в иерархии. Элементы верхнего уровня имеют нулевое значение, элементы второго уровня имеют значение 1 и т. д.  
  
> [!NOTE]
>  Значения, возвращаемые из доступных объектов полосы прокрутки и TrackBar, указывают проценты, поэтому они являются целыми числами от 0 до 100 включительно.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить или задать значение.</exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>
